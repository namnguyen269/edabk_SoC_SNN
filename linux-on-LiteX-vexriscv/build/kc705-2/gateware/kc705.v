// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : kc705.v
// Device     : xc7k325t-ffg900-2
// LiteX sha1 : d504639f
// Date       : 2023-01-09 19:34:44
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module kc705 (
    input  wire          cpu_reset,
    (* dont_touch = "true" *)
    input  wire          clk200_p,
    input  wire          clk200_n,
    input  wire          serial_cts,
    input  wire          serial_rts,
    output reg           serial_tx,
    input  wire          serial_rx,
    output wire   [15:0] ddram_a,
    output wire    [2:0] ddram_ba,
    output wire          ddram_ras_n,
    output wire          ddram_cas_n,
    output wire          ddram_we_n,
    output wire          ddram_cs_n,
    output wire    [7:0] ddram_dm,
    inout  wire   [63:0] ddram_dq,
    inout  wire    [7:0] ddram_dqs_p,
    inout  wire    [7:0] ddram_dqs_n,
    output wire          ddram_clk_p,
    output wire          ddram_clk_n,
    output wire          ddram_cke,
    output wire          ddram_odt,
    output wire          ddram_reset_n,
    (* dont_touch = "true" *)
    input  wire          eth_clocks_tx,
    output wire          eth_clocks_gtx,
    (* dont_touch = "true" *)
    input  wire          eth_clocks_rx,
    output wire          eth_rst_n,
    input  wire          eth_int_n,
    inout  wire          eth_mdio,
    output wire          eth_mdc,
    input  wire          eth_rx_dv,
    input  wire          eth_rx_er,
    input  wire    [7:0] eth_rx_data,
    output reg           eth_tx_en,
    output wire          eth_tx_er,
    output reg     [7:0] eth_tx_data,
    input  wire          eth_col,
    input  wire          eth_crs,
    output wire          user_led0,
    output wire          user_led1,
    output wire          user_led2,
    output wire          user_led3,
    output wire          user_led4,
    output wire          user_led5,
    output wire          user_led6,
    output wire          user_led7,
    output wire          sdcard_clk,
    inout  wire          sdcard_cmd,
    inout  wire    [3:0] sdcard_data
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg           crg_rst = 1'd0;
(* dont_touch = "true" *)
wire          sys_clk;
wire          sys_rst;
wire          sys4x_clk;
wire          sys4x_rst;
wire          idelay_clk;
wire          idelay_rst;
wire          crg_reset;
reg           crg_power_down = 1'd0;
wire          crg_locked;
(* dont_touch = "true" *)
wire          crg_clkin;
wire          crg_clkout0;
wire          crg_clkout_buf0;
wire          crg_clkout1;
wire          crg_clkout_buf1;
wire          crg_clkout2;
wire          crg_clkout_buf2;
reg     [3:0] crg_reset_counter = 4'd15;
reg           crg_ic_reset = 1'd1;
reg           soclinux_soc_rst = 1'd0;
wire          soclinux_cpu_rst;
reg     [1:0] soclinux_reset_storage = 2'd0;
reg           soclinux_reset_re = 1'd0;
reg    [31:0] soclinux_scratch_storage = 32'd305419896;
reg           soclinux_scratch_re = 1'd0;
wire   [31:0] soclinux_bus_errors_status;
wire          soclinux_bus_errors_we;
reg           soclinux_bus_errors_re = 1'd0;
wire          soclinux_bus_error;
reg    [31:0] soclinux_bus_errors = 32'd0;
wire          soclinux_cpu_reset;
reg           soclinux_cpu_jtag_clk = 1'd0;
reg           soclinux_cpu_jtag_enable = 1'd0;
reg           soclinux_cpu_jtag_capture = 1'd0;
reg           soclinux_cpu_jtag_shift = 1'd0;
reg           soclinux_cpu_jtag_update = 1'd0;
reg           soclinux_cpu_jtag_reset = 1'd0;
wire          soclinux_cpu_jtag_tdo;
reg           soclinux_cpu_jtag_tdi = 1'd0;
reg    [31:0] soclinux_cpu_interrupt = 32'd0;
wire   [29:0] soclinux_cpu_pbus_adr;
wire   [63:0] soclinux_cpu_pbus_dat_w;
wire   [63:0] soclinux_cpu_pbus_dat_r;
wire    [7:0] soclinux_cpu_pbus_sel;
wire          soclinux_cpu_pbus_cyc;
wire          soclinux_cpu_pbus_stb;
reg           soclinux_cpu_pbus_ack = 1'd0;
wire          soclinux_cpu_pbus_we;
wire    [2:0] soclinux_cpu_pbus_cti;
wire    [1:0] soclinux_cpu_pbus_bte;
reg           soclinux_cpu_pbus_err = 1'd0;
reg    [29:0] soclinux_cpu_dma_bus_adr = 30'd0;
reg    [63:0] soclinux_cpu_dma_bus_dat_w = 64'd0;
wire   [63:0] soclinux_cpu_dma_bus_dat_r;
reg     [7:0] soclinux_cpu_dma_bus_sel = 8'd0;
wire          soclinux_cpu_dma_bus_cyc;
wire          soclinux_cpu_dma_bus_stb;
wire          soclinux_cpu_dma_bus_ack;
wire          soclinux_cpu_dma_bus_we;
wire    [2:0] soclinux_cpu_dma_bus_cti;
wire    [1:0] soclinux_cpu_dma_bus_bte;
reg           soclinux_cpu_dma_bus_err = 1'd0;
wire          soclinux_cpu_dma_bus_stall;
reg           soclinux_cpu_dma_bus_inhibit = 1'd0;
wire   [29:0] soclinux_socbushandler_adapted_interface_adr;
reg    [31:0] soclinux_socbushandler_adapted_interface_dat_w = 32'd0;
wire   [31:0] soclinux_socbushandler_adapted_interface_dat_r;
reg     [3:0] soclinux_socbushandler_adapted_interface_sel = 4'd0;
reg           soclinux_socbushandler_adapted_interface_cyc = 1'd0;
reg           soclinux_socbushandler_adapted_interface_stb = 1'd0;
wire          soclinux_socbushandler_adapted_interface_ack;
reg           soclinux_socbushandler_adapted_interface_we = 1'd0;
reg     [2:0] soclinux_socbushandler_adapted_interface_cti = 3'd0;
reg     [1:0] soclinux_socbushandler_adapted_interface_bte = 2'd0;
wire          soclinux_socbushandler_adapted_interface_err;
reg           soclinux_socbushandler_skip = 1'd0;
wire          soclinux_socbushandler_done;
reg           soclinux_socbushandler_count = 1'd0;
reg    [63:0] soclinux_socbushandler_dat_r = 64'd0;
wire   [29:0] soclinux_dma_bus_dma_bus_adr;
wire   [31:0] soclinux_dma_bus_dma_bus_dat_w;
reg    [31:0] soclinux_dma_bus_dma_bus_dat_r = 32'd0;
wire    [3:0] soclinux_dma_bus_dma_bus_sel;
wire          soclinux_dma_bus_dma_bus_cyc;
wire          soclinux_dma_bus_dma_bus_stb;
wire          soclinux_dma_bus_dma_bus_ack;
wire          soclinux_dma_bus_dma_bus_we;
wire    [2:0] soclinux_dma_bus_dma_bus_cti;
wire    [1:0] soclinux_dma_bus_dma_bus_bte;
wire          soclinux_dma_bus_dma_bus_err;
wire   [29:0] soclinux_plicbus_adr;
wire   [31:0] soclinux_plicbus_dat_w;
wire   [31:0] soclinux_plicbus_dat_r;
wire    [3:0] soclinux_plicbus_sel;
wire          soclinux_plicbus_cyc;
wire          soclinux_plicbus_stb;
wire          soclinux_plicbus_ack;
wire          soclinux_plicbus_we;
wire    [2:0] soclinux_plicbus_cti;
wire    [1:0] soclinux_plicbus_bte;
reg           soclinux_plicbus_err = 1'd0;
wire   [29:0] soclinux_clintbus_adr;
wire   [31:0] soclinux_clintbus_dat_w;
wire   [31:0] soclinux_clintbus_dat_r;
wire    [3:0] soclinux_clintbus_sel;
wire          soclinux_clintbus_cyc;
wire          soclinux_clintbus_stb;
wire          soclinux_clintbus_ack;
wire          soclinux_clintbus_we;
wire    [2:0] soclinux_clintbus_cti;
wire    [1:0] soclinux_clintbus_bte;
reg           soclinux_clintbus_err = 1'd0;
wire   [29:0] soclinux_soclinux_ram_bus_adr;
wire   [31:0] soclinux_soclinux_ram_bus_dat_w;
wire   [31:0] soclinux_soclinux_ram_bus_dat_r;
wire    [3:0] soclinux_soclinux_ram_bus_sel;
wire          soclinux_soclinux_ram_bus_cyc;
wire          soclinux_soclinux_ram_bus_stb;
reg           soclinux_soclinux_ram_bus_ack = 1'd0;
wire          soclinux_soclinux_ram_bus_we;
wire    [2:0] soclinux_soclinux_ram_bus_cti;
wire    [1:0] soclinux_soclinux_ram_bus_bte;
reg           soclinux_soclinux_ram_bus_err = 1'd0;
reg           soclinux_soclinux_adr_burst = 1'd0;
wire   [18:0] soclinux_soclinux_adr;
wire   [31:0] soclinux_soclinux_dat_r;
wire   [29:0] soclinux_ram_bus_ram_bus_adr;
wire   [31:0] soclinux_ram_bus_ram_bus_dat_w;
wire   [31:0] soclinux_ram_bus_ram_bus_dat_r;
wire    [3:0] soclinux_ram_bus_ram_bus_sel;
wire          soclinux_ram_bus_ram_bus_cyc;
wire          soclinux_ram_bus_ram_bus_stb;
reg           soclinux_ram_bus_ram_bus_ack = 1'd0;
wire          soclinux_ram_bus_ram_bus_we;
wire    [2:0] soclinux_ram_bus_ram_bus_cti;
wire    [1:0] soclinux_ram_bus_ram_bus_bte;
reg           soclinux_ram_bus_ram_bus_err = 1'd0;
reg           soclinux_ram_adr_burst = 1'd0;
wire   [18:0] soclinux_ram_adr;
wire   [31:0] soclinux_ram_dat_r;
reg     [3:0] soclinux_ram_we = 4'd0;
wire   [31:0] soclinux_ram_dat_w;
wire          soclinux_tx_sink_valid;
reg           soclinux_tx_sink_ready = 1'd0;
wire          soclinux_tx_sink_first;
wire          soclinux_tx_sink_last;
wire    [7:0] soclinux_tx_sink_payload_data;
reg     [7:0] soclinux_tx_data = 8'd0;
reg     [3:0] soclinux_tx_count = 4'd0;
reg           soclinux_tx_enable = 1'd0;
reg           soclinux_tx_tick = 1'd0;
reg    [31:0] soclinux_tx_phase = 32'd0;
reg           soclinux_rx_source_valid = 1'd0;
wire          soclinux_rx_source_ready;
reg           soclinux_rx_source_first = 1'd0;
reg           soclinux_rx_source_last = 1'd0;
reg     [7:0] soclinux_rx_source_payload_data = 8'd0;
reg     [7:0] soclinux_rx_data = 8'd0;
reg     [3:0] soclinux_rx_count = 4'd0;
reg           soclinux_rx_enable = 1'd0;
reg           soclinux_rx_tick = 1'd0;
reg    [31:0] soclinux_rx_phase = 32'd0;
wire          soclinux_rx_rx;
reg           soclinux_rx_rx_d = 1'd0;
reg           soclinux_uart_rxtx_re = 1'd0;
wire    [7:0] soclinux_uart_rxtx_r;
reg           soclinux_uart_rxtx_we = 1'd0;
wire    [7:0] soclinux_uart_rxtx_w;
wire          soclinux_uart_txfull_status;
wire          soclinux_uart_txfull_we;
reg           soclinux_uart_txfull_re = 1'd0;
wire          soclinux_uart_rxempty_status;
wire          soclinux_uart_rxempty_we;
reg           soclinux_uart_rxempty_re = 1'd0;
wire          soclinux_uart_irq;
wire          soclinux_uart_tx_status;
reg           soclinux_uart_tx_pending = 1'd0;
wire          soclinux_uart_tx_trigger;
reg           soclinux_uart_tx_clear = 1'd0;
reg           soclinux_uart_tx_trigger_d = 1'd0;
wire          soclinux_uart_rx_status;
reg           soclinux_uart_rx_pending = 1'd0;
wire          soclinux_uart_rx_trigger;
reg           soclinux_uart_rx_clear = 1'd0;
reg           soclinux_uart_rx_trigger_d = 1'd0;
wire          soclinux_uart_tx0;
wire          soclinux_uart_rx0;
reg     [1:0] soclinux_uart_status_status = 2'd0;
wire          soclinux_uart_status_we;
reg           soclinux_uart_status_re = 1'd0;
wire          soclinux_uart_tx1;
wire          soclinux_uart_rx1;
reg     [1:0] soclinux_uart_pending_status = 2'd0;
wire          soclinux_uart_pending_we;
reg           soclinux_uart_pending_re = 1'd0;
reg     [1:0] soclinux_uart_pending_r = 2'd0;
wire          soclinux_uart_tx2;
wire          soclinux_uart_rx2;
reg     [1:0] soclinux_uart_enable_storage = 2'd0;
reg           soclinux_uart_enable_re = 1'd0;
wire          soclinux_uart_txempty_status;
wire          soclinux_uart_txempty_we;
reg           soclinux_uart_txempty_re = 1'd0;
wire          soclinux_uart_rxfull_status;
wire          soclinux_uart_rxfull_we;
reg           soclinux_uart_rxfull_re = 1'd0;
wire          soclinux_uart_uart_sink_valid;
wire          soclinux_uart_uart_sink_ready;
wire          soclinux_uart_uart_sink_first;
wire          soclinux_uart_uart_sink_last;
wire    [7:0] soclinux_uart_uart_sink_payload_data;
wire          soclinux_uart_uart_source_valid;
wire          soclinux_uart_uart_source_ready;
wire          soclinux_uart_uart_source_first;
wire          soclinux_uart_uart_source_last;
wire    [7:0] soclinux_uart_uart_source_payload_data;
wire          soclinux_uart_tx_fifo_sink_valid;
wire          soclinux_uart_tx_fifo_sink_ready;
reg           soclinux_uart_tx_fifo_sink_first = 1'd0;
reg           soclinux_uart_tx_fifo_sink_last = 1'd0;
wire    [7:0] soclinux_uart_tx_fifo_sink_payload_data;
wire          soclinux_uart_tx_fifo_source_valid;
wire          soclinux_uart_tx_fifo_source_ready;
wire          soclinux_uart_tx_fifo_source_first;
wire          soclinux_uart_tx_fifo_source_last;
wire    [7:0] soclinux_uart_tx_fifo_source_payload_data;
wire          soclinux_uart_tx_fifo_re;
reg           soclinux_uart_tx_fifo_readable = 1'd0;
wire          soclinux_uart_tx_fifo_syncfifo_we;
wire          soclinux_uart_tx_fifo_syncfifo_writable;
wire          soclinux_uart_tx_fifo_syncfifo_re;
wire          soclinux_uart_tx_fifo_syncfifo_readable;
wire    [9:0] soclinux_uart_tx_fifo_syncfifo_din;
wire    [9:0] soclinux_uart_tx_fifo_syncfifo_dout;
reg     [4:0] soclinux_uart_tx_fifo_level0 = 5'd0;
reg           soclinux_uart_tx_fifo_replace = 1'd0;
reg     [3:0] soclinux_uart_tx_fifo_produce = 4'd0;
reg     [3:0] soclinux_uart_tx_fifo_consume = 4'd0;
reg     [3:0] soclinux_uart_tx_fifo_wrport_adr = 4'd0;
wire    [9:0] soclinux_uart_tx_fifo_wrport_dat_r;
wire          soclinux_uart_tx_fifo_wrport_we;
wire    [9:0] soclinux_uart_tx_fifo_wrport_dat_w;
wire          soclinux_uart_tx_fifo_do_read;
wire    [3:0] soclinux_uart_tx_fifo_rdport_adr;
wire    [9:0] soclinux_uart_tx_fifo_rdport_dat_r;
wire          soclinux_uart_tx_fifo_rdport_re;
wire    [4:0] soclinux_uart_tx_fifo_level1;
wire    [7:0] soclinux_uart_tx_fifo_fifo_in_payload_data;
wire          soclinux_uart_tx_fifo_fifo_in_first;
wire          soclinux_uart_tx_fifo_fifo_in_last;
wire    [7:0] soclinux_uart_tx_fifo_fifo_out_payload_data;
wire          soclinux_uart_tx_fifo_fifo_out_first;
wire          soclinux_uart_tx_fifo_fifo_out_last;
wire          soclinux_uart_rx_fifo_sink_valid;
wire          soclinux_uart_rx_fifo_sink_ready;
wire          soclinux_uart_rx_fifo_sink_first;
wire          soclinux_uart_rx_fifo_sink_last;
wire    [7:0] soclinux_uart_rx_fifo_sink_payload_data;
wire          soclinux_uart_rx_fifo_source_valid;
wire          soclinux_uart_rx_fifo_source_ready;
wire          soclinux_uart_rx_fifo_source_first;
wire          soclinux_uart_rx_fifo_source_last;
wire    [7:0] soclinux_uart_rx_fifo_source_payload_data;
wire          soclinux_uart_rx_fifo_re;
reg           soclinux_uart_rx_fifo_readable = 1'd0;
wire          soclinux_uart_rx_fifo_syncfifo_we;
wire          soclinux_uart_rx_fifo_syncfifo_writable;
wire          soclinux_uart_rx_fifo_syncfifo_re;
wire          soclinux_uart_rx_fifo_syncfifo_readable;
wire    [9:0] soclinux_uart_rx_fifo_syncfifo_din;
wire    [9:0] soclinux_uart_rx_fifo_syncfifo_dout;
reg     [4:0] soclinux_uart_rx_fifo_level0 = 5'd0;
reg           soclinux_uart_rx_fifo_replace = 1'd0;
reg     [3:0] soclinux_uart_rx_fifo_produce = 4'd0;
reg     [3:0] soclinux_uart_rx_fifo_consume = 4'd0;
reg     [3:0] soclinux_uart_rx_fifo_wrport_adr = 4'd0;
wire    [9:0] soclinux_uart_rx_fifo_wrport_dat_r;
wire          soclinux_uart_rx_fifo_wrport_we;
wire    [9:0] soclinux_uart_rx_fifo_wrport_dat_w;
wire          soclinux_uart_rx_fifo_do_read;
wire    [3:0] soclinux_uart_rx_fifo_rdport_adr;
wire    [9:0] soclinux_uart_rx_fifo_rdport_dat_r;
wire          soclinux_uart_rx_fifo_rdport_re;
wire    [4:0] soclinux_uart_rx_fifo_level1;
wire    [7:0] soclinux_uart_rx_fifo_fifo_in_payload_data;
wire          soclinux_uart_rx_fifo_fifo_in_first;
wire          soclinux_uart_rx_fifo_fifo_in_last;
wire    [7:0] soclinux_uart_rx_fifo_fifo_out_payload_data;
wire          soclinux_uart_rx_fifo_fifo_out_first;
wire          soclinux_uart_rx_fifo_fifo_out_last;
reg    [31:0] soclinux_timer_load_storage = 32'd0;
reg           soclinux_timer_load_re = 1'd0;
reg    [31:0] soclinux_timer_reload_storage = 32'd0;
reg           soclinux_timer_reload_re = 1'd0;
reg           soclinux_timer_en_storage = 1'd0;
reg           soclinux_timer_en_re = 1'd0;
reg           soclinux_timer_update_value_storage = 1'd0;
reg           soclinux_timer_update_value_re = 1'd0;
reg    [31:0] soclinux_timer_value_status = 32'd0;
wire          soclinux_timer_value_we;
reg           soclinux_timer_value_re = 1'd0;
wire          soclinux_timer_irq;
wire          soclinux_timer_zero_status;
reg           soclinux_timer_zero_pending = 1'd0;
wire          soclinux_timer_zero_trigger;
reg           soclinux_timer_zero_clear = 1'd0;
reg           soclinux_timer_zero_trigger_d = 1'd0;
wire          soclinux_timer_zero0;
wire          soclinux_timer_status_status;
wire          soclinux_timer_status_we;
reg           soclinux_timer_status_re = 1'd0;
wire          soclinux_timer_zero1;
wire          soclinux_timer_pending_status;
wire          soclinux_timer_pending_we;
reg           soclinux_timer_pending_re = 1'd0;
reg           soclinux_timer_pending_r = 1'd0;
wire          soclinux_timer_zero2;
reg           soclinux_timer_enable_storage = 1'd0;
reg           soclinux_timer_enable_re = 1'd0;
reg    [31:0] soclinux_timer_value = 32'd0;
reg           k7ddrphy_rst_storage = 1'd0;
reg           k7ddrphy_rst_re = 1'd0;
reg     [7:0] k7ddrphy_dly_sel_storage = 8'd0;
reg           k7ddrphy_dly_sel_re = 1'd0;
reg     [4:0] k7ddrphy_half_sys8x_taps_storage = 5'd6;
reg           k7ddrphy_half_sys8x_taps_re = 1'd0;
reg           k7ddrphy_wlevel_en_storage = 1'd0;
reg           k7ddrphy_wlevel_en_re = 1'd0;
reg           k7ddrphy_wlevel_strobe_re = 1'd0;
wire          k7ddrphy_wlevel_strobe_r;
reg           k7ddrphy_wlevel_strobe_we = 1'd0;
reg           k7ddrphy_wlevel_strobe_w = 1'd0;
reg           k7ddrphy_cdly_rst_re = 1'd0;
wire          k7ddrphy_cdly_rst_r;
reg           k7ddrphy_cdly_rst_we = 1'd0;
reg           k7ddrphy_cdly_rst_w = 1'd0;
reg           k7ddrphy_cdly_inc_re = 1'd0;
wire          k7ddrphy_cdly_inc_r;
reg           k7ddrphy_cdly_inc_we = 1'd0;
reg           k7ddrphy_cdly_inc_w = 1'd0;
reg           k7ddrphy_rdly_dq_rst_re = 1'd0;
wire          k7ddrphy_rdly_dq_rst_r;
reg           k7ddrphy_rdly_dq_rst_we = 1'd0;
reg           k7ddrphy_rdly_dq_rst_w = 1'd0;
reg           k7ddrphy_rdly_dq_inc_re = 1'd0;
wire          k7ddrphy_rdly_dq_inc_r;
reg           k7ddrphy_rdly_dq_inc_we = 1'd0;
reg           k7ddrphy_rdly_dq_inc_w = 1'd0;
reg           k7ddrphy_rdly_dq_bitslip_rst_re = 1'd0;
wire          k7ddrphy_rdly_dq_bitslip_rst_r;
reg           k7ddrphy_rdly_dq_bitslip_rst_we = 1'd0;
reg           k7ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
reg           k7ddrphy_rdly_dq_bitslip_re = 1'd0;
wire          k7ddrphy_rdly_dq_bitslip_r;
reg           k7ddrphy_rdly_dq_bitslip_we = 1'd0;
reg           k7ddrphy_rdly_dq_bitslip_w = 1'd0;
reg           k7ddrphy_wdly_dq_rst_re = 1'd0;
wire          k7ddrphy_wdly_dq_rst_r;
reg           k7ddrphy_wdly_dq_rst_we = 1'd0;
reg           k7ddrphy_wdly_dq_rst_w = 1'd0;
reg           k7ddrphy_wdly_dq_inc_re = 1'd0;
wire          k7ddrphy_wdly_dq_inc_r;
reg           k7ddrphy_wdly_dq_inc_we = 1'd0;
reg           k7ddrphy_wdly_dq_inc_w = 1'd0;
reg           k7ddrphy_wdly_dqs_rst_re = 1'd0;
wire          k7ddrphy_wdly_dqs_rst_r;
reg           k7ddrphy_wdly_dqs_rst_we = 1'd0;
reg           k7ddrphy_wdly_dqs_rst_w = 1'd0;
reg           k7ddrphy_wdly_dqs_inc_re = 1'd0;
wire          k7ddrphy_wdly_dqs_inc_r;
reg           k7ddrphy_wdly_dqs_inc_we = 1'd0;
reg           k7ddrphy_wdly_dqs_inc_w = 1'd0;
reg           k7ddrphy_wdly_dq_bitslip_rst_re = 1'd0;
wire          k7ddrphy_wdly_dq_bitslip_rst_r;
reg           k7ddrphy_wdly_dq_bitslip_rst_we = 1'd0;
reg           k7ddrphy_wdly_dq_bitslip_rst_w = 1'd0;
reg           k7ddrphy_wdly_dq_bitslip_re = 1'd0;
wire          k7ddrphy_wdly_dq_bitslip_r;
reg           k7ddrphy_wdly_dq_bitslip_we = 1'd0;
reg           k7ddrphy_wdly_dq_bitslip_w = 1'd0;
reg     [1:0] k7ddrphy_rdphase_storage = 2'd1;
reg           k7ddrphy_rdphase_re = 1'd0;
reg     [1:0] k7ddrphy_wrphase_storage = 2'd2;
reg           k7ddrphy_wrphase_re = 1'd0;
wire   [15:0] k7ddrphy_dfi_p0_address;
wire    [2:0] k7ddrphy_dfi_p0_bank;
wire          k7ddrphy_dfi_p0_cas_n;
wire          k7ddrphy_dfi_p0_cs_n;
wire          k7ddrphy_dfi_p0_ras_n;
wire          k7ddrphy_dfi_p0_we_n;
wire          k7ddrphy_dfi_p0_cke;
wire          k7ddrphy_dfi_p0_odt;
wire          k7ddrphy_dfi_p0_reset_n;
wire          k7ddrphy_dfi_p0_act_n;
wire  [127:0] k7ddrphy_dfi_p0_wrdata;
wire          k7ddrphy_dfi_p0_wrdata_en;
wire   [15:0] k7ddrphy_dfi_p0_wrdata_mask;
wire          k7ddrphy_dfi_p0_rddata_en;
reg   [127:0] k7ddrphy_dfi_p0_rddata = 128'd0;
wire          k7ddrphy_dfi_p0_rddata_valid;
wire   [15:0] k7ddrphy_dfi_p1_address;
wire    [2:0] k7ddrphy_dfi_p1_bank;
wire          k7ddrphy_dfi_p1_cas_n;
wire          k7ddrphy_dfi_p1_cs_n;
wire          k7ddrphy_dfi_p1_ras_n;
wire          k7ddrphy_dfi_p1_we_n;
wire          k7ddrphy_dfi_p1_cke;
wire          k7ddrphy_dfi_p1_odt;
wire          k7ddrphy_dfi_p1_reset_n;
wire          k7ddrphy_dfi_p1_act_n;
wire  [127:0] k7ddrphy_dfi_p1_wrdata;
wire          k7ddrphy_dfi_p1_wrdata_en;
wire   [15:0] k7ddrphy_dfi_p1_wrdata_mask;
wire          k7ddrphy_dfi_p1_rddata_en;
reg   [127:0] k7ddrphy_dfi_p1_rddata = 128'd0;
wire          k7ddrphy_dfi_p1_rddata_valid;
wire   [15:0] k7ddrphy_dfi_p2_address;
wire    [2:0] k7ddrphy_dfi_p2_bank;
wire          k7ddrphy_dfi_p2_cas_n;
wire          k7ddrphy_dfi_p2_cs_n;
wire          k7ddrphy_dfi_p2_ras_n;
wire          k7ddrphy_dfi_p2_we_n;
wire          k7ddrphy_dfi_p2_cke;
wire          k7ddrphy_dfi_p2_odt;
wire          k7ddrphy_dfi_p2_reset_n;
wire          k7ddrphy_dfi_p2_act_n;
wire  [127:0] k7ddrphy_dfi_p2_wrdata;
wire          k7ddrphy_dfi_p2_wrdata_en;
wire   [15:0] k7ddrphy_dfi_p2_wrdata_mask;
wire          k7ddrphy_dfi_p2_rddata_en;
reg   [127:0] k7ddrphy_dfi_p2_rddata = 128'd0;
wire          k7ddrphy_dfi_p2_rddata_valid;
wire   [15:0] k7ddrphy_dfi_p3_address;
wire    [2:0] k7ddrphy_dfi_p3_bank;
wire          k7ddrphy_dfi_p3_cas_n;
wire          k7ddrphy_dfi_p3_cs_n;
wire          k7ddrphy_dfi_p3_ras_n;
wire          k7ddrphy_dfi_p3_we_n;
wire          k7ddrphy_dfi_p3_cke;
wire          k7ddrphy_dfi_p3_odt;
wire          k7ddrphy_dfi_p3_reset_n;
wire          k7ddrphy_dfi_p3_act_n;
wire  [127:0] k7ddrphy_dfi_p3_wrdata;
wire          k7ddrphy_dfi_p3_wrdata_en;
wire   [15:0] k7ddrphy_dfi_p3_wrdata_mask;
wire          k7ddrphy_dfi_p3_rddata_en;
reg   [127:0] k7ddrphy_dfi_p3_rddata = 128'd0;
wire          k7ddrphy_dfi_p3_rddata_valid;
wire          k7ddrphy_sd_clk_se_nodelay;
wire          k7ddrphy_sd_clk_se_delayed;
wire    [2:0] k7ddrphy_pads_ba;
wire          k7ddrphy_oq0;
wire          k7ddrphy_oq1;
wire          k7ddrphy_oq2;
wire          k7ddrphy_oq3;
wire          k7ddrphy_oq4;
wire          k7ddrphy_oq5;
wire          k7ddrphy_oq6;
wire          k7ddrphy_oq7;
wire          k7ddrphy_oq8;
wire          k7ddrphy_oq9;
wire          k7ddrphy_oq10;
wire          k7ddrphy_oq11;
wire          k7ddrphy_oq12;
wire          k7ddrphy_oq13;
wire          k7ddrphy_oq14;
wire          k7ddrphy_oq15;
wire          k7ddrphy_oq16;
wire          k7ddrphy_oq17;
wire          k7ddrphy_oq18;
wire          k7ddrphy_oq19;
wire          k7ddrphy_oq20;
wire          k7ddrphy_oq21;
wire          k7ddrphy_oq22;
wire          k7ddrphy_oq23;
wire          k7ddrphy_oq24;
wire          k7ddrphy_oq25;
reg           k7ddrphy_dqs_oe = 1'd0;
wire          k7ddrphy_dqs_preamble;
wire          k7ddrphy_dqs_postamble;
wire          k7ddrphy_dqs_oe_delay_tappeddelayline;
reg           k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg           k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
reg           k7ddrphy_dqspattern0 = 1'd0;
reg           k7ddrphy_dqspattern1 = 1'd0;
reg     [7:0] k7ddrphy_dqspattern_o = 8'd0;
wire          k7ddrphy_dqs_o_no_delay0;
wire          k7ddrphy_dqs_o_delayed0;
wire          k7ddrphy_dqs_t0;
reg     [7:0] k7ddrphy_bitslip00 = 8'd0;
reg     [2:0] k7ddrphy_bitslip0_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip0_r0 = 16'd0;
wire          k7ddrphy0;
wire          k7ddrphy_dqs_o_no_delay1;
wire          k7ddrphy_dqs_o_delayed1;
wire          k7ddrphy_dqs_t1;
reg     [7:0] k7ddrphy_bitslip10 = 8'd0;
reg     [2:0] k7ddrphy_bitslip1_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip1_r0 = 16'd0;
wire          k7ddrphy1;
wire          k7ddrphy_dqs_o_no_delay2;
wire          k7ddrphy_dqs_o_delayed2;
wire          k7ddrphy_dqs_t2;
reg     [7:0] k7ddrphy_bitslip20 = 8'd0;
reg     [2:0] k7ddrphy_bitslip2_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip2_r0 = 16'd0;
wire          k7ddrphy2;
wire          k7ddrphy_dqs_o_no_delay3;
wire          k7ddrphy_dqs_o_delayed3;
wire          k7ddrphy_dqs_t3;
reg     [7:0] k7ddrphy_bitslip30 = 8'd0;
reg     [2:0] k7ddrphy_bitslip3_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip3_r0 = 16'd0;
wire          k7ddrphy3;
wire          k7ddrphy_dqs_o_no_delay4;
wire          k7ddrphy_dqs_o_delayed4;
wire          k7ddrphy_dqs_t4;
reg     [7:0] k7ddrphy_bitslip40 = 8'd0;
reg     [2:0] k7ddrphy_bitslip4_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip4_r0 = 16'd0;
wire          k7ddrphy4;
wire          k7ddrphy_dqs_o_no_delay5;
wire          k7ddrphy_dqs_o_delayed5;
wire          k7ddrphy_dqs_t5;
reg     [7:0] k7ddrphy_bitslip50 = 8'd0;
reg     [2:0] k7ddrphy_bitslip5_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip5_r0 = 16'd0;
wire          k7ddrphy5;
wire          k7ddrphy_dqs_o_no_delay6;
wire          k7ddrphy_dqs_o_delayed6;
wire          k7ddrphy_dqs_t6;
reg     [7:0] k7ddrphy_bitslip60 = 8'd0;
reg     [2:0] k7ddrphy_bitslip6_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip6_r0 = 16'd0;
wire          k7ddrphy6;
wire          k7ddrphy_dqs_o_no_delay7;
wire          k7ddrphy_dqs_o_delayed7;
wire          k7ddrphy_dqs_t7;
reg     [7:0] k7ddrphy_bitslip70 = 8'd0;
reg     [2:0] k7ddrphy_bitslip7_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip7_r0 = 16'd0;
wire          k7ddrphy7;
wire          k7ddrphy_dm_o_nodelay0;
reg     [7:0] k7ddrphy_bitslip01 = 8'd0;
reg     [2:0] k7ddrphy_bitslip0_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip0_r1 = 16'd0;
wire          k7ddrphy_dm_o_nodelay1;
reg     [7:0] k7ddrphy_bitslip11 = 8'd0;
reg     [2:0] k7ddrphy_bitslip1_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip1_r1 = 16'd0;
wire          k7ddrphy_dm_o_nodelay2;
reg     [7:0] k7ddrphy_bitslip21 = 8'd0;
reg     [2:0] k7ddrphy_bitslip2_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip2_r1 = 16'd0;
wire          k7ddrphy_dm_o_nodelay3;
reg     [7:0] k7ddrphy_bitslip31 = 8'd0;
reg     [2:0] k7ddrphy_bitslip3_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip3_r1 = 16'd0;
wire          k7ddrphy_dm_o_nodelay4;
reg     [7:0] k7ddrphy_bitslip41 = 8'd0;
reg     [2:0] k7ddrphy_bitslip4_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip4_r1 = 16'd0;
wire          k7ddrphy_dm_o_nodelay5;
reg     [7:0] k7ddrphy_bitslip51 = 8'd0;
reg     [2:0] k7ddrphy_bitslip5_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip5_r1 = 16'd0;
wire          k7ddrphy_dm_o_nodelay6;
reg     [7:0] k7ddrphy_bitslip61 = 8'd0;
reg     [2:0] k7ddrphy_bitslip6_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip6_r1 = 16'd0;
wire          k7ddrphy_dm_o_nodelay7;
reg     [7:0] k7ddrphy_bitslip71 = 8'd0;
reg     [2:0] k7ddrphy_bitslip7_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip7_r1 = 16'd0;
wire          k7ddrphy_dq_oe;
wire          k7ddrphy_dq_oe_delay_tappeddelayline;
reg           k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg           k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
wire          k7ddrphy_dq_o_nodelay0;
wire          k7ddrphy_dq_o_delayed0;
wire          k7ddrphy_dq_i_nodelay0;
wire          k7ddrphy_dq_i_delayed0;
wire          k7ddrphy_dq_t0;
reg     [7:0] k7ddrphy_bitslip02 = 8'd0;
reg     [2:0] k7ddrphy_bitslip0_value2 = 3'd7;
reg    [15:0] k7ddrphy_bitslip0_r2 = 16'd0;
wire    [7:0] k7ddrphy_bitslip03;
reg     [7:0] k7ddrphy_bitslip04 = 8'd0;
reg     [2:0] k7ddrphy_bitslip0_value3 = 3'd7;
reg    [15:0] k7ddrphy_bitslip0_r3 = 16'd0;
wire          k7ddrphy_dq_o_nodelay1;
wire          k7ddrphy_dq_o_delayed1;
wire          k7ddrphy_dq_i_nodelay1;
wire          k7ddrphy_dq_i_delayed1;
wire          k7ddrphy_dq_t1;
reg     [7:0] k7ddrphy_bitslip12 = 8'd0;
reg     [2:0] k7ddrphy_bitslip1_value2 = 3'd7;
reg    [15:0] k7ddrphy_bitslip1_r2 = 16'd0;
wire    [7:0] k7ddrphy_bitslip13;
reg     [7:0] k7ddrphy_bitslip14 = 8'd0;
reg     [2:0] k7ddrphy_bitslip1_value3 = 3'd7;
reg    [15:0] k7ddrphy_bitslip1_r3 = 16'd0;
wire          k7ddrphy_dq_o_nodelay2;
wire          k7ddrphy_dq_o_delayed2;
wire          k7ddrphy_dq_i_nodelay2;
wire          k7ddrphy_dq_i_delayed2;
wire          k7ddrphy_dq_t2;
reg     [7:0] k7ddrphy_bitslip22 = 8'd0;
reg     [2:0] k7ddrphy_bitslip2_value2 = 3'd7;
reg    [15:0] k7ddrphy_bitslip2_r2 = 16'd0;
wire    [7:0] k7ddrphy_bitslip23;
reg     [7:0] k7ddrphy_bitslip24 = 8'd0;
reg     [2:0] k7ddrphy_bitslip2_value3 = 3'd7;
reg    [15:0] k7ddrphy_bitslip2_r3 = 16'd0;
wire          k7ddrphy_dq_o_nodelay3;
wire          k7ddrphy_dq_o_delayed3;
wire          k7ddrphy_dq_i_nodelay3;
wire          k7ddrphy_dq_i_delayed3;
wire          k7ddrphy_dq_t3;
reg     [7:0] k7ddrphy_bitslip32 = 8'd0;
reg     [2:0] k7ddrphy_bitslip3_value2 = 3'd7;
reg    [15:0] k7ddrphy_bitslip3_r2 = 16'd0;
wire    [7:0] k7ddrphy_bitslip33;
reg     [7:0] k7ddrphy_bitslip34 = 8'd0;
reg     [2:0] k7ddrphy_bitslip3_value3 = 3'd7;
reg    [15:0] k7ddrphy_bitslip3_r3 = 16'd0;
wire          k7ddrphy_dq_o_nodelay4;
wire          k7ddrphy_dq_o_delayed4;
wire          k7ddrphy_dq_i_nodelay4;
wire          k7ddrphy_dq_i_delayed4;
wire          k7ddrphy_dq_t4;
reg     [7:0] k7ddrphy_bitslip42 = 8'd0;
reg     [2:0] k7ddrphy_bitslip4_value2 = 3'd7;
reg    [15:0] k7ddrphy_bitslip4_r2 = 16'd0;
wire    [7:0] k7ddrphy_bitslip43;
reg     [7:0] k7ddrphy_bitslip44 = 8'd0;
reg     [2:0] k7ddrphy_bitslip4_value3 = 3'd7;
reg    [15:0] k7ddrphy_bitslip4_r3 = 16'd0;
wire          k7ddrphy_dq_o_nodelay5;
wire          k7ddrphy_dq_o_delayed5;
wire          k7ddrphy_dq_i_nodelay5;
wire          k7ddrphy_dq_i_delayed5;
wire          k7ddrphy_dq_t5;
reg     [7:0] k7ddrphy_bitslip52 = 8'd0;
reg     [2:0] k7ddrphy_bitslip5_value2 = 3'd7;
reg    [15:0] k7ddrphy_bitslip5_r2 = 16'd0;
wire    [7:0] k7ddrphy_bitslip53;
reg     [7:0] k7ddrphy_bitslip54 = 8'd0;
reg     [2:0] k7ddrphy_bitslip5_value3 = 3'd7;
reg    [15:0] k7ddrphy_bitslip5_r3 = 16'd0;
wire          k7ddrphy_dq_o_nodelay6;
wire          k7ddrphy_dq_o_delayed6;
wire          k7ddrphy_dq_i_nodelay6;
wire          k7ddrphy_dq_i_delayed6;
wire          k7ddrphy_dq_t6;
reg     [7:0] k7ddrphy_bitslip62 = 8'd0;
reg     [2:0] k7ddrphy_bitslip6_value2 = 3'd7;
reg    [15:0] k7ddrphy_bitslip6_r2 = 16'd0;
wire    [7:0] k7ddrphy_bitslip63;
reg     [7:0] k7ddrphy_bitslip64 = 8'd0;
reg     [2:0] k7ddrphy_bitslip6_value3 = 3'd7;
reg    [15:0] k7ddrphy_bitslip6_r3 = 16'd0;
wire          k7ddrphy_dq_o_nodelay7;
wire          k7ddrphy_dq_o_delayed7;
wire          k7ddrphy_dq_i_nodelay7;
wire          k7ddrphy_dq_i_delayed7;
wire          k7ddrphy_dq_t7;
reg     [7:0] k7ddrphy_bitslip72 = 8'd0;
reg     [2:0] k7ddrphy_bitslip7_value2 = 3'd7;
reg    [15:0] k7ddrphy_bitslip7_r2 = 16'd0;
wire    [7:0] k7ddrphy_bitslip73;
reg     [7:0] k7ddrphy_bitslip74 = 8'd0;
reg     [2:0] k7ddrphy_bitslip7_value3 = 3'd7;
reg    [15:0] k7ddrphy_bitslip7_r3 = 16'd0;
wire          k7ddrphy_dq_o_nodelay8;
wire          k7ddrphy_dq_o_delayed8;
wire          k7ddrphy_dq_i_nodelay8;
wire          k7ddrphy_dq_i_delayed8;
wire          k7ddrphy_dq_t8;
reg     [7:0] k7ddrphy_bitslip80 = 8'd0;
reg     [2:0] k7ddrphy_bitslip8_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip8_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip81;
reg     [7:0] k7ddrphy_bitslip82 = 8'd0;
reg     [2:0] k7ddrphy_bitslip8_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip8_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay9;
wire          k7ddrphy_dq_o_delayed9;
wire          k7ddrphy_dq_i_nodelay9;
wire          k7ddrphy_dq_i_delayed9;
wire          k7ddrphy_dq_t9;
reg     [7:0] k7ddrphy_bitslip90 = 8'd0;
reg     [2:0] k7ddrphy_bitslip9_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip9_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip91;
reg     [7:0] k7ddrphy_bitslip92 = 8'd0;
reg     [2:0] k7ddrphy_bitslip9_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip9_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay10;
wire          k7ddrphy_dq_o_delayed10;
wire          k7ddrphy_dq_i_nodelay10;
wire          k7ddrphy_dq_i_delayed10;
wire          k7ddrphy_dq_t10;
reg     [7:0] k7ddrphy_bitslip100 = 8'd0;
reg     [2:0] k7ddrphy_bitslip10_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip10_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip101;
reg     [7:0] k7ddrphy_bitslip102 = 8'd0;
reg     [2:0] k7ddrphy_bitslip10_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip10_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay11;
wire          k7ddrphy_dq_o_delayed11;
wire          k7ddrphy_dq_i_nodelay11;
wire          k7ddrphy_dq_i_delayed11;
wire          k7ddrphy_dq_t11;
reg     [7:0] k7ddrphy_bitslip110 = 8'd0;
reg     [2:0] k7ddrphy_bitslip11_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip11_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip111;
reg     [7:0] k7ddrphy_bitslip112 = 8'd0;
reg     [2:0] k7ddrphy_bitslip11_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip11_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay12;
wire          k7ddrphy_dq_o_delayed12;
wire          k7ddrphy_dq_i_nodelay12;
wire          k7ddrphy_dq_i_delayed12;
wire          k7ddrphy_dq_t12;
reg     [7:0] k7ddrphy_bitslip120 = 8'd0;
reg     [2:0] k7ddrphy_bitslip12_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip12_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip121;
reg     [7:0] k7ddrphy_bitslip122 = 8'd0;
reg     [2:0] k7ddrphy_bitslip12_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip12_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay13;
wire          k7ddrphy_dq_o_delayed13;
wire          k7ddrphy_dq_i_nodelay13;
wire          k7ddrphy_dq_i_delayed13;
wire          k7ddrphy_dq_t13;
reg     [7:0] k7ddrphy_bitslip130 = 8'd0;
reg     [2:0] k7ddrphy_bitslip13_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip13_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip131;
reg     [7:0] k7ddrphy_bitslip132 = 8'd0;
reg     [2:0] k7ddrphy_bitslip13_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip13_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay14;
wire          k7ddrphy_dq_o_delayed14;
wire          k7ddrphy_dq_i_nodelay14;
wire          k7ddrphy_dq_i_delayed14;
wire          k7ddrphy_dq_t14;
reg     [7:0] k7ddrphy_bitslip140 = 8'd0;
reg     [2:0] k7ddrphy_bitslip14_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip14_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip141;
reg     [7:0] k7ddrphy_bitslip142 = 8'd0;
reg     [2:0] k7ddrphy_bitslip14_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip14_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay15;
wire          k7ddrphy_dq_o_delayed15;
wire          k7ddrphy_dq_i_nodelay15;
wire          k7ddrphy_dq_i_delayed15;
wire          k7ddrphy_dq_t15;
reg     [7:0] k7ddrphy_bitslip150 = 8'd0;
reg     [2:0] k7ddrphy_bitslip15_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip15_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip151;
reg     [7:0] k7ddrphy_bitslip152 = 8'd0;
reg     [2:0] k7ddrphy_bitslip15_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip15_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay16;
wire          k7ddrphy_dq_o_delayed16;
wire          k7ddrphy_dq_i_nodelay16;
wire          k7ddrphy_dq_i_delayed16;
wire          k7ddrphy_dq_t16;
reg     [7:0] k7ddrphy_bitslip160 = 8'd0;
reg     [2:0] k7ddrphy_bitslip16_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip16_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip161;
reg     [7:0] k7ddrphy_bitslip162 = 8'd0;
reg     [2:0] k7ddrphy_bitslip16_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip16_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay17;
wire          k7ddrphy_dq_o_delayed17;
wire          k7ddrphy_dq_i_nodelay17;
wire          k7ddrphy_dq_i_delayed17;
wire          k7ddrphy_dq_t17;
reg     [7:0] k7ddrphy_bitslip170 = 8'd0;
reg     [2:0] k7ddrphy_bitslip17_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip17_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip171;
reg     [7:0] k7ddrphy_bitslip172 = 8'd0;
reg     [2:0] k7ddrphy_bitslip17_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip17_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay18;
wire          k7ddrphy_dq_o_delayed18;
wire          k7ddrphy_dq_i_nodelay18;
wire          k7ddrphy_dq_i_delayed18;
wire          k7ddrphy_dq_t18;
reg     [7:0] k7ddrphy_bitslip180 = 8'd0;
reg     [2:0] k7ddrphy_bitslip18_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip18_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip181;
reg     [7:0] k7ddrphy_bitslip182 = 8'd0;
reg     [2:0] k7ddrphy_bitslip18_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip18_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay19;
wire          k7ddrphy_dq_o_delayed19;
wire          k7ddrphy_dq_i_nodelay19;
wire          k7ddrphy_dq_i_delayed19;
wire          k7ddrphy_dq_t19;
reg     [7:0] k7ddrphy_bitslip190 = 8'd0;
reg     [2:0] k7ddrphy_bitslip19_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip19_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip191;
reg     [7:0] k7ddrphy_bitslip192 = 8'd0;
reg     [2:0] k7ddrphy_bitslip19_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip19_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay20;
wire          k7ddrphy_dq_o_delayed20;
wire          k7ddrphy_dq_i_nodelay20;
wire          k7ddrphy_dq_i_delayed20;
wire          k7ddrphy_dq_t20;
reg     [7:0] k7ddrphy_bitslip200 = 8'd0;
reg     [2:0] k7ddrphy_bitslip20_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip20_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip201;
reg     [7:0] k7ddrphy_bitslip202 = 8'd0;
reg     [2:0] k7ddrphy_bitslip20_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip20_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay21;
wire          k7ddrphy_dq_o_delayed21;
wire          k7ddrphy_dq_i_nodelay21;
wire          k7ddrphy_dq_i_delayed21;
wire          k7ddrphy_dq_t21;
reg     [7:0] k7ddrphy_bitslip210 = 8'd0;
reg     [2:0] k7ddrphy_bitslip21_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip21_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip211;
reg     [7:0] k7ddrphy_bitslip212 = 8'd0;
reg     [2:0] k7ddrphy_bitslip21_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip21_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay22;
wire          k7ddrphy_dq_o_delayed22;
wire          k7ddrphy_dq_i_nodelay22;
wire          k7ddrphy_dq_i_delayed22;
wire          k7ddrphy_dq_t22;
reg     [7:0] k7ddrphy_bitslip220 = 8'd0;
reg     [2:0] k7ddrphy_bitslip22_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip22_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip221;
reg     [7:0] k7ddrphy_bitslip222 = 8'd0;
reg     [2:0] k7ddrphy_bitslip22_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip22_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay23;
wire          k7ddrphy_dq_o_delayed23;
wire          k7ddrphy_dq_i_nodelay23;
wire          k7ddrphy_dq_i_delayed23;
wire          k7ddrphy_dq_t23;
reg     [7:0] k7ddrphy_bitslip230 = 8'd0;
reg     [2:0] k7ddrphy_bitslip23_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip23_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip231;
reg     [7:0] k7ddrphy_bitslip232 = 8'd0;
reg     [2:0] k7ddrphy_bitslip23_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip23_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay24;
wire          k7ddrphy_dq_o_delayed24;
wire          k7ddrphy_dq_i_nodelay24;
wire          k7ddrphy_dq_i_delayed24;
wire          k7ddrphy_dq_t24;
reg     [7:0] k7ddrphy_bitslip240 = 8'd0;
reg     [2:0] k7ddrphy_bitslip24_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip24_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip241;
reg     [7:0] k7ddrphy_bitslip242 = 8'd0;
reg     [2:0] k7ddrphy_bitslip24_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip24_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay25;
wire          k7ddrphy_dq_o_delayed25;
wire          k7ddrphy_dq_i_nodelay25;
wire          k7ddrphy_dq_i_delayed25;
wire          k7ddrphy_dq_t25;
reg     [7:0] k7ddrphy_bitslip250 = 8'd0;
reg     [2:0] k7ddrphy_bitslip25_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip25_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip251;
reg     [7:0] k7ddrphy_bitslip252 = 8'd0;
reg     [2:0] k7ddrphy_bitslip25_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip25_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay26;
wire          k7ddrphy_dq_o_delayed26;
wire          k7ddrphy_dq_i_nodelay26;
wire          k7ddrphy_dq_i_delayed26;
wire          k7ddrphy_dq_t26;
reg     [7:0] k7ddrphy_bitslip260 = 8'd0;
reg     [2:0] k7ddrphy_bitslip26_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip26_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip261;
reg     [7:0] k7ddrphy_bitslip262 = 8'd0;
reg     [2:0] k7ddrphy_bitslip26_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip26_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay27;
wire          k7ddrphy_dq_o_delayed27;
wire          k7ddrphy_dq_i_nodelay27;
wire          k7ddrphy_dq_i_delayed27;
wire          k7ddrphy_dq_t27;
reg     [7:0] k7ddrphy_bitslip270 = 8'd0;
reg     [2:0] k7ddrphy_bitslip27_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip27_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip271;
reg     [7:0] k7ddrphy_bitslip272 = 8'd0;
reg     [2:0] k7ddrphy_bitslip27_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip27_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay28;
wire          k7ddrphy_dq_o_delayed28;
wire          k7ddrphy_dq_i_nodelay28;
wire          k7ddrphy_dq_i_delayed28;
wire          k7ddrphy_dq_t28;
reg     [7:0] k7ddrphy_bitslip280 = 8'd0;
reg     [2:0] k7ddrphy_bitslip28_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip28_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip281;
reg     [7:0] k7ddrphy_bitslip282 = 8'd0;
reg     [2:0] k7ddrphy_bitslip28_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip28_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay29;
wire          k7ddrphy_dq_o_delayed29;
wire          k7ddrphy_dq_i_nodelay29;
wire          k7ddrphy_dq_i_delayed29;
wire          k7ddrphy_dq_t29;
reg     [7:0] k7ddrphy_bitslip290 = 8'd0;
reg     [2:0] k7ddrphy_bitslip29_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip29_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip291;
reg     [7:0] k7ddrphy_bitslip292 = 8'd0;
reg     [2:0] k7ddrphy_bitslip29_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip29_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay30;
wire          k7ddrphy_dq_o_delayed30;
wire          k7ddrphy_dq_i_nodelay30;
wire          k7ddrphy_dq_i_delayed30;
wire          k7ddrphy_dq_t30;
reg     [7:0] k7ddrphy_bitslip300 = 8'd0;
reg     [2:0] k7ddrphy_bitslip30_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip30_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip301;
reg     [7:0] k7ddrphy_bitslip302 = 8'd0;
reg     [2:0] k7ddrphy_bitslip30_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip30_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay31;
wire          k7ddrphy_dq_o_delayed31;
wire          k7ddrphy_dq_i_nodelay31;
wire          k7ddrphy_dq_i_delayed31;
wire          k7ddrphy_dq_t31;
reg     [7:0] k7ddrphy_bitslip310 = 8'd0;
reg     [2:0] k7ddrphy_bitslip31_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip31_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip311;
reg     [7:0] k7ddrphy_bitslip312 = 8'd0;
reg     [2:0] k7ddrphy_bitslip31_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip31_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay32;
wire          k7ddrphy_dq_o_delayed32;
wire          k7ddrphy_dq_i_nodelay32;
wire          k7ddrphy_dq_i_delayed32;
wire          k7ddrphy_dq_t32;
reg     [7:0] k7ddrphy_bitslip320 = 8'd0;
reg     [2:0] k7ddrphy_bitslip32_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip32_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip321;
reg     [7:0] k7ddrphy_bitslip322 = 8'd0;
reg     [2:0] k7ddrphy_bitslip32_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip32_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay33;
wire          k7ddrphy_dq_o_delayed33;
wire          k7ddrphy_dq_i_nodelay33;
wire          k7ddrphy_dq_i_delayed33;
wire          k7ddrphy_dq_t33;
reg     [7:0] k7ddrphy_bitslip330 = 8'd0;
reg     [2:0] k7ddrphy_bitslip33_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip33_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip331;
reg     [7:0] k7ddrphy_bitslip332 = 8'd0;
reg     [2:0] k7ddrphy_bitslip33_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip33_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay34;
wire          k7ddrphy_dq_o_delayed34;
wire          k7ddrphy_dq_i_nodelay34;
wire          k7ddrphy_dq_i_delayed34;
wire          k7ddrphy_dq_t34;
reg     [7:0] k7ddrphy_bitslip340 = 8'd0;
reg     [2:0] k7ddrphy_bitslip34_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip34_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip341;
reg     [7:0] k7ddrphy_bitslip342 = 8'd0;
reg     [2:0] k7ddrphy_bitslip34_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip34_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay35;
wire          k7ddrphy_dq_o_delayed35;
wire          k7ddrphy_dq_i_nodelay35;
wire          k7ddrphy_dq_i_delayed35;
wire          k7ddrphy_dq_t35;
reg     [7:0] k7ddrphy_bitslip350 = 8'd0;
reg     [2:0] k7ddrphy_bitslip35_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip35_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip351;
reg     [7:0] k7ddrphy_bitslip352 = 8'd0;
reg     [2:0] k7ddrphy_bitslip35_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip35_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay36;
wire          k7ddrphy_dq_o_delayed36;
wire          k7ddrphy_dq_i_nodelay36;
wire          k7ddrphy_dq_i_delayed36;
wire          k7ddrphy_dq_t36;
reg     [7:0] k7ddrphy_bitslip360 = 8'd0;
reg     [2:0] k7ddrphy_bitslip36_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip36_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip361;
reg     [7:0] k7ddrphy_bitslip362 = 8'd0;
reg     [2:0] k7ddrphy_bitslip36_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip36_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay37;
wire          k7ddrphy_dq_o_delayed37;
wire          k7ddrphy_dq_i_nodelay37;
wire          k7ddrphy_dq_i_delayed37;
wire          k7ddrphy_dq_t37;
reg     [7:0] k7ddrphy_bitslip370 = 8'd0;
reg     [2:0] k7ddrphy_bitslip37_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip37_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip371;
reg     [7:0] k7ddrphy_bitslip372 = 8'd0;
reg     [2:0] k7ddrphy_bitslip37_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip37_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay38;
wire          k7ddrphy_dq_o_delayed38;
wire          k7ddrphy_dq_i_nodelay38;
wire          k7ddrphy_dq_i_delayed38;
wire          k7ddrphy_dq_t38;
reg     [7:0] k7ddrphy_bitslip380 = 8'd0;
reg     [2:0] k7ddrphy_bitslip38_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip38_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip381;
reg     [7:0] k7ddrphy_bitslip382 = 8'd0;
reg     [2:0] k7ddrphy_bitslip38_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip38_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay39;
wire          k7ddrphy_dq_o_delayed39;
wire          k7ddrphy_dq_i_nodelay39;
wire          k7ddrphy_dq_i_delayed39;
wire          k7ddrphy_dq_t39;
reg     [7:0] k7ddrphy_bitslip390 = 8'd0;
reg     [2:0] k7ddrphy_bitslip39_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip39_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip391;
reg     [7:0] k7ddrphy_bitslip392 = 8'd0;
reg     [2:0] k7ddrphy_bitslip39_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip39_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay40;
wire          k7ddrphy_dq_o_delayed40;
wire          k7ddrphy_dq_i_nodelay40;
wire          k7ddrphy_dq_i_delayed40;
wire          k7ddrphy_dq_t40;
reg     [7:0] k7ddrphy_bitslip400 = 8'd0;
reg     [2:0] k7ddrphy_bitslip40_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip40_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip401;
reg     [7:0] k7ddrphy_bitslip402 = 8'd0;
reg     [2:0] k7ddrphy_bitslip40_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip40_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay41;
wire          k7ddrphy_dq_o_delayed41;
wire          k7ddrphy_dq_i_nodelay41;
wire          k7ddrphy_dq_i_delayed41;
wire          k7ddrphy_dq_t41;
reg     [7:0] k7ddrphy_bitslip410 = 8'd0;
reg     [2:0] k7ddrphy_bitslip41_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip41_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip411;
reg     [7:0] k7ddrphy_bitslip412 = 8'd0;
reg     [2:0] k7ddrphy_bitslip41_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip41_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay42;
wire          k7ddrphy_dq_o_delayed42;
wire          k7ddrphy_dq_i_nodelay42;
wire          k7ddrphy_dq_i_delayed42;
wire          k7ddrphy_dq_t42;
reg     [7:0] k7ddrphy_bitslip420 = 8'd0;
reg     [2:0] k7ddrphy_bitslip42_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip42_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip421;
reg     [7:0] k7ddrphy_bitslip422 = 8'd0;
reg     [2:0] k7ddrphy_bitslip42_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip42_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay43;
wire          k7ddrphy_dq_o_delayed43;
wire          k7ddrphy_dq_i_nodelay43;
wire          k7ddrphy_dq_i_delayed43;
wire          k7ddrphy_dq_t43;
reg     [7:0] k7ddrphy_bitslip430 = 8'd0;
reg     [2:0] k7ddrphy_bitslip43_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip43_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip431;
reg     [7:0] k7ddrphy_bitslip432 = 8'd0;
reg     [2:0] k7ddrphy_bitslip43_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip43_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay44;
wire          k7ddrphy_dq_o_delayed44;
wire          k7ddrphy_dq_i_nodelay44;
wire          k7ddrphy_dq_i_delayed44;
wire          k7ddrphy_dq_t44;
reg     [7:0] k7ddrphy_bitslip440 = 8'd0;
reg     [2:0] k7ddrphy_bitslip44_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip44_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip441;
reg     [7:0] k7ddrphy_bitslip442 = 8'd0;
reg     [2:0] k7ddrphy_bitslip44_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip44_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay45;
wire          k7ddrphy_dq_o_delayed45;
wire          k7ddrphy_dq_i_nodelay45;
wire          k7ddrphy_dq_i_delayed45;
wire          k7ddrphy_dq_t45;
reg     [7:0] k7ddrphy_bitslip450 = 8'd0;
reg     [2:0] k7ddrphy_bitslip45_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip45_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip451;
reg     [7:0] k7ddrphy_bitslip452 = 8'd0;
reg     [2:0] k7ddrphy_bitslip45_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip45_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay46;
wire          k7ddrphy_dq_o_delayed46;
wire          k7ddrphy_dq_i_nodelay46;
wire          k7ddrphy_dq_i_delayed46;
wire          k7ddrphy_dq_t46;
reg     [7:0] k7ddrphy_bitslip460 = 8'd0;
reg     [2:0] k7ddrphy_bitslip46_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip46_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip461;
reg     [7:0] k7ddrphy_bitslip462 = 8'd0;
reg     [2:0] k7ddrphy_bitslip46_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip46_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay47;
wire          k7ddrphy_dq_o_delayed47;
wire          k7ddrphy_dq_i_nodelay47;
wire          k7ddrphy_dq_i_delayed47;
wire          k7ddrphy_dq_t47;
reg     [7:0] k7ddrphy_bitslip470 = 8'd0;
reg     [2:0] k7ddrphy_bitslip47_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip47_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip471;
reg     [7:0] k7ddrphy_bitslip472 = 8'd0;
reg     [2:0] k7ddrphy_bitslip47_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip47_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay48;
wire          k7ddrphy_dq_o_delayed48;
wire          k7ddrphy_dq_i_nodelay48;
wire          k7ddrphy_dq_i_delayed48;
wire          k7ddrphy_dq_t48;
reg     [7:0] k7ddrphy_bitslip480 = 8'd0;
reg     [2:0] k7ddrphy_bitslip48_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip48_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip481;
reg     [7:0] k7ddrphy_bitslip482 = 8'd0;
reg     [2:0] k7ddrphy_bitslip48_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip48_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay49;
wire          k7ddrphy_dq_o_delayed49;
wire          k7ddrphy_dq_i_nodelay49;
wire          k7ddrphy_dq_i_delayed49;
wire          k7ddrphy_dq_t49;
reg     [7:0] k7ddrphy_bitslip490 = 8'd0;
reg     [2:0] k7ddrphy_bitslip49_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip49_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip491;
reg     [7:0] k7ddrphy_bitslip492 = 8'd0;
reg     [2:0] k7ddrphy_bitslip49_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip49_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay50;
wire          k7ddrphy_dq_o_delayed50;
wire          k7ddrphy_dq_i_nodelay50;
wire          k7ddrphy_dq_i_delayed50;
wire          k7ddrphy_dq_t50;
reg     [7:0] k7ddrphy_bitslip500 = 8'd0;
reg     [2:0] k7ddrphy_bitslip50_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip50_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip501;
reg     [7:0] k7ddrphy_bitslip502 = 8'd0;
reg     [2:0] k7ddrphy_bitslip50_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip50_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay51;
wire          k7ddrphy_dq_o_delayed51;
wire          k7ddrphy_dq_i_nodelay51;
wire          k7ddrphy_dq_i_delayed51;
wire          k7ddrphy_dq_t51;
reg     [7:0] k7ddrphy_bitslip510 = 8'd0;
reg     [2:0] k7ddrphy_bitslip51_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip51_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip511;
reg     [7:0] k7ddrphy_bitslip512 = 8'd0;
reg     [2:0] k7ddrphy_bitslip51_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip51_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay52;
wire          k7ddrphy_dq_o_delayed52;
wire          k7ddrphy_dq_i_nodelay52;
wire          k7ddrphy_dq_i_delayed52;
wire          k7ddrphy_dq_t52;
reg     [7:0] k7ddrphy_bitslip520 = 8'd0;
reg     [2:0] k7ddrphy_bitslip52_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip52_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip521;
reg     [7:0] k7ddrphy_bitslip522 = 8'd0;
reg     [2:0] k7ddrphy_bitslip52_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip52_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay53;
wire          k7ddrphy_dq_o_delayed53;
wire          k7ddrphy_dq_i_nodelay53;
wire          k7ddrphy_dq_i_delayed53;
wire          k7ddrphy_dq_t53;
reg     [7:0] k7ddrphy_bitslip530 = 8'd0;
reg     [2:0] k7ddrphy_bitslip53_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip53_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip531;
reg     [7:0] k7ddrphy_bitslip532 = 8'd0;
reg     [2:0] k7ddrphy_bitslip53_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip53_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay54;
wire          k7ddrphy_dq_o_delayed54;
wire          k7ddrphy_dq_i_nodelay54;
wire          k7ddrphy_dq_i_delayed54;
wire          k7ddrphy_dq_t54;
reg     [7:0] k7ddrphy_bitslip540 = 8'd0;
reg     [2:0] k7ddrphy_bitslip54_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip54_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip541;
reg     [7:0] k7ddrphy_bitslip542 = 8'd0;
reg     [2:0] k7ddrphy_bitslip54_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip54_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay55;
wire          k7ddrphy_dq_o_delayed55;
wire          k7ddrphy_dq_i_nodelay55;
wire          k7ddrphy_dq_i_delayed55;
wire          k7ddrphy_dq_t55;
reg     [7:0] k7ddrphy_bitslip550 = 8'd0;
reg     [2:0] k7ddrphy_bitslip55_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip55_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip551;
reg     [7:0] k7ddrphy_bitslip552 = 8'd0;
reg     [2:0] k7ddrphy_bitslip55_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip55_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay56;
wire          k7ddrphy_dq_o_delayed56;
wire          k7ddrphy_dq_i_nodelay56;
wire          k7ddrphy_dq_i_delayed56;
wire          k7ddrphy_dq_t56;
reg     [7:0] k7ddrphy_bitslip560 = 8'd0;
reg     [2:0] k7ddrphy_bitslip56_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip56_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip561;
reg     [7:0] k7ddrphy_bitslip562 = 8'd0;
reg     [2:0] k7ddrphy_bitslip56_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip56_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay57;
wire          k7ddrphy_dq_o_delayed57;
wire          k7ddrphy_dq_i_nodelay57;
wire          k7ddrphy_dq_i_delayed57;
wire          k7ddrphy_dq_t57;
reg     [7:0] k7ddrphy_bitslip570 = 8'd0;
reg     [2:0] k7ddrphy_bitslip57_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip57_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip571;
reg     [7:0] k7ddrphy_bitslip572 = 8'd0;
reg     [2:0] k7ddrphy_bitslip57_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip57_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay58;
wire          k7ddrphy_dq_o_delayed58;
wire          k7ddrphy_dq_i_nodelay58;
wire          k7ddrphy_dq_i_delayed58;
wire          k7ddrphy_dq_t58;
reg     [7:0] k7ddrphy_bitslip580 = 8'd0;
reg     [2:0] k7ddrphy_bitslip58_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip58_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip581;
reg     [7:0] k7ddrphy_bitslip582 = 8'd0;
reg     [2:0] k7ddrphy_bitslip58_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip58_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay59;
wire          k7ddrphy_dq_o_delayed59;
wire          k7ddrphy_dq_i_nodelay59;
wire          k7ddrphy_dq_i_delayed59;
wire          k7ddrphy_dq_t59;
reg     [7:0] k7ddrphy_bitslip590 = 8'd0;
reg     [2:0] k7ddrphy_bitslip59_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip59_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip591;
reg     [7:0] k7ddrphy_bitslip592 = 8'd0;
reg     [2:0] k7ddrphy_bitslip59_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip59_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay60;
wire          k7ddrphy_dq_o_delayed60;
wire          k7ddrphy_dq_i_nodelay60;
wire          k7ddrphy_dq_i_delayed60;
wire          k7ddrphy_dq_t60;
reg     [7:0] k7ddrphy_bitslip600 = 8'd0;
reg     [2:0] k7ddrphy_bitslip60_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip60_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip601;
reg     [7:0] k7ddrphy_bitslip602 = 8'd0;
reg     [2:0] k7ddrphy_bitslip60_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip60_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay61;
wire          k7ddrphy_dq_o_delayed61;
wire          k7ddrphy_dq_i_nodelay61;
wire          k7ddrphy_dq_i_delayed61;
wire          k7ddrphy_dq_t61;
reg     [7:0] k7ddrphy_bitslip610 = 8'd0;
reg     [2:0] k7ddrphy_bitslip61_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip61_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip611;
reg     [7:0] k7ddrphy_bitslip612 = 8'd0;
reg     [2:0] k7ddrphy_bitslip61_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip61_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay62;
wire          k7ddrphy_dq_o_delayed62;
wire          k7ddrphy_dq_i_nodelay62;
wire          k7ddrphy_dq_i_delayed62;
wire          k7ddrphy_dq_t62;
reg     [7:0] k7ddrphy_bitslip620 = 8'd0;
reg     [2:0] k7ddrphy_bitslip62_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip62_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip621;
reg     [7:0] k7ddrphy_bitslip622 = 8'd0;
reg     [2:0] k7ddrphy_bitslip62_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip62_r1 = 16'd0;
wire          k7ddrphy_dq_o_nodelay63;
wire          k7ddrphy_dq_o_delayed63;
wire          k7ddrphy_dq_i_nodelay63;
wire          k7ddrphy_dq_i_delayed63;
wire          k7ddrphy_dq_t63;
reg     [7:0] k7ddrphy_bitslip630 = 8'd0;
reg     [2:0] k7ddrphy_bitslip63_value0 = 3'd7;
reg    [15:0] k7ddrphy_bitslip63_r0 = 16'd0;
wire    [7:0] k7ddrphy_bitslip631;
reg     [7:0] k7ddrphy_bitslip632 = 8'd0;
reg     [2:0] k7ddrphy_bitslip63_value1 = 3'd7;
reg    [15:0] k7ddrphy_bitslip63_r1 = 16'd0;
reg           k7ddrphy_rddata_en_tappeddelayline0 = 1'd0;
reg           k7ddrphy_rddata_en_tappeddelayline1 = 1'd0;
reg           k7ddrphy_rddata_en_tappeddelayline2 = 1'd0;
reg           k7ddrphy_rddata_en_tappeddelayline3 = 1'd0;
reg           k7ddrphy_rddata_en_tappeddelayline4 = 1'd0;
reg           k7ddrphy_rddata_en_tappeddelayline5 = 1'd0;
reg           k7ddrphy_rddata_en_tappeddelayline6 = 1'd0;
reg           k7ddrphy_rddata_en_tappeddelayline7 = 1'd0;
reg           k7ddrphy_wrdata_en_tappeddelayline0 = 1'd0;
reg           k7ddrphy_wrdata_en_tappeddelayline1 = 1'd0;
reg           k7ddrphy_wrdata_en_tappeddelayline2 = 1'd0;
wire   [13:0] soclinux_sdram_slave_p0_address;
wire    [2:0] soclinux_sdram_slave_p0_bank;
wire          soclinux_sdram_slave_p0_cas_n;
wire          soclinux_sdram_slave_p0_cs_n;
wire          soclinux_sdram_slave_p0_ras_n;
wire          soclinux_sdram_slave_p0_we_n;
wire          soclinux_sdram_slave_p0_cke;
wire          soclinux_sdram_slave_p0_odt;
wire          soclinux_sdram_slave_p0_reset_n;
wire          soclinux_sdram_slave_p0_act_n;
wire  [127:0] soclinux_sdram_slave_p0_wrdata;
wire          soclinux_sdram_slave_p0_wrdata_en;
wire   [15:0] soclinux_sdram_slave_p0_wrdata_mask;
wire          soclinux_sdram_slave_p0_rddata_en;
reg   [127:0] soclinux_sdram_slave_p0_rddata = 128'd0;
reg           soclinux_sdram_slave_p0_rddata_valid = 1'd0;
wire   [13:0] soclinux_sdram_slave_p1_address;
wire    [2:0] soclinux_sdram_slave_p1_bank;
wire          soclinux_sdram_slave_p1_cas_n;
wire          soclinux_sdram_slave_p1_cs_n;
wire          soclinux_sdram_slave_p1_ras_n;
wire          soclinux_sdram_slave_p1_we_n;
wire          soclinux_sdram_slave_p1_cke;
wire          soclinux_sdram_slave_p1_odt;
wire          soclinux_sdram_slave_p1_reset_n;
wire          soclinux_sdram_slave_p1_act_n;
wire  [127:0] soclinux_sdram_slave_p1_wrdata;
wire          soclinux_sdram_slave_p1_wrdata_en;
wire   [15:0] soclinux_sdram_slave_p1_wrdata_mask;
wire          soclinux_sdram_slave_p1_rddata_en;
reg   [127:0] soclinux_sdram_slave_p1_rddata = 128'd0;
reg           soclinux_sdram_slave_p1_rddata_valid = 1'd0;
wire   [13:0] soclinux_sdram_slave_p2_address;
wire    [2:0] soclinux_sdram_slave_p2_bank;
wire          soclinux_sdram_slave_p2_cas_n;
wire          soclinux_sdram_slave_p2_cs_n;
wire          soclinux_sdram_slave_p2_ras_n;
wire          soclinux_sdram_slave_p2_we_n;
wire          soclinux_sdram_slave_p2_cke;
wire          soclinux_sdram_slave_p2_odt;
wire          soclinux_sdram_slave_p2_reset_n;
wire          soclinux_sdram_slave_p2_act_n;
wire  [127:0] soclinux_sdram_slave_p2_wrdata;
wire          soclinux_sdram_slave_p2_wrdata_en;
wire   [15:0] soclinux_sdram_slave_p2_wrdata_mask;
wire          soclinux_sdram_slave_p2_rddata_en;
reg   [127:0] soclinux_sdram_slave_p2_rddata = 128'd0;
reg           soclinux_sdram_slave_p2_rddata_valid = 1'd0;
wire   [13:0] soclinux_sdram_slave_p3_address;
wire    [2:0] soclinux_sdram_slave_p3_bank;
wire          soclinux_sdram_slave_p3_cas_n;
wire          soclinux_sdram_slave_p3_cs_n;
wire          soclinux_sdram_slave_p3_ras_n;
wire          soclinux_sdram_slave_p3_we_n;
wire          soclinux_sdram_slave_p3_cke;
wire          soclinux_sdram_slave_p3_odt;
wire          soclinux_sdram_slave_p3_reset_n;
wire          soclinux_sdram_slave_p3_act_n;
wire  [127:0] soclinux_sdram_slave_p3_wrdata;
wire          soclinux_sdram_slave_p3_wrdata_en;
wire   [15:0] soclinux_sdram_slave_p3_wrdata_mask;
wire          soclinux_sdram_slave_p3_rddata_en;
reg   [127:0] soclinux_sdram_slave_p3_rddata = 128'd0;
reg           soclinux_sdram_slave_p3_rddata_valid = 1'd0;
reg    [13:0] soclinux_sdram_master_p0_address = 14'd0;
reg     [2:0] soclinux_sdram_master_p0_bank = 3'd0;
reg           soclinux_sdram_master_p0_cas_n = 1'd1;
reg           soclinux_sdram_master_p0_cs_n = 1'd1;
reg           soclinux_sdram_master_p0_ras_n = 1'd1;
reg           soclinux_sdram_master_p0_we_n = 1'd1;
reg           soclinux_sdram_master_p0_cke = 1'd0;
reg           soclinux_sdram_master_p0_odt = 1'd0;
reg           soclinux_sdram_master_p0_reset_n = 1'd0;
reg           soclinux_sdram_master_p0_act_n = 1'd1;
reg   [127:0] soclinux_sdram_master_p0_wrdata = 128'd0;
reg           soclinux_sdram_master_p0_wrdata_en = 1'd0;
reg    [15:0] soclinux_sdram_master_p0_wrdata_mask = 16'd0;
reg           soclinux_sdram_master_p0_rddata_en = 1'd0;
wire  [127:0] soclinux_sdram_master_p0_rddata;
wire          soclinux_sdram_master_p0_rddata_valid;
reg    [13:0] soclinux_sdram_master_p1_address = 14'd0;
reg     [2:0] soclinux_sdram_master_p1_bank = 3'd0;
reg           soclinux_sdram_master_p1_cas_n = 1'd1;
reg           soclinux_sdram_master_p1_cs_n = 1'd1;
reg           soclinux_sdram_master_p1_ras_n = 1'd1;
reg           soclinux_sdram_master_p1_we_n = 1'd1;
reg           soclinux_sdram_master_p1_cke = 1'd0;
reg           soclinux_sdram_master_p1_odt = 1'd0;
reg           soclinux_sdram_master_p1_reset_n = 1'd0;
reg           soclinux_sdram_master_p1_act_n = 1'd1;
reg   [127:0] soclinux_sdram_master_p1_wrdata = 128'd0;
reg           soclinux_sdram_master_p1_wrdata_en = 1'd0;
reg    [15:0] soclinux_sdram_master_p1_wrdata_mask = 16'd0;
reg           soclinux_sdram_master_p1_rddata_en = 1'd0;
wire  [127:0] soclinux_sdram_master_p1_rddata;
wire          soclinux_sdram_master_p1_rddata_valid;
reg    [13:0] soclinux_sdram_master_p2_address = 14'd0;
reg     [2:0] soclinux_sdram_master_p2_bank = 3'd0;
reg           soclinux_sdram_master_p2_cas_n = 1'd1;
reg           soclinux_sdram_master_p2_cs_n = 1'd1;
reg           soclinux_sdram_master_p2_ras_n = 1'd1;
reg           soclinux_sdram_master_p2_we_n = 1'd1;
reg           soclinux_sdram_master_p2_cke = 1'd0;
reg           soclinux_sdram_master_p2_odt = 1'd0;
reg           soclinux_sdram_master_p2_reset_n = 1'd0;
reg           soclinux_sdram_master_p2_act_n = 1'd1;
reg   [127:0] soclinux_sdram_master_p2_wrdata = 128'd0;
reg           soclinux_sdram_master_p2_wrdata_en = 1'd0;
reg    [15:0] soclinux_sdram_master_p2_wrdata_mask = 16'd0;
reg           soclinux_sdram_master_p2_rddata_en = 1'd0;
wire  [127:0] soclinux_sdram_master_p2_rddata;
wire          soclinux_sdram_master_p2_rddata_valid;
reg    [13:0] soclinux_sdram_master_p3_address = 14'd0;
reg     [2:0] soclinux_sdram_master_p3_bank = 3'd0;
reg           soclinux_sdram_master_p3_cas_n = 1'd1;
reg           soclinux_sdram_master_p3_cs_n = 1'd1;
reg           soclinux_sdram_master_p3_ras_n = 1'd1;
reg           soclinux_sdram_master_p3_we_n = 1'd1;
reg           soclinux_sdram_master_p3_cke = 1'd0;
reg           soclinux_sdram_master_p3_odt = 1'd0;
reg           soclinux_sdram_master_p3_reset_n = 1'd0;
reg           soclinux_sdram_master_p3_act_n = 1'd1;
reg   [127:0] soclinux_sdram_master_p3_wrdata = 128'd0;
reg           soclinux_sdram_master_p3_wrdata_en = 1'd0;
reg    [15:0] soclinux_sdram_master_p3_wrdata_mask = 16'd0;
reg           soclinux_sdram_master_p3_rddata_en = 1'd0;
wire  [127:0] soclinux_sdram_master_p3_rddata;
wire          soclinux_sdram_master_p3_rddata_valid;
wire   [13:0] soclinux_sdram_csr_dfi_p0_address;
wire    [2:0] soclinux_sdram_csr_dfi_p0_bank;
reg           soclinux_sdram_csr_dfi_p0_cas_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p0_cs_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p0_ras_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p0_we_n = 1'd1;
wire          soclinux_sdram_csr_dfi_p0_cke;
wire          soclinux_sdram_csr_dfi_p0_odt;
wire          soclinux_sdram_csr_dfi_p0_reset_n;
reg           soclinux_sdram_csr_dfi_p0_act_n = 1'd1;
wire  [127:0] soclinux_sdram_csr_dfi_p0_wrdata;
wire          soclinux_sdram_csr_dfi_p0_wrdata_en;
wire   [15:0] soclinux_sdram_csr_dfi_p0_wrdata_mask;
wire          soclinux_sdram_csr_dfi_p0_rddata_en;
reg   [127:0] soclinux_sdram_csr_dfi_p0_rddata = 128'd0;
reg           soclinux_sdram_csr_dfi_p0_rddata_valid = 1'd0;
wire   [13:0] soclinux_sdram_csr_dfi_p1_address;
wire    [2:0] soclinux_sdram_csr_dfi_p1_bank;
reg           soclinux_sdram_csr_dfi_p1_cas_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p1_cs_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p1_ras_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p1_we_n = 1'd1;
wire          soclinux_sdram_csr_dfi_p1_cke;
wire          soclinux_sdram_csr_dfi_p1_odt;
wire          soclinux_sdram_csr_dfi_p1_reset_n;
reg           soclinux_sdram_csr_dfi_p1_act_n = 1'd1;
wire  [127:0] soclinux_sdram_csr_dfi_p1_wrdata;
wire          soclinux_sdram_csr_dfi_p1_wrdata_en;
wire   [15:0] soclinux_sdram_csr_dfi_p1_wrdata_mask;
wire          soclinux_sdram_csr_dfi_p1_rddata_en;
reg   [127:0] soclinux_sdram_csr_dfi_p1_rddata = 128'd0;
reg           soclinux_sdram_csr_dfi_p1_rddata_valid = 1'd0;
wire   [13:0] soclinux_sdram_csr_dfi_p2_address;
wire    [2:0] soclinux_sdram_csr_dfi_p2_bank;
reg           soclinux_sdram_csr_dfi_p2_cas_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p2_cs_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p2_ras_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p2_we_n = 1'd1;
wire          soclinux_sdram_csr_dfi_p2_cke;
wire          soclinux_sdram_csr_dfi_p2_odt;
wire          soclinux_sdram_csr_dfi_p2_reset_n;
reg           soclinux_sdram_csr_dfi_p2_act_n = 1'd1;
wire  [127:0] soclinux_sdram_csr_dfi_p2_wrdata;
wire          soclinux_sdram_csr_dfi_p2_wrdata_en;
wire   [15:0] soclinux_sdram_csr_dfi_p2_wrdata_mask;
wire          soclinux_sdram_csr_dfi_p2_rddata_en;
reg   [127:0] soclinux_sdram_csr_dfi_p2_rddata = 128'd0;
reg           soclinux_sdram_csr_dfi_p2_rddata_valid = 1'd0;
wire   [13:0] soclinux_sdram_csr_dfi_p3_address;
wire    [2:0] soclinux_sdram_csr_dfi_p3_bank;
reg           soclinux_sdram_csr_dfi_p3_cas_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p3_cs_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p3_ras_n = 1'd1;
reg           soclinux_sdram_csr_dfi_p3_we_n = 1'd1;
wire          soclinux_sdram_csr_dfi_p3_cke;
wire          soclinux_sdram_csr_dfi_p3_odt;
wire          soclinux_sdram_csr_dfi_p3_reset_n;
reg           soclinux_sdram_csr_dfi_p3_act_n = 1'd1;
wire  [127:0] soclinux_sdram_csr_dfi_p3_wrdata;
wire          soclinux_sdram_csr_dfi_p3_wrdata_en;
wire   [15:0] soclinux_sdram_csr_dfi_p3_wrdata_mask;
wire          soclinux_sdram_csr_dfi_p3_rddata_en;
reg   [127:0] soclinux_sdram_csr_dfi_p3_rddata = 128'd0;
reg           soclinux_sdram_csr_dfi_p3_rddata_valid = 1'd0;
reg    [13:0] soclinux_sdram_ext_dfi_p0_address = 14'd0;
reg     [2:0] soclinux_sdram_ext_dfi_p0_bank = 3'd0;
reg           soclinux_sdram_ext_dfi_p0_cas_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p0_cs_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p0_ras_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p0_we_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p0_cke = 1'd0;
reg           soclinux_sdram_ext_dfi_p0_odt = 1'd0;
reg           soclinux_sdram_ext_dfi_p0_reset_n = 1'd0;
reg           soclinux_sdram_ext_dfi_p0_act_n = 1'd1;
reg   [127:0] soclinux_sdram_ext_dfi_p0_wrdata = 128'd0;
reg           soclinux_sdram_ext_dfi_p0_wrdata_en = 1'd0;
reg    [15:0] soclinux_sdram_ext_dfi_p0_wrdata_mask = 16'd0;
reg           soclinux_sdram_ext_dfi_p0_rddata_en = 1'd0;
reg   [127:0] soclinux_sdram_ext_dfi_p0_rddata = 128'd0;
reg           soclinux_sdram_ext_dfi_p0_rddata_valid = 1'd0;
reg    [13:0] soclinux_sdram_ext_dfi_p1_address = 14'd0;
reg     [2:0] soclinux_sdram_ext_dfi_p1_bank = 3'd0;
reg           soclinux_sdram_ext_dfi_p1_cas_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p1_cs_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p1_ras_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p1_we_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p1_cke = 1'd0;
reg           soclinux_sdram_ext_dfi_p1_odt = 1'd0;
reg           soclinux_sdram_ext_dfi_p1_reset_n = 1'd0;
reg           soclinux_sdram_ext_dfi_p1_act_n = 1'd1;
reg   [127:0] soclinux_sdram_ext_dfi_p1_wrdata = 128'd0;
reg           soclinux_sdram_ext_dfi_p1_wrdata_en = 1'd0;
reg    [15:0] soclinux_sdram_ext_dfi_p1_wrdata_mask = 16'd0;
reg           soclinux_sdram_ext_dfi_p1_rddata_en = 1'd0;
reg   [127:0] soclinux_sdram_ext_dfi_p1_rddata = 128'd0;
reg           soclinux_sdram_ext_dfi_p1_rddata_valid = 1'd0;
reg    [13:0] soclinux_sdram_ext_dfi_p2_address = 14'd0;
reg     [2:0] soclinux_sdram_ext_dfi_p2_bank = 3'd0;
reg           soclinux_sdram_ext_dfi_p2_cas_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p2_cs_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p2_ras_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p2_we_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p2_cke = 1'd0;
reg           soclinux_sdram_ext_dfi_p2_odt = 1'd0;
reg           soclinux_sdram_ext_dfi_p2_reset_n = 1'd0;
reg           soclinux_sdram_ext_dfi_p2_act_n = 1'd1;
reg   [127:0] soclinux_sdram_ext_dfi_p2_wrdata = 128'd0;
reg           soclinux_sdram_ext_dfi_p2_wrdata_en = 1'd0;
reg    [15:0] soclinux_sdram_ext_dfi_p2_wrdata_mask = 16'd0;
reg           soclinux_sdram_ext_dfi_p2_rddata_en = 1'd0;
reg   [127:0] soclinux_sdram_ext_dfi_p2_rddata = 128'd0;
reg           soclinux_sdram_ext_dfi_p2_rddata_valid = 1'd0;
reg    [13:0] soclinux_sdram_ext_dfi_p3_address = 14'd0;
reg     [2:0] soclinux_sdram_ext_dfi_p3_bank = 3'd0;
reg           soclinux_sdram_ext_dfi_p3_cas_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p3_cs_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p3_ras_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p3_we_n = 1'd1;
reg           soclinux_sdram_ext_dfi_p3_cke = 1'd0;
reg           soclinux_sdram_ext_dfi_p3_odt = 1'd0;
reg           soclinux_sdram_ext_dfi_p3_reset_n = 1'd0;
reg           soclinux_sdram_ext_dfi_p3_act_n = 1'd1;
reg   [127:0] soclinux_sdram_ext_dfi_p3_wrdata = 128'd0;
reg           soclinux_sdram_ext_dfi_p3_wrdata_en = 1'd0;
reg    [15:0] soclinux_sdram_ext_dfi_p3_wrdata_mask = 16'd0;
reg           soclinux_sdram_ext_dfi_p3_rddata_en = 1'd0;
reg   [127:0] soclinux_sdram_ext_dfi_p3_rddata = 128'd0;
reg           soclinux_sdram_ext_dfi_p3_rddata_valid = 1'd0;
reg           soclinux_sdram_ext_dfi_sel = 1'd0;
wire          soclinux_sdram_sel;
wire          soclinux_sdram_cke;
wire          soclinux_sdram_odt;
wire          soclinux_sdram_reset_n;
reg     [3:0] soclinux_sdram_storage = 4'd1;
reg           soclinux_sdram_re = 1'd0;
wire          soclinux_sdram_phaseinjector0_csrfield_cs;
wire          soclinux_sdram_phaseinjector0_csrfield_we;
wire          soclinux_sdram_phaseinjector0_csrfield_cas;
wire          soclinux_sdram_phaseinjector0_csrfield_ras;
wire          soclinux_sdram_phaseinjector0_csrfield_wren;
wire          soclinux_sdram_phaseinjector0_csrfield_rden;
reg     [5:0] soclinux_sdram_phaseinjector0_command_storage = 6'd0;
reg           soclinux_sdram_phaseinjector0_command_re = 1'd0;
reg           soclinux_sdram_phaseinjector0_command_issue_re = 1'd0;
wire          soclinux_sdram_phaseinjector0_command_issue_r;
reg           soclinux_sdram_phaseinjector0_command_issue_we = 1'd0;
reg           soclinux_sdram_phaseinjector0_command_issue_w = 1'd0;
reg    [13:0] soclinux_sdram_phaseinjector0_address_storage = 14'd0;
reg           soclinux_sdram_phaseinjector0_address_re = 1'd0;
reg     [2:0] soclinux_sdram_phaseinjector0_baddress_storage = 3'd0;
reg           soclinux_sdram_phaseinjector0_baddress_re = 1'd0;
reg   [127:0] soclinux_sdram_phaseinjector0_wrdata_storage = 128'd0;
reg           soclinux_sdram_phaseinjector0_wrdata_re = 1'd0;
reg   [127:0] soclinux_sdram_phaseinjector0_rddata_status = 128'd0;
wire          soclinux_sdram_phaseinjector0_rddata_we;
reg           soclinux_sdram_phaseinjector0_rddata_re = 1'd0;
wire          soclinux_sdram_phaseinjector1_csrfield_cs;
wire          soclinux_sdram_phaseinjector1_csrfield_we;
wire          soclinux_sdram_phaseinjector1_csrfield_cas;
wire          soclinux_sdram_phaseinjector1_csrfield_ras;
wire          soclinux_sdram_phaseinjector1_csrfield_wren;
wire          soclinux_sdram_phaseinjector1_csrfield_rden;
reg     [5:0] soclinux_sdram_phaseinjector1_command_storage = 6'd0;
reg           soclinux_sdram_phaseinjector1_command_re = 1'd0;
reg           soclinux_sdram_phaseinjector1_command_issue_re = 1'd0;
wire          soclinux_sdram_phaseinjector1_command_issue_r;
reg           soclinux_sdram_phaseinjector1_command_issue_we = 1'd0;
reg           soclinux_sdram_phaseinjector1_command_issue_w = 1'd0;
reg    [13:0] soclinux_sdram_phaseinjector1_address_storage = 14'd0;
reg           soclinux_sdram_phaseinjector1_address_re = 1'd0;
reg     [2:0] soclinux_sdram_phaseinjector1_baddress_storage = 3'd0;
reg           soclinux_sdram_phaseinjector1_baddress_re = 1'd0;
reg   [127:0] soclinux_sdram_phaseinjector1_wrdata_storage = 128'd0;
reg           soclinux_sdram_phaseinjector1_wrdata_re = 1'd0;
reg   [127:0] soclinux_sdram_phaseinjector1_rddata_status = 128'd0;
wire          soclinux_sdram_phaseinjector1_rddata_we;
reg           soclinux_sdram_phaseinjector1_rddata_re = 1'd0;
wire          soclinux_sdram_phaseinjector2_csrfield_cs;
wire          soclinux_sdram_phaseinjector2_csrfield_we;
wire          soclinux_sdram_phaseinjector2_csrfield_cas;
wire          soclinux_sdram_phaseinjector2_csrfield_ras;
wire          soclinux_sdram_phaseinjector2_csrfield_wren;
wire          soclinux_sdram_phaseinjector2_csrfield_rden;
reg     [5:0] soclinux_sdram_phaseinjector2_command_storage = 6'd0;
reg           soclinux_sdram_phaseinjector2_command_re = 1'd0;
reg           soclinux_sdram_phaseinjector2_command_issue_re = 1'd0;
wire          soclinux_sdram_phaseinjector2_command_issue_r;
reg           soclinux_sdram_phaseinjector2_command_issue_we = 1'd0;
reg           soclinux_sdram_phaseinjector2_command_issue_w = 1'd0;
reg    [13:0] soclinux_sdram_phaseinjector2_address_storage = 14'd0;
reg           soclinux_sdram_phaseinjector2_address_re = 1'd0;
reg     [2:0] soclinux_sdram_phaseinjector2_baddress_storage = 3'd0;
reg           soclinux_sdram_phaseinjector2_baddress_re = 1'd0;
reg   [127:0] soclinux_sdram_phaseinjector2_wrdata_storage = 128'd0;
reg           soclinux_sdram_phaseinjector2_wrdata_re = 1'd0;
reg   [127:0] soclinux_sdram_phaseinjector2_rddata_status = 128'd0;
wire          soclinux_sdram_phaseinjector2_rddata_we;
reg           soclinux_sdram_phaseinjector2_rddata_re = 1'd0;
wire          soclinux_sdram_phaseinjector3_csrfield_cs;
wire          soclinux_sdram_phaseinjector3_csrfield_we;
wire          soclinux_sdram_phaseinjector3_csrfield_cas;
wire          soclinux_sdram_phaseinjector3_csrfield_ras;
wire          soclinux_sdram_phaseinjector3_csrfield_wren;
wire          soclinux_sdram_phaseinjector3_csrfield_rden;
reg     [5:0] soclinux_sdram_phaseinjector3_command_storage = 6'd0;
reg           soclinux_sdram_phaseinjector3_command_re = 1'd0;
reg           soclinux_sdram_phaseinjector3_command_issue_re = 1'd0;
wire          soclinux_sdram_phaseinjector3_command_issue_r;
reg           soclinux_sdram_phaseinjector3_command_issue_we = 1'd0;
reg           soclinux_sdram_phaseinjector3_command_issue_w = 1'd0;
reg    [13:0] soclinux_sdram_phaseinjector3_address_storage = 14'd0;
reg           soclinux_sdram_phaseinjector3_address_re = 1'd0;
reg     [2:0] soclinux_sdram_phaseinjector3_baddress_storage = 3'd0;
reg           soclinux_sdram_phaseinjector3_baddress_re = 1'd0;
reg   [127:0] soclinux_sdram_phaseinjector3_wrdata_storage = 128'd0;
reg           soclinux_sdram_phaseinjector3_wrdata_re = 1'd0;
reg   [127:0] soclinux_sdram_phaseinjector3_rddata_status = 128'd0;
wire          soclinux_sdram_phaseinjector3_rddata_we;
reg           soclinux_sdram_phaseinjector3_rddata_re = 1'd0;
wire          soclinux_sdram_interface_bank0_valid;
wire          soclinux_sdram_interface_bank0_ready;
wire          soclinux_sdram_interface_bank0_we;
wire   [20:0] soclinux_sdram_interface_bank0_addr;
wire          soclinux_sdram_interface_bank0_lock;
wire          soclinux_sdram_interface_bank0_wdata_ready;
wire          soclinux_sdram_interface_bank0_rdata_valid;
wire          soclinux_sdram_interface_bank1_valid;
wire          soclinux_sdram_interface_bank1_ready;
wire          soclinux_sdram_interface_bank1_we;
wire   [20:0] soclinux_sdram_interface_bank1_addr;
wire          soclinux_sdram_interface_bank1_lock;
wire          soclinux_sdram_interface_bank1_wdata_ready;
wire          soclinux_sdram_interface_bank1_rdata_valid;
wire          soclinux_sdram_interface_bank2_valid;
wire          soclinux_sdram_interface_bank2_ready;
wire          soclinux_sdram_interface_bank2_we;
wire   [20:0] soclinux_sdram_interface_bank2_addr;
wire          soclinux_sdram_interface_bank2_lock;
wire          soclinux_sdram_interface_bank2_wdata_ready;
wire          soclinux_sdram_interface_bank2_rdata_valid;
wire          soclinux_sdram_interface_bank3_valid;
wire          soclinux_sdram_interface_bank3_ready;
wire          soclinux_sdram_interface_bank3_we;
wire   [20:0] soclinux_sdram_interface_bank3_addr;
wire          soclinux_sdram_interface_bank3_lock;
wire          soclinux_sdram_interface_bank3_wdata_ready;
wire          soclinux_sdram_interface_bank3_rdata_valid;
wire          soclinux_sdram_interface_bank4_valid;
wire          soclinux_sdram_interface_bank4_ready;
wire          soclinux_sdram_interface_bank4_we;
wire   [20:0] soclinux_sdram_interface_bank4_addr;
wire          soclinux_sdram_interface_bank4_lock;
wire          soclinux_sdram_interface_bank4_wdata_ready;
wire          soclinux_sdram_interface_bank4_rdata_valid;
wire          soclinux_sdram_interface_bank5_valid;
wire          soclinux_sdram_interface_bank5_ready;
wire          soclinux_sdram_interface_bank5_we;
wire   [20:0] soclinux_sdram_interface_bank5_addr;
wire          soclinux_sdram_interface_bank5_lock;
wire          soclinux_sdram_interface_bank5_wdata_ready;
wire          soclinux_sdram_interface_bank5_rdata_valid;
wire          soclinux_sdram_interface_bank6_valid;
wire          soclinux_sdram_interface_bank6_ready;
wire          soclinux_sdram_interface_bank6_we;
wire   [20:0] soclinux_sdram_interface_bank6_addr;
wire          soclinux_sdram_interface_bank6_lock;
wire          soclinux_sdram_interface_bank6_wdata_ready;
wire          soclinux_sdram_interface_bank6_rdata_valid;
wire          soclinux_sdram_interface_bank7_valid;
wire          soclinux_sdram_interface_bank7_ready;
wire          soclinux_sdram_interface_bank7_we;
wire   [20:0] soclinux_sdram_interface_bank7_addr;
wire          soclinux_sdram_interface_bank7_lock;
wire          soclinux_sdram_interface_bank7_wdata_ready;
wire          soclinux_sdram_interface_bank7_rdata_valid;
reg   [511:0] soclinux_sdram_interface_wdata = 512'd0;
reg    [63:0] soclinux_sdram_interface_wdata_we = 64'd0;
wire  [511:0] soclinux_sdram_interface_rdata;
reg    [13:0] soclinux_sdram_dfi_p0_address = 14'd0;
reg     [2:0] soclinux_sdram_dfi_p0_bank = 3'd0;
reg           soclinux_sdram_dfi_p0_cas_n = 1'd1;
reg           soclinux_sdram_dfi_p0_cs_n = 1'd1;
reg           soclinux_sdram_dfi_p0_ras_n = 1'd1;
reg           soclinux_sdram_dfi_p0_we_n = 1'd1;
wire          soclinux_sdram_dfi_p0_cke;
wire          soclinux_sdram_dfi_p0_odt;
wire          soclinux_sdram_dfi_p0_reset_n;
reg           soclinux_sdram_dfi_p0_act_n = 1'd1;
wire  [127:0] soclinux_sdram_dfi_p0_wrdata;
reg           soclinux_sdram_dfi_p0_wrdata_en = 1'd0;
wire   [15:0] soclinux_sdram_dfi_p0_wrdata_mask;
reg           soclinux_sdram_dfi_p0_rddata_en = 1'd0;
wire  [127:0] soclinux_sdram_dfi_p0_rddata;
wire          soclinux_sdram_dfi_p0_rddata_valid;
reg    [13:0] soclinux_sdram_dfi_p1_address = 14'd0;
reg     [2:0] soclinux_sdram_dfi_p1_bank = 3'd0;
reg           soclinux_sdram_dfi_p1_cas_n = 1'd1;
reg           soclinux_sdram_dfi_p1_cs_n = 1'd1;
reg           soclinux_sdram_dfi_p1_ras_n = 1'd1;
reg           soclinux_sdram_dfi_p1_we_n = 1'd1;
wire          soclinux_sdram_dfi_p1_cke;
wire          soclinux_sdram_dfi_p1_odt;
wire          soclinux_sdram_dfi_p1_reset_n;
reg           soclinux_sdram_dfi_p1_act_n = 1'd1;
wire  [127:0] soclinux_sdram_dfi_p1_wrdata;
reg           soclinux_sdram_dfi_p1_wrdata_en = 1'd0;
wire   [15:0] soclinux_sdram_dfi_p1_wrdata_mask;
reg           soclinux_sdram_dfi_p1_rddata_en = 1'd0;
wire  [127:0] soclinux_sdram_dfi_p1_rddata;
wire          soclinux_sdram_dfi_p1_rddata_valid;
reg    [13:0] soclinux_sdram_dfi_p2_address = 14'd0;
reg     [2:0] soclinux_sdram_dfi_p2_bank = 3'd0;
reg           soclinux_sdram_dfi_p2_cas_n = 1'd1;
reg           soclinux_sdram_dfi_p2_cs_n = 1'd1;
reg           soclinux_sdram_dfi_p2_ras_n = 1'd1;
reg           soclinux_sdram_dfi_p2_we_n = 1'd1;
wire          soclinux_sdram_dfi_p2_cke;
wire          soclinux_sdram_dfi_p2_odt;
wire          soclinux_sdram_dfi_p2_reset_n;
reg           soclinux_sdram_dfi_p2_act_n = 1'd1;
wire  [127:0] soclinux_sdram_dfi_p2_wrdata;
reg           soclinux_sdram_dfi_p2_wrdata_en = 1'd0;
wire   [15:0] soclinux_sdram_dfi_p2_wrdata_mask;
reg           soclinux_sdram_dfi_p2_rddata_en = 1'd0;
wire  [127:0] soclinux_sdram_dfi_p2_rddata;
wire          soclinux_sdram_dfi_p2_rddata_valid;
reg    [13:0] soclinux_sdram_dfi_p3_address = 14'd0;
reg     [2:0] soclinux_sdram_dfi_p3_bank = 3'd0;
reg           soclinux_sdram_dfi_p3_cas_n = 1'd1;
reg           soclinux_sdram_dfi_p3_cs_n = 1'd1;
reg           soclinux_sdram_dfi_p3_ras_n = 1'd1;
reg           soclinux_sdram_dfi_p3_we_n = 1'd1;
wire          soclinux_sdram_dfi_p3_cke;
wire          soclinux_sdram_dfi_p3_odt;
wire          soclinux_sdram_dfi_p3_reset_n;
reg           soclinux_sdram_dfi_p3_act_n = 1'd1;
wire  [127:0] soclinux_sdram_dfi_p3_wrdata;
reg           soclinux_sdram_dfi_p3_wrdata_en = 1'd0;
wire   [15:0] soclinux_sdram_dfi_p3_wrdata_mask;
reg           soclinux_sdram_dfi_p3_rddata_en = 1'd0;
wire  [127:0] soclinux_sdram_dfi_p3_rddata;
wire          soclinux_sdram_dfi_p3_rddata_valid;
reg           soclinux_sdram_cmd_valid = 1'd0;
reg           soclinux_sdram_cmd_ready = 1'd0;
reg           soclinux_sdram_cmd_last = 1'd0;
reg    [13:0] soclinux_sdram_cmd_payload_a = 14'd0;
reg     [2:0] soclinux_sdram_cmd_payload_ba = 3'd0;
reg           soclinux_sdram_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_cmd_payload_we = 1'd0;
reg           soclinux_sdram_cmd_payload_is_read = 1'd0;
reg           soclinux_sdram_cmd_payload_is_write = 1'd0;
wire          soclinux_sdram_wants_refresh;
wire          soclinux_sdram_wants_zqcs;
wire          soclinux_sdram_timer_wait;
wire          soclinux_sdram_timer_done0;
wire    [9:0] soclinux_sdram_timer_count0;
wire          soclinux_sdram_timer_done1;
reg     [9:0] soclinux_sdram_timer_count1 = 10'd976;
wire          soclinux_sdram_postponer_req_i;
reg           soclinux_sdram_postponer_req_o = 1'd0;
reg           soclinux_sdram_postponer_count = 1'd0;
reg           soclinux_sdram_sequencer_start0 = 1'd0;
wire          soclinux_sdram_sequencer_done0;
wire          soclinux_sdram_sequencer_start1;
reg           soclinux_sdram_sequencer_done1 = 1'd0;
reg     [4:0] soclinux_sdram_sequencer_counter = 5'd0;
reg           soclinux_sdram_sequencer_count = 1'd0;
wire          soclinux_sdram_zqcs_timer_wait;
wire          soclinux_sdram_zqcs_timer_done0;
wire   [26:0] soclinux_sdram_zqcs_timer_count0;
wire          soclinux_sdram_zqcs_timer_done1;
reg    [26:0] soclinux_sdram_zqcs_timer_count1 = 27'd124999999;
reg           soclinux_sdram_zqcs_executer_start = 1'd0;
reg           soclinux_sdram_zqcs_executer_done = 1'd0;
reg     [4:0] soclinux_sdram_zqcs_executer_counter = 5'd0;
wire          soclinux_sdram_bankmachine0_req_valid;
wire          soclinux_sdram_bankmachine0_req_ready;
wire          soclinux_sdram_bankmachine0_req_we;
wire   [20:0] soclinux_sdram_bankmachine0_req_addr;
wire          soclinux_sdram_bankmachine0_req_lock;
reg           soclinux_sdram_bankmachine0_req_wdata_ready = 1'd0;
reg           soclinux_sdram_bankmachine0_req_rdata_valid = 1'd0;
wire          soclinux_sdram_bankmachine0_refresh_req;
reg           soclinux_sdram_bankmachine0_refresh_gnt = 1'd0;
reg           soclinux_sdram_bankmachine0_cmd_valid = 1'd0;
reg           soclinux_sdram_bankmachine0_cmd_ready = 1'd0;
reg    [13:0] soclinux_sdram_bankmachine0_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_sdram_bankmachine0_cmd_payload_ba;
reg           soclinux_sdram_bankmachine0_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_bankmachine0_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_bankmachine0_cmd_payload_we = 1'd0;
reg           soclinux_sdram_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg           soclinux_sdram_bankmachine0_cmd_payload_is_read = 1'd0;
reg           soclinux_sdram_bankmachine0_cmd_payload_is_write = 1'd0;
reg           soclinux_sdram_bankmachine0_auto_precharge = 1'd0;
wire          soclinux_sdram_bankmachine0_sink_valid;
wire          soclinux_sdram_bankmachine0_sink_ready;
reg           soclinux_sdram_bankmachine0_sink_first = 1'd0;
reg           soclinux_sdram_bankmachine0_sink_last = 1'd0;
wire          soclinux_sdram_bankmachine0_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine0_sink_payload_addr;
wire          soclinux_sdram_bankmachine0_source_valid;
wire          soclinux_sdram_bankmachine0_source_ready;
wire          soclinux_sdram_bankmachine0_source_first;
wire          soclinux_sdram_bankmachine0_source_last;
wire          soclinux_sdram_bankmachine0_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine0_source_payload_addr;
wire          soclinux_sdram_bankmachine0_syncfifo0_we;
wire          soclinux_sdram_bankmachine0_syncfifo0_writable;
wire          soclinux_sdram_bankmachine0_syncfifo0_re;
wire          soclinux_sdram_bankmachine0_syncfifo0_readable;
wire   [23:0] soclinux_sdram_bankmachine0_syncfifo0_din;
wire   [23:0] soclinux_sdram_bankmachine0_syncfifo0_dout;
reg     [3:0] soclinux_sdram_bankmachine0_level = 4'd0;
reg           soclinux_sdram_bankmachine0_replace = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine0_produce = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine0_consume = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine0_wrport_adr = 3'd0;
wire   [23:0] soclinux_sdram_bankmachine0_wrport_dat_r;
wire          soclinux_sdram_bankmachine0_wrport_we;
wire   [23:0] soclinux_sdram_bankmachine0_wrport_dat_w;
wire          soclinux_sdram_bankmachine0_do_read;
wire    [2:0] soclinux_sdram_bankmachine0_rdport_adr;
wire   [23:0] soclinux_sdram_bankmachine0_rdport_dat_r;
wire          soclinux_sdram_bankmachine0_fifo_in_payload_we;
wire   [20:0] soclinux_sdram_bankmachine0_fifo_in_payload_addr;
wire          soclinux_sdram_bankmachine0_fifo_in_first;
wire          soclinux_sdram_bankmachine0_fifo_in_last;
wire          soclinux_sdram_bankmachine0_fifo_out_payload_we;
wire   [20:0] soclinux_sdram_bankmachine0_fifo_out_payload_addr;
wire          soclinux_sdram_bankmachine0_fifo_out_first;
wire          soclinux_sdram_bankmachine0_fifo_out_last;
wire          soclinux_sdram_bankmachine0_sink_sink_valid;
wire          soclinux_sdram_bankmachine0_sink_sink_ready;
wire          soclinux_sdram_bankmachine0_sink_sink_first;
wire          soclinux_sdram_bankmachine0_sink_sink_last;
wire          soclinux_sdram_bankmachine0_sink_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine0_sink_sink_payload_addr;
wire          soclinux_sdram_bankmachine0_source_source_valid;
wire          soclinux_sdram_bankmachine0_source_source_ready;
wire          soclinux_sdram_bankmachine0_source_source_first;
wire          soclinux_sdram_bankmachine0_source_source_last;
wire          soclinux_sdram_bankmachine0_source_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine0_source_source_payload_addr;
wire          soclinux_sdram_bankmachine0_pipe_valid_sink_valid;
wire          soclinux_sdram_bankmachine0_pipe_valid_sink_ready;
wire          soclinux_sdram_bankmachine0_pipe_valid_sink_first;
wire          soclinux_sdram_bankmachine0_pipe_valid_sink_last;
wire          soclinux_sdram_bankmachine0_pipe_valid_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine0_pipe_valid_sink_payload_addr;
reg           soclinux_sdram_bankmachine0_pipe_valid_source_valid = 1'd0;
wire          soclinux_sdram_bankmachine0_pipe_valid_source_ready;
reg           soclinux_sdram_bankmachine0_pipe_valid_source_first = 1'd0;
reg           soclinux_sdram_bankmachine0_pipe_valid_source_last = 1'd0;
reg           soclinux_sdram_bankmachine0_pipe_valid_source_payload_we = 1'd0;
reg    [20:0] soclinux_sdram_bankmachine0_pipe_valid_source_payload_addr = 21'd0;
reg    [13:0] soclinux_sdram_bankmachine0_row = 14'd0;
reg           soclinux_sdram_bankmachine0_row_opened = 1'd0;
wire          soclinux_sdram_bankmachine0_row_hit;
reg           soclinux_sdram_bankmachine0_row_open = 1'd0;
reg           soclinux_sdram_bankmachine0_row_close = 1'd0;
reg           soclinux_sdram_bankmachine0_row_col_n_addr_sel = 1'd0;
wire          soclinux_sdram_bankmachine0_twtpcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine0_twtpcon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine0_twtpcon_count = 3'd0;
wire          soclinux_sdram_bankmachine0_trccon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine0_trccon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine0_trccon_count = 3'd0;
wire          soclinux_sdram_bankmachine0_trascon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine0_trascon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine0_trascon_count = 3'd0;
wire          soclinux_sdram_bankmachine1_req_valid;
wire          soclinux_sdram_bankmachine1_req_ready;
wire          soclinux_sdram_bankmachine1_req_we;
wire   [20:0] soclinux_sdram_bankmachine1_req_addr;
wire          soclinux_sdram_bankmachine1_req_lock;
reg           soclinux_sdram_bankmachine1_req_wdata_ready = 1'd0;
reg           soclinux_sdram_bankmachine1_req_rdata_valid = 1'd0;
wire          soclinux_sdram_bankmachine1_refresh_req;
reg           soclinux_sdram_bankmachine1_refresh_gnt = 1'd0;
reg           soclinux_sdram_bankmachine1_cmd_valid = 1'd0;
reg           soclinux_sdram_bankmachine1_cmd_ready = 1'd0;
reg    [13:0] soclinux_sdram_bankmachine1_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_sdram_bankmachine1_cmd_payload_ba;
reg           soclinux_sdram_bankmachine1_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_bankmachine1_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_bankmachine1_cmd_payload_we = 1'd0;
reg           soclinux_sdram_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg           soclinux_sdram_bankmachine1_cmd_payload_is_read = 1'd0;
reg           soclinux_sdram_bankmachine1_cmd_payload_is_write = 1'd0;
reg           soclinux_sdram_bankmachine1_auto_precharge = 1'd0;
wire          soclinux_sdram_bankmachine1_sink_valid;
wire          soclinux_sdram_bankmachine1_sink_ready;
reg           soclinux_sdram_bankmachine1_sink_first = 1'd0;
reg           soclinux_sdram_bankmachine1_sink_last = 1'd0;
wire          soclinux_sdram_bankmachine1_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine1_sink_payload_addr;
wire          soclinux_sdram_bankmachine1_source_valid;
wire          soclinux_sdram_bankmachine1_source_ready;
wire          soclinux_sdram_bankmachine1_source_first;
wire          soclinux_sdram_bankmachine1_source_last;
wire          soclinux_sdram_bankmachine1_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine1_source_payload_addr;
wire          soclinux_sdram_bankmachine1_syncfifo1_we;
wire          soclinux_sdram_bankmachine1_syncfifo1_writable;
wire          soclinux_sdram_bankmachine1_syncfifo1_re;
wire          soclinux_sdram_bankmachine1_syncfifo1_readable;
wire   [23:0] soclinux_sdram_bankmachine1_syncfifo1_din;
wire   [23:0] soclinux_sdram_bankmachine1_syncfifo1_dout;
reg     [3:0] soclinux_sdram_bankmachine1_level = 4'd0;
reg           soclinux_sdram_bankmachine1_replace = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine1_produce = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine1_consume = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine1_wrport_adr = 3'd0;
wire   [23:0] soclinux_sdram_bankmachine1_wrport_dat_r;
wire          soclinux_sdram_bankmachine1_wrport_we;
wire   [23:0] soclinux_sdram_bankmachine1_wrport_dat_w;
wire          soclinux_sdram_bankmachine1_do_read;
wire    [2:0] soclinux_sdram_bankmachine1_rdport_adr;
wire   [23:0] soclinux_sdram_bankmachine1_rdport_dat_r;
wire          soclinux_sdram_bankmachine1_fifo_in_payload_we;
wire   [20:0] soclinux_sdram_bankmachine1_fifo_in_payload_addr;
wire          soclinux_sdram_bankmachine1_fifo_in_first;
wire          soclinux_sdram_bankmachine1_fifo_in_last;
wire          soclinux_sdram_bankmachine1_fifo_out_payload_we;
wire   [20:0] soclinux_sdram_bankmachine1_fifo_out_payload_addr;
wire          soclinux_sdram_bankmachine1_fifo_out_first;
wire          soclinux_sdram_bankmachine1_fifo_out_last;
wire          soclinux_sdram_bankmachine1_sink_sink_valid;
wire          soclinux_sdram_bankmachine1_sink_sink_ready;
wire          soclinux_sdram_bankmachine1_sink_sink_first;
wire          soclinux_sdram_bankmachine1_sink_sink_last;
wire          soclinux_sdram_bankmachine1_sink_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine1_sink_sink_payload_addr;
wire          soclinux_sdram_bankmachine1_source_source_valid;
wire          soclinux_sdram_bankmachine1_source_source_ready;
wire          soclinux_sdram_bankmachine1_source_source_first;
wire          soclinux_sdram_bankmachine1_source_source_last;
wire          soclinux_sdram_bankmachine1_source_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine1_source_source_payload_addr;
wire          soclinux_sdram_bankmachine1_pipe_valid_sink_valid;
wire          soclinux_sdram_bankmachine1_pipe_valid_sink_ready;
wire          soclinux_sdram_bankmachine1_pipe_valid_sink_first;
wire          soclinux_sdram_bankmachine1_pipe_valid_sink_last;
wire          soclinux_sdram_bankmachine1_pipe_valid_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine1_pipe_valid_sink_payload_addr;
reg           soclinux_sdram_bankmachine1_pipe_valid_source_valid = 1'd0;
wire          soclinux_sdram_bankmachine1_pipe_valid_source_ready;
reg           soclinux_sdram_bankmachine1_pipe_valid_source_first = 1'd0;
reg           soclinux_sdram_bankmachine1_pipe_valid_source_last = 1'd0;
reg           soclinux_sdram_bankmachine1_pipe_valid_source_payload_we = 1'd0;
reg    [20:0] soclinux_sdram_bankmachine1_pipe_valid_source_payload_addr = 21'd0;
reg    [13:0] soclinux_sdram_bankmachine1_row = 14'd0;
reg           soclinux_sdram_bankmachine1_row_opened = 1'd0;
wire          soclinux_sdram_bankmachine1_row_hit;
reg           soclinux_sdram_bankmachine1_row_open = 1'd0;
reg           soclinux_sdram_bankmachine1_row_close = 1'd0;
reg           soclinux_sdram_bankmachine1_row_col_n_addr_sel = 1'd0;
wire          soclinux_sdram_bankmachine1_twtpcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine1_twtpcon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine1_twtpcon_count = 3'd0;
wire          soclinux_sdram_bankmachine1_trccon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine1_trccon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine1_trccon_count = 3'd0;
wire          soclinux_sdram_bankmachine1_trascon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine1_trascon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine1_trascon_count = 3'd0;
wire          soclinux_sdram_bankmachine2_req_valid;
wire          soclinux_sdram_bankmachine2_req_ready;
wire          soclinux_sdram_bankmachine2_req_we;
wire   [20:0] soclinux_sdram_bankmachine2_req_addr;
wire          soclinux_sdram_bankmachine2_req_lock;
reg           soclinux_sdram_bankmachine2_req_wdata_ready = 1'd0;
reg           soclinux_sdram_bankmachine2_req_rdata_valid = 1'd0;
wire          soclinux_sdram_bankmachine2_refresh_req;
reg           soclinux_sdram_bankmachine2_refresh_gnt = 1'd0;
reg           soclinux_sdram_bankmachine2_cmd_valid = 1'd0;
reg           soclinux_sdram_bankmachine2_cmd_ready = 1'd0;
reg    [13:0] soclinux_sdram_bankmachine2_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_sdram_bankmachine2_cmd_payload_ba;
reg           soclinux_sdram_bankmachine2_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_bankmachine2_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_bankmachine2_cmd_payload_we = 1'd0;
reg           soclinux_sdram_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg           soclinux_sdram_bankmachine2_cmd_payload_is_read = 1'd0;
reg           soclinux_sdram_bankmachine2_cmd_payload_is_write = 1'd0;
reg           soclinux_sdram_bankmachine2_auto_precharge = 1'd0;
wire          soclinux_sdram_bankmachine2_sink_valid;
wire          soclinux_sdram_bankmachine2_sink_ready;
reg           soclinux_sdram_bankmachine2_sink_first = 1'd0;
reg           soclinux_sdram_bankmachine2_sink_last = 1'd0;
wire          soclinux_sdram_bankmachine2_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine2_sink_payload_addr;
wire          soclinux_sdram_bankmachine2_source_valid;
wire          soclinux_sdram_bankmachine2_source_ready;
wire          soclinux_sdram_bankmachine2_source_first;
wire          soclinux_sdram_bankmachine2_source_last;
wire          soclinux_sdram_bankmachine2_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine2_source_payload_addr;
wire          soclinux_sdram_bankmachine2_syncfifo2_we;
wire          soclinux_sdram_bankmachine2_syncfifo2_writable;
wire          soclinux_sdram_bankmachine2_syncfifo2_re;
wire          soclinux_sdram_bankmachine2_syncfifo2_readable;
wire   [23:0] soclinux_sdram_bankmachine2_syncfifo2_din;
wire   [23:0] soclinux_sdram_bankmachine2_syncfifo2_dout;
reg     [3:0] soclinux_sdram_bankmachine2_level = 4'd0;
reg           soclinux_sdram_bankmachine2_replace = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine2_produce = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine2_consume = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine2_wrport_adr = 3'd0;
wire   [23:0] soclinux_sdram_bankmachine2_wrport_dat_r;
wire          soclinux_sdram_bankmachine2_wrport_we;
wire   [23:0] soclinux_sdram_bankmachine2_wrport_dat_w;
wire          soclinux_sdram_bankmachine2_do_read;
wire    [2:0] soclinux_sdram_bankmachine2_rdport_adr;
wire   [23:0] soclinux_sdram_bankmachine2_rdport_dat_r;
wire          soclinux_sdram_bankmachine2_fifo_in_payload_we;
wire   [20:0] soclinux_sdram_bankmachine2_fifo_in_payload_addr;
wire          soclinux_sdram_bankmachine2_fifo_in_first;
wire          soclinux_sdram_bankmachine2_fifo_in_last;
wire          soclinux_sdram_bankmachine2_fifo_out_payload_we;
wire   [20:0] soclinux_sdram_bankmachine2_fifo_out_payload_addr;
wire          soclinux_sdram_bankmachine2_fifo_out_first;
wire          soclinux_sdram_bankmachine2_fifo_out_last;
wire          soclinux_sdram_bankmachine2_sink_sink_valid;
wire          soclinux_sdram_bankmachine2_sink_sink_ready;
wire          soclinux_sdram_bankmachine2_sink_sink_first;
wire          soclinux_sdram_bankmachine2_sink_sink_last;
wire          soclinux_sdram_bankmachine2_sink_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine2_sink_sink_payload_addr;
wire          soclinux_sdram_bankmachine2_source_source_valid;
wire          soclinux_sdram_bankmachine2_source_source_ready;
wire          soclinux_sdram_bankmachine2_source_source_first;
wire          soclinux_sdram_bankmachine2_source_source_last;
wire          soclinux_sdram_bankmachine2_source_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine2_source_source_payload_addr;
wire          soclinux_sdram_bankmachine2_pipe_valid_sink_valid;
wire          soclinux_sdram_bankmachine2_pipe_valid_sink_ready;
wire          soclinux_sdram_bankmachine2_pipe_valid_sink_first;
wire          soclinux_sdram_bankmachine2_pipe_valid_sink_last;
wire          soclinux_sdram_bankmachine2_pipe_valid_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine2_pipe_valid_sink_payload_addr;
reg           soclinux_sdram_bankmachine2_pipe_valid_source_valid = 1'd0;
wire          soclinux_sdram_bankmachine2_pipe_valid_source_ready;
reg           soclinux_sdram_bankmachine2_pipe_valid_source_first = 1'd0;
reg           soclinux_sdram_bankmachine2_pipe_valid_source_last = 1'd0;
reg           soclinux_sdram_bankmachine2_pipe_valid_source_payload_we = 1'd0;
reg    [20:0] soclinux_sdram_bankmachine2_pipe_valid_source_payload_addr = 21'd0;
reg    [13:0] soclinux_sdram_bankmachine2_row = 14'd0;
reg           soclinux_sdram_bankmachine2_row_opened = 1'd0;
wire          soclinux_sdram_bankmachine2_row_hit;
reg           soclinux_sdram_bankmachine2_row_open = 1'd0;
reg           soclinux_sdram_bankmachine2_row_close = 1'd0;
reg           soclinux_sdram_bankmachine2_row_col_n_addr_sel = 1'd0;
wire          soclinux_sdram_bankmachine2_twtpcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine2_twtpcon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine2_twtpcon_count = 3'd0;
wire          soclinux_sdram_bankmachine2_trccon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine2_trccon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine2_trccon_count = 3'd0;
wire          soclinux_sdram_bankmachine2_trascon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine2_trascon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine2_trascon_count = 3'd0;
wire          soclinux_sdram_bankmachine3_req_valid;
wire          soclinux_sdram_bankmachine3_req_ready;
wire          soclinux_sdram_bankmachine3_req_we;
wire   [20:0] soclinux_sdram_bankmachine3_req_addr;
wire          soclinux_sdram_bankmachine3_req_lock;
reg           soclinux_sdram_bankmachine3_req_wdata_ready = 1'd0;
reg           soclinux_sdram_bankmachine3_req_rdata_valid = 1'd0;
wire          soclinux_sdram_bankmachine3_refresh_req;
reg           soclinux_sdram_bankmachine3_refresh_gnt = 1'd0;
reg           soclinux_sdram_bankmachine3_cmd_valid = 1'd0;
reg           soclinux_sdram_bankmachine3_cmd_ready = 1'd0;
reg    [13:0] soclinux_sdram_bankmachine3_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_sdram_bankmachine3_cmd_payload_ba;
reg           soclinux_sdram_bankmachine3_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_bankmachine3_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_bankmachine3_cmd_payload_we = 1'd0;
reg           soclinux_sdram_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg           soclinux_sdram_bankmachine3_cmd_payload_is_read = 1'd0;
reg           soclinux_sdram_bankmachine3_cmd_payload_is_write = 1'd0;
reg           soclinux_sdram_bankmachine3_auto_precharge = 1'd0;
wire          soclinux_sdram_bankmachine3_sink_valid;
wire          soclinux_sdram_bankmachine3_sink_ready;
reg           soclinux_sdram_bankmachine3_sink_first = 1'd0;
reg           soclinux_sdram_bankmachine3_sink_last = 1'd0;
wire          soclinux_sdram_bankmachine3_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine3_sink_payload_addr;
wire          soclinux_sdram_bankmachine3_source_valid;
wire          soclinux_sdram_bankmachine3_source_ready;
wire          soclinux_sdram_bankmachine3_source_first;
wire          soclinux_sdram_bankmachine3_source_last;
wire          soclinux_sdram_bankmachine3_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine3_source_payload_addr;
wire          soclinux_sdram_bankmachine3_syncfifo3_we;
wire          soclinux_sdram_bankmachine3_syncfifo3_writable;
wire          soclinux_sdram_bankmachine3_syncfifo3_re;
wire          soclinux_sdram_bankmachine3_syncfifo3_readable;
wire   [23:0] soclinux_sdram_bankmachine3_syncfifo3_din;
wire   [23:0] soclinux_sdram_bankmachine3_syncfifo3_dout;
reg     [3:0] soclinux_sdram_bankmachine3_level = 4'd0;
reg           soclinux_sdram_bankmachine3_replace = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine3_produce = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine3_consume = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine3_wrport_adr = 3'd0;
wire   [23:0] soclinux_sdram_bankmachine3_wrport_dat_r;
wire          soclinux_sdram_bankmachine3_wrport_we;
wire   [23:0] soclinux_sdram_bankmachine3_wrport_dat_w;
wire          soclinux_sdram_bankmachine3_do_read;
wire    [2:0] soclinux_sdram_bankmachine3_rdport_adr;
wire   [23:0] soclinux_sdram_bankmachine3_rdport_dat_r;
wire          soclinux_sdram_bankmachine3_fifo_in_payload_we;
wire   [20:0] soclinux_sdram_bankmachine3_fifo_in_payload_addr;
wire          soclinux_sdram_bankmachine3_fifo_in_first;
wire          soclinux_sdram_bankmachine3_fifo_in_last;
wire          soclinux_sdram_bankmachine3_fifo_out_payload_we;
wire   [20:0] soclinux_sdram_bankmachine3_fifo_out_payload_addr;
wire          soclinux_sdram_bankmachine3_fifo_out_first;
wire          soclinux_sdram_bankmachine3_fifo_out_last;
wire          soclinux_sdram_bankmachine3_sink_sink_valid;
wire          soclinux_sdram_bankmachine3_sink_sink_ready;
wire          soclinux_sdram_bankmachine3_sink_sink_first;
wire          soclinux_sdram_bankmachine3_sink_sink_last;
wire          soclinux_sdram_bankmachine3_sink_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine3_sink_sink_payload_addr;
wire          soclinux_sdram_bankmachine3_source_source_valid;
wire          soclinux_sdram_bankmachine3_source_source_ready;
wire          soclinux_sdram_bankmachine3_source_source_first;
wire          soclinux_sdram_bankmachine3_source_source_last;
wire          soclinux_sdram_bankmachine3_source_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine3_source_source_payload_addr;
wire          soclinux_sdram_bankmachine3_pipe_valid_sink_valid;
wire          soclinux_sdram_bankmachine3_pipe_valid_sink_ready;
wire          soclinux_sdram_bankmachine3_pipe_valid_sink_first;
wire          soclinux_sdram_bankmachine3_pipe_valid_sink_last;
wire          soclinux_sdram_bankmachine3_pipe_valid_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine3_pipe_valid_sink_payload_addr;
reg           soclinux_sdram_bankmachine3_pipe_valid_source_valid = 1'd0;
wire          soclinux_sdram_bankmachine3_pipe_valid_source_ready;
reg           soclinux_sdram_bankmachine3_pipe_valid_source_first = 1'd0;
reg           soclinux_sdram_bankmachine3_pipe_valid_source_last = 1'd0;
reg           soclinux_sdram_bankmachine3_pipe_valid_source_payload_we = 1'd0;
reg    [20:0] soclinux_sdram_bankmachine3_pipe_valid_source_payload_addr = 21'd0;
reg    [13:0] soclinux_sdram_bankmachine3_row = 14'd0;
reg           soclinux_sdram_bankmachine3_row_opened = 1'd0;
wire          soclinux_sdram_bankmachine3_row_hit;
reg           soclinux_sdram_bankmachine3_row_open = 1'd0;
reg           soclinux_sdram_bankmachine3_row_close = 1'd0;
reg           soclinux_sdram_bankmachine3_row_col_n_addr_sel = 1'd0;
wire          soclinux_sdram_bankmachine3_twtpcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine3_twtpcon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine3_twtpcon_count = 3'd0;
wire          soclinux_sdram_bankmachine3_trccon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine3_trccon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine3_trccon_count = 3'd0;
wire          soclinux_sdram_bankmachine3_trascon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine3_trascon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine3_trascon_count = 3'd0;
wire          soclinux_sdram_bankmachine4_req_valid;
wire          soclinux_sdram_bankmachine4_req_ready;
wire          soclinux_sdram_bankmachine4_req_we;
wire   [20:0] soclinux_sdram_bankmachine4_req_addr;
wire          soclinux_sdram_bankmachine4_req_lock;
reg           soclinux_sdram_bankmachine4_req_wdata_ready = 1'd0;
reg           soclinux_sdram_bankmachine4_req_rdata_valid = 1'd0;
wire          soclinux_sdram_bankmachine4_refresh_req;
reg           soclinux_sdram_bankmachine4_refresh_gnt = 1'd0;
reg           soclinux_sdram_bankmachine4_cmd_valid = 1'd0;
reg           soclinux_sdram_bankmachine4_cmd_ready = 1'd0;
reg    [13:0] soclinux_sdram_bankmachine4_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_sdram_bankmachine4_cmd_payload_ba;
reg           soclinux_sdram_bankmachine4_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_bankmachine4_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_bankmachine4_cmd_payload_we = 1'd0;
reg           soclinux_sdram_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg           soclinux_sdram_bankmachine4_cmd_payload_is_read = 1'd0;
reg           soclinux_sdram_bankmachine4_cmd_payload_is_write = 1'd0;
reg           soclinux_sdram_bankmachine4_auto_precharge = 1'd0;
wire          soclinux_sdram_bankmachine4_sink_valid;
wire          soclinux_sdram_bankmachine4_sink_ready;
reg           soclinux_sdram_bankmachine4_sink_first = 1'd0;
reg           soclinux_sdram_bankmachine4_sink_last = 1'd0;
wire          soclinux_sdram_bankmachine4_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine4_sink_payload_addr;
wire          soclinux_sdram_bankmachine4_source_valid;
wire          soclinux_sdram_bankmachine4_source_ready;
wire          soclinux_sdram_bankmachine4_source_first;
wire          soclinux_sdram_bankmachine4_source_last;
wire          soclinux_sdram_bankmachine4_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine4_source_payload_addr;
wire          soclinux_sdram_bankmachine4_syncfifo4_we;
wire          soclinux_sdram_bankmachine4_syncfifo4_writable;
wire          soclinux_sdram_bankmachine4_syncfifo4_re;
wire          soclinux_sdram_bankmachine4_syncfifo4_readable;
wire   [23:0] soclinux_sdram_bankmachine4_syncfifo4_din;
wire   [23:0] soclinux_sdram_bankmachine4_syncfifo4_dout;
reg     [3:0] soclinux_sdram_bankmachine4_level = 4'd0;
reg           soclinux_sdram_bankmachine4_replace = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine4_produce = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine4_consume = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine4_wrport_adr = 3'd0;
wire   [23:0] soclinux_sdram_bankmachine4_wrport_dat_r;
wire          soclinux_sdram_bankmachine4_wrport_we;
wire   [23:0] soclinux_sdram_bankmachine4_wrport_dat_w;
wire          soclinux_sdram_bankmachine4_do_read;
wire    [2:0] soclinux_sdram_bankmachine4_rdport_adr;
wire   [23:0] soclinux_sdram_bankmachine4_rdport_dat_r;
wire          soclinux_sdram_bankmachine4_fifo_in_payload_we;
wire   [20:0] soclinux_sdram_bankmachine4_fifo_in_payload_addr;
wire          soclinux_sdram_bankmachine4_fifo_in_first;
wire          soclinux_sdram_bankmachine4_fifo_in_last;
wire          soclinux_sdram_bankmachine4_fifo_out_payload_we;
wire   [20:0] soclinux_sdram_bankmachine4_fifo_out_payload_addr;
wire          soclinux_sdram_bankmachine4_fifo_out_first;
wire          soclinux_sdram_bankmachine4_fifo_out_last;
wire          soclinux_sdram_bankmachine4_sink_sink_valid;
wire          soclinux_sdram_bankmachine4_sink_sink_ready;
wire          soclinux_sdram_bankmachine4_sink_sink_first;
wire          soclinux_sdram_bankmachine4_sink_sink_last;
wire          soclinux_sdram_bankmachine4_sink_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine4_sink_sink_payload_addr;
wire          soclinux_sdram_bankmachine4_source_source_valid;
wire          soclinux_sdram_bankmachine4_source_source_ready;
wire          soclinux_sdram_bankmachine4_source_source_first;
wire          soclinux_sdram_bankmachine4_source_source_last;
wire          soclinux_sdram_bankmachine4_source_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine4_source_source_payload_addr;
wire          soclinux_sdram_bankmachine4_pipe_valid_sink_valid;
wire          soclinux_sdram_bankmachine4_pipe_valid_sink_ready;
wire          soclinux_sdram_bankmachine4_pipe_valid_sink_first;
wire          soclinux_sdram_bankmachine4_pipe_valid_sink_last;
wire          soclinux_sdram_bankmachine4_pipe_valid_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine4_pipe_valid_sink_payload_addr;
reg           soclinux_sdram_bankmachine4_pipe_valid_source_valid = 1'd0;
wire          soclinux_sdram_bankmachine4_pipe_valid_source_ready;
reg           soclinux_sdram_bankmachine4_pipe_valid_source_first = 1'd0;
reg           soclinux_sdram_bankmachine4_pipe_valid_source_last = 1'd0;
reg           soclinux_sdram_bankmachine4_pipe_valid_source_payload_we = 1'd0;
reg    [20:0] soclinux_sdram_bankmachine4_pipe_valid_source_payload_addr = 21'd0;
reg    [13:0] soclinux_sdram_bankmachine4_row = 14'd0;
reg           soclinux_sdram_bankmachine4_row_opened = 1'd0;
wire          soclinux_sdram_bankmachine4_row_hit;
reg           soclinux_sdram_bankmachine4_row_open = 1'd0;
reg           soclinux_sdram_bankmachine4_row_close = 1'd0;
reg           soclinux_sdram_bankmachine4_row_col_n_addr_sel = 1'd0;
wire          soclinux_sdram_bankmachine4_twtpcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine4_twtpcon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine4_twtpcon_count = 3'd0;
wire          soclinux_sdram_bankmachine4_trccon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine4_trccon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine4_trccon_count = 3'd0;
wire          soclinux_sdram_bankmachine4_trascon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine4_trascon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine4_trascon_count = 3'd0;
wire          soclinux_sdram_bankmachine5_req_valid;
wire          soclinux_sdram_bankmachine5_req_ready;
wire          soclinux_sdram_bankmachine5_req_we;
wire   [20:0] soclinux_sdram_bankmachine5_req_addr;
wire          soclinux_sdram_bankmachine5_req_lock;
reg           soclinux_sdram_bankmachine5_req_wdata_ready = 1'd0;
reg           soclinux_sdram_bankmachine5_req_rdata_valid = 1'd0;
wire          soclinux_sdram_bankmachine5_refresh_req;
reg           soclinux_sdram_bankmachine5_refresh_gnt = 1'd0;
reg           soclinux_sdram_bankmachine5_cmd_valid = 1'd0;
reg           soclinux_sdram_bankmachine5_cmd_ready = 1'd0;
reg    [13:0] soclinux_sdram_bankmachine5_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_sdram_bankmachine5_cmd_payload_ba;
reg           soclinux_sdram_bankmachine5_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_bankmachine5_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_bankmachine5_cmd_payload_we = 1'd0;
reg           soclinux_sdram_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg           soclinux_sdram_bankmachine5_cmd_payload_is_read = 1'd0;
reg           soclinux_sdram_bankmachine5_cmd_payload_is_write = 1'd0;
reg           soclinux_sdram_bankmachine5_auto_precharge = 1'd0;
wire          soclinux_sdram_bankmachine5_sink_valid;
wire          soclinux_sdram_bankmachine5_sink_ready;
reg           soclinux_sdram_bankmachine5_sink_first = 1'd0;
reg           soclinux_sdram_bankmachine5_sink_last = 1'd0;
wire          soclinux_sdram_bankmachine5_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine5_sink_payload_addr;
wire          soclinux_sdram_bankmachine5_source_valid;
wire          soclinux_sdram_bankmachine5_source_ready;
wire          soclinux_sdram_bankmachine5_source_first;
wire          soclinux_sdram_bankmachine5_source_last;
wire          soclinux_sdram_bankmachine5_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine5_source_payload_addr;
wire          soclinux_sdram_bankmachine5_syncfifo5_we;
wire          soclinux_sdram_bankmachine5_syncfifo5_writable;
wire          soclinux_sdram_bankmachine5_syncfifo5_re;
wire          soclinux_sdram_bankmachine5_syncfifo5_readable;
wire   [23:0] soclinux_sdram_bankmachine5_syncfifo5_din;
wire   [23:0] soclinux_sdram_bankmachine5_syncfifo5_dout;
reg     [3:0] soclinux_sdram_bankmachine5_level = 4'd0;
reg           soclinux_sdram_bankmachine5_replace = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine5_produce = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine5_consume = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine5_wrport_adr = 3'd0;
wire   [23:0] soclinux_sdram_bankmachine5_wrport_dat_r;
wire          soclinux_sdram_bankmachine5_wrport_we;
wire   [23:0] soclinux_sdram_bankmachine5_wrport_dat_w;
wire          soclinux_sdram_bankmachine5_do_read;
wire    [2:0] soclinux_sdram_bankmachine5_rdport_adr;
wire   [23:0] soclinux_sdram_bankmachine5_rdport_dat_r;
wire          soclinux_sdram_bankmachine5_fifo_in_payload_we;
wire   [20:0] soclinux_sdram_bankmachine5_fifo_in_payload_addr;
wire          soclinux_sdram_bankmachine5_fifo_in_first;
wire          soclinux_sdram_bankmachine5_fifo_in_last;
wire          soclinux_sdram_bankmachine5_fifo_out_payload_we;
wire   [20:0] soclinux_sdram_bankmachine5_fifo_out_payload_addr;
wire          soclinux_sdram_bankmachine5_fifo_out_first;
wire          soclinux_sdram_bankmachine5_fifo_out_last;
wire          soclinux_sdram_bankmachine5_sink_sink_valid;
wire          soclinux_sdram_bankmachine5_sink_sink_ready;
wire          soclinux_sdram_bankmachine5_sink_sink_first;
wire          soclinux_sdram_bankmachine5_sink_sink_last;
wire          soclinux_sdram_bankmachine5_sink_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine5_sink_sink_payload_addr;
wire          soclinux_sdram_bankmachine5_source_source_valid;
wire          soclinux_sdram_bankmachine5_source_source_ready;
wire          soclinux_sdram_bankmachine5_source_source_first;
wire          soclinux_sdram_bankmachine5_source_source_last;
wire          soclinux_sdram_bankmachine5_source_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine5_source_source_payload_addr;
wire          soclinux_sdram_bankmachine5_pipe_valid_sink_valid;
wire          soclinux_sdram_bankmachine5_pipe_valid_sink_ready;
wire          soclinux_sdram_bankmachine5_pipe_valid_sink_first;
wire          soclinux_sdram_bankmachine5_pipe_valid_sink_last;
wire          soclinux_sdram_bankmachine5_pipe_valid_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine5_pipe_valid_sink_payload_addr;
reg           soclinux_sdram_bankmachine5_pipe_valid_source_valid = 1'd0;
wire          soclinux_sdram_bankmachine5_pipe_valid_source_ready;
reg           soclinux_sdram_bankmachine5_pipe_valid_source_first = 1'd0;
reg           soclinux_sdram_bankmachine5_pipe_valid_source_last = 1'd0;
reg           soclinux_sdram_bankmachine5_pipe_valid_source_payload_we = 1'd0;
reg    [20:0] soclinux_sdram_bankmachine5_pipe_valid_source_payload_addr = 21'd0;
reg    [13:0] soclinux_sdram_bankmachine5_row = 14'd0;
reg           soclinux_sdram_bankmachine5_row_opened = 1'd0;
wire          soclinux_sdram_bankmachine5_row_hit;
reg           soclinux_sdram_bankmachine5_row_open = 1'd0;
reg           soclinux_sdram_bankmachine5_row_close = 1'd0;
reg           soclinux_sdram_bankmachine5_row_col_n_addr_sel = 1'd0;
wire          soclinux_sdram_bankmachine5_twtpcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine5_twtpcon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine5_twtpcon_count = 3'd0;
wire          soclinux_sdram_bankmachine5_trccon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine5_trccon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine5_trccon_count = 3'd0;
wire          soclinux_sdram_bankmachine5_trascon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine5_trascon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine5_trascon_count = 3'd0;
wire          soclinux_sdram_bankmachine6_req_valid;
wire          soclinux_sdram_bankmachine6_req_ready;
wire          soclinux_sdram_bankmachine6_req_we;
wire   [20:0] soclinux_sdram_bankmachine6_req_addr;
wire          soclinux_sdram_bankmachine6_req_lock;
reg           soclinux_sdram_bankmachine6_req_wdata_ready = 1'd0;
reg           soclinux_sdram_bankmachine6_req_rdata_valid = 1'd0;
wire          soclinux_sdram_bankmachine6_refresh_req;
reg           soclinux_sdram_bankmachine6_refresh_gnt = 1'd0;
reg           soclinux_sdram_bankmachine6_cmd_valid = 1'd0;
reg           soclinux_sdram_bankmachine6_cmd_ready = 1'd0;
reg    [13:0] soclinux_sdram_bankmachine6_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_sdram_bankmachine6_cmd_payload_ba;
reg           soclinux_sdram_bankmachine6_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_bankmachine6_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_bankmachine6_cmd_payload_we = 1'd0;
reg           soclinux_sdram_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg           soclinux_sdram_bankmachine6_cmd_payload_is_read = 1'd0;
reg           soclinux_sdram_bankmachine6_cmd_payload_is_write = 1'd0;
reg           soclinux_sdram_bankmachine6_auto_precharge = 1'd0;
wire          soclinux_sdram_bankmachine6_sink_valid;
wire          soclinux_sdram_bankmachine6_sink_ready;
reg           soclinux_sdram_bankmachine6_sink_first = 1'd0;
reg           soclinux_sdram_bankmachine6_sink_last = 1'd0;
wire          soclinux_sdram_bankmachine6_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine6_sink_payload_addr;
wire          soclinux_sdram_bankmachine6_source_valid;
wire          soclinux_sdram_bankmachine6_source_ready;
wire          soclinux_sdram_bankmachine6_source_first;
wire          soclinux_sdram_bankmachine6_source_last;
wire          soclinux_sdram_bankmachine6_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine6_source_payload_addr;
wire          soclinux_sdram_bankmachine6_syncfifo6_we;
wire          soclinux_sdram_bankmachine6_syncfifo6_writable;
wire          soclinux_sdram_bankmachine6_syncfifo6_re;
wire          soclinux_sdram_bankmachine6_syncfifo6_readable;
wire   [23:0] soclinux_sdram_bankmachine6_syncfifo6_din;
wire   [23:0] soclinux_sdram_bankmachine6_syncfifo6_dout;
reg     [3:0] soclinux_sdram_bankmachine6_level = 4'd0;
reg           soclinux_sdram_bankmachine6_replace = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine6_produce = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine6_consume = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine6_wrport_adr = 3'd0;
wire   [23:0] soclinux_sdram_bankmachine6_wrport_dat_r;
wire          soclinux_sdram_bankmachine6_wrport_we;
wire   [23:0] soclinux_sdram_bankmachine6_wrport_dat_w;
wire          soclinux_sdram_bankmachine6_do_read;
wire    [2:0] soclinux_sdram_bankmachine6_rdport_adr;
wire   [23:0] soclinux_sdram_bankmachine6_rdport_dat_r;
wire          soclinux_sdram_bankmachine6_fifo_in_payload_we;
wire   [20:0] soclinux_sdram_bankmachine6_fifo_in_payload_addr;
wire          soclinux_sdram_bankmachine6_fifo_in_first;
wire          soclinux_sdram_bankmachine6_fifo_in_last;
wire          soclinux_sdram_bankmachine6_fifo_out_payload_we;
wire   [20:0] soclinux_sdram_bankmachine6_fifo_out_payload_addr;
wire          soclinux_sdram_bankmachine6_fifo_out_first;
wire          soclinux_sdram_bankmachine6_fifo_out_last;
wire          soclinux_sdram_bankmachine6_sink_sink_valid;
wire          soclinux_sdram_bankmachine6_sink_sink_ready;
wire          soclinux_sdram_bankmachine6_sink_sink_first;
wire          soclinux_sdram_bankmachine6_sink_sink_last;
wire          soclinux_sdram_bankmachine6_sink_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine6_sink_sink_payload_addr;
wire          soclinux_sdram_bankmachine6_source_source_valid;
wire          soclinux_sdram_bankmachine6_source_source_ready;
wire          soclinux_sdram_bankmachine6_source_source_first;
wire          soclinux_sdram_bankmachine6_source_source_last;
wire          soclinux_sdram_bankmachine6_source_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine6_source_source_payload_addr;
wire          soclinux_sdram_bankmachine6_pipe_valid_sink_valid;
wire          soclinux_sdram_bankmachine6_pipe_valid_sink_ready;
wire          soclinux_sdram_bankmachine6_pipe_valid_sink_first;
wire          soclinux_sdram_bankmachine6_pipe_valid_sink_last;
wire          soclinux_sdram_bankmachine6_pipe_valid_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine6_pipe_valid_sink_payload_addr;
reg           soclinux_sdram_bankmachine6_pipe_valid_source_valid = 1'd0;
wire          soclinux_sdram_bankmachine6_pipe_valid_source_ready;
reg           soclinux_sdram_bankmachine6_pipe_valid_source_first = 1'd0;
reg           soclinux_sdram_bankmachine6_pipe_valid_source_last = 1'd0;
reg           soclinux_sdram_bankmachine6_pipe_valid_source_payload_we = 1'd0;
reg    [20:0] soclinux_sdram_bankmachine6_pipe_valid_source_payload_addr = 21'd0;
reg    [13:0] soclinux_sdram_bankmachine6_row = 14'd0;
reg           soclinux_sdram_bankmachine6_row_opened = 1'd0;
wire          soclinux_sdram_bankmachine6_row_hit;
reg           soclinux_sdram_bankmachine6_row_open = 1'd0;
reg           soclinux_sdram_bankmachine6_row_close = 1'd0;
reg           soclinux_sdram_bankmachine6_row_col_n_addr_sel = 1'd0;
wire          soclinux_sdram_bankmachine6_twtpcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine6_twtpcon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine6_twtpcon_count = 3'd0;
wire          soclinux_sdram_bankmachine6_trccon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine6_trccon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine6_trccon_count = 3'd0;
wire          soclinux_sdram_bankmachine6_trascon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine6_trascon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine6_trascon_count = 3'd0;
wire          soclinux_sdram_bankmachine7_req_valid;
wire          soclinux_sdram_bankmachine7_req_ready;
wire          soclinux_sdram_bankmachine7_req_we;
wire   [20:0] soclinux_sdram_bankmachine7_req_addr;
wire          soclinux_sdram_bankmachine7_req_lock;
reg           soclinux_sdram_bankmachine7_req_wdata_ready = 1'd0;
reg           soclinux_sdram_bankmachine7_req_rdata_valid = 1'd0;
wire          soclinux_sdram_bankmachine7_refresh_req;
reg           soclinux_sdram_bankmachine7_refresh_gnt = 1'd0;
reg           soclinux_sdram_bankmachine7_cmd_valid = 1'd0;
reg           soclinux_sdram_bankmachine7_cmd_ready = 1'd0;
reg    [13:0] soclinux_sdram_bankmachine7_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_sdram_bankmachine7_cmd_payload_ba;
reg           soclinux_sdram_bankmachine7_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_bankmachine7_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_bankmachine7_cmd_payload_we = 1'd0;
reg           soclinux_sdram_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg           soclinux_sdram_bankmachine7_cmd_payload_is_read = 1'd0;
reg           soclinux_sdram_bankmachine7_cmd_payload_is_write = 1'd0;
reg           soclinux_sdram_bankmachine7_auto_precharge = 1'd0;
wire          soclinux_sdram_bankmachine7_sink_valid;
wire          soclinux_sdram_bankmachine7_sink_ready;
reg           soclinux_sdram_bankmachine7_sink_first = 1'd0;
reg           soclinux_sdram_bankmachine7_sink_last = 1'd0;
wire          soclinux_sdram_bankmachine7_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine7_sink_payload_addr;
wire          soclinux_sdram_bankmachine7_source_valid;
wire          soclinux_sdram_bankmachine7_source_ready;
wire          soclinux_sdram_bankmachine7_source_first;
wire          soclinux_sdram_bankmachine7_source_last;
wire          soclinux_sdram_bankmachine7_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine7_source_payload_addr;
wire          soclinux_sdram_bankmachine7_syncfifo7_we;
wire          soclinux_sdram_bankmachine7_syncfifo7_writable;
wire          soclinux_sdram_bankmachine7_syncfifo7_re;
wire          soclinux_sdram_bankmachine7_syncfifo7_readable;
wire   [23:0] soclinux_sdram_bankmachine7_syncfifo7_din;
wire   [23:0] soclinux_sdram_bankmachine7_syncfifo7_dout;
reg     [3:0] soclinux_sdram_bankmachine7_level = 4'd0;
reg           soclinux_sdram_bankmachine7_replace = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine7_produce = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine7_consume = 3'd0;
reg     [2:0] soclinux_sdram_bankmachine7_wrport_adr = 3'd0;
wire   [23:0] soclinux_sdram_bankmachine7_wrport_dat_r;
wire          soclinux_sdram_bankmachine7_wrport_we;
wire   [23:0] soclinux_sdram_bankmachine7_wrport_dat_w;
wire          soclinux_sdram_bankmachine7_do_read;
wire    [2:0] soclinux_sdram_bankmachine7_rdport_adr;
wire   [23:0] soclinux_sdram_bankmachine7_rdport_dat_r;
wire          soclinux_sdram_bankmachine7_fifo_in_payload_we;
wire   [20:0] soclinux_sdram_bankmachine7_fifo_in_payload_addr;
wire          soclinux_sdram_bankmachine7_fifo_in_first;
wire          soclinux_sdram_bankmachine7_fifo_in_last;
wire          soclinux_sdram_bankmachine7_fifo_out_payload_we;
wire   [20:0] soclinux_sdram_bankmachine7_fifo_out_payload_addr;
wire          soclinux_sdram_bankmachine7_fifo_out_first;
wire          soclinux_sdram_bankmachine7_fifo_out_last;
wire          soclinux_sdram_bankmachine7_sink_sink_valid;
wire          soclinux_sdram_bankmachine7_sink_sink_ready;
wire          soclinux_sdram_bankmachine7_sink_sink_first;
wire          soclinux_sdram_bankmachine7_sink_sink_last;
wire          soclinux_sdram_bankmachine7_sink_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine7_sink_sink_payload_addr;
wire          soclinux_sdram_bankmachine7_source_source_valid;
wire          soclinux_sdram_bankmachine7_source_source_ready;
wire          soclinux_sdram_bankmachine7_source_source_first;
wire          soclinux_sdram_bankmachine7_source_source_last;
wire          soclinux_sdram_bankmachine7_source_source_payload_we;
wire   [20:0] soclinux_sdram_bankmachine7_source_source_payload_addr;
wire          soclinux_sdram_bankmachine7_pipe_valid_sink_valid;
wire          soclinux_sdram_bankmachine7_pipe_valid_sink_ready;
wire          soclinux_sdram_bankmachine7_pipe_valid_sink_first;
wire          soclinux_sdram_bankmachine7_pipe_valid_sink_last;
wire          soclinux_sdram_bankmachine7_pipe_valid_sink_payload_we;
wire   [20:0] soclinux_sdram_bankmachine7_pipe_valid_sink_payload_addr;
reg           soclinux_sdram_bankmachine7_pipe_valid_source_valid = 1'd0;
wire          soclinux_sdram_bankmachine7_pipe_valid_source_ready;
reg           soclinux_sdram_bankmachine7_pipe_valid_source_first = 1'd0;
reg           soclinux_sdram_bankmachine7_pipe_valid_source_last = 1'd0;
reg           soclinux_sdram_bankmachine7_pipe_valid_source_payload_we = 1'd0;
reg    [20:0] soclinux_sdram_bankmachine7_pipe_valid_source_payload_addr = 21'd0;
reg    [13:0] soclinux_sdram_bankmachine7_row = 14'd0;
reg           soclinux_sdram_bankmachine7_row_opened = 1'd0;
wire          soclinux_sdram_bankmachine7_row_hit;
reg           soclinux_sdram_bankmachine7_row_open = 1'd0;
reg           soclinux_sdram_bankmachine7_row_close = 1'd0;
reg           soclinux_sdram_bankmachine7_row_col_n_addr_sel = 1'd0;
wire          soclinux_sdram_bankmachine7_twtpcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine7_twtpcon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine7_twtpcon_count = 3'd0;
wire          soclinux_sdram_bankmachine7_trccon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine7_trccon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine7_trccon_count = 3'd0;
wire          soclinux_sdram_bankmachine7_trascon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_bankmachine7_trascon_ready = 1'd0;
reg     [2:0] soclinux_sdram_bankmachine7_trascon_count = 3'd0;
wire          soclinux_sdram_ras_allowed;
wire          soclinux_sdram_cas_allowed;
wire    [1:0] soclinux_sdram_rdcmdphase;
wire    [1:0] soclinux_sdram_wrcmdphase;
reg           soclinux_sdram_choose_cmd_want_reads = 1'd0;
reg           soclinux_sdram_choose_cmd_want_writes = 1'd0;
reg           soclinux_sdram_choose_cmd_want_cmds = 1'd0;
reg           soclinux_sdram_choose_cmd_want_activates = 1'd0;
wire          soclinux_sdram_choose_cmd_cmd_valid;
reg           soclinux_sdram_choose_cmd_cmd_ready = 1'd0;
wire   [13:0] soclinux_sdram_choose_cmd_cmd_payload_a;
wire    [2:0] soclinux_sdram_choose_cmd_cmd_payload_ba;
reg           soclinux_sdram_choose_cmd_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_choose_cmd_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_choose_cmd_cmd_payload_we = 1'd0;
wire          soclinux_sdram_choose_cmd_cmd_payload_is_cmd;
wire          soclinux_sdram_choose_cmd_cmd_payload_is_read;
wire          soclinux_sdram_choose_cmd_cmd_payload_is_write;
reg     [7:0] soclinux_sdram_choose_cmd_valids = 8'd0;
wire    [7:0] soclinux_sdram_choose_cmd_request;
reg     [2:0] soclinux_sdram_choose_cmd_grant = 3'd0;
wire          soclinux_sdram_choose_cmd_ce;
reg           soclinux_sdram_choose_req_want_reads = 1'd0;
reg           soclinux_sdram_choose_req_want_writes = 1'd0;
reg           soclinux_sdram_choose_req_want_cmds = 1'd0;
reg           soclinux_sdram_choose_req_want_activates = 1'd0;
wire          soclinux_sdram_choose_req_cmd_valid;
reg           soclinux_sdram_choose_req_cmd_ready = 1'd0;
wire   [13:0] soclinux_sdram_choose_req_cmd_payload_a;
wire    [2:0] soclinux_sdram_choose_req_cmd_payload_ba;
reg           soclinux_sdram_choose_req_cmd_payload_cas = 1'd0;
reg           soclinux_sdram_choose_req_cmd_payload_ras = 1'd0;
reg           soclinux_sdram_choose_req_cmd_payload_we = 1'd0;
wire          soclinux_sdram_choose_req_cmd_payload_is_cmd;
wire          soclinux_sdram_choose_req_cmd_payload_is_read;
wire          soclinux_sdram_choose_req_cmd_payload_is_write;
reg     [7:0] soclinux_sdram_choose_req_valids = 8'd0;
wire    [7:0] soclinux_sdram_choose_req_request;
reg     [2:0] soclinux_sdram_choose_req_grant = 3'd0;
wire          soclinux_sdram_choose_req_ce;
reg    [13:0] soclinux_sdram_nop_a = 14'd0;
reg     [2:0] soclinux_sdram_nop_ba = 3'd0;
reg     [1:0] soclinux_sdram_steerer_sel0 = 2'd0;
reg     [1:0] soclinux_sdram_steerer_sel1 = 2'd0;
reg     [1:0] soclinux_sdram_steerer_sel2 = 2'd0;
reg     [1:0] soclinux_sdram_steerer_sel3 = 2'd0;
reg           soclinux_sdram_steerer0 = 1'd1;
reg           soclinux_sdram_steerer1 = 1'd1;
reg           soclinux_sdram_steerer2 = 1'd1;
reg           soclinux_sdram_steerer3 = 1'd1;
reg           soclinux_sdram_steerer4 = 1'd1;
reg           soclinux_sdram_steerer5 = 1'd1;
reg           soclinux_sdram_steerer6 = 1'd1;
reg           soclinux_sdram_steerer7 = 1'd1;
wire          soclinux_sdram_trrdcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_trrdcon_ready = 1'd0;
reg           soclinux_sdram_trrdcon_count = 1'd0;
wire          soclinux_sdram_tfawcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_tfawcon_ready = 1'd1;
wire    [2:0] soclinux_sdram_tfawcon_count;
reg     [4:0] soclinux_sdram_tfawcon_window = 5'd0;
wire          soclinux_sdram_tccdcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_tccdcon_ready = 1'd0;
reg           soclinux_sdram_tccdcon_count = 1'd0;
wire          soclinux_sdram_twtrcon_valid;
(* dont_touch = "true" *)
reg           soclinux_sdram_twtrcon_ready = 1'd0;
reg     [2:0] soclinux_sdram_twtrcon_count = 3'd0;
wire          soclinux_sdram_read_available;
wire          soclinux_sdram_write_available;
reg           soclinux_sdram_en0 = 1'd0;
wire          soclinux_sdram_max_time0;
reg     [4:0] soclinux_sdram_time0 = 5'd0;
reg           soclinux_sdram_en1 = 1'd0;
wire          soclinux_sdram_max_time1;
reg     [3:0] soclinux_sdram_time1 = 4'd0;
wire          soclinux_sdram_go_to_refresh;
wire          soclinux_port_flush;
reg           soclinux_port_cmd_valid = 1'd0;
wire          soclinux_port_cmd_ready;
wire          soclinux_port_cmd_last;
wire          soclinux_port_cmd_payload_we;
wire   [23:0] soclinux_port_cmd_payload_addr;
reg           soclinux_port_wdata_valid = 1'd0;
wire          soclinux_port_wdata_ready;
wire  [511:0] soclinux_port_wdata_payload_data;
wire   [63:0] soclinux_port_wdata_payload_we;
wire          soclinux_port_rdata_valid;
wire          soclinux_port_rdata_ready;
wire  [511:0] soclinux_port_rdata_payload_data;
wire   [29:0] soclinux_wb_sdram_adr;
wire   [31:0] soclinux_wb_sdram_dat_w;
reg    [31:0] soclinux_wb_sdram_dat_r = 32'd0;
wire    [3:0] soclinux_wb_sdram_sel;
wire          soclinux_wb_sdram_cyc;
wire          soclinux_wb_sdram_stb;
reg           soclinux_wb_sdram_ack = 1'd0;
wire          soclinux_wb_sdram_we;
wire    [2:0] soclinux_wb_sdram_cti;
wire    [1:0] soclinux_wb_sdram_bte;
reg           soclinux_wb_sdram_err = 1'd0;
wire   [29:0] soclinux_interface_adr;
wire  [511:0] soclinux_interface_dat_w;
reg   [511:0] soclinux_interface_dat_r = 512'd0;
wire   [63:0] soclinux_interface_sel;
reg           soclinux_interface_cyc = 1'd0;
reg           soclinux_interface_stb = 1'd0;
reg           soclinux_interface_ack = 1'd0;
reg           soclinux_interface_we = 1'd0;
wire    [6:0] soclinux_data_port_adr;
wire  [511:0] soclinux_data_port_dat_r;
reg    [63:0] soclinux_data_port_we = 64'd0;
reg   [511:0] soclinux_data_port_dat_w = 512'd0;
reg           soclinux_write_from_slave = 1'd0;
reg     [3:0] soclinux_adr_offset_r = 4'd0;
wire    [6:0] soclinux_tag_port_adr;
wire   [27:0] soclinux_tag_port_dat_r;
reg           soclinux_tag_port_we = 1'd0;
wire   [27:0] soclinux_tag_port_dat_w;
wire   [26:0] soclinux_tag_do_tag;
wire          soclinux_tag_do_dirty;
wire   [26:0] soclinux_tag_di_tag;
reg           soclinux_tag_di_dirty = 1'd0;
reg           soclinux_word_clr = 1'd0;
reg           soclinux_word_inc = 1'd0;
reg           soclinux_aborted = 1'd0;
reg           soclinux_is_ongoing = 1'd0;
reg           ethphy_mode0 = 1'd0;
wire          ethphy_mode_status;
wire          ethphy_mode_we;
reg           ethphy_mode_re = 1'd0;
reg           ethphy_mode1 = 1'd0;
reg           ethphy_update_mode = 1'd0;
wire          ethphy_eth_tick;
reg     [9:0] ethphy_eth_counter = 10'd0;
wire          ethphy_sys_tick;
wire          ethphy_i;
wire          ethphy_o;
reg           ethphy_toggle_i = 1'd0;
wire          ethphy_toggle_o;
reg           ethphy_toggle_o_r = 1'd0;
reg    [23:0] ethphy_sys_counter = 24'd0;
reg           ethphy_sys_counter_reset = 1'd0;
reg           ethphy_sys_counter_ce = 1'd0;
reg           ethphy_reset_storage = 1'd0;
reg           ethphy_reset_re = 1'd0;
(* dont_touch = "true" *)
wire          eth_rx_clk;
wire          eth_rx_rst;
(* dont_touch = "true" *)
wire          eth_tx_clk;
wire          eth_tx_rst;
reg           ethphy_eth_tx_clk = 1'd0;
wire          ethphy_reset0;
wire          ethphy_reset1;
reg     [8:0] ethphy_counter = 9'd0;
wire          ethphy_counter_done;
wire          ethphy_counter_ce;
wire          ethphy_liteethphygmiimiitx_sink_sink_valid0;
wire          ethphy_liteethphygmiimiitx_sink_sink_ready0;
wire          ethphy_liteethphygmiimiitx_sink_sink_first0;
wire          ethphy_liteethphygmiimiitx_sink_sink_last0;
wire    [7:0] ethphy_liteethphygmiimiitx_sink_sink_payload_data0;
wire          ethphy_liteethphygmiimiitx_sink_sink_payload_last_be0;
wire          ethphy_liteethphygmiimiitx_sink_sink_payload_error0;
reg           ethphy_liteethphygmiimiitx_gmii_tx_pads_tx_er = 1'd0;
reg           ethphy_liteethphygmiimiitx_gmii_tx_pads_tx_en = 1'd0;
reg     [7:0] ethphy_liteethphygmiimiitx_gmii_tx_pads_tx_data = 8'd0;
wire          ethphy_liteethphygmiimiitx_gmii_tx_sink_valid;
reg           ethphy_liteethphygmiimiitx_gmii_tx_sink_ready = 1'd0;
wire          ethphy_liteethphygmiimiitx_gmii_tx_sink_first;
wire          ethphy_liteethphygmiimiitx_gmii_tx_sink_last;
wire    [7:0] ethphy_liteethphygmiimiitx_gmii_tx_sink_payload_data;
wire          ethphy_liteethphygmiimiitx_gmii_tx_sink_payload_last_be;
wire          ethphy_liteethphygmiimiitx_gmii_tx_sink_payload_error;
reg           ethphy_liteethphygmiimiitx_mii_tx_pads_tx_er = 1'd0;
reg           ethphy_liteethphygmiimiitx_mii_tx_pads_tx_en = 1'd0;
reg     [7:0] ethphy_liteethphygmiimiitx_mii_tx_pads_tx_data = 8'd0;
wire          ethphy_liteethphygmiimiitx_sink_sink_valid1;
wire          ethphy_liteethphygmiimiitx_sink_sink_ready1;
wire          ethphy_liteethphygmiimiitx_sink_sink_first1;
wire          ethphy_liteethphygmiimiitx_sink_sink_last1;
wire    [7:0] ethphy_liteethphygmiimiitx_sink_sink_payload_data1;
wire          ethphy_liteethphygmiimiitx_sink_sink_payload_last_be1;
wire          ethphy_liteethphygmiimiitx_sink_sink_payload_error1;
wire          ethphy_liteethphygmiimiitx_converter_sink_valid;
wire          ethphy_liteethphygmiimiitx_converter_sink_ready;
reg           ethphy_liteethphygmiimiitx_converter_sink_first = 1'd0;
reg           ethphy_liteethphygmiimiitx_converter_sink_last = 1'd0;
wire    [7:0] ethphy_liteethphygmiimiitx_converter_sink_payload_data;
wire          ethphy_liteethphygmiimiitx_converter_source_valid;
wire          ethphy_liteethphygmiimiitx_converter_source_ready;
wire          ethphy_liteethphygmiimiitx_converter_source_first;
wire          ethphy_liteethphygmiimiitx_converter_source_last;
wire    [3:0] ethphy_liteethphygmiimiitx_converter_source_payload_data;
wire          ethphy_liteethphygmiimiitx_converter_converter_sink_valid;
wire          ethphy_liteethphygmiimiitx_converter_converter_sink_ready;
wire          ethphy_liteethphygmiimiitx_converter_converter_sink_first;
wire          ethphy_liteethphygmiimiitx_converter_converter_sink_last;
reg     [7:0] ethphy_liteethphygmiimiitx_converter_converter_sink_payload_data = 8'd0;
wire          ethphy_liteethphygmiimiitx_converter_converter_source_valid;
wire          ethphy_liteethphygmiimiitx_converter_converter_source_ready;
wire          ethphy_liteethphygmiimiitx_converter_converter_source_first;
wire          ethphy_liteethphygmiimiitx_converter_converter_source_last;
reg     [3:0] ethphy_liteethphygmiimiitx_converter_converter_source_payload_data = 4'd0;
wire          ethphy_liteethphygmiimiitx_converter_converter_source_payload_valid_token_count;
reg           ethphy_liteethphygmiimiitx_converter_converter_mux = 1'd0;
wire          ethphy_liteethphygmiimiitx_converter_converter_first;
wire          ethphy_liteethphygmiimiitx_converter_converter_last;
wire          ethphy_liteethphygmiimiitx_converter_source_source_valid;
wire          ethphy_liteethphygmiimiitx_converter_source_source_ready;
wire          ethphy_liteethphygmiimiitx_converter_source_source_first;
wire          ethphy_liteethphygmiimiitx_converter_source_source_last;
wire    [3:0] ethphy_liteethphygmiimiitx_converter_source_source_payload_data;
wire          ethphy_liteethphygmiimiitx_demux_sink_valid;
reg           ethphy_liteethphygmiimiitx_demux_sink_ready = 1'd0;
wire          ethphy_liteethphygmiimiitx_demux_sink_first;
wire          ethphy_liteethphygmiimiitx_demux_sink_last;
wire    [7:0] ethphy_liteethphygmiimiitx_demux_sink_payload_data;
wire          ethphy_liteethphygmiimiitx_demux_sink_payload_last_be;
wire          ethphy_liteethphygmiimiitx_demux_sink_payload_error;
reg           ethphy_liteethphygmiimiitx_demux_endpoint0_source_valid = 1'd0;
wire          ethphy_liteethphygmiimiitx_demux_endpoint0_source_ready;
reg           ethphy_liteethphygmiimiitx_demux_endpoint0_source_first = 1'd0;
reg           ethphy_liteethphygmiimiitx_demux_endpoint0_source_last = 1'd0;
reg     [7:0] ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_data = 8'd0;
reg           ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_last_be = 1'd0;
reg           ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_error = 1'd0;
reg           ethphy_liteethphygmiimiitx_demux_endpoint1_source_valid = 1'd0;
wire          ethphy_liteethphygmiimiitx_demux_endpoint1_source_ready;
reg           ethphy_liteethphygmiimiitx_demux_endpoint1_source_first = 1'd0;
reg           ethphy_liteethphygmiimiitx_demux_endpoint1_source_last = 1'd0;
reg     [7:0] ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_data = 8'd0;
reg           ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_last_be = 1'd0;
reg           ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_error = 1'd0;
wire          ethphy_liteethphygmiimiitx_demux_sel;
wire          ethphy_liteethphygmiimiirx_source_source_valid0;
wire          ethphy_liteethphygmiimiirx_source_source_ready0;
wire          ethphy_liteethphygmiimiirx_source_source_first0;
wire          ethphy_liteethphygmiimiirx_source_source_last0;
wire    [7:0] ethphy_liteethphygmiimiirx_source_source_payload_data0;
wire          ethphy_liteethphygmiimiirx_source_source_payload_last_be0;
wire          ethphy_liteethphygmiimiirx_source_source_payload_error0;
reg           ethphy_liteethphygmiimiirx_pads_d_rx_dv = 1'd0;
reg     [7:0] ethphy_liteethphygmiimiirx_pads_d_rx_data = 8'd0;
reg           ethphy_liteethphygmiimiirx_gmii_rx_source_valid = 1'd0;
wire          ethphy_liteethphygmiimiirx_gmii_rx_source_ready;
reg           ethphy_liteethphygmiimiirx_gmii_rx_source_first = 1'd0;
wire          ethphy_liteethphygmiimiirx_gmii_rx_source_last;
reg     [7:0] ethphy_liteethphygmiimiirx_gmii_rx_source_payload_data = 8'd0;
reg           ethphy_liteethphygmiimiirx_gmii_rx_source_payload_last_be = 1'd0;
reg           ethphy_liteethphygmiimiirx_gmii_rx_source_payload_error = 1'd0;
reg           ethphy_liteethphygmiimiirx_gmii_rx_dv_d = 1'd0;
wire          ethphy_liteethphygmiimiirx_source_source_valid1;
wire          ethphy_liteethphygmiimiirx_source_source_ready1;
wire          ethphy_liteethphygmiimiirx_source_source_first1;
wire          ethphy_liteethphygmiimiirx_source_source_last1;
wire    [7:0] ethphy_liteethphygmiimiirx_source_source_payload_data1;
reg           ethphy_liteethphygmiimiirx_source_source_payload_last_be1 = 1'd0;
reg           ethphy_liteethphygmiimiirx_source_source_payload_error1 = 1'd0;
reg           ethphy_liteethphygmiimiirx_converter_sink_valid = 1'd0;
wire          ethphy_liteethphygmiimiirx_converter_sink_ready;
reg           ethphy_liteethphygmiimiirx_converter_sink_first = 1'd0;
wire          ethphy_liteethphygmiimiirx_converter_sink_last;
reg     [3:0] ethphy_liteethphygmiimiirx_converter_sink_payload_data = 4'd0;
wire          ethphy_liteethphygmiimiirx_converter_source_valid;
wire          ethphy_liteethphygmiimiirx_converter_source_ready;
wire          ethphy_liteethphygmiimiirx_converter_source_first;
wire          ethphy_liteethphygmiimiirx_converter_source_last;
reg     [7:0] ethphy_liteethphygmiimiirx_converter_source_payload_data = 8'd0;
wire          ethphy_liteethphygmiimiirx_converter_converter_sink_valid;
wire          ethphy_liteethphygmiimiirx_converter_converter_sink_ready;
wire          ethphy_liteethphygmiimiirx_converter_converter_sink_first;
wire          ethphy_liteethphygmiimiirx_converter_converter_sink_last;
wire    [3:0] ethphy_liteethphygmiimiirx_converter_converter_sink_payload_data;
wire          ethphy_liteethphygmiimiirx_converter_converter_source_valid;
wire          ethphy_liteethphygmiimiirx_converter_converter_source_ready;
reg           ethphy_liteethphygmiimiirx_converter_converter_source_first = 1'd0;
reg           ethphy_liteethphygmiimiirx_converter_converter_source_last = 1'd0;
reg     [7:0] ethphy_liteethphygmiimiirx_converter_converter_source_payload_data = 8'd0;
reg     [1:0] ethphy_liteethphygmiimiirx_converter_converter_source_payload_valid_token_count = 2'd0;
reg           ethphy_liteethphygmiimiirx_converter_converter_demux = 1'd0;
wire          ethphy_liteethphygmiimiirx_converter_converter_load_part;
reg           ethphy_liteethphygmiimiirx_converter_converter_strobe_all = 1'd0;
wire          ethphy_liteethphygmiimiirx_converter_source_source_valid;
wire          ethphy_liteethphygmiimiirx_converter_source_source_ready;
wire          ethphy_liteethphygmiimiirx_converter_source_source_first;
wire          ethphy_liteethphygmiimiirx_converter_source_source_last;
wire    [7:0] ethphy_liteethphygmiimiirx_converter_source_source_payload_data;
reg           ethphy_liteethphygmiimiirx_converter_reset = 1'd0;
reg           ethphy_liteethphygmiimiirx_mux_source_valid = 1'd0;
wire          ethphy_liteethphygmiimiirx_mux_source_ready;
reg           ethphy_liteethphygmiimiirx_mux_source_first = 1'd0;
reg           ethphy_liteethphygmiimiirx_mux_source_last = 1'd0;
reg     [7:0] ethphy_liteethphygmiimiirx_mux_source_payload_data = 8'd0;
reg           ethphy_liteethphygmiimiirx_mux_source_payload_last_be = 1'd0;
reg           ethphy_liteethphygmiimiirx_mux_source_payload_error = 1'd0;
wire          ethphy_liteethphygmiimiirx_mux_endpoint0_sink_valid;
reg           ethphy_liteethphygmiimiirx_mux_endpoint0_sink_ready = 1'd0;
wire          ethphy_liteethphygmiimiirx_mux_endpoint0_sink_first;
wire          ethphy_liteethphygmiimiirx_mux_endpoint0_sink_last;
wire    [7:0] ethphy_liteethphygmiimiirx_mux_endpoint0_sink_payload_data;
wire          ethphy_liteethphygmiimiirx_mux_endpoint0_sink_payload_last_be;
wire          ethphy_liteethphygmiimiirx_mux_endpoint0_sink_payload_error;
wire          ethphy_liteethphygmiimiirx_mux_endpoint1_sink_valid;
reg           ethphy_liteethphygmiimiirx_mux_endpoint1_sink_ready = 1'd0;
wire          ethphy_liteethphygmiimiirx_mux_endpoint1_sink_first;
wire          ethphy_liteethphygmiimiirx_mux_endpoint1_sink_last;
wire    [7:0] ethphy_liteethphygmiimiirx_mux_endpoint1_sink_payload_data;
wire          ethphy_liteethphygmiimiirx_mux_endpoint1_sink_payload_last_be;
wire          ethphy_liteethphygmiimiirx_mux_endpoint1_sink_payload_error;
wire          ethphy_liteethphygmiimiirx_mux_sel;
wire          ethphy_mdc;
wire          ethphy_oe;
wire          ethphy_w;
reg     [2:0] ethphy__w_storage = 3'd0;
reg           ethphy__w_re = 1'd0;
reg           ethphy_r = 1'd0;
reg           ethphy__r_status = 1'd0;
wire          ethphy__r_we;
reg           ethphy__r_re = 1'd0;
wire          ethphy_data_w;
wire          ethphy_data_oe;
wire          ethphy_data_r;
wire          soclinux_ethmac_sink_valid;
wire          soclinux_ethmac_sink_ready;
wire          soclinux_ethmac_sink_first;
wire          soclinux_ethmac_sink_last;
wire   [31:0] soclinux_ethmac_sink_payload_data;
wire    [3:0] soclinux_ethmac_sink_payload_last_be;
wire    [3:0] soclinux_ethmac_sink_payload_error;
wire          soclinux_ethmac_source_valid;
wire          soclinux_ethmac_source_ready;
wire          soclinux_ethmac_source_first;
wire          soclinux_ethmac_source_last;
wire   [31:0] soclinux_ethmac_source_payload_data;
wire    [3:0] soclinux_ethmac_source_payload_last_be;
wire    [3:0] soclinux_ethmac_source_payload_error;
reg           soclinux_ethmac_status = 1'd1;
wire          soclinux_ethmac_we;
reg           soclinux_ethmac_re = 1'd0;
wire          soclinux_ethmac_tx_cdc_sink_sink_valid;
wire          soclinux_ethmac_tx_cdc_sink_sink_ready;
wire          soclinux_ethmac_tx_cdc_sink_sink_first;
wire          soclinux_ethmac_tx_cdc_sink_sink_last;
wire   [31:0] soclinux_ethmac_tx_cdc_sink_sink_payload_data;
wire    [3:0] soclinux_ethmac_tx_cdc_sink_sink_payload_last_be;
wire    [3:0] soclinux_ethmac_tx_cdc_sink_sink_payload_error;
wire          soclinux_ethmac_tx_cdc_source_source_valid;
wire          soclinux_ethmac_tx_cdc_source_source_ready;
wire          soclinux_ethmac_tx_cdc_source_source_first;
wire          soclinux_ethmac_tx_cdc_source_source_last;
wire   [31:0] soclinux_ethmac_tx_cdc_source_source_payload_data;
wire    [3:0] soclinux_ethmac_tx_cdc_source_source_payload_last_be;
wire    [3:0] soclinux_ethmac_tx_cdc_source_source_payload_error;
wire          soclinux_ethmac_tx_cdc_cdc_sink_valid;
wire          soclinux_ethmac_tx_cdc_cdc_sink_ready;
wire          soclinux_ethmac_tx_cdc_cdc_sink_first;
wire          soclinux_ethmac_tx_cdc_cdc_sink_last;
wire   [31:0] soclinux_ethmac_tx_cdc_cdc_sink_payload_data;
wire    [3:0] soclinux_ethmac_tx_cdc_cdc_sink_payload_last_be;
wire    [3:0] soclinux_ethmac_tx_cdc_cdc_sink_payload_error;
wire          soclinux_ethmac_tx_cdc_cdc_source_valid;
wire          soclinux_ethmac_tx_cdc_cdc_source_ready;
wire          soclinux_ethmac_tx_cdc_cdc_source_first;
wire          soclinux_ethmac_tx_cdc_cdc_source_last;
wire   [31:0] soclinux_ethmac_tx_cdc_cdc_source_payload_data;
wire    [3:0] soclinux_ethmac_tx_cdc_cdc_source_payload_last_be;
wire    [3:0] soclinux_ethmac_tx_cdc_cdc_source_payload_error;
wire          soclinux_ethmac_tx_cdc_cdc_asyncfifo_we;
wire          soclinux_ethmac_tx_cdc_cdc_asyncfifo_writable;
wire          soclinux_ethmac_tx_cdc_cdc_asyncfifo_re;
wire          soclinux_ethmac_tx_cdc_cdc_asyncfifo_readable;
wire   [41:0] soclinux_ethmac_tx_cdc_cdc_asyncfifo_din;
wire   [41:0] soclinux_ethmac_tx_cdc_cdc_asyncfifo_dout;
wire          soclinux_ethmac_tx_cdc_cdc_graycounter0_ce;
(* dont_touch = "true" *)
reg     [5:0] soclinux_ethmac_tx_cdc_cdc_graycounter0_q = 6'd0;
wire    [5:0] soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next;
reg     [5:0] soclinux_ethmac_tx_cdc_cdc_graycounter0_q_binary = 6'd0;
reg     [5:0] soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next_binary = 6'd0;
wire          soclinux_ethmac_tx_cdc_cdc_graycounter1_ce;
(* dont_touch = "true" *)
reg     [5:0] soclinux_ethmac_tx_cdc_cdc_graycounter1_q = 6'd0;
wire    [5:0] soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next;
reg     [5:0] soclinux_ethmac_tx_cdc_cdc_graycounter1_q_binary = 6'd0;
reg     [5:0] soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next_binary = 6'd0;
wire    [5:0] soclinux_ethmac_tx_cdc_cdc_produce_rdomain;
wire    [5:0] soclinux_ethmac_tx_cdc_cdc_consume_wdomain;
wire    [4:0] soclinux_ethmac_tx_cdc_cdc_wrport_adr;
wire   [41:0] soclinux_ethmac_tx_cdc_cdc_wrport_dat_r;
wire          soclinux_ethmac_tx_cdc_cdc_wrport_we;
wire   [41:0] soclinux_ethmac_tx_cdc_cdc_wrport_dat_w;
wire    [4:0] soclinux_ethmac_tx_cdc_cdc_rdport_adr;
wire   [41:0] soclinux_ethmac_tx_cdc_cdc_rdport_dat_r;
wire   [31:0] soclinux_ethmac_tx_cdc_cdc_fifo_in_payload_data;
wire    [3:0] soclinux_ethmac_tx_cdc_cdc_fifo_in_payload_last_be;
wire    [3:0] soclinux_ethmac_tx_cdc_cdc_fifo_in_payload_error;
wire          soclinux_ethmac_tx_cdc_cdc_fifo_in_first;
wire          soclinux_ethmac_tx_cdc_cdc_fifo_in_last;
wire   [31:0] soclinux_ethmac_tx_cdc_cdc_fifo_out_payload_data;
wire    [3:0] soclinux_ethmac_tx_cdc_cdc_fifo_out_payload_last_be;
wire    [3:0] soclinux_ethmac_tx_cdc_cdc_fifo_out_payload_error;
wire          soclinux_ethmac_tx_cdc_cdc_fifo_out_first;
wire          soclinux_ethmac_tx_cdc_cdc_fifo_out_last;
wire          soclinux_ethmac_tx_converter_sink_valid;
wire          soclinux_ethmac_tx_converter_sink_ready;
wire          soclinux_ethmac_tx_converter_sink_first;
wire          soclinux_ethmac_tx_converter_sink_last;
wire   [31:0] soclinux_ethmac_tx_converter_sink_payload_data;
wire    [3:0] soclinux_ethmac_tx_converter_sink_payload_last_be;
wire    [3:0] soclinux_ethmac_tx_converter_sink_payload_error;
wire          soclinux_ethmac_tx_converter_source_valid;
wire          soclinux_ethmac_tx_converter_source_ready;
wire          soclinux_ethmac_tx_converter_source_first;
wire          soclinux_ethmac_tx_converter_source_last;
wire    [7:0] soclinux_ethmac_tx_converter_source_payload_data;
wire          soclinux_ethmac_tx_converter_source_payload_last_be;
wire          soclinux_ethmac_tx_converter_source_payload_error;
wire          soclinux_ethmac_tx_converter_converter_sink_valid;
wire          soclinux_ethmac_tx_converter_converter_sink_ready;
wire          soclinux_ethmac_tx_converter_converter_sink_first;
wire          soclinux_ethmac_tx_converter_converter_sink_last;
reg    [39:0] soclinux_ethmac_tx_converter_converter_sink_payload_data = 40'd0;
wire          soclinux_ethmac_tx_converter_converter_source_valid;
wire          soclinux_ethmac_tx_converter_converter_source_ready;
wire          soclinux_ethmac_tx_converter_converter_source_first;
wire          soclinux_ethmac_tx_converter_converter_source_last;
reg     [9:0] soclinux_ethmac_tx_converter_converter_source_payload_data = 10'd0;
wire          soclinux_ethmac_tx_converter_converter_source_payload_valid_token_count;
reg     [1:0] soclinux_ethmac_tx_converter_converter_mux = 2'd0;
wire          soclinux_ethmac_tx_converter_converter_first;
wire          soclinux_ethmac_tx_converter_converter_last;
wire          soclinux_ethmac_tx_converter_source_source_valid;
wire          soclinux_ethmac_tx_converter_source_source_ready;
wire          soclinux_ethmac_tx_converter_source_source_first;
wire          soclinux_ethmac_tx_converter_source_source_last;
wire    [9:0] soclinux_ethmac_tx_converter_source_source_payload_data;
wire          soclinux_ethmac_tx_last_be_sink_valid;
reg           soclinux_ethmac_tx_last_be_sink_ready = 1'd0;
wire          soclinux_ethmac_tx_last_be_sink_first;
wire          soclinux_ethmac_tx_last_be_sink_last;
wire    [7:0] soclinux_ethmac_tx_last_be_sink_payload_data;
wire          soclinux_ethmac_tx_last_be_sink_payload_last_be;
wire          soclinux_ethmac_tx_last_be_sink_payload_error;
reg           soclinux_ethmac_tx_last_be_source_valid = 1'd0;
wire          soclinux_ethmac_tx_last_be_source_ready;
reg           soclinux_ethmac_tx_last_be_source_first = 1'd0;
reg           soclinux_ethmac_tx_last_be_source_last = 1'd0;
reg     [7:0] soclinux_ethmac_tx_last_be_source_payload_data = 8'd0;
reg           soclinux_ethmac_tx_last_be_source_payload_last_be = 1'd0;
reg           soclinux_ethmac_tx_last_be_source_payload_error = 1'd0;
wire          soclinux_ethmac_tx_padding_sink_valid;
reg           soclinux_ethmac_tx_padding_sink_ready = 1'd0;
wire          soclinux_ethmac_tx_padding_sink_first;
wire          soclinux_ethmac_tx_padding_sink_last;
wire    [7:0] soclinux_ethmac_tx_padding_sink_payload_data;
wire          soclinux_ethmac_tx_padding_sink_payload_last_be;
wire          soclinux_ethmac_tx_padding_sink_payload_error;
reg           soclinux_ethmac_tx_padding_source_valid = 1'd0;
wire          soclinux_ethmac_tx_padding_source_ready;
reg           soclinux_ethmac_tx_padding_source_first = 1'd0;
reg           soclinux_ethmac_tx_padding_source_last = 1'd0;
reg     [7:0] soclinux_ethmac_tx_padding_source_payload_data = 8'd0;
reg           soclinux_ethmac_tx_padding_source_payload_last_be = 1'd0;
reg           soclinux_ethmac_tx_padding_source_payload_error = 1'd0;
reg    [15:0] soclinux_ethmac_tx_padding_counter = 16'd0;
wire          soclinux_ethmac_tx_padding_counter_done;
wire          soclinux_ethmac_tx_crc_sink_valid;
reg           soclinux_ethmac_tx_crc_sink_ready = 1'd0;
wire          soclinux_ethmac_tx_crc_sink_first;
wire          soclinux_ethmac_tx_crc_sink_last;
wire    [7:0] soclinux_ethmac_tx_crc_sink_payload_data;
wire          soclinux_ethmac_tx_crc_sink_payload_last_be;
wire          soclinux_ethmac_tx_crc_sink_payload_error;
reg           soclinux_ethmac_tx_crc_source_valid = 1'd0;
wire          soclinux_ethmac_tx_crc_source_ready;
reg           soclinux_ethmac_tx_crc_source_first = 1'd0;
reg           soclinux_ethmac_tx_crc_source_last = 1'd0;
reg     [7:0] soclinux_ethmac_tx_crc_source_payload_data = 8'd0;
reg           soclinux_ethmac_tx_crc_source_payload_last_be = 1'd0;
reg           soclinux_ethmac_tx_crc_source_payload_error = 1'd0;
reg     [7:0] soclinux_ethmac_tx_crc_data0 = 8'd0;
reg           soclinux_ethmac_tx_crc_last_be0 = 1'd0;
reg    [31:0] soclinux_ethmac_tx_crc_value = 32'd0;
reg           soclinux_ethmac_tx_crc_error = 1'd0;
reg           soclinux_ethmac_tx_crc_last_be1 = 1'd0;
wire    [7:0] soclinux_ethmac_tx_crc_data1;
wire   [31:0] soclinux_ethmac_tx_crc_last;
reg    [31:0] soclinux_ethmac_tx_crc_next = 32'd0;
reg    [31:0] soclinux_ethmac_tx_crc_reg = 32'd4294967295;
reg           soclinux_ethmac_tx_crc_ce = 1'd0;
reg           soclinux_ethmac_tx_crc_reset = 1'd0;
reg    [31:0] soclinux_ethmac_tx_crc_crc_packet = 32'd0;
reg           soclinux_ethmac_tx_crc_last_be2 = 1'd0;
reg     [1:0] soclinux_ethmac_tx_crc_cnt = 2'd3;
wire          soclinux_ethmac_tx_crc_cnt_done;
reg           soclinux_ethmac_tx_crc_is_ongoing0 = 1'd0;
reg           soclinux_ethmac_tx_crc_is_ongoing1 = 1'd0;
wire          soclinux_ethmac_tx_crc_sink_sink_valid;
wire          soclinux_ethmac_tx_crc_sink_sink_ready;
wire          soclinux_ethmac_tx_crc_sink_sink_first;
wire          soclinux_ethmac_tx_crc_sink_sink_last;
wire    [7:0] soclinux_ethmac_tx_crc_sink_sink_payload_data;
wire          soclinux_ethmac_tx_crc_sink_sink_payload_last_be;
wire          soclinux_ethmac_tx_crc_sink_sink_payload_error;
wire          soclinux_ethmac_tx_crc_source_source_valid;
wire          soclinux_ethmac_tx_crc_source_source_ready;
wire          soclinux_ethmac_tx_crc_source_source_first;
wire          soclinux_ethmac_tx_crc_source_source_last;
wire    [7:0] soclinux_ethmac_tx_crc_source_source_payload_data;
wire          soclinux_ethmac_tx_crc_source_source_payload_last_be;
wire          soclinux_ethmac_tx_crc_source_source_payload_error;
wire          soclinux_ethmac_tx_crc_pipe_valid_sink_valid;
wire          soclinux_ethmac_tx_crc_pipe_valid_sink_ready;
wire          soclinux_ethmac_tx_crc_pipe_valid_sink_first;
wire          soclinux_ethmac_tx_crc_pipe_valid_sink_last;
wire    [7:0] soclinux_ethmac_tx_crc_pipe_valid_sink_payload_data;
wire          soclinux_ethmac_tx_crc_pipe_valid_sink_payload_last_be;
wire          soclinux_ethmac_tx_crc_pipe_valid_sink_payload_error;
reg           soclinux_ethmac_tx_crc_pipe_valid_source_valid = 1'd0;
wire          soclinux_ethmac_tx_crc_pipe_valid_source_ready;
reg           soclinux_ethmac_tx_crc_pipe_valid_source_first = 1'd0;
reg           soclinux_ethmac_tx_crc_pipe_valid_source_last = 1'd0;
reg     [7:0] soclinux_ethmac_tx_crc_pipe_valid_source_payload_data = 8'd0;
reg           soclinux_ethmac_tx_crc_pipe_valid_source_payload_last_be = 1'd0;
reg           soclinux_ethmac_tx_crc_pipe_valid_source_payload_error = 1'd0;
wire          soclinux_ethmac_tx_preamble_sink_valid;
reg           soclinux_ethmac_tx_preamble_sink_ready = 1'd0;
wire          soclinux_ethmac_tx_preamble_sink_first;
wire          soclinux_ethmac_tx_preamble_sink_last;
wire    [7:0] soclinux_ethmac_tx_preamble_sink_payload_data;
wire          soclinux_ethmac_tx_preamble_sink_payload_last_be;
wire          soclinux_ethmac_tx_preamble_sink_payload_error;
reg           soclinux_ethmac_tx_preamble_source_valid = 1'd0;
wire          soclinux_ethmac_tx_preamble_source_ready;
reg           soclinux_ethmac_tx_preamble_source_first = 1'd0;
reg           soclinux_ethmac_tx_preamble_source_last = 1'd0;
reg     [7:0] soclinux_ethmac_tx_preamble_source_payload_data = 8'd0;
wire          soclinux_ethmac_tx_preamble_source_payload_last_be;
reg           soclinux_ethmac_tx_preamble_source_payload_error = 1'd0;
reg    [63:0] soclinux_ethmac_tx_preamble_preamble = 64'd15372286728091293013;
reg     [2:0] soclinux_ethmac_tx_preamble_count = 3'd0;
wire          soclinux_ethmac_tx_gap_sink_valid;
reg           soclinux_ethmac_tx_gap_sink_ready = 1'd0;
wire          soclinux_ethmac_tx_gap_sink_first;
wire          soclinux_ethmac_tx_gap_sink_last;
wire    [7:0] soclinux_ethmac_tx_gap_sink_payload_data;
wire          soclinux_ethmac_tx_gap_sink_payload_last_be;
wire          soclinux_ethmac_tx_gap_sink_payload_error;
reg           soclinux_ethmac_tx_gap_source_valid = 1'd0;
wire          soclinux_ethmac_tx_gap_source_ready;
reg           soclinux_ethmac_tx_gap_source_first = 1'd0;
reg           soclinux_ethmac_tx_gap_source_last = 1'd0;
reg     [7:0] soclinux_ethmac_tx_gap_source_payload_data = 8'd0;
reg           soclinux_ethmac_tx_gap_source_payload_last_be = 1'd0;
reg           soclinux_ethmac_tx_gap_source_payload_error = 1'd0;
reg     [3:0] soclinux_ethmac_tx_gap_counter = 4'd0;
reg    [31:0] soclinux_ethmac_preamble_errors_status = 32'd0;
wire          soclinux_ethmac_preamble_errors_we;
reg           soclinux_ethmac_preamble_errors_re = 1'd0;
reg    [31:0] soclinux_ethmac_crc_errors_status = 32'd0;
wire          soclinux_ethmac_crc_errors_we;
reg           soclinux_ethmac_crc_errors_re = 1'd0;
wire          soclinux_ethmac_rx_preamble_sink_valid;
reg           soclinux_ethmac_rx_preamble_sink_ready = 1'd0;
wire          soclinux_ethmac_rx_preamble_sink_first;
wire          soclinux_ethmac_rx_preamble_sink_last;
wire    [7:0] soclinux_ethmac_rx_preamble_sink_payload_data;
wire          soclinux_ethmac_rx_preamble_sink_payload_last_be;
wire          soclinux_ethmac_rx_preamble_sink_payload_error;
reg           soclinux_ethmac_rx_preamble_source_valid = 1'd0;
wire          soclinux_ethmac_rx_preamble_source_ready;
reg           soclinux_ethmac_rx_preamble_source_first = 1'd0;
reg           soclinux_ethmac_rx_preamble_source_last = 1'd0;
wire    [7:0] soclinux_ethmac_rx_preamble_source_payload_data;
wire          soclinux_ethmac_rx_preamble_source_payload_last_be;
reg           soclinux_ethmac_rx_preamble_source_payload_error = 1'd0;
reg           soclinux_ethmac_rx_preamble_error = 1'd0;
reg    [63:0] soclinux_ethmac_rx_preamble_preamble = 64'd15372286728091293013;
wire          soclinux_ethmac_pulsesynchronizer0_i;
wire          soclinux_ethmac_pulsesynchronizer0_o;
reg           soclinux_ethmac_pulsesynchronizer0_toggle_i = 1'd0;
wire          soclinux_ethmac_pulsesynchronizer0_toggle_o;
reg           soclinux_ethmac_pulsesynchronizer0_toggle_o_r = 1'd0;
wire          soclinux_ethmac_liteethmaccrc32checker_sink_sink_valid;
reg           soclinux_ethmac_liteethmaccrc32checker_sink_sink_ready = 1'd0;
wire          soclinux_ethmac_liteethmaccrc32checker_sink_sink_first;
wire          soclinux_ethmac_liteethmaccrc32checker_sink_sink_last;
wire    [7:0] soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_data;
wire          soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be;
wire          soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_error;
reg           soclinux_ethmac_liteethmaccrc32checker_source_source_valid = 1'd0;
wire          soclinux_ethmac_liteethmaccrc32checker_source_source_ready;
reg           soclinux_ethmac_liteethmaccrc32checker_source_source_first = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_source_source_last = 1'd0;
reg     [7:0] soclinux_ethmac_liteethmaccrc32checker_source_source_payload_data = 8'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_source_source_payload_last_be = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_source_source_payload_error = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_error = 1'd0;
wire    [7:0] soclinux_ethmac_liteethmaccrc32checker_crc_data0;
wire          soclinux_ethmac_liteethmaccrc32checker_crc_last_be0;
reg    [31:0] soclinux_ethmac_liteethmaccrc32checker_crc_value = 32'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_crc_error0 = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_crc_last_be1 = 1'd0;
wire    [7:0] soclinux_ethmac_liteethmaccrc32checker_crc_data1;
wire   [31:0] soclinux_ethmac_liteethmaccrc32checker_crc_last;
reg    [31:0] soclinux_ethmac_liteethmaccrc32checker_crc_next = 32'd0;
reg    [31:0] soclinux_ethmac_liteethmaccrc32checker_crc_reg = 32'd4294967295;
reg           soclinux_ethmac_liteethmaccrc32checker_crc_ce = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_crc_reset = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_valid = 1'd0;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_ready;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_first;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_last;
wire    [7:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_data;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_last_be;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_error;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_valid;
reg           soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_ready = 1'd0;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_first;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_last;
wire    [7:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_data;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_last_be;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_re;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_readable;
wire   [11:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_din;
wire   [11:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_dout;
reg     [2:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_level = 3'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_syncfifo_replace = 1'd0;
reg     [2:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_produce = 3'd0;
reg     [2:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_consume = 3'd0;
reg     [2:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr = 3'd0;
wire   [11:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_r;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_we;
wire   [11:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_w;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_do_read;
wire    [2:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_rdport_adr;
wire   [11:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_rdport_dat_r;
wire    [7:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_data;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_last_be;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_error;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_first;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_last;
wire    [7:0] soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_data;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_last_be;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_error;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_first;
wire          soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_last;
reg           soclinux_ethmac_liteethmaccrc32checker_fifo_reset = 1'd0;
wire          soclinux_ethmac_liteethmaccrc32checker_fifo_in;
wire          soclinux_ethmac_liteethmaccrc32checker_fifo_out;
wire          soclinux_ethmac_liteethmaccrc32checker_fifo_full;
reg           soclinux_ethmac_liteethmaccrc32checker_last_be = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_crc_error1 = 1'd0;
wire          soclinux_ethmac_bufferizeendpoints_sink_sink_valid;
wire          soclinux_ethmac_bufferizeendpoints_sink_sink_ready;
wire          soclinux_ethmac_bufferizeendpoints_sink_sink_first;
wire          soclinux_ethmac_bufferizeendpoints_sink_sink_last;
wire    [7:0] soclinux_ethmac_bufferizeendpoints_sink_sink_payload_data;
wire          soclinux_ethmac_bufferizeendpoints_sink_sink_payload_last_be;
wire          soclinux_ethmac_bufferizeendpoints_sink_sink_payload_error;
wire          soclinux_ethmac_bufferizeendpoints_source_source_valid;
wire          soclinux_ethmac_bufferizeendpoints_source_source_ready;
wire          soclinux_ethmac_bufferizeendpoints_source_source_first;
wire          soclinux_ethmac_bufferizeendpoints_source_source_last;
wire    [7:0] soclinux_ethmac_bufferizeendpoints_source_source_payload_data;
wire          soclinux_ethmac_bufferizeendpoints_source_source_payload_last_be;
wire          soclinux_ethmac_bufferizeendpoints_source_source_payload_error;
wire          soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_valid;
wire          soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_ready;
wire          soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_first;
wire          soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_last;
wire    [7:0] soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_payload_data;
wire          soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_payload_last_be;
wire          soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_payload_error;
reg           soclinux_ethmac_bufferizeendpoints_pipe_valid_source_valid = 1'd0;
wire          soclinux_ethmac_bufferizeendpoints_pipe_valid_source_ready;
reg           soclinux_ethmac_bufferizeendpoints_pipe_valid_source_first = 1'd0;
reg           soclinux_ethmac_bufferizeendpoints_pipe_valid_source_last = 1'd0;
reg     [7:0] soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_data = 8'd0;
reg           soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_last_be = 1'd0;
reg           soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_error = 1'd0;
wire          soclinux_ethmac_pulsesynchronizer1_i;
wire          soclinux_ethmac_pulsesynchronizer1_o;
reg           soclinux_ethmac_pulsesynchronizer1_toggle_i = 1'd0;
wire          soclinux_ethmac_pulsesynchronizer1_toggle_o;
reg           soclinux_ethmac_pulsesynchronizer1_toggle_o_r = 1'd0;
wire          soclinux_ethmac_rx_padding_sink_valid;
wire          soclinux_ethmac_rx_padding_sink_ready;
wire          soclinux_ethmac_rx_padding_sink_first;
wire          soclinux_ethmac_rx_padding_sink_last;
wire    [7:0] soclinux_ethmac_rx_padding_sink_payload_data;
wire          soclinux_ethmac_rx_padding_sink_payload_last_be;
wire          soclinux_ethmac_rx_padding_sink_payload_error;
wire          soclinux_ethmac_rx_padding_source_valid;
wire          soclinux_ethmac_rx_padding_source_ready;
wire          soclinux_ethmac_rx_padding_source_first;
wire          soclinux_ethmac_rx_padding_source_last;
wire    [7:0] soclinux_ethmac_rx_padding_source_payload_data;
wire          soclinux_ethmac_rx_padding_source_payload_last_be;
wire          soclinux_ethmac_rx_padding_source_payload_error;
wire          soclinux_ethmac_rx_last_be_sink_valid;
wire          soclinux_ethmac_rx_last_be_sink_ready;
wire          soclinux_ethmac_rx_last_be_sink_first;
wire          soclinux_ethmac_rx_last_be_sink_last;
wire    [7:0] soclinux_ethmac_rx_last_be_sink_payload_data;
wire          soclinux_ethmac_rx_last_be_sink_payload_last_be;
wire          soclinux_ethmac_rx_last_be_sink_payload_error;
wire          soclinux_ethmac_rx_last_be_source_valid;
wire          soclinux_ethmac_rx_last_be_source_ready;
wire          soclinux_ethmac_rx_last_be_source_first;
wire          soclinux_ethmac_rx_last_be_source_last;
wire    [7:0] soclinux_ethmac_rx_last_be_source_payload_data;
reg           soclinux_ethmac_rx_last_be_source_payload_last_be = 1'd0;
wire          soclinux_ethmac_rx_last_be_source_payload_error;
wire          soclinux_ethmac_rx_converter_sink_valid;
wire          soclinux_ethmac_rx_converter_sink_ready;
wire          soclinux_ethmac_rx_converter_sink_first;
wire          soclinux_ethmac_rx_converter_sink_last;
wire    [7:0] soclinux_ethmac_rx_converter_sink_payload_data;
wire          soclinux_ethmac_rx_converter_sink_payload_last_be;
wire          soclinux_ethmac_rx_converter_sink_payload_error;
wire          soclinux_ethmac_rx_converter_source_valid;
wire          soclinux_ethmac_rx_converter_source_ready;
wire          soclinux_ethmac_rx_converter_source_first;
wire          soclinux_ethmac_rx_converter_source_last;
reg    [31:0] soclinux_ethmac_rx_converter_source_payload_data = 32'd0;
reg     [3:0] soclinux_ethmac_rx_converter_source_payload_last_be = 4'd0;
reg     [3:0] soclinux_ethmac_rx_converter_source_payload_error = 4'd0;
wire          soclinux_ethmac_rx_converter_converter_sink_valid;
wire          soclinux_ethmac_rx_converter_converter_sink_ready;
wire          soclinux_ethmac_rx_converter_converter_sink_first;
wire          soclinux_ethmac_rx_converter_converter_sink_last;
wire    [9:0] soclinux_ethmac_rx_converter_converter_sink_payload_data;
wire          soclinux_ethmac_rx_converter_converter_source_valid;
wire          soclinux_ethmac_rx_converter_converter_source_ready;
reg           soclinux_ethmac_rx_converter_converter_source_first = 1'd0;
reg           soclinux_ethmac_rx_converter_converter_source_last = 1'd0;
reg    [39:0] soclinux_ethmac_rx_converter_converter_source_payload_data = 40'd0;
reg     [2:0] soclinux_ethmac_rx_converter_converter_source_payload_valid_token_count = 3'd0;
reg     [1:0] soclinux_ethmac_rx_converter_converter_demux = 2'd0;
wire          soclinux_ethmac_rx_converter_converter_load_part;
reg           soclinux_ethmac_rx_converter_converter_strobe_all = 1'd0;
wire          soclinux_ethmac_rx_converter_source_source_valid;
wire          soclinux_ethmac_rx_converter_source_source_ready;
wire          soclinux_ethmac_rx_converter_source_source_first;
wire          soclinux_ethmac_rx_converter_source_source_last;
wire   [39:0] soclinux_ethmac_rx_converter_source_source_payload_data;
wire          soclinux_ethmac_rx_cdc_sink_sink_valid;
wire          soclinux_ethmac_rx_cdc_sink_sink_ready;
wire          soclinux_ethmac_rx_cdc_sink_sink_first;
wire          soclinux_ethmac_rx_cdc_sink_sink_last;
wire   [31:0] soclinux_ethmac_rx_cdc_sink_sink_payload_data;
wire    [3:0] soclinux_ethmac_rx_cdc_sink_sink_payload_last_be;
wire    [3:0] soclinux_ethmac_rx_cdc_sink_sink_payload_error;
wire          soclinux_ethmac_rx_cdc_source_source_valid;
wire          soclinux_ethmac_rx_cdc_source_source_ready;
wire          soclinux_ethmac_rx_cdc_source_source_first;
wire          soclinux_ethmac_rx_cdc_source_source_last;
wire   [31:0] soclinux_ethmac_rx_cdc_source_source_payload_data;
wire    [3:0] soclinux_ethmac_rx_cdc_source_source_payload_last_be;
wire    [3:0] soclinux_ethmac_rx_cdc_source_source_payload_error;
wire          soclinux_ethmac_rx_cdc_cdc_sink_valid;
wire          soclinux_ethmac_rx_cdc_cdc_sink_ready;
wire          soclinux_ethmac_rx_cdc_cdc_sink_first;
wire          soclinux_ethmac_rx_cdc_cdc_sink_last;
wire   [31:0] soclinux_ethmac_rx_cdc_cdc_sink_payload_data;
wire    [3:0] soclinux_ethmac_rx_cdc_cdc_sink_payload_last_be;
wire    [3:0] soclinux_ethmac_rx_cdc_cdc_sink_payload_error;
wire          soclinux_ethmac_rx_cdc_cdc_source_valid;
wire          soclinux_ethmac_rx_cdc_cdc_source_ready;
wire          soclinux_ethmac_rx_cdc_cdc_source_first;
wire          soclinux_ethmac_rx_cdc_cdc_source_last;
wire   [31:0] soclinux_ethmac_rx_cdc_cdc_source_payload_data;
wire    [3:0] soclinux_ethmac_rx_cdc_cdc_source_payload_last_be;
wire    [3:0] soclinux_ethmac_rx_cdc_cdc_source_payload_error;
wire          soclinux_ethmac_rx_cdc_cdc_asyncfifo_we;
wire          soclinux_ethmac_rx_cdc_cdc_asyncfifo_writable;
wire          soclinux_ethmac_rx_cdc_cdc_asyncfifo_re;
wire          soclinux_ethmac_rx_cdc_cdc_asyncfifo_readable;
wire   [41:0] soclinux_ethmac_rx_cdc_cdc_asyncfifo_din;
wire   [41:0] soclinux_ethmac_rx_cdc_cdc_asyncfifo_dout;
wire          soclinux_ethmac_rx_cdc_cdc_graycounter0_ce;
(* dont_touch = "true" *)
reg     [5:0] soclinux_ethmac_rx_cdc_cdc_graycounter0_q = 6'd0;
wire    [5:0] soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next;
reg     [5:0] soclinux_ethmac_rx_cdc_cdc_graycounter0_q_binary = 6'd0;
reg     [5:0] soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next_binary = 6'd0;
wire          soclinux_ethmac_rx_cdc_cdc_graycounter1_ce;
(* dont_touch = "true" *)
reg     [5:0] soclinux_ethmac_rx_cdc_cdc_graycounter1_q = 6'd0;
wire    [5:0] soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next;
reg     [5:0] soclinux_ethmac_rx_cdc_cdc_graycounter1_q_binary = 6'd0;
reg     [5:0] soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next_binary = 6'd0;
wire    [5:0] soclinux_ethmac_rx_cdc_cdc_produce_rdomain;
wire    [5:0] soclinux_ethmac_rx_cdc_cdc_consume_wdomain;
wire    [4:0] soclinux_ethmac_rx_cdc_cdc_wrport_adr;
wire   [41:0] soclinux_ethmac_rx_cdc_cdc_wrport_dat_r;
wire          soclinux_ethmac_rx_cdc_cdc_wrport_we;
wire   [41:0] soclinux_ethmac_rx_cdc_cdc_wrport_dat_w;
wire    [4:0] soclinux_ethmac_rx_cdc_cdc_rdport_adr;
wire   [41:0] soclinux_ethmac_rx_cdc_cdc_rdport_dat_r;
wire   [31:0] soclinux_ethmac_rx_cdc_cdc_fifo_in_payload_data;
wire    [3:0] soclinux_ethmac_rx_cdc_cdc_fifo_in_payload_last_be;
wire    [3:0] soclinux_ethmac_rx_cdc_cdc_fifo_in_payload_error;
wire          soclinux_ethmac_rx_cdc_cdc_fifo_in_first;
wire          soclinux_ethmac_rx_cdc_cdc_fifo_in_last;
wire   [31:0] soclinux_ethmac_rx_cdc_cdc_fifo_out_payload_data;
wire    [3:0] soclinux_ethmac_rx_cdc_cdc_fifo_out_payload_last_be;
wire    [3:0] soclinux_ethmac_rx_cdc_cdc_fifo_out_payload_error;
wire          soclinux_ethmac_rx_cdc_cdc_fifo_out_first;
wire          soclinux_ethmac_rx_cdc_cdc_fifo_out_last;
wire          soclinux_ethmac_sink_sink_valid;
wire          soclinux_ethmac_sink_sink_ready;
wire          soclinux_ethmac_sink_sink_first;
wire          soclinux_ethmac_sink_sink_last;
wire   [31:0] soclinux_ethmac_sink_sink_payload_data;
wire    [3:0] soclinux_ethmac_sink_sink_payload_last_be;
wire    [3:0] soclinux_ethmac_sink_sink_payload_error;
wire          soclinux_ethmac_source_source_valid;
wire          soclinux_ethmac_source_source_ready;
wire          soclinux_ethmac_source_source_first;
wire          soclinux_ethmac_source_source_last;
wire   [31:0] soclinux_ethmac_source_source_payload_data;
wire    [3:0] soclinux_ethmac_source_source_payload_last_be;
wire    [3:0] soclinux_ethmac_source_source_payload_error;
wire   [29:0] soclinux_ethmac_bus_adr;
wire   [31:0] soclinux_ethmac_bus_dat_w;
wire   [31:0] soclinux_ethmac_bus_dat_r;
wire    [3:0] soclinux_ethmac_bus_sel;
wire          soclinux_ethmac_bus_cyc;
wire          soclinux_ethmac_bus_stb;
wire          soclinux_ethmac_bus_ack;
wire          soclinux_ethmac_bus_we;
wire    [2:0] soclinux_ethmac_bus_cti;
wire    [1:0] soclinux_ethmac_bus_bte;
wire          soclinux_ethmac_bus_err;
wire          soclinux_ethmac_sram0_sink_valid;
reg           soclinux_ethmac_sram1_sink_ready = 1'd1;
wire          soclinux_ethmac_sram2_sink_first;
wire          soclinux_ethmac_sram3_sink_last;
wire   [31:0] soclinux_ethmac_sram4_sink_payload_data;
wire    [3:0] soclinux_ethmac_sram5_sink_payload_last_be;
wire    [3:0] soclinux_ethmac_sram6_sink_payload_error;
wire          soclinux_ethmac_sram7_status;
wire          soclinux_ethmac_sram8_we;
reg           soclinux_ethmac_sram9_re = 1'd0;
wire   [10:0] soclinux_ethmac_sram10_status;
wire          soclinux_ethmac_sram11_we;
reg           soclinux_ethmac_sram12_re = 1'd0;
reg    [31:0] soclinux_ethmac_sram13_status = 32'd0;
wire          soclinux_ethmac_sram14_we;
reg           soclinux_ethmac_sram15_re = 1'd0;
wire          soclinux_ethmac_sram16_irq;
wire          soclinux_ethmac_sram17_status;
wire          soclinux_ethmac_sram18_pending;
wire          soclinux_ethmac_sram19_trigger;
reg           soclinux_ethmac_sram20_clear = 1'd0;
wire          soclinux_ethmac_sram21_available;
wire          soclinux_ethmac_sram22_status;
wire          soclinux_ethmac_sram23_we;
reg           soclinux_ethmac_sram24_re = 1'd0;
wire          soclinux_ethmac_sram25_available;
wire          soclinux_ethmac_sram26_status;
wire          soclinux_ethmac_sram27_we;
reg           soclinux_ethmac_sram28_re = 1'd0;
reg           soclinux_ethmac_sram29_r = 1'd0;
wire          soclinux_ethmac_sram30_available;
reg           soclinux_ethmac_sram31_storage = 1'd0;
reg           soclinux_ethmac_sram32_re = 1'd0;
reg           soclinux_ethmac_write = 1'd0;
reg           soclinux_ethmac_slot = 1'd0;
reg    [10:0] soclinux_ethmac_sram35_length = 11'd0;
reg     [3:0] soclinux_ethmac_length_inc = 4'd0;
reg           soclinux_ethmac_sram37_sink_valid = 1'd0;
wire          soclinux_ethmac_sram38_sink_ready;
reg           soclinux_ethmac_sram39_sink_first = 1'd0;
reg           soclinux_ethmac_sram40_sink_last = 1'd0;
reg           soclinux_ethmac_sram41_sink_payload_slot = 1'd0;
reg    [10:0] soclinux_ethmac_sram42_sink_payload_length = 11'd0;
wire          soclinux_ethmac_sram43_source_valid;
wire          soclinux_ethmac_sram44_source_ready;
wire          soclinux_ethmac_sram45_source_first;
wire          soclinux_ethmac_sram46_source_last;
wire          soclinux_ethmac_sram47_source_payload_slot;
wire   [10:0] soclinux_ethmac_sram48_source_payload_length;
wire          soclinux_ethmac_sram49_we;
wire          soclinux_ethmac_sram50_writable;
wire          soclinux_ethmac_sram51_re;
wire          soclinux_ethmac_sram52_readable;
wire   [13:0] soclinux_ethmac_sram53_din;
wire   [13:0] soclinux_ethmac_sram54_dout;
reg     [1:0] soclinux_ethmac_sram55_level = 2'd0;
reg           soclinux_ethmac_sram56_replace = 1'd0;
reg           soclinux_ethmac_sram57_produce = 1'd0;
reg           soclinux_ethmac_sram58_consume = 1'd0;
reg           soclinux_ethmac_sram59_adr = 1'd0;
wire   [13:0] soclinux_ethmac_sram60_dat_r;
wire          soclinux_ethmac_sram61_we;
wire   [13:0] soclinux_ethmac_sram62_dat_w;
wire          soclinux_ethmac_sram63_do_read;
wire          soclinux_ethmac_sram64_adr;
wire   [13:0] soclinux_ethmac_sram65_dat_r;
wire          soclinux_ethmac_sram66_fifo_in_payload_slot;
wire   [10:0] soclinux_ethmac_sram67_fifo_in_payload_length;
wire          soclinux_ethmac_sram68_fifo_in_first;
wire          soclinux_ethmac_sram69_fifo_in_last;
wire          soclinux_ethmac_sram70_fifo_out_payload_slot;
wire   [10:0] soclinux_ethmac_sram71_fifo_out_payload_length;
wire          soclinux_ethmac_sram72_fifo_out_first;
wire          soclinux_ethmac_sram73_fifo_out_last;
wire   [31:0] soclinux_ethmac_wr_data;
reg     [8:0] soclinux_ethmac_sram75_adr = 9'd0;
wire   [31:0] soclinux_ethmac_sram76_dat_r;
reg           soclinux_ethmac_sram77_we = 1'd0;
reg    [31:0] soclinux_ethmac_sram78_dat_w = 32'd0;
reg     [8:0] soclinux_ethmac_sram79_adr = 9'd0;
wire   [31:0] soclinux_ethmac_sram80_dat_r;
reg           soclinux_ethmac_sram81_we = 1'd0;
reg    [31:0] soclinux_ethmac_sram82_dat_w = 32'd0;
reg           soclinux_ethmac_sram83_source_valid = 1'd0;
wire          soclinux_ethmac_sram84_source_ready;
reg           soclinux_ethmac_sram85_source_first = 1'd0;
reg           soclinux_ethmac_sram86_source_last = 1'd0;
wire   [31:0] soclinux_ethmac_sram87_source_payload_data;
reg     [3:0] soclinux_ethmac_sram88_source_payload_last_be = 4'd0;
reg     [3:0] soclinux_ethmac_sram89_source_payload_error = 4'd0;
reg           soclinux_ethmac_start_re = 1'd0;
wire          soclinux_ethmac_start_r;
reg           soclinux_ethmac_start_we = 1'd0;
reg           soclinux_ethmac_start_w = 1'd0;
wire          soclinux_ethmac_sram94_status;
wire          soclinux_ethmac_sram95_we;
reg           soclinux_ethmac_sram96_re = 1'd0;
wire    [1:0] soclinux_ethmac_sram97_status;
wire          soclinux_ethmac_sram98_we;
reg           soclinux_ethmac_sram99_re = 1'd0;
reg           soclinux_ethmac_sram100_storage = 1'd0;
reg           soclinux_ethmac_sram101_re = 1'd0;
reg    [10:0] soclinux_ethmac_sram102_storage = 11'd0;
reg           soclinux_ethmac_sram103_re = 1'd0;
wire          soclinux_ethmac_sram104_irq;
wire          soclinux_ethmac_sram105_status;
reg           soclinux_ethmac_sram106_pending = 1'd0;
reg           soclinux_ethmac_sram107_trigger = 1'd0;
reg           soclinux_ethmac_sram108_clear = 1'd0;
wire          soclinux_ethmac_sram109_event0;
wire          soclinux_ethmac_sram110_status;
wire          soclinux_ethmac_sram111_we;
reg           soclinux_ethmac_sram112_re = 1'd0;
wire          soclinux_ethmac_sram113_event0;
wire          soclinux_ethmac_sram114_status;
wire          soclinux_ethmac_sram115_we;
reg           soclinux_ethmac_sram116_re = 1'd0;
reg           soclinux_ethmac_sram117_r = 1'd0;
wire          soclinux_ethmac_sram118_event0;
reg           soclinux_ethmac_sram119_storage = 1'd0;
reg           soclinux_ethmac_sram120_re = 1'd0;
reg           soclinux_ethmac_read = 1'd0;
reg    [10:0] soclinux_ethmac_sram122_length = 11'd0;
wire          soclinux_ethmac_sram123_sink_valid;
wire          soclinux_ethmac_sram124_sink_ready;
reg           soclinux_ethmac_sram125_sink_first = 1'd0;
reg           soclinux_ethmac_sram126_sink_last = 1'd0;
wire          soclinux_ethmac_sram127_sink_payload_slot;
wire   [10:0] soclinux_ethmac_sram128_sink_payload_length;
wire          soclinux_ethmac_sram129_source_valid;
reg           soclinux_ethmac_sram130_source_ready = 1'd0;
wire          soclinux_ethmac_sram131_source_first;
wire          soclinux_ethmac_sram132_source_last;
wire          soclinux_ethmac_sram133_source_payload_slot;
wire   [10:0] soclinux_ethmac_sram134_source_payload_length;
wire          soclinux_ethmac_sram135_we;
wire          soclinux_ethmac_sram136_writable;
wire          soclinux_ethmac_sram137_re;
wire          soclinux_ethmac_sram138_readable;
wire   [13:0] soclinux_ethmac_sram139_din;
wire   [13:0] soclinux_ethmac_sram140_dout;
reg     [1:0] soclinux_ethmac_sram141_level = 2'd0;
reg           soclinux_ethmac_sram142_replace = 1'd0;
reg           soclinux_ethmac_sram143_produce = 1'd0;
reg           soclinux_ethmac_sram144_consume = 1'd0;
reg           soclinux_ethmac_sram145_adr = 1'd0;
wire   [13:0] soclinux_ethmac_sram146_dat_r;
wire          soclinux_ethmac_sram147_we;
wire   [13:0] soclinux_ethmac_sram148_dat_w;
wire          soclinux_ethmac_sram149_do_read;
wire          soclinux_ethmac_sram150_adr;
wire   [13:0] soclinux_ethmac_sram151_dat_r;
wire          soclinux_ethmac_sram152_fifo_in_payload_slot;
wire   [10:0] soclinux_ethmac_sram153_fifo_in_payload_length;
wire          soclinux_ethmac_sram154_fifo_in_first;
wire          soclinux_ethmac_sram155_fifo_in_last;
wire          soclinux_ethmac_sram156_fifo_out_payload_slot;
wire   [10:0] soclinux_ethmac_sram157_fifo_out_payload_length;
wire          soclinux_ethmac_sram158_fifo_out_first;
wire          soclinux_ethmac_sram159_fifo_out_last;
reg    [31:0] soclinux_ethmac_rd_data = 32'd0;
wire    [8:0] soclinux_ethmac_sram161_adr;
wire   [31:0] soclinux_ethmac_sram162_dat_r;
wire          soclinux_ethmac_sram163_re;
wire    [8:0] soclinux_ethmac_sram164_adr;
wire   [31:0] soclinux_ethmac_sram165_dat_r;
wire          soclinux_ethmac_sram166_re;
wire          soclinux_ethmac_sram167_irq;
wire   [29:0] soclinux_ethmac_interface0_adr;
wire   [31:0] soclinux_ethmac_interface0_dat_w;
wire   [31:0] soclinux_ethmac_interface0_dat_r;
wire    [3:0] soclinux_ethmac_interface0_sel;
wire          soclinux_ethmac_interface0_cyc;
wire          soclinux_ethmac_interface0_stb;
reg           soclinux_ethmac_interface0_ack = 1'd0;
wire          soclinux_ethmac_interface0_we;
wire    [2:0] soclinux_ethmac_interface0_cti;
wire    [1:0] soclinux_ethmac_interface0_bte;
reg           soclinux_ethmac_interface0_err = 1'd0;
reg           soclinux_ethmac_sram2_adr_burst = 1'd0;
wire    [8:0] soclinux_ethmac_sram2_adr;
wire   [31:0] soclinux_ethmac_sram2_dat_r;
wire   [29:0] soclinux_ethmac_interface1_adr;
wire   [31:0] soclinux_ethmac_interface1_dat_w;
wire   [31:0] soclinux_ethmac_interface1_dat_r;
wire    [3:0] soclinux_ethmac_interface1_sel;
wire          soclinux_ethmac_interface1_cyc;
wire          soclinux_ethmac_interface1_stb;
reg           soclinux_ethmac_interface1_ack = 1'd0;
wire          soclinux_ethmac_interface1_we;
wire    [2:0] soclinux_ethmac_interface1_cti;
wire    [1:0] soclinux_ethmac_interface1_bte;
reg           soclinux_ethmac_interface1_err = 1'd0;
reg           soclinux_ethmac_sram3_adr_burst = 1'd0;
wire    [8:0] soclinux_ethmac_sram3_adr;
wire   [31:0] soclinux_ethmac_sram3_dat_r;
wire   [29:0] soclinux_ethmac_interface2_adr;
wire   [31:0] soclinux_ethmac_interface2_dat_w;
wire   [31:0] soclinux_ethmac_interface2_dat_r;
wire    [3:0] soclinux_ethmac_interface2_sel;
wire          soclinux_ethmac_interface2_cyc;
wire          soclinux_ethmac_interface2_stb;
reg           soclinux_ethmac_interface2_ack = 1'd0;
wire          soclinux_ethmac_interface2_we;
wire    [2:0] soclinux_ethmac_interface2_cti;
wire    [1:0] soclinux_ethmac_interface2_bte;
reg           soclinux_ethmac_interface2_err = 1'd0;
reg           soclinux_ethmac_sram4_adr_burst = 1'd0;
wire    [8:0] soclinux_ethmac_sram4_adr;
wire   [31:0] soclinux_ethmac_sram4_dat_r;
reg     [3:0] soclinux_ethmac_sram4_we = 4'd0;
wire   [31:0] soclinux_ethmac_sram4_dat_w;
wire   [29:0] soclinux_ethmac_interface3_adr;
wire   [31:0] soclinux_ethmac_interface3_dat_w;
wire   [31:0] soclinux_ethmac_interface3_dat_r;
wire    [3:0] soclinux_ethmac_interface3_sel;
wire          soclinux_ethmac_interface3_cyc;
wire          soclinux_ethmac_interface3_stb;
reg           soclinux_ethmac_interface3_ack = 1'd0;
wire          soclinux_ethmac_interface3_we;
wire    [2:0] soclinux_ethmac_interface3_cti;
wire    [1:0] soclinux_ethmac_interface3_bte;
reg           soclinux_ethmac_interface3_err = 1'd0;
reg           soclinux_ethmac_sram5_adr_burst = 1'd0;
wire    [8:0] soclinux_ethmac_sram5_adr;
wire   [31:0] soclinux_ethmac_sram5_dat_r;
reg     [3:0] soclinux_ethmac_sram5_we = 4'd0;
wire   [31:0] soclinux_ethmac_sram5_dat_w;
reg     [3:0] soclinux_ethmac_slave_sel = 4'd0;
reg     [3:0] soclinux_ethmac_slave_sel_r = 4'd0;
reg     [7:0] leds_storage = 8'd0;
reg           leds_re = 1'd0;
reg     [7:0] leds_chaser = 8'd0;
reg           leds_mode = 1'd0;
wire          leds_wait;
wire          leds_done;
reg    [22:0] leds_count = 23'd7812500;
reg     [7:0] leds_leds = 8'd0;
wire          card_detect_status0;
wire          card_detect_we;
reg           card_detect_re = 1'd0;
reg     [8:0] clocker_storage = 9'd256;
reg           clocker_re = 1'd0;
wire          clocker_stop;
wire          clocker_ce;
wire          clocker_clk_en;
wire          clocker_clk0;
reg     [8:0] clocker_clks = 9'd0;
reg           clocker_clk1 = 1'd0;
reg           clocker_clk_d = 1'd0;
reg           clocker_ce_delayed = 1'd0;
reg           clocker_ce_latched = 1'd0;
reg           init_initialize_re = 1'd0;
wire          init_initialize_r;
reg           init_initialize_we = 1'd0;
reg           init_initialize_w = 1'd0;
wire          init_pads_in_valid;
wire          init_pads_in_payload_cmd_i;
wire    [3:0] init_pads_in_payload_data_i;
wire          init_pads_out_ready;
reg           init_pads_out_payload_clk = 1'd0;
reg           init_pads_out_payload_cmd_o = 1'd0;
reg           init_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] init_pads_out_payload_data_o = 4'd0;
reg           init_pads_out_payload_data_oe = 1'd0;
reg     [7:0] init_count = 8'd0;
wire          cmdw_pads_in_valid;
wire          cmdw_pads_in_payload_cmd_i;
wire    [3:0] cmdw_pads_in_payload_data_i;
wire          cmdw_pads_out_ready;
reg           cmdw_pads_out_payload_clk = 1'd0;
reg           cmdw_pads_out_payload_cmd_o = 1'd0;
reg           cmdw_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] cmdw_pads_out_payload_data_o = 4'd0;
reg           cmdw_pads_out_payload_data_oe = 1'd0;
reg           cmdw_sink_valid = 1'd0;
reg           cmdw_sink_ready = 1'd0;
reg           cmdw_sink_last = 1'd0;
reg     [7:0] cmdw_sink_payload_data = 8'd0;
reg     [1:0] cmdw_sink_payload_cmd_type = 2'd0;
reg           cmdw_done = 1'd0;
reg     [7:0] cmdw_count = 8'd0;
wire          cmdr_pads_in_pads_in_valid;
wire          cmdr_pads_in_pads_in_ready;
reg           cmdr_pads_in_pads_in_first = 1'd0;
reg           cmdr_pads_in_pads_in_last = 1'd0;
reg           cmdr_pads_in_pads_in_payload_clk = 1'd0;
wire          cmdr_pads_in_pads_in_payload_cmd_i;
reg           cmdr_pads_in_pads_in_payload_cmd_o = 1'd0;
reg           cmdr_pads_in_pads_in_payload_cmd_oe = 1'd0;
wire    [3:0] cmdr_pads_in_pads_in_payload_data_i;
reg     [3:0] cmdr_pads_in_pads_in_payload_data_o = 4'd0;
reg           cmdr_pads_in_pads_in_payload_data_oe = 1'd0;
reg           cmdr_pads_in_pads_in_payload_data_i_ce = 1'd0;
wire          cmdr_pads_out_ready;
reg           cmdr_pads_out_payload_clk = 1'd0;
reg           cmdr_pads_out_payload_cmd_o = 1'd0;
reg           cmdr_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] cmdr_pads_out_payload_data_o = 4'd0;
reg           cmdr_pads_out_payload_data_oe = 1'd0;
reg           cmdr_sink_valid = 1'd0;
reg           cmdr_sink_ready = 1'd0;
reg     [1:0] cmdr_sink_payload_cmd_type = 2'd0;
reg     [1:0] cmdr_sink_payload_data_type = 2'd0;
reg     [7:0] cmdr_sink_payload_length = 8'd0;
reg           cmdr_source_source_valid = 1'd0;
reg           cmdr_source_source_ready = 1'd0;
reg           cmdr_source_source_last = 1'd0;
reg     [7:0] cmdr_source_source_payload_data = 8'd0;
reg     [2:0] cmdr_source_source_payload_status = 3'd0;
reg    [31:0] cmdr_timeout = 32'd125000000;
reg     [7:0] cmdr_count = 8'd0;
reg           cmdr_busy = 1'd0;
wire          cmdr_cmdr_pads_in_valid;
reg           cmdr_cmdr_pads_in_ready = 1'd0;
wire          cmdr_cmdr_pads_in_first;
wire          cmdr_cmdr_pads_in_last;
wire          cmdr_cmdr_pads_in_payload_clk;
wire          cmdr_cmdr_pads_in_payload_cmd_i;
wire          cmdr_cmdr_pads_in_payload_cmd_o;
wire          cmdr_cmdr_pads_in_payload_cmd_oe;
wire    [3:0] cmdr_cmdr_pads_in_payload_data_i;
wire    [3:0] cmdr_cmdr_pads_in_payload_data_o;
wire          cmdr_cmdr_pads_in_payload_data_oe;
wire          cmdr_cmdr_pads_in_payload_data_i_ce;
wire          cmdr_cmdr_source_valid;
reg           cmdr_cmdr_source_ready = 1'd0;
wire          cmdr_cmdr_source_first;
wire          cmdr_cmdr_source_last;
wire    [7:0] cmdr_cmdr_source_payload_data;
wire          cmdr_cmdr_start;
reg           cmdr_cmdr_run = 1'd0;
wire          cmdr_cmdr_converter_converter_sink_valid;
wire          cmdr_cmdr_converter_converter_sink_ready;
reg           cmdr_cmdr_converter_converter_sink_first = 1'd0;
reg           cmdr_cmdr_converter_converter_sink_last = 1'd0;
wire          cmdr_cmdr_converter_converter_sink_payload_data;
wire          cmdr_cmdr_converter_converter_source_valid;
wire          cmdr_cmdr_converter_converter_source_ready;
reg           cmdr_cmdr_converter_converter_source_first = 1'd0;
reg           cmdr_cmdr_converter_converter_source_last = 1'd0;
reg     [7:0] cmdr_cmdr_converter_converter_source_payload_data = 8'd0;
reg     [3:0] cmdr_cmdr_converter_converter_source_payload_valid_token_count = 4'd0;
reg     [2:0] cmdr_cmdr_converter_converter_demux = 3'd0;
wire          cmdr_cmdr_converter_converter_load_part;
reg           cmdr_cmdr_converter_converter_strobe_all = 1'd0;
wire          cmdr_cmdr_converter_source_source_valid;
wire          cmdr_cmdr_converter_source_source_ready;
wire          cmdr_cmdr_converter_source_source_first;
wire          cmdr_cmdr_converter_source_source_last;
wire    [7:0] cmdr_cmdr_converter_source_source_payload_data;
wire          cmdr_cmdr_buf_sink_sink_valid;
wire          cmdr_cmdr_buf_sink_sink_ready;
wire          cmdr_cmdr_buf_sink_sink_first;
wire          cmdr_cmdr_buf_sink_sink_last;
wire    [7:0] cmdr_cmdr_buf_sink_sink_payload_data;
wire          cmdr_cmdr_buf_source_source_valid;
wire          cmdr_cmdr_buf_source_source_ready;
wire          cmdr_cmdr_buf_source_source_first;
wire          cmdr_cmdr_buf_source_source_last;
wire    [7:0] cmdr_cmdr_buf_source_source_payload_data;
wire          cmdr_cmdr_buf_pipe_valid_sink_valid;
wire          cmdr_cmdr_buf_pipe_valid_sink_ready;
wire          cmdr_cmdr_buf_pipe_valid_sink_first;
wire          cmdr_cmdr_buf_pipe_valid_sink_last;
wire    [7:0] cmdr_cmdr_buf_pipe_valid_sink_payload_data;
reg           cmdr_cmdr_buf_pipe_valid_source_valid = 1'd0;
wire          cmdr_cmdr_buf_pipe_valid_source_ready;
reg           cmdr_cmdr_buf_pipe_valid_source_first = 1'd0;
reg           cmdr_cmdr_buf_pipe_valid_source_last = 1'd0;
reg     [7:0] cmdr_cmdr_buf_pipe_valid_source_payload_data = 8'd0;
reg           cmdr_cmdr_reset = 1'd0;
wire          dataw_pads_in_pads_in_valid;
reg           dataw_pads_in_pads_in_ready = 1'd0;
reg           dataw_pads_in_pads_in_first = 1'd0;
reg           dataw_pads_in_pads_in_last = 1'd0;
reg           dataw_pads_in_pads_in_payload_clk = 1'd0;
wire          dataw_pads_in_pads_in_payload_cmd_i;
reg           dataw_pads_in_pads_in_payload_cmd_o = 1'd0;
reg           dataw_pads_in_pads_in_payload_cmd_oe = 1'd0;
wire    [3:0] dataw_pads_in_pads_in_payload_data_i;
reg     [3:0] dataw_pads_in_pads_in_payload_data_o = 4'd0;
reg           dataw_pads_in_pads_in_payload_data_oe = 1'd0;
reg           dataw_pads_in_pads_in_payload_data_i_ce = 1'd0;
wire          dataw_pads_out_ready;
reg           dataw_pads_out_payload_clk = 1'd0;
reg           dataw_pads_out_payload_cmd_o = 1'd0;
reg           dataw_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] dataw_pads_out_payload_data_o = 4'd0;
reg           dataw_pads_out_payload_data_oe = 1'd0;
reg           dataw_sink_valid = 1'd0;
reg           dataw_sink_ready = 1'd0;
reg           dataw_sink_first = 1'd0;
reg           dataw_sink_last = 1'd0;
reg     [7:0] dataw_sink_payload_data = 8'd0;
reg           dataw_stop = 1'd0;
wire          dataw_accepted0;
wire          dataw_crc_error0;
wire          dataw_write_error0;
reg     [2:0] dataw_status = 3'd0;
wire          dataw_we;
reg           dataw_re = 1'd0;
reg     [7:0] dataw_count = 8'd0;
reg           dataw_accepted1 = 1'd0;
reg           dataw_crc_error1 = 1'd0;
reg           dataw_write_error1 = 1'd0;
wire          dataw_crc_pads_in_valid;
wire          dataw_crc_pads_in_ready;
wire          dataw_crc_pads_in_first;
wire          dataw_crc_pads_in_last;
wire          dataw_crc_pads_in_payload_clk;
wire          dataw_crc_pads_in_payload_cmd_i;
wire          dataw_crc_pads_in_payload_cmd_o;
wire          dataw_crc_pads_in_payload_cmd_oe;
wire    [3:0] dataw_crc_pads_in_payload_data_i;
wire    [3:0] dataw_crc_pads_in_payload_data_o;
wire          dataw_crc_pads_in_payload_data_oe;
wire          dataw_crc_pads_in_payload_data_i_ce;
wire          dataw_crc_source_valid;
reg           dataw_crc_source_ready = 1'd0;
wire          dataw_crc_source_first;
wire          dataw_crc_source_last;
wire    [7:0] dataw_crc_source_payload_data;
wire          dataw_crc_start;
reg           dataw_crc_run = 1'd0;
wire          dataw_crc_converter_converter_sink_valid;
wire          dataw_crc_converter_converter_sink_ready;
reg           dataw_crc_converter_converter_sink_first = 1'd0;
reg           dataw_crc_converter_converter_sink_last = 1'd0;
wire          dataw_crc_converter_converter_sink_payload_data;
wire          dataw_crc_converter_converter_source_valid;
wire          dataw_crc_converter_converter_source_ready;
reg           dataw_crc_converter_converter_source_first = 1'd0;
reg           dataw_crc_converter_converter_source_last = 1'd0;
reg     [7:0] dataw_crc_converter_converter_source_payload_data = 8'd0;
reg     [3:0] dataw_crc_converter_converter_source_payload_valid_token_count = 4'd0;
reg     [2:0] dataw_crc_converter_converter_demux = 3'd0;
wire          dataw_crc_converter_converter_load_part;
reg           dataw_crc_converter_converter_strobe_all = 1'd0;
wire          dataw_crc_converter_source_source_valid;
wire          dataw_crc_converter_source_source_ready;
wire          dataw_crc_converter_source_source_first;
wire          dataw_crc_converter_source_source_last;
wire    [7:0] dataw_crc_converter_source_source_payload_data;
wire          dataw_crc_buf_sink_sink_valid;
wire          dataw_crc_buf_sink_sink_ready;
wire          dataw_crc_buf_sink_sink_first;
wire          dataw_crc_buf_sink_sink_last;
wire    [7:0] dataw_crc_buf_sink_sink_payload_data;
wire          dataw_crc_buf_source_source_valid;
wire          dataw_crc_buf_source_source_ready;
wire          dataw_crc_buf_source_source_first;
wire          dataw_crc_buf_source_source_last;
wire    [7:0] dataw_crc_buf_source_source_payload_data;
wire          dataw_crc_buf_pipe_valid_sink_valid;
wire          dataw_crc_buf_pipe_valid_sink_ready;
wire          dataw_crc_buf_pipe_valid_sink_first;
wire          dataw_crc_buf_pipe_valid_sink_last;
wire    [7:0] dataw_crc_buf_pipe_valid_sink_payload_data;
reg           dataw_crc_buf_pipe_valid_source_valid = 1'd0;
wire          dataw_crc_buf_pipe_valid_source_ready;
reg           dataw_crc_buf_pipe_valid_source_first = 1'd0;
reg           dataw_crc_buf_pipe_valid_source_last = 1'd0;
reg     [7:0] dataw_crc_buf_pipe_valid_source_payload_data = 8'd0;
reg           dataw_crc_reset = 1'd0;
wire          datar_pads_in_pads_in_valid;
wire          datar_pads_in_pads_in_ready;
reg           datar_pads_in_pads_in_first = 1'd0;
reg           datar_pads_in_pads_in_last = 1'd0;
reg           datar_pads_in_pads_in_payload_clk = 1'd0;
wire          datar_pads_in_pads_in_payload_cmd_i;
reg           datar_pads_in_pads_in_payload_cmd_o = 1'd0;
reg           datar_pads_in_pads_in_payload_cmd_oe = 1'd0;
wire    [3:0] datar_pads_in_pads_in_payload_data_i;
reg     [3:0] datar_pads_in_pads_in_payload_data_o = 4'd0;
reg           datar_pads_in_pads_in_payload_data_oe = 1'd0;
reg           datar_pads_in_pads_in_payload_data_i_ce = 1'd0;
wire          datar_pads_out_ready;
reg           datar_pads_out_payload_clk = 1'd0;
reg           datar_pads_out_payload_cmd_o = 1'd0;
reg           datar_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] datar_pads_out_payload_data_o = 4'd0;
reg           datar_pads_out_payload_data_oe = 1'd0;
reg           datar_sink_valid = 1'd0;
reg           datar_sink_ready = 1'd0;
reg           datar_sink_last = 1'd0;
reg     [9:0] datar_sink_payload_block_length = 10'd0;
reg           datar_source_source_valid = 1'd0;
reg           datar_source_source_ready = 1'd0;
reg           datar_source_source_first = 1'd0;
reg           datar_source_source_last = 1'd0;
reg     [7:0] datar_source_source_payload_data = 8'd0;
reg     [2:0] datar_source_source_payload_status = 3'd0;
reg           datar_stop = 1'd0;
reg    [31:0] datar_timeout = 32'd125000000;
reg     [9:0] datar_count = 10'd0;
wire          datar_datar_pads_in_valid;
reg           datar_datar_pads_in_ready = 1'd0;
wire          datar_datar_pads_in_first;
wire          datar_datar_pads_in_last;
wire          datar_datar_pads_in_payload_clk;
wire          datar_datar_pads_in_payload_cmd_i;
wire          datar_datar_pads_in_payload_cmd_o;
wire          datar_datar_pads_in_payload_cmd_oe;
wire    [3:0] datar_datar_pads_in_payload_data_i;
wire    [3:0] datar_datar_pads_in_payload_data_o;
wire          datar_datar_pads_in_payload_data_oe;
wire          datar_datar_pads_in_payload_data_i_ce;
wire          datar_datar_source_valid;
reg           datar_datar_source_ready = 1'd0;
wire          datar_datar_source_first;
wire          datar_datar_source_last;
wire    [7:0] datar_datar_source_payload_data;
wire          datar_datar_start;
reg           datar_datar_run = 1'd0;
wire          datar_datar_converter_converter_sink_valid;
wire          datar_datar_converter_converter_sink_ready;
reg           datar_datar_converter_converter_sink_first = 1'd0;
reg           datar_datar_converter_converter_sink_last = 1'd0;
wire    [3:0] datar_datar_converter_converter_sink_payload_data;
wire          datar_datar_converter_converter_source_valid;
wire          datar_datar_converter_converter_source_ready;
reg           datar_datar_converter_converter_source_first = 1'd0;
reg           datar_datar_converter_converter_source_last = 1'd0;
reg     [7:0] datar_datar_converter_converter_source_payload_data = 8'd0;
reg     [1:0] datar_datar_converter_converter_source_payload_valid_token_count = 2'd0;
reg           datar_datar_converter_converter_demux = 1'd0;
wire          datar_datar_converter_converter_load_part;
reg           datar_datar_converter_converter_strobe_all = 1'd0;
wire          datar_datar_converter_source_source_valid;
wire          datar_datar_converter_source_source_ready;
wire          datar_datar_converter_source_source_first;
wire          datar_datar_converter_source_source_last;
wire    [7:0] datar_datar_converter_source_source_payload_data;
wire          datar_datar_buf_sink_sink_valid;
wire          datar_datar_buf_sink_sink_ready;
wire          datar_datar_buf_sink_sink_first;
wire          datar_datar_buf_sink_sink_last;
wire    [7:0] datar_datar_buf_sink_sink_payload_data;
wire          datar_datar_buf_source_source_valid;
wire          datar_datar_buf_source_source_ready;
wire          datar_datar_buf_source_source_first;
wire          datar_datar_buf_source_source_last;
wire    [7:0] datar_datar_buf_source_source_payload_data;
wire          datar_datar_buf_pipe_valid_sink_valid;
wire          datar_datar_buf_pipe_valid_sink_ready;
wire          datar_datar_buf_pipe_valid_sink_first;
wire          datar_datar_buf_pipe_valid_sink_last;
wire    [7:0] datar_datar_buf_pipe_valid_sink_payload_data;
reg           datar_datar_buf_pipe_valid_source_valid = 1'd0;
wire          datar_datar_buf_pipe_valid_source_ready;
reg           datar_datar_buf_pipe_valid_source_first = 1'd0;
reg           datar_datar_buf_pipe_valid_source_last = 1'd0;
reg     [7:0] datar_datar_buf_pipe_valid_source_payload_data = 8'd0;
reg           datar_datar_reset = 1'd0;
wire          sdpads_clk;
wire          sdpads_cmd_i;
wire          sdpads_cmd_o;
wire          sdpads_cmd_oe;
wire    [3:0] sdpads_data_i;
wire    [3:0] sdpads_data_o;
wire          sdpads_data_oe;
reg           sdpads_data_i_ce = 1'd0;
reg     [1:0] clocker_clk_delay = 2'd0;
reg           card_detect_irq = 1'd0;
reg           card_detect_d = 1'd0;
wire          sdcore_sink_sink_valid0;
wire          sdcore_sink_sink_ready0;
wire          sdcore_sink_sink_first0;
wire          sdcore_sink_sink_last0;
wire    [7:0] sdcore_sink_sink_payload_data0;
wire          sdcore_source_source_valid0;
wire          sdcore_source_source_ready0;
wire          sdcore_source_source_first0;
wire          sdcore_source_source_last0;
wire    [7:0] sdcore_source_source_payload_data0;
reg    [31:0] sdcore_cmd_argument_storage = 32'd0;
reg           sdcore_cmd_argument_re = 1'd0;
wire    [1:0] sdcore_csrfield_cmd_type;
wire    [1:0] sdcore_csrfield_data_type;
wire    [5:0] sdcore_csrfield_cmd;
reg    [13:0] sdcore_cmd_command_storage = 14'd0;
reg           sdcore_cmd_command_re = 1'd0;
reg           sdcore_cmd_send_storage = 1'd0;
reg           sdcore_cmd_send_re = 1'd0;
reg   [127:0] sdcore_cmd_response_status = 128'd0;
wire          sdcore_cmd_response_we;
reg           sdcore_cmd_response_re = 1'd0;
wire          sdcore_csrfield_done0;
wire          sdcore_csrfield_error0;
wire          sdcore_csrfield_timeout0;
wire          sdcore_csrfield_crc0;
reg     [3:0] sdcore_cmd_event_status = 4'd0;
wire          sdcore_cmd_event_we;
reg           sdcore_cmd_event_re = 1'd0;
wire          sdcore_csrfield_done1;
wire          sdcore_csrfield_error1;
wire          sdcore_csrfield_timeout1;
wire          sdcore_csrfield_crc1;
reg     [3:0] sdcore_data_event_status = 4'd0;
wire          sdcore_data_event_we;
reg           sdcore_data_event_re = 1'd0;
reg     [9:0] sdcore_block_length_storage = 10'd0;
reg           sdcore_block_length_re = 1'd0;
reg    [31:0] sdcore_block_count_storage = 32'd0;
reg           sdcore_block_count_re = 1'd0;
wire          sdcore_crc7_inserter_reset;
wire          sdcore_crc7_inserter_enable;
wire   [39:0] sdcore_crc7_inserter_din;
reg     [6:0] sdcore_crc7_inserter_crc = 7'd0;
reg     [6:0] sdcore_crc7_inserter_reg0 = 7'd0;
wire    [6:0] sdcore_crc7_inserter_reg1;
wire    [6:0] sdcore_crc7_inserter_reg2;
wire    [6:0] sdcore_crc7_inserter_reg3;
wire    [6:0] sdcore_crc7_inserter_reg4;
wire    [6:0] sdcore_crc7_inserter_reg5;
wire    [6:0] sdcore_crc7_inserter_reg6;
wire    [6:0] sdcore_crc7_inserter_reg7;
wire    [6:0] sdcore_crc7_inserter_reg8;
wire    [6:0] sdcore_crc7_inserter_reg9;
wire    [6:0] sdcore_crc7_inserter_reg10;
wire    [6:0] sdcore_crc7_inserter_reg11;
wire    [6:0] sdcore_crc7_inserter_reg12;
wire    [6:0] sdcore_crc7_inserter_reg13;
wire    [6:0] sdcore_crc7_inserter_reg14;
wire    [6:0] sdcore_crc7_inserter_reg15;
wire    [6:0] sdcore_crc7_inserter_reg16;
wire    [6:0] sdcore_crc7_inserter_reg17;
wire    [6:0] sdcore_crc7_inserter_reg18;
wire    [6:0] sdcore_crc7_inserter_reg19;
wire    [6:0] sdcore_crc7_inserter_reg20;
wire    [6:0] sdcore_crc7_inserter_reg21;
wire    [6:0] sdcore_crc7_inserter_reg22;
wire    [6:0] sdcore_crc7_inserter_reg23;
wire    [6:0] sdcore_crc7_inserter_reg24;
wire    [6:0] sdcore_crc7_inserter_reg25;
wire    [6:0] sdcore_crc7_inserter_reg26;
wire    [6:0] sdcore_crc7_inserter_reg27;
wire    [6:0] sdcore_crc7_inserter_reg28;
wire    [6:0] sdcore_crc7_inserter_reg29;
wire    [6:0] sdcore_crc7_inserter_reg30;
wire    [6:0] sdcore_crc7_inserter_reg31;
wire    [6:0] sdcore_crc7_inserter_reg32;
wire    [6:0] sdcore_crc7_inserter_reg33;
wire    [6:0] sdcore_crc7_inserter_reg34;
wire    [6:0] sdcore_crc7_inserter_reg35;
wire    [6:0] sdcore_crc7_inserter_reg36;
wire    [6:0] sdcore_crc7_inserter_reg37;
wire    [6:0] sdcore_crc7_inserter_reg38;
wire    [6:0] sdcore_crc7_inserter_reg39;
wire    [6:0] sdcore_crc7_inserter_reg40;
wire          sdcore_crc16_inserter_sink_valid;
reg           sdcore_crc16_inserter_sink_ready = 1'd0;
wire          sdcore_crc16_inserter_sink_first;
wire          sdcore_crc16_inserter_sink_last;
wire    [7:0] sdcore_crc16_inserter_sink_payload_data;
reg           sdcore_crc16_inserter_source_valid = 1'd0;
reg           sdcore_crc16_inserter_source_ready = 1'd0;
reg           sdcore_crc16_inserter_source_first = 1'd0;
reg           sdcore_crc16_inserter_source_last = 1'd0;
reg     [7:0] sdcore_crc16_inserter_source_payload_data = 8'd0;
reg     [2:0] sdcore_crc16_inserter_count = 3'd0;
wire          sdcore_crc16_inserter_crc0_reset;
wire          sdcore_crc16_inserter_crc0_enable;
reg     [1:0] sdcore_crc16_inserter_crc0_din = 2'd0;
reg    [15:0] sdcore_crc16_inserter_crc0_crc = 16'd0;
reg    [15:0] sdcore_crc16_inserter_crc0_reg0 = 16'd0;
wire   [15:0] sdcore_crc16_inserter_crc0_reg1;
wire   [15:0] sdcore_crc16_inserter_crc0_reg2;
wire          sdcore_crc16_inserter_crc1_reset;
wire          sdcore_crc16_inserter_crc1_enable;
reg     [1:0] sdcore_crc16_inserter_crc1_din = 2'd0;
reg    [15:0] sdcore_crc16_inserter_crc1_crc = 16'd0;
reg    [15:0] sdcore_crc16_inserter_crc1_reg0 = 16'd0;
wire   [15:0] sdcore_crc16_inserter_crc1_reg1;
wire   [15:0] sdcore_crc16_inserter_crc1_reg2;
wire          sdcore_crc16_inserter_crc2_reset;
wire          sdcore_crc16_inserter_crc2_enable;
reg     [1:0] sdcore_crc16_inserter_crc2_din = 2'd0;
reg    [15:0] sdcore_crc16_inserter_crc2_crc = 16'd0;
reg    [15:0] sdcore_crc16_inserter_crc2_reg0 = 16'd0;
wire   [15:0] sdcore_crc16_inserter_crc2_reg1;
wire   [15:0] sdcore_crc16_inserter_crc2_reg2;
wire          sdcore_crc16_inserter_crc3_reset;
wire          sdcore_crc16_inserter_crc3_enable;
reg     [1:0] sdcore_crc16_inserter_crc3_din = 2'd0;
reg    [15:0] sdcore_crc16_inserter_crc3_crc = 16'd0;
reg    [15:0] sdcore_crc16_inserter_crc3_reg0 = 16'd0;
wire   [15:0] sdcore_crc16_inserter_crc3_reg1;
wire   [15:0] sdcore_crc16_inserter_crc3_reg2;
reg           sdcore_sink_sink_valid1 = 1'd0;
wire          sdcore_sink_sink_ready1;
reg           sdcore_sink_sink_first1 = 1'd0;
reg           sdcore_sink_sink_last1 = 1'd0;
reg     [7:0] sdcore_sink_sink_payload_data1 = 8'd0;
wire          sdcore_source_source_valid1;
wire          sdcore_source_source_ready1;
wire          sdcore_source_source_first1;
wire          sdcore_source_source_last1;
wire    [7:0] sdcore_source_source_payload_data1;
wire          sdcore_fifo_sink_valid;
wire          sdcore_fifo_sink_ready;
wire          sdcore_fifo_sink_first;
wire          sdcore_fifo_sink_last;
wire    [7:0] sdcore_fifo_sink_payload_data;
wire          sdcore_fifo_source_valid;
wire          sdcore_fifo_source_ready;
wire          sdcore_fifo_source_first;
wire          sdcore_fifo_source_last;
wire    [7:0] sdcore_fifo_source_payload_data;
wire          sdcore_fifo_syncfifo_we;
wire          sdcore_fifo_syncfifo_writable;
wire          sdcore_fifo_syncfifo_re;
wire          sdcore_fifo_syncfifo_readable;
wire    [9:0] sdcore_fifo_syncfifo_din;
wire    [9:0] sdcore_fifo_syncfifo_dout;
reg     [3:0] sdcore_fifo_level = 4'd0;
reg           sdcore_fifo_replace = 1'd0;
reg     [2:0] sdcore_fifo_produce = 3'd0;
reg     [2:0] sdcore_fifo_consume = 3'd0;
reg     [2:0] sdcore_fifo_wrport_adr = 3'd0;
wire    [9:0] sdcore_fifo_wrport_dat_r;
wire          sdcore_fifo_wrport_we;
wire    [9:0] sdcore_fifo_wrport_dat_w;
wire          sdcore_fifo_do_read;
wire    [2:0] sdcore_fifo_rdport_adr;
wire    [9:0] sdcore_fifo_rdport_dat_r;
wire    [7:0] sdcore_fifo_fifo_in_payload_data;
wire          sdcore_fifo_fifo_in_first;
wire          sdcore_fifo_fifo_in_last;
wire    [7:0] sdcore_fifo_fifo_out_payload_data;
wire          sdcore_fifo_fifo_out_first;
wire          sdcore_fifo_fifo_out_last;
wire          sdcore_fifo_reset;
wire    [1:0] sdcore_cmd_type;
reg     [2:0] sdcore_cmd_count = 3'd0;
reg           sdcore_cmd_done = 1'd0;
reg           sdcore_cmd_error = 1'd0;
reg           sdcore_cmd_timeout = 1'd0;
wire    [1:0] sdcore_data_type;
reg    [31:0] sdcore_data_count = 32'd0;
reg           sdcore_data_done = 1'd0;
reg           sdcore_data_error = 1'd0;
reg           sdcore_data_timeout = 1'd0;
wire    [5:0] sdcore_cmd;
wire   [31:0] interface0_bus_adr;
wire   [31:0] interface0_bus_dat_w;
wire   [31:0] interface0_bus_dat_r;
wire    [3:0] interface0_bus_sel;
wire          interface0_bus_cyc;
wire          interface0_bus_stb;
wire          interface0_bus_ack;
wire          interface0_bus_we;
reg     [2:0] interface0_bus_cti = 3'd0;
reg     [1:0] interface0_bus_bte = 2'd0;
wire          interface0_bus_err;
wire          sdblock2mem_sink_sink_valid0;
reg           sdblock2mem_sink_sink_ready0 = 1'd0;
wire          sdblock2mem_sink_sink_first;
wire          sdblock2mem_sink_sink_last0;
wire    [7:0] sdblock2mem_sink_sink_payload_data0;
reg           sdblock2mem_irq = 1'd0;
reg           sdblock2mem_fifo_sink_valid = 1'd0;
wire          sdblock2mem_fifo_sink_ready;
reg           sdblock2mem_fifo_sink_first = 1'd0;
reg           sdblock2mem_fifo_sink_last = 1'd0;
reg     [7:0] sdblock2mem_fifo_sink_payload_data = 8'd0;
wire          sdblock2mem_fifo_source_valid;
wire          sdblock2mem_fifo_source_ready;
wire          sdblock2mem_fifo_source_first;
wire          sdblock2mem_fifo_source_last;
wire    [7:0] sdblock2mem_fifo_source_payload_data;
wire          sdblock2mem_fifo_re;
reg           sdblock2mem_fifo_readable = 1'd0;
wire          sdblock2mem_fifo_syncfifo_we;
wire          sdblock2mem_fifo_syncfifo_writable;
wire          sdblock2mem_fifo_syncfifo_re;
wire          sdblock2mem_fifo_syncfifo_readable;
wire    [9:0] sdblock2mem_fifo_syncfifo_din;
wire    [9:0] sdblock2mem_fifo_syncfifo_dout;
reg     [9:0] sdblock2mem_fifo_level0 = 10'd0;
reg           sdblock2mem_fifo_replace = 1'd0;
reg     [8:0] sdblock2mem_fifo_produce = 9'd0;
reg     [8:0] sdblock2mem_fifo_consume = 9'd0;
reg     [8:0] sdblock2mem_fifo_wrport_adr = 9'd0;
wire    [9:0] sdblock2mem_fifo_wrport_dat_r;
wire          sdblock2mem_fifo_wrport_we;
wire    [9:0] sdblock2mem_fifo_wrport_dat_w;
wire          sdblock2mem_fifo_do_read;
wire    [8:0] sdblock2mem_fifo_rdport_adr;
wire    [9:0] sdblock2mem_fifo_rdport_dat_r;
wire          sdblock2mem_fifo_rdport_re;
wire    [9:0] sdblock2mem_fifo_level1;
wire    [7:0] sdblock2mem_fifo_fifo_in_payload_data;
wire          sdblock2mem_fifo_fifo_in_first;
wire          sdblock2mem_fifo_fifo_in_last;
wire    [7:0] sdblock2mem_fifo_fifo_out_payload_data;
wire          sdblock2mem_fifo_fifo_out_first;
wire          sdblock2mem_fifo_fifo_out_last;
wire          sdblock2mem_converter_sink_valid;
wire          sdblock2mem_converter_sink_ready;
wire          sdblock2mem_converter_sink_first;
wire          sdblock2mem_converter_sink_last;
wire    [7:0] sdblock2mem_converter_sink_payload_data;
wire          sdblock2mem_converter_source_valid;
wire          sdblock2mem_converter_source_ready;
reg           sdblock2mem_converter_source_first = 1'd0;
reg           sdblock2mem_converter_source_last = 1'd0;
reg    [31:0] sdblock2mem_converter_source_payload_data = 32'd0;
reg     [2:0] sdblock2mem_converter_source_payload_valid_token_count = 3'd0;
reg     [1:0] sdblock2mem_converter_demux = 2'd0;
wire          sdblock2mem_converter_load_part;
reg           sdblock2mem_converter_strobe_all = 1'd0;
wire          sdblock2mem_source_source_valid;
wire          sdblock2mem_source_source_ready;
wire          sdblock2mem_source_source_first;
wire          sdblock2mem_source_source_last;
wire   [31:0] sdblock2mem_source_source_payload_data;
reg           sdblock2mem_sink_sink_valid1 = 1'd0;
wire          sdblock2mem_sink_sink_ready1;
reg           sdblock2mem_sink_sink_last1 = 1'd0;
reg    [31:0] sdblock2mem_sink_sink_payload_address = 32'd0;
reg    [31:0] sdblock2mem_sink_sink_payload_data1 = 32'd0;
wire          sdblock2mem_wishbonedmawriter_sink_valid;
reg           sdblock2mem_wishbonedmawriter_sink_ready = 1'd0;
wire          sdblock2mem_wishbonedmawriter_sink_first;
wire          sdblock2mem_wishbonedmawriter_sink_last;
wire   [31:0] sdblock2mem_wishbonedmawriter_sink_payload_data;
reg    [63:0] sdblock2mem_wishbonedmawriter_base_storage = 64'd0;
reg           sdblock2mem_wishbonedmawriter_base_re = 1'd0;
reg    [31:0] sdblock2mem_wishbonedmawriter_length_storage = 32'd0;
reg           sdblock2mem_wishbonedmawriter_length_re = 1'd0;
reg           sdblock2mem_wishbonedmawriter_enable_storage = 1'd0;
reg           sdblock2mem_wishbonedmawriter_enable_re = 1'd0;
reg           sdblock2mem_wishbonedmawriter_done_status = 1'd0;
wire          sdblock2mem_wishbonedmawriter_done_we;
reg           sdblock2mem_wishbonedmawriter_done_re = 1'd0;
reg           sdblock2mem_wishbonedmawriter_loop_storage = 1'd0;
reg           sdblock2mem_wishbonedmawriter_loop_re = 1'd0;
wire   [31:0] sdblock2mem_wishbonedmawriter_offset_status;
wire          sdblock2mem_wishbonedmawriter_offset_we;
reg           sdblock2mem_wishbonedmawriter_offset_re = 1'd0;
wire   [31:0] sdblock2mem_wishbonedmawriter_base;
reg    [31:0] sdblock2mem_wishbonedmawriter_offset = 32'd0;
wire   [31:0] sdblock2mem_wishbonedmawriter_length;
wire          sdblock2mem_wishbonedmawriter_reset;
wire          sdblock2mem_start;
reg           sdblock2mem_connect = 1'd0;
reg           sdblock2mem_done_d = 1'd0;
reg    [31:0] interface1_bus_adr = 32'd0;
reg    [31:0] interface1_bus_dat_w = 32'd0;
wire   [31:0] interface1_bus_dat_r;
reg     [3:0] interface1_bus_sel = 4'd0;
reg           interface1_bus_cyc = 1'd0;
reg           interface1_bus_stb = 1'd0;
wire          interface1_bus_ack;
reg           interface1_bus_we = 1'd0;
reg     [2:0] interface1_bus_cti = 3'd0;
reg     [1:0] interface1_bus_bte = 2'd0;
wire          interface1_bus_err;
wire          sdmem2block_source_source_valid0;
wire          sdmem2block_source_source_ready0;
wire          sdmem2block_source_source_first0;
reg           sdmem2block_source_source_last0 = 1'd0;
wire    [7:0] sdmem2block_source_source_payload_data0;
reg           sdmem2block_irq = 1'd0;
reg           sdmem2block_dma_sink_valid = 1'd0;
reg           sdmem2block_dma_sink_ready = 1'd0;
reg           sdmem2block_dma_sink_last = 1'd0;
reg    [31:0] sdmem2block_dma_sink_payload_address = 32'd0;
reg           sdmem2block_dma_source_valid = 1'd0;
wire          sdmem2block_dma_source_ready;
reg           sdmem2block_dma_source_first = 1'd0;
reg           sdmem2block_dma_source_last = 1'd0;
reg    [31:0] sdmem2block_dma_source_payload_data = 32'd0;
reg    [31:0] sdmem2block_dma_data = 32'd0;
reg    [63:0] sdmem2block_dma_base_storage = 64'd0;
reg           sdmem2block_dma_base_re = 1'd0;
reg    [31:0] sdmem2block_dma_length_storage = 32'd0;
reg           sdmem2block_dma_length_re = 1'd0;
reg           sdmem2block_dma_enable_storage = 1'd0;
reg           sdmem2block_dma_enable_re = 1'd0;
reg           sdmem2block_dma_done_status = 1'd0;
wire          sdmem2block_dma_done_we;
reg           sdmem2block_dma_done_re = 1'd0;
reg           sdmem2block_dma_loop_storage = 1'd0;
reg           sdmem2block_dma_loop_re = 1'd0;
wire   [31:0] sdmem2block_dma_offset_status;
wire          sdmem2block_dma_offset_we;
reg           sdmem2block_dma_offset_re = 1'd0;
wire   [31:0] sdmem2block_dma_base;
reg    [31:0] sdmem2block_dma_offset = 32'd0;
wire   [31:0] sdmem2block_dma_length;
wire          sdmem2block_dma_reset;
wire          sdmem2block_converter_sink_valid;
wire          sdmem2block_converter_sink_ready;
wire          sdmem2block_converter_sink_first;
wire          sdmem2block_converter_sink_last;
wire   [31:0] sdmem2block_converter_sink_payload_data;
wire          sdmem2block_converter_source_valid;
wire          sdmem2block_converter_source_ready;
wire          sdmem2block_converter_source_first;
wire          sdmem2block_converter_source_last;
reg     [7:0] sdmem2block_converter_source_payload_data = 8'd0;
wire          sdmem2block_converter_source_payload_valid_token_count;
reg     [1:0] sdmem2block_converter_mux = 2'd0;
wire          sdmem2block_converter_first;
wire          sdmem2block_converter_last;
wire          sdmem2block_source_source_valid1;
wire          sdmem2block_source_source_ready1;
wire          sdmem2block_source_source_first1;
wire          sdmem2block_source_source_last1;
wire    [7:0] sdmem2block_source_source_payload_data1;
wire          sdmem2block_fifo_sink_valid;
wire          sdmem2block_fifo_sink_ready;
wire          sdmem2block_fifo_sink_first;
wire          sdmem2block_fifo_sink_last;
wire    [7:0] sdmem2block_fifo_sink_payload_data;
wire          sdmem2block_fifo_source_valid;
wire          sdmem2block_fifo_source_ready;
wire          sdmem2block_fifo_source_first;
wire          sdmem2block_fifo_source_last;
wire    [7:0] sdmem2block_fifo_source_payload_data;
wire          sdmem2block_fifo_re;
reg           sdmem2block_fifo_readable = 1'd0;
wire          sdmem2block_fifo_syncfifo_we;
wire          sdmem2block_fifo_syncfifo_writable;
wire          sdmem2block_fifo_syncfifo_re;
wire          sdmem2block_fifo_syncfifo_readable;
wire    [9:0] sdmem2block_fifo_syncfifo_din;
wire    [9:0] sdmem2block_fifo_syncfifo_dout;
reg     [9:0] sdmem2block_fifo_level0 = 10'd0;
reg           sdmem2block_fifo_replace = 1'd0;
reg     [8:0] sdmem2block_fifo_produce = 9'd0;
reg     [8:0] sdmem2block_fifo_consume = 9'd0;
reg     [8:0] sdmem2block_fifo_wrport_adr = 9'd0;
wire    [9:0] sdmem2block_fifo_wrport_dat_r;
wire          sdmem2block_fifo_wrport_we;
wire    [9:0] sdmem2block_fifo_wrport_dat_w;
wire          sdmem2block_fifo_do_read;
wire    [8:0] sdmem2block_fifo_rdport_adr;
wire    [9:0] sdmem2block_fifo_rdport_dat_r;
wire          sdmem2block_fifo_rdport_re;
wire    [9:0] sdmem2block_fifo_level1;
wire    [7:0] sdmem2block_fifo_fifo_in_payload_data;
wire          sdmem2block_fifo_fifo_in_first;
wire          sdmem2block_fifo_fifo_in_last;
wire    [7:0] sdmem2block_fifo_fifo_out_payload_data;
wire          sdmem2block_fifo_fifo_out_first;
wire          sdmem2block_fifo_fifo_out_last;
reg     [8:0] sdmem2block_count = 9'd0;
reg           sdmem2block_done_d = 1'd0;
wire          sdirq_irq;
wire          card_detect_status1;
reg           card_detect_pending = 1'd0;
wire          card_detect_trigger;
reg           card_detect_clear = 1'd0;
wire          block2mem_dma_status;
reg           block2mem_dma_pending = 1'd0;
wire          block2mem_dma_trigger;
reg           block2mem_dma_clear = 1'd0;
wire          mem2block_dma_status;
reg           mem2block_dma_pending = 1'd0;
wire          mem2block_dma_trigger;
reg           mem2block_dma_clear = 1'd0;
wire          cmd_done_status;
wire          cmd_done_pending;
wire          cmd_done_trigger;
reg           cmd_done_clear = 1'd0;
wire          eventmanager_card_detect0;
wire          eventmanager_block2mem_dma0;
wire          eventmanager_mem2block_dma0;
wire          eventmanager_cmd_done0;
reg     [3:0] eventmanager_status_status = 4'd0;
wire          eventmanager_status_we;
reg           eventmanager_status_re = 1'd0;
wire          eventmanager_card_detect1;
wire          eventmanager_block2mem_dma1;
wire          eventmanager_mem2block_dma1;
wire          eventmanager_cmd_done1;
reg     [3:0] eventmanager_pending_status = 4'd0;
wire          eventmanager_pending_we;
reg           eventmanager_pending_re = 1'd0;
reg     [3:0] eventmanager_pending_r = 4'd0;
wire          eventmanager_card_detect2;
wire          eventmanager_block2mem_dma2;
wire          eventmanager_mem2block_dma2;
wire          eventmanager_cmd_done2;
reg     [3:0] eventmanager_enable_storage = 4'd0;
reg           eventmanager_enable_re = 1'd0;
reg    [11:0] temperature_status = 12'd0;
wire          temperature_we;
reg           temperature_re = 1'd0;
reg    [11:0] vccint_status = 12'd0;
wire          vccint_we;
reg           vccint_re = 1'd0;
reg    [11:0] vccaux_status = 12'd0;
wire          vccaux_we;
reg           vccaux_re = 1'd0;
reg    [11:0] vccbram_status = 12'd0;
wire          vccbram_we;
reg           vccbram_re = 1'd0;
reg           eoc_status = 1'd0;
wire          eoc_we;
reg           eoc_re = 1'd0;
reg           eos_status = 1'd0;
wire          eos_we;
reg           eos_re = 1'd0;
wire    [7:0] alarm;
wire          ot;
wire          busy;
wire    [6:0] channel;
wire          eoc;
wire          eos;
reg           dwe = 1'd0;
reg           den = 1'd0;
wire          drdy;
reg     [6:0] dadr = 7'd0;
reg    [15:0] di = 16'd0;
wire   [15:0] do_1;
reg           drp_en = 1'd0;
wire          snn_clk_clk;
wire          snn_clk_rst;
wire          clkout;
wire          clkout_buf;
wire          snn_3x2_clk;
reg     [2:0] snn_3x2_next_core_storage = 3'd0;
reg           snn_3x2_next_core_re = 1'd0;
wire  [367:0] snn_3x2_param_wdata;
reg    [31:0] snn_3x2_param0_storage = 32'd0;
reg           snn_3x2_param0_re = 1'd0;
reg    [31:0] snn_3x2_param1_storage = 32'd0;
reg           snn_3x2_param1_re = 1'd0;
reg    [31:0] snn_3x2_param2_storage = 32'd0;
reg           snn_3x2_param2_re = 1'd0;
reg    [31:0] snn_3x2_param3_storage = 32'd0;
reg           snn_3x2_param3_re = 1'd0;
reg    [31:0] snn_3x2_param4_storage = 32'd0;
reg           snn_3x2_param4_re = 1'd0;
reg    [31:0] snn_3x2_param5_storage = 32'd0;
reg           snn_3x2_param5_re = 1'd0;
reg    [31:0] snn_3x2_param6_storage = 32'd0;
reg           snn_3x2_param6_re = 1'd0;
reg    [31:0] snn_3x2_param7_storage = 32'd0;
reg           snn_3x2_param7_re = 1'd0;
reg    [31:0] snn_3x2_param8_storage = 32'd0;
reg           snn_3x2_param8_re = 1'd0;
reg    [31:0] snn_3x2_param9_storage = 32'd0;
reg           snn_3x2_param9_re = 1'd0;
reg    [31:0] snn_3x2_param10_storage = 32'd0;
reg           snn_3x2_param10_re = 1'd0;
reg    [15:0] snn_3x2_param11_storage = 16'd0;
reg           snn_3x2_param11_re = 1'd0;
reg     [1:0] snn_3x2_neuron_inst_storage = 2'd0;
reg           snn_3x2_neuron_inst_re = 1'd0;
reg    [29:0] snn_3x2_packet_wdata_storage = 30'd0;
reg           snn_3x2_packet_wdata_re = 1'd0;
reg           snn_3x2_spike_en_storage = 1'd0;
reg           snn_3x2_spike_en_re = 1'd0;
reg           snn_3x2_load_end_storage = 1'd0;
reg           snn_3x2_load_end_re = 1'd0;
reg           snn_3x2_tick_ready_storage = 1'd0;
reg           snn_3x2_tick_ready_re = 1'd0;
wire          snn_3x2_tick_ready_we;
wire          snn_3x2_tick_ready_dat_w;
reg           snn_3x2_complete_storage = 1'd0;
reg           snn_3x2_complete_re = 1'd0;
wire          snn_3x2_complete_we;
wire          snn_3x2_complete_dat_w;
reg           snn_3x2_next_core_en_storage = 1'd0;
reg           snn_3x2_next_core_en_re = 1'd0;
wire          snn_3x2_next_core_en_we;
wire          snn_3x2_next_core_en_dat_w;
reg     [2:0] snn_3x2_grid_state_storage = 3'd0;
reg           snn_3x2_grid_state_re = 1'd0;
wire          snn_3x2_grid_state_we;
wire    [2:0] snn_3x2_grid_state_dat_w;
reg    [15:0] snn_3x2_msb_param_snn_storage = 16'd0;
reg           snn_3x2_msb_param_snn_re = 1'd0;
wire          snn_3x2_msb_param_snn_we;
wire   [15:0] snn_3x2_msb_param_snn_dat_w;
wire  [249:0] snn_3x2_spike_out;
reg    [31:0] snn_3x2_spike_out0_storage = 32'd0;
reg           snn_3x2_spike_out0_re = 1'd0;
wire          snn_3x2_spike_out0_we;
wire   [31:0] snn_3x2_spike_out0_dat_w;
reg    [31:0] snn_3x2_spike_out1_storage = 32'd0;
reg           snn_3x2_spike_out1_re = 1'd0;
wire          snn_3x2_spike_out1_we;
wire   [31:0] snn_3x2_spike_out1_dat_w;
reg    [31:0] snn_3x2_spike_out2_storage = 32'd0;
reg           snn_3x2_spike_out2_re = 1'd0;
wire          snn_3x2_spike_out2_we;
wire   [31:0] snn_3x2_spike_out2_dat_w;
reg    [31:0] snn_3x2_spike_out3_storage = 32'd0;
reg           snn_3x2_spike_out3_re = 1'd0;
wire          snn_3x2_spike_out3_we;
wire   [31:0] snn_3x2_spike_out3_dat_w;
reg    [31:0] snn_3x2_spike_out4_storage = 32'd0;
reg           snn_3x2_spike_out4_re = 1'd0;
wire          snn_3x2_spike_out4_we;
wire   [31:0] snn_3x2_spike_out4_dat_w;
reg    [31:0] snn_3x2_spike_out5_storage = 32'd0;
reg           snn_3x2_spike_out5_re = 1'd0;
wire          snn_3x2_spike_out5_we;
wire   [31:0] snn_3x2_spike_out5_dat_w;
reg    [31:0] snn_3x2_spike_out6_storage = 32'd0;
reg           snn_3x2_spike_out6_re = 1'd0;
wire          snn_3x2_spike_out6_we;
wire   [31:0] snn_3x2_spike_out6_dat_w;
reg    [25:0] snn_3x2_spike_out7_storage = 26'd0;
reg           snn_3x2_spike_out7_re = 1'd0;
wire          snn_3x2_spike_out7_we;
wire   [25:0] snn_3x2_spike_out7_dat_w;
reg           snn_3x2_spike_out_rinc_storage = 1'd0;
reg           snn_3x2_spike_out_rinc_re = 1'd0;
reg     [7:0] snn_3x2_packet_out_storage = 8'd0;
reg           snn_3x2_packet_out_re = 1'd0;
wire          snn_3x2_packet_out_we;
wire    [7:0] snn_3x2_packet_out_dat_w;
reg           snn_3x2_packet_out_rinc_storage = 1'd0;
reg           snn_3x2_packet_out_rinc_re = 1'd0;
wire          snn_3x2_packet_wfull;
wire          snn_3x2_param_wfull;
wire          snn_3x2_neuron_inst_wfull;
wire          snn_3x2_packet_out_rempty;
wire          snn_3x2_spike_out_rempty;
reg     [4:0] snn_3x2_snn_status_status = 5'd0;
wire          snn_3x2_snn_status_we;
reg           snn_3x2_snn_status_re = 1'd0;
reg    [13:0] soclinux_adr = 14'd0;
reg           soclinux_we = 1'd0;
reg    [31:0] soclinux_dat_w = 32'd0;
wire   [31:0] soclinux_dat_r;
wire   [29:0] soclinux_wishbone_adr;
wire   [31:0] soclinux_wishbone_dat_w;
reg    [31:0] soclinux_wishbone_dat_r = 32'd0;
wire    [3:0] soclinux_wishbone_sel;
wire          soclinux_wishbone_cyc;
wire          soclinux_wishbone_stb;
reg           soclinux_wishbone_ack = 1'd0;
wire          soclinux_wishbone_we;
wire    [2:0] soclinux_wishbone_cti;
wire    [1:0] soclinux_wishbone_bte;
reg           soclinux_wishbone_err = 1'd0;
wire   [29:0] socbushandler0_shared_adr;
wire   [31:0] socbushandler0_shared_dat_w;
reg    [31:0] socbushandler0_shared_dat_r = 32'd0;
wire    [3:0] socbushandler0_shared_sel;
wire          socbushandler0_shared_cyc;
wire          socbushandler0_shared_stb;
reg           socbushandler0_shared_ack = 1'd0;
wire          socbushandler0_shared_we;
wire    [2:0] socbushandler0_shared_cti;
wire    [1:0] socbushandler0_shared_bte;
wire          socbushandler0_shared_err;
wire          socbushandler0_request;
wire          socbushandler0_grant;
reg     [6:0] socbushandler0_slave_sel = 7'd0;
reg     [6:0] socbushandler0_slave_sel_r = 7'd0;
reg           socbushandler0_error = 1'd0;
wire          socbushandler0_wait;
wire          socbushandler0_done;
reg    [19:0] socbushandler0_count = 20'd1000000;
wire   [29:0] socbushandler1_shared_adr;
wire   [31:0] socbushandler1_shared_dat_w;
reg    [31:0] socbushandler1_shared_dat_r = 32'd0;
wire    [3:0] socbushandler1_shared_sel;
wire          socbushandler1_shared_cyc;
wire          socbushandler1_shared_stb;
reg           socbushandler1_shared_ack = 1'd0;
wire          socbushandler1_shared_we;
wire    [2:0] socbushandler1_shared_cti;
wire    [1:0] socbushandler1_shared_bte;
wire          socbushandler1_shared_err;
wire    [1:0] socbushandler1_request;
reg           socbushandler1_grant = 1'd0;
wire          socbushandler1_slave_sel;
reg           socbushandler1_slave_sel_r = 1'd0;
reg           socbushandler1_error = 1'd0;
wire          socbushandler1_wait;
wire          socbushandler1_done;
reg    [19:0] socbushandler1_count = 20'd1000000;
wire   [13:0] csr_bankarray_interface0_bank_bus_adr;
wire          csr_bankarray_interface0_bank_bus_we;
wire   [31:0] csr_bankarray_interface0_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank0_reset0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank0_reset0_r;
reg           csr_bankarray_csrbank0_reset0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank0_reset0_w;
reg           csr_bankarray_csrbank0_scratch0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_scratch0_r;
reg           csr_bankarray_csrbank0_scratch0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_scratch0_w;
reg           csr_bankarray_csrbank0_bus_errors_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_bus_errors_r;
reg           csr_bankarray_csrbank0_bus_errors_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_bus_errors_w;
wire          csr_bankarray_csrbank0_sel;
wire   [13:0] csr_bankarray_interface1_bank_bus_adr;
wire          csr_bankarray_interface1_bank_bus_we;
wire   [31:0] csr_bankarray_interface1_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank1_rst0_re = 1'd0;
wire          csr_bankarray_csrbank1_rst0_r;
reg           csr_bankarray_csrbank1_rst0_we = 1'd0;
wire          csr_bankarray_csrbank1_rst0_w;
reg           csr_bankarray_csrbank1_dly_sel0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank1_dly_sel0_r;
reg           csr_bankarray_csrbank1_dly_sel0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank1_dly_sel0_w;
reg           csr_bankarray_csrbank1_half_sys8x_taps0_re = 1'd0;
wire    [4:0] csr_bankarray_csrbank1_half_sys8x_taps0_r;
reg           csr_bankarray_csrbank1_half_sys8x_taps0_we = 1'd0;
wire    [4:0] csr_bankarray_csrbank1_half_sys8x_taps0_w;
reg           csr_bankarray_csrbank1_wlevel_en0_re = 1'd0;
wire          csr_bankarray_csrbank1_wlevel_en0_r;
reg           csr_bankarray_csrbank1_wlevel_en0_we = 1'd0;
wire          csr_bankarray_csrbank1_wlevel_en0_w;
reg           csr_bankarray_csrbank1_rdphase0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank1_rdphase0_r;
reg           csr_bankarray_csrbank1_rdphase0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank1_rdphase0_w;
reg           csr_bankarray_csrbank1_wrphase0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank1_wrphase0_r;
reg           csr_bankarray_csrbank1_wrphase0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank1_wrphase0_w;
wire          csr_bankarray_csrbank1_sel;
wire   [13:0] csr_bankarray_interface2_bank_bus_adr;
wire          csr_bankarray_interface2_bank_bus_we;
wire   [31:0] csr_bankarray_interface2_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank2_sram_writer_slot_re = 1'd0;
wire          csr_bankarray_csrbank2_sram_writer_slot_r;
reg           csr_bankarray_csrbank2_sram_writer_slot_we = 1'd0;
wire          csr_bankarray_csrbank2_sram_writer_slot_w;
reg           csr_bankarray_csrbank2_sram_writer_length_re = 1'd0;
wire   [10:0] csr_bankarray_csrbank2_sram_writer_length_r;
reg           csr_bankarray_csrbank2_sram_writer_length_we = 1'd0;
wire   [10:0] csr_bankarray_csrbank2_sram_writer_length_w;
reg           csr_bankarray_csrbank2_sram_writer_errors_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_sram_writer_errors_r;
reg           csr_bankarray_csrbank2_sram_writer_errors_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_sram_writer_errors_w;
reg           csr_bankarray_csrbank2_sram_writer_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank2_sram_writer_ev_status_r;
reg           csr_bankarray_csrbank2_sram_writer_ev_status_we = 1'd0;
wire          csr_bankarray_csrbank2_sram_writer_ev_status_w;
reg           csr_bankarray_csrbank2_sram_writer_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank2_sram_writer_ev_pending_r;
reg           csr_bankarray_csrbank2_sram_writer_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank2_sram_writer_ev_pending_w;
reg           csr_bankarray_csrbank2_sram_writer_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank2_sram_writer_ev_enable0_r;
reg           csr_bankarray_csrbank2_sram_writer_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank2_sram_writer_ev_enable0_w;
reg           csr_bankarray_csrbank2_sram_reader_ready_re = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_ready_r;
reg           csr_bankarray_csrbank2_sram_reader_ready_we = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_ready_w;
reg           csr_bankarray_csrbank2_sram_reader_level_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank2_sram_reader_level_r;
reg           csr_bankarray_csrbank2_sram_reader_level_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank2_sram_reader_level_w;
reg           csr_bankarray_csrbank2_sram_reader_slot0_re = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_slot0_r;
reg           csr_bankarray_csrbank2_sram_reader_slot0_we = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_slot0_w;
reg           csr_bankarray_csrbank2_sram_reader_length0_re = 1'd0;
wire   [10:0] csr_bankarray_csrbank2_sram_reader_length0_r;
reg           csr_bankarray_csrbank2_sram_reader_length0_we = 1'd0;
wire   [10:0] csr_bankarray_csrbank2_sram_reader_length0_w;
reg           csr_bankarray_csrbank2_sram_reader_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_ev_status_r;
reg           csr_bankarray_csrbank2_sram_reader_ev_status_we = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_ev_status_w;
reg           csr_bankarray_csrbank2_sram_reader_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_ev_pending_r;
reg           csr_bankarray_csrbank2_sram_reader_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_ev_pending_w;
reg           csr_bankarray_csrbank2_sram_reader_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_ev_enable0_r;
reg           csr_bankarray_csrbank2_sram_reader_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank2_sram_reader_ev_enable0_w;
reg           csr_bankarray_csrbank2_preamble_crc_re = 1'd0;
wire          csr_bankarray_csrbank2_preamble_crc_r;
reg           csr_bankarray_csrbank2_preamble_crc_we = 1'd0;
wire          csr_bankarray_csrbank2_preamble_crc_w;
reg           csr_bankarray_csrbank2_rx_datapath_preamble_errors_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_rx_datapath_preamble_errors_r;
reg           csr_bankarray_csrbank2_rx_datapath_preamble_errors_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_rx_datapath_preamble_errors_w;
reg           csr_bankarray_csrbank2_rx_datapath_crc_errors_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_rx_datapath_crc_errors_r;
reg           csr_bankarray_csrbank2_rx_datapath_crc_errors_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_rx_datapath_crc_errors_w;
wire          csr_bankarray_csrbank2_sel;
wire   [13:0] csr_bankarray_interface3_bank_bus_adr;
wire          csr_bankarray_interface3_bank_bus_we;
wire   [31:0] csr_bankarray_interface3_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank3_mode_detection_mode_re = 1'd0;
wire          csr_bankarray_csrbank3_mode_detection_mode_r;
reg           csr_bankarray_csrbank3_mode_detection_mode_we = 1'd0;
wire          csr_bankarray_csrbank3_mode_detection_mode_w;
reg           csr_bankarray_csrbank3_crg_reset0_re = 1'd0;
wire          csr_bankarray_csrbank3_crg_reset0_r;
reg           csr_bankarray_csrbank3_crg_reset0_we = 1'd0;
wire          csr_bankarray_csrbank3_crg_reset0_w;
reg           csr_bankarray_csrbank3_mdio_w0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank3_mdio_w0_r;
reg           csr_bankarray_csrbank3_mdio_w0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank3_mdio_w0_w;
reg           csr_bankarray_csrbank3_mdio_r_re = 1'd0;
wire          csr_bankarray_csrbank3_mdio_r_r;
reg           csr_bankarray_csrbank3_mdio_r_we = 1'd0;
wire          csr_bankarray_csrbank3_mdio_r_w;
wire          csr_bankarray_csrbank3_sel;
wire   [13:0] csr_bankarray_sram_bus_adr;
wire          csr_bankarray_sram_bus_we;
wire   [31:0] csr_bankarray_sram_bus_dat_w;
reg    [31:0] csr_bankarray_sram_bus_dat_r = 32'd0;
wire    [4:0] csr_bankarray_adr;
wire    [7:0] csr_bankarray_dat_r;
wire          csr_bankarray_sel;
reg           csr_bankarray_sel_r = 1'd0;
wire   [13:0] csr_bankarray_interface4_bank_bus_adr;
wire          csr_bankarray_interface4_bank_bus_we;
wire   [31:0] csr_bankarray_interface4_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank4_out0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank4_out0_r;
reg           csr_bankarray_csrbank4_out0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank4_out0_w;
wire          csr_bankarray_csrbank4_sel;
wire   [13:0] csr_bankarray_interface5_bank_bus_adr;
wire          csr_bankarray_interface5_bank_bus_we;
wire   [31:0] csr_bankarray_interface5_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank5_dma_base1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_dma_base1_r;
reg           csr_bankarray_csrbank5_dma_base1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_dma_base1_w;
reg           csr_bankarray_csrbank5_dma_base0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_dma_base0_r;
reg           csr_bankarray_csrbank5_dma_base0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_dma_base0_w;
reg           csr_bankarray_csrbank5_dma_length0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_dma_length0_r;
reg           csr_bankarray_csrbank5_dma_length0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_dma_length0_w;
reg           csr_bankarray_csrbank5_dma_enable0_re = 1'd0;
wire          csr_bankarray_csrbank5_dma_enable0_r;
reg           csr_bankarray_csrbank5_dma_enable0_we = 1'd0;
wire          csr_bankarray_csrbank5_dma_enable0_w;
reg           csr_bankarray_csrbank5_dma_done_re = 1'd0;
wire          csr_bankarray_csrbank5_dma_done_r;
reg           csr_bankarray_csrbank5_dma_done_we = 1'd0;
wire          csr_bankarray_csrbank5_dma_done_w;
reg           csr_bankarray_csrbank5_dma_loop0_re = 1'd0;
wire          csr_bankarray_csrbank5_dma_loop0_r;
reg           csr_bankarray_csrbank5_dma_loop0_we = 1'd0;
wire          csr_bankarray_csrbank5_dma_loop0_w;
reg           csr_bankarray_csrbank5_dma_offset_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_dma_offset_r;
reg           csr_bankarray_csrbank5_dma_offset_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_dma_offset_w;
wire          csr_bankarray_csrbank5_sel;
wire   [13:0] csr_bankarray_interface6_bank_bus_adr;
wire          csr_bankarray_interface6_bank_bus_we;
wire   [31:0] csr_bankarray_interface6_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface6_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank6_cmd_argument0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_argument0_r;
reg           csr_bankarray_csrbank6_cmd_argument0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_argument0_w;
reg           csr_bankarray_csrbank6_cmd_command0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank6_cmd_command0_r;
reg           csr_bankarray_csrbank6_cmd_command0_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank6_cmd_command0_w;
reg           csr_bankarray_csrbank6_cmd_send0_re = 1'd0;
wire          csr_bankarray_csrbank6_cmd_send0_r;
reg           csr_bankarray_csrbank6_cmd_send0_we = 1'd0;
wire          csr_bankarray_csrbank6_cmd_send0_w;
reg           csr_bankarray_csrbank6_cmd_response3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_response3_r;
reg           csr_bankarray_csrbank6_cmd_response3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_response3_w;
reg           csr_bankarray_csrbank6_cmd_response2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_response2_r;
reg           csr_bankarray_csrbank6_cmd_response2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_response2_w;
reg           csr_bankarray_csrbank6_cmd_response1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_response1_r;
reg           csr_bankarray_csrbank6_cmd_response1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_response1_w;
reg           csr_bankarray_csrbank6_cmd_response0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_response0_r;
reg           csr_bankarray_csrbank6_cmd_response0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_cmd_response0_w;
reg           csr_bankarray_csrbank6_cmd_event_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank6_cmd_event_r;
reg           csr_bankarray_csrbank6_cmd_event_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank6_cmd_event_w;
reg           csr_bankarray_csrbank6_data_event_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank6_data_event_r;
reg           csr_bankarray_csrbank6_data_event_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank6_data_event_w;
reg           csr_bankarray_csrbank6_block_length0_re = 1'd0;
wire    [9:0] csr_bankarray_csrbank6_block_length0_r;
reg           csr_bankarray_csrbank6_block_length0_we = 1'd0;
wire    [9:0] csr_bankarray_csrbank6_block_length0_w;
reg           csr_bankarray_csrbank6_block_count0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_block_count0_r;
reg           csr_bankarray_csrbank6_block_count0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank6_block_count0_w;
wire          csr_bankarray_csrbank6_sel;
wire   [13:0] csr_bankarray_interface7_bank_bus_adr;
wire          csr_bankarray_interface7_bank_bus_we;
wire   [31:0] csr_bankarray_interface7_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface7_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank7_status_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank7_status_r;
reg           csr_bankarray_csrbank7_status_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank7_status_w;
reg           csr_bankarray_csrbank7_pending_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank7_pending_r;
reg           csr_bankarray_csrbank7_pending_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank7_pending_w;
reg           csr_bankarray_csrbank7_enable0_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank7_enable0_r;
reg           csr_bankarray_csrbank7_enable0_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank7_enable0_w;
wire          csr_bankarray_csrbank7_sel;
wire   [13:0] csr_bankarray_interface8_bank_bus_adr;
wire          csr_bankarray_interface8_bank_bus_we;
wire   [31:0] csr_bankarray_interface8_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface8_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank8_dma_base1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank8_dma_base1_r;
reg           csr_bankarray_csrbank8_dma_base1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank8_dma_base1_w;
reg           csr_bankarray_csrbank8_dma_base0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank8_dma_base0_r;
reg           csr_bankarray_csrbank8_dma_base0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank8_dma_base0_w;
reg           csr_bankarray_csrbank8_dma_length0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank8_dma_length0_r;
reg           csr_bankarray_csrbank8_dma_length0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank8_dma_length0_w;
reg           csr_bankarray_csrbank8_dma_enable0_re = 1'd0;
wire          csr_bankarray_csrbank8_dma_enable0_r;
reg           csr_bankarray_csrbank8_dma_enable0_we = 1'd0;
wire          csr_bankarray_csrbank8_dma_enable0_w;
reg           csr_bankarray_csrbank8_dma_done_re = 1'd0;
wire          csr_bankarray_csrbank8_dma_done_r;
reg           csr_bankarray_csrbank8_dma_done_we = 1'd0;
wire          csr_bankarray_csrbank8_dma_done_w;
reg           csr_bankarray_csrbank8_dma_loop0_re = 1'd0;
wire          csr_bankarray_csrbank8_dma_loop0_r;
reg           csr_bankarray_csrbank8_dma_loop0_we = 1'd0;
wire          csr_bankarray_csrbank8_dma_loop0_w;
reg           csr_bankarray_csrbank8_dma_offset_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank8_dma_offset_r;
reg           csr_bankarray_csrbank8_dma_offset_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank8_dma_offset_w;
wire          csr_bankarray_csrbank8_sel;
wire   [13:0] csr_bankarray_interface9_bank_bus_adr;
wire          csr_bankarray_interface9_bank_bus_we;
wire   [31:0] csr_bankarray_interface9_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface9_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank9_card_detect_re = 1'd0;
wire          csr_bankarray_csrbank9_card_detect_r;
reg           csr_bankarray_csrbank9_card_detect_we = 1'd0;
wire          csr_bankarray_csrbank9_card_detect_w;
reg           csr_bankarray_csrbank9_clocker_divider0_re = 1'd0;
wire    [8:0] csr_bankarray_csrbank9_clocker_divider0_r;
reg           csr_bankarray_csrbank9_clocker_divider0_we = 1'd0;
wire    [8:0] csr_bankarray_csrbank9_clocker_divider0_w;
reg           csr_bankarray_csrbank9_dataw_status_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dataw_status_r;
reg           csr_bankarray_csrbank9_dataw_status_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dataw_status_w;
wire          csr_bankarray_csrbank9_sel;
wire   [13:0] csr_bankarray_interface10_bank_bus_adr;
wire          csr_bankarray_interface10_bank_bus_we;
wire   [31:0] csr_bankarray_interface10_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface10_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank10_dfii_control0_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank10_dfii_control0_r;
reg           csr_bankarray_csrbank10_dfii_control0_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank10_dfii_control0_w;
reg           csr_bankarray_csrbank10_dfii_pi0_command0_re = 1'd0;
wire    [5:0] csr_bankarray_csrbank10_dfii_pi0_command0_r;
reg           csr_bankarray_csrbank10_dfii_pi0_command0_we = 1'd0;
wire    [5:0] csr_bankarray_csrbank10_dfii_pi0_command0_w;
reg           csr_bankarray_csrbank10_dfii_pi0_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank10_dfii_pi0_address0_r;
reg           csr_bankarray_csrbank10_dfii_pi0_address0_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank10_dfii_pi0_address0_w;
reg           csr_bankarray_csrbank10_dfii_pi0_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank10_dfii_pi0_baddress0_r;
reg           csr_bankarray_csrbank10_dfii_pi0_baddress0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank10_dfii_pi0_baddress0_w;
reg           csr_bankarray_csrbank10_dfii_pi0_wrdata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_wrdata3_r;
reg           csr_bankarray_csrbank10_dfii_pi0_wrdata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_wrdata3_w;
reg           csr_bankarray_csrbank10_dfii_pi0_wrdata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_wrdata2_r;
reg           csr_bankarray_csrbank10_dfii_pi0_wrdata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_wrdata2_w;
reg           csr_bankarray_csrbank10_dfii_pi0_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_wrdata1_r;
reg           csr_bankarray_csrbank10_dfii_pi0_wrdata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_wrdata1_w;
reg           csr_bankarray_csrbank10_dfii_pi0_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_wrdata0_r;
reg           csr_bankarray_csrbank10_dfii_pi0_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_wrdata0_w;
reg           csr_bankarray_csrbank10_dfii_pi0_rddata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_rddata3_r;
reg           csr_bankarray_csrbank10_dfii_pi0_rddata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_rddata3_w;
reg           csr_bankarray_csrbank10_dfii_pi0_rddata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_rddata2_r;
reg           csr_bankarray_csrbank10_dfii_pi0_rddata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_rddata2_w;
reg           csr_bankarray_csrbank10_dfii_pi0_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_rddata1_r;
reg           csr_bankarray_csrbank10_dfii_pi0_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_rddata1_w;
reg           csr_bankarray_csrbank10_dfii_pi0_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_rddata0_r;
reg           csr_bankarray_csrbank10_dfii_pi0_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi0_rddata0_w;
reg           csr_bankarray_csrbank10_dfii_pi1_command0_re = 1'd0;
wire    [5:0] csr_bankarray_csrbank10_dfii_pi1_command0_r;
reg           csr_bankarray_csrbank10_dfii_pi1_command0_we = 1'd0;
wire    [5:0] csr_bankarray_csrbank10_dfii_pi1_command0_w;
reg           csr_bankarray_csrbank10_dfii_pi1_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank10_dfii_pi1_address0_r;
reg           csr_bankarray_csrbank10_dfii_pi1_address0_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank10_dfii_pi1_address0_w;
reg           csr_bankarray_csrbank10_dfii_pi1_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank10_dfii_pi1_baddress0_r;
reg           csr_bankarray_csrbank10_dfii_pi1_baddress0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank10_dfii_pi1_baddress0_w;
reg           csr_bankarray_csrbank10_dfii_pi1_wrdata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_wrdata3_r;
reg           csr_bankarray_csrbank10_dfii_pi1_wrdata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_wrdata3_w;
reg           csr_bankarray_csrbank10_dfii_pi1_wrdata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_wrdata2_r;
reg           csr_bankarray_csrbank10_dfii_pi1_wrdata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_wrdata2_w;
reg           csr_bankarray_csrbank10_dfii_pi1_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_wrdata1_r;
reg           csr_bankarray_csrbank10_dfii_pi1_wrdata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_wrdata1_w;
reg           csr_bankarray_csrbank10_dfii_pi1_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_wrdata0_r;
reg           csr_bankarray_csrbank10_dfii_pi1_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_wrdata0_w;
reg           csr_bankarray_csrbank10_dfii_pi1_rddata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_rddata3_r;
reg           csr_bankarray_csrbank10_dfii_pi1_rddata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_rddata3_w;
reg           csr_bankarray_csrbank10_dfii_pi1_rddata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_rddata2_r;
reg           csr_bankarray_csrbank10_dfii_pi1_rddata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_rddata2_w;
reg           csr_bankarray_csrbank10_dfii_pi1_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_rddata1_r;
reg           csr_bankarray_csrbank10_dfii_pi1_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_rddata1_w;
reg           csr_bankarray_csrbank10_dfii_pi1_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_rddata0_r;
reg           csr_bankarray_csrbank10_dfii_pi1_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi1_rddata0_w;
reg           csr_bankarray_csrbank10_dfii_pi2_command0_re = 1'd0;
wire    [5:0] csr_bankarray_csrbank10_dfii_pi2_command0_r;
reg           csr_bankarray_csrbank10_dfii_pi2_command0_we = 1'd0;
wire    [5:0] csr_bankarray_csrbank10_dfii_pi2_command0_w;
reg           csr_bankarray_csrbank10_dfii_pi2_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank10_dfii_pi2_address0_r;
reg           csr_bankarray_csrbank10_dfii_pi2_address0_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank10_dfii_pi2_address0_w;
reg           csr_bankarray_csrbank10_dfii_pi2_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank10_dfii_pi2_baddress0_r;
reg           csr_bankarray_csrbank10_dfii_pi2_baddress0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank10_dfii_pi2_baddress0_w;
reg           csr_bankarray_csrbank10_dfii_pi2_wrdata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_wrdata3_r;
reg           csr_bankarray_csrbank10_dfii_pi2_wrdata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_wrdata3_w;
reg           csr_bankarray_csrbank10_dfii_pi2_wrdata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_wrdata2_r;
reg           csr_bankarray_csrbank10_dfii_pi2_wrdata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_wrdata2_w;
reg           csr_bankarray_csrbank10_dfii_pi2_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_wrdata1_r;
reg           csr_bankarray_csrbank10_dfii_pi2_wrdata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_wrdata1_w;
reg           csr_bankarray_csrbank10_dfii_pi2_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_wrdata0_r;
reg           csr_bankarray_csrbank10_dfii_pi2_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_wrdata0_w;
reg           csr_bankarray_csrbank10_dfii_pi2_rddata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_rddata3_r;
reg           csr_bankarray_csrbank10_dfii_pi2_rddata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_rddata3_w;
reg           csr_bankarray_csrbank10_dfii_pi2_rddata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_rddata2_r;
reg           csr_bankarray_csrbank10_dfii_pi2_rddata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_rddata2_w;
reg           csr_bankarray_csrbank10_dfii_pi2_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_rddata1_r;
reg           csr_bankarray_csrbank10_dfii_pi2_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_rddata1_w;
reg           csr_bankarray_csrbank10_dfii_pi2_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_rddata0_r;
reg           csr_bankarray_csrbank10_dfii_pi2_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi2_rddata0_w;
reg           csr_bankarray_csrbank10_dfii_pi3_command0_re = 1'd0;
wire    [5:0] csr_bankarray_csrbank10_dfii_pi3_command0_r;
reg           csr_bankarray_csrbank10_dfii_pi3_command0_we = 1'd0;
wire    [5:0] csr_bankarray_csrbank10_dfii_pi3_command0_w;
reg           csr_bankarray_csrbank10_dfii_pi3_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank10_dfii_pi3_address0_r;
reg           csr_bankarray_csrbank10_dfii_pi3_address0_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank10_dfii_pi3_address0_w;
reg           csr_bankarray_csrbank10_dfii_pi3_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank10_dfii_pi3_baddress0_r;
reg           csr_bankarray_csrbank10_dfii_pi3_baddress0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank10_dfii_pi3_baddress0_w;
reg           csr_bankarray_csrbank10_dfii_pi3_wrdata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_wrdata3_r;
reg           csr_bankarray_csrbank10_dfii_pi3_wrdata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_wrdata3_w;
reg           csr_bankarray_csrbank10_dfii_pi3_wrdata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_wrdata2_r;
reg           csr_bankarray_csrbank10_dfii_pi3_wrdata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_wrdata2_w;
reg           csr_bankarray_csrbank10_dfii_pi3_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_wrdata1_r;
reg           csr_bankarray_csrbank10_dfii_pi3_wrdata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_wrdata1_w;
reg           csr_bankarray_csrbank10_dfii_pi3_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_wrdata0_r;
reg           csr_bankarray_csrbank10_dfii_pi3_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_wrdata0_w;
reg           csr_bankarray_csrbank10_dfii_pi3_rddata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_rddata3_r;
reg           csr_bankarray_csrbank10_dfii_pi3_rddata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_rddata3_w;
reg           csr_bankarray_csrbank10_dfii_pi3_rddata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_rddata2_r;
reg           csr_bankarray_csrbank10_dfii_pi3_rddata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_rddata2_w;
reg           csr_bankarray_csrbank10_dfii_pi3_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_rddata1_r;
reg           csr_bankarray_csrbank10_dfii_pi3_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_rddata1_w;
reg           csr_bankarray_csrbank10_dfii_pi3_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_rddata0_r;
reg           csr_bankarray_csrbank10_dfii_pi3_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_dfii_pi3_rddata0_w;
wire          csr_bankarray_csrbank10_sel;
wire   [13:0] csr_bankarray_interface11_bank_bus_adr;
wire          csr_bankarray_interface11_bank_bus_we;
wire   [31:0] csr_bankarray_interface11_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface11_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank11_next_core0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank11_next_core0_r;
reg           csr_bankarray_csrbank11_next_core0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank11_next_core0_w;
reg           csr_bankarray_csrbank11_param_wdata00_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata00_r;
reg           csr_bankarray_csrbank11_param_wdata00_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata00_w;
reg           csr_bankarray_csrbank11_param_wdata10_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata10_r;
reg           csr_bankarray_csrbank11_param_wdata10_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata10_w;
reg           csr_bankarray_csrbank11_param_wdata20_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata20_r;
reg           csr_bankarray_csrbank11_param_wdata20_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata20_w;
reg           csr_bankarray_csrbank11_param_wdata30_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata30_r;
reg           csr_bankarray_csrbank11_param_wdata30_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata30_w;
reg           csr_bankarray_csrbank11_param_wdata40_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata40_r;
reg           csr_bankarray_csrbank11_param_wdata40_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata40_w;
reg           csr_bankarray_csrbank11_param_wdata50_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata50_r;
reg           csr_bankarray_csrbank11_param_wdata50_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata50_w;
reg           csr_bankarray_csrbank11_param_wdata60_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata60_r;
reg           csr_bankarray_csrbank11_param_wdata60_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata60_w;
reg           csr_bankarray_csrbank11_param_wdata70_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata70_r;
reg           csr_bankarray_csrbank11_param_wdata70_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata70_w;
reg           csr_bankarray_csrbank11_param_wdata80_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata80_r;
reg           csr_bankarray_csrbank11_param_wdata80_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata80_w;
reg           csr_bankarray_csrbank11_param_wdata90_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata90_r;
reg           csr_bankarray_csrbank11_param_wdata90_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata90_w;
reg           csr_bankarray_csrbank11_param_wdata100_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata100_r;
reg           csr_bankarray_csrbank11_param_wdata100_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_param_wdata100_w;
reg           csr_bankarray_csrbank11_param_wdata110_re = 1'd0;
wire   [15:0] csr_bankarray_csrbank11_param_wdata110_r;
reg           csr_bankarray_csrbank11_param_wdata110_we = 1'd0;
wire   [15:0] csr_bankarray_csrbank11_param_wdata110_w;
reg           csr_bankarray_csrbank11_neuron_inst_wdata0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank11_neuron_inst_wdata0_r;
reg           csr_bankarray_csrbank11_neuron_inst_wdata0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank11_neuron_inst_wdata0_w;
reg           csr_bankarray_csrbank11_packet_wdata0_re = 1'd0;
wire   [29:0] csr_bankarray_csrbank11_packet_wdata0_r;
reg           csr_bankarray_csrbank11_packet_wdata0_we = 1'd0;
wire   [29:0] csr_bankarray_csrbank11_packet_wdata0_w;
reg           csr_bankarray_csrbank11_spike_en0_re = 1'd0;
wire          csr_bankarray_csrbank11_spike_en0_r;
reg           csr_bankarray_csrbank11_spike_en0_we = 1'd0;
wire          csr_bankarray_csrbank11_spike_en0_w;
reg           csr_bankarray_csrbank11_load_end0_re = 1'd0;
wire          csr_bankarray_csrbank11_load_end0_r;
reg           csr_bankarray_csrbank11_load_end0_we = 1'd0;
wire          csr_bankarray_csrbank11_load_end0_w;
reg           csr_bankarray_csrbank11_tick_ready0_re = 1'd0;
wire          csr_bankarray_csrbank11_tick_ready0_r;
reg           csr_bankarray_csrbank11_tick_ready0_we = 1'd0;
wire          csr_bankarray_csrbank11_tick_ready0_w;
reg           csr_bankarray_csrbank11_complete0_re = 1'd0;
wire          csr_bankarray_csrbank11_complete0_r;
reg           csr_bankarray_csrbank11_complete0_we = 1'd0;
wire          csr_bankarray_csrbank11_complete0_w;
reg           csr_bankarray_csrbank11_next_core_en0_re = 1'd0;
wire          csr_bankarray_csrbank11_next_core_en0_r;
reg           csr_bankarray_csrbank11_next_core_en0_we = 1'd0;
wire          csr_bankarray_csrbank11_next_core_en0_w;
reg           csr_bankarray_csrbank11_grid_state0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank11_grid_state0_r;
reg           csr_bankarray_csrbank11_grid_state0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank11_grid_state0_w;
reg           csr_bankarray_csrbank11_msb_param_snn0_re = 1'd0;
wire   [15:0] csr_bankarray_csrbank11_msb_param_snn0_r;
reg           csr_bankarray_csrbank11_msb_param_snn0_we = 1'd0;
wire   [15:0] csr_bankarray_csrbank11_msb_param_snn0_w;
reg           csr_bankarray_csrbank11_spike_out00_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out00_r;
reg           csr_bankarray_csrbank11_spike_out00_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out00_w;
reg           csr_bankarray_csrbank11_spike_out10_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out10_r;
reg           csr_bankarray_csrbank11_spike_out10_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out10_w;
reg           csr_bankarray_csrbank11_spike_out20_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out20_r;
reg           csr_bankarray_csrbank11_spike_out20_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out20_w;
reg           csr_bankarray_csrbank11_spike_out30_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out30_r;
reg           csr_bankarray_csrbank11_spike_out30_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out30_w;
reg           csr_bankarray_csrbank11_spike_out40_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out40_r;
reg           csr_bankarray_csrbank11_spike_out40_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out40_w;
reg           csr_bankarray_csrbank11_spike_out50_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out50_r;
reg           csr_bankarray_csrbank11_spike_out50_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out50_w;
reg           csr_bankarray_csrbank11_spike_out60_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out60_r;
reg           csr_bankarray_csrbank11_spike_out60_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank11_spike_out60_w;
reg           csr_bankarray_csrbank11_spike_out70_re = 1'd0;
wire   [25:0] csr_bankarray_csrbank11_spike_out70_r;
reg           csr_bankarray_csrbank11_spike_out70_we = 1'd0;
wire   [25:0] csr_bankarray_csrbank11_spike_out70_w;
reg           csr_bankarray_csrbank11_spike_out_rinc0_re = 1'd0;
wire          csr_bankarray_csrbank11_spike_out_rinc0_r;
reg           csr_bankarray_csrbank11_spike_out_rinc0_we = 1'd0;
wire          csr_bankarray_csrbank11_spike_out_rinc0_w;
reg           csr_bankarray_csrbank11_packet_out0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank11_packet_out0_r;
reg           csr_bankarray_csrbank11_packet_out0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank11_packet_out0_w;
reg           csr_bankarray_csrbank11_packet_out_rinc0_re = 1'd0;
wire          csr_bankarray_csrbank11_packet_out_rinc0_r;
reg           csr_bankarray_csrbank11_packet_out_rinc0_we = 1'd0;
wire          csr_bankarray_csrbank11_packet_out_rinc0_w;
reg           csr_bankarray_csrbank11_snn_status_re = 1'd0;
wire    [4:0] csr_bankarray_csrbank11_snn_status_r;
reg           csr_bankarray_csrbank11_snn_status_we = 1'd0;
wire    [4:0] csr_bankarray_csrbank11_snn_status_w;
wire          csr_bankarray_csrbank11_sel;
wire   [13:0] csr_bankarray_interface12_bank_bus_adr;
wire          csr_bankarray_interface12_bank_bus_we;
wire   [31:0] csr_bankarray_interface12_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface12_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank12_load0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank12_load0_r;
reg           csr_bankarray_csrbank12_load0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank12_load0_w;
reg           csr_bankarray_csrbank12_reload0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank12_reload0_r;
reg           csr_bankarray_csrbank12_reload0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank12_reload0_w;
reg           csr_bankarray_csrbank12_en0_re = 1'd0;
wire          csr_bankarray_csrbank12_en0_r;
reg           csr_bankarray_csrbank12_en0_we = 1'd0;
wire          csr_bankarray_csrbank12_en0_w;
reg           csr_bankarray_csrbank12_update_value0_re = 1'd0;
wire          csr_bankarray_csrbank12_update_value0_r;
reg           csr_bankarray_csrbank12_update_value0_we = 1'd0;
wire          csr_bankarray_csrbank12_update_value0_w;
reg           csr_bankarray_csrbank12_value_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank12_value_r;
reg           csr_bankarray_csrbank12_value_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank12_value_w;
reg           csr_bankarray_csrbank12_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank12_ev_status_r;
reg           csr_bankarray_csrbank12_ev_status_we = 1'd0;
wire          csr_bankarray_csrbank12_ev_status_w;
reg           csr_bankarray_csrbank12_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank12_ev_pending_r;
reg           csr_bankarray_csrbank12_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank12_ev_pending_w;
reg           csr_bankarray_csrbank12_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank12_ev_enable0_r;
reg           csr_bankarray_csrbank12_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank12_ev_enable0_w;
wire          csr_bankarray_csrbank12_sel;
wire   [13:0] csr_bankarray_interface13_bank_bus_adr;
wire          csr_bankarray_interface13_bank_bus_we;
wire   [31:0] csr_bankarray_interface13_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface13_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank13_txfull_re = 1'd0;
wire          csr_bankarray_csrbank13_txfull_r;
reg           csr_bankarray_csrbank13_txfull_we = 1'd0;
wire          csr_bankarray_csrbank13_txfull_w;
reg           csr_bankarray_csrbank13_rxempty_re = 1'd0;
wire          csr_bankarray_csrbank13_rxempty_r;
reg           csr_bankarray_csrbank13_rxempty_we = 1'd0;
wire          csr_bankarray_csrbank13_rxempty_w;
reg           csr_bankarray_csrbank13_ev_status_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank13_ev_status_r;
reg           csr_bankarray_csrbank13_ev_status_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank13_ev_status_w;
reg           csr_bankarray_csrbank13_ev_pending_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank13_ev_pending_r;
reg           csr_bankarray_csrbank13_ev_pending_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank13_ev_pending_w;
reg           csr_bankarray_csrbank13_ev_enable0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank13_ev_enable0_r;
reg           csr_bankarray_csrbank13_ev_enable0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank13_ev_enable0_w;
reg           csr_bankarray_csrbank13_txempty_re = 1'd0;
wire          csr_bankarray_csrbank13_txempty_r;
reg           csr_bankarray_csrbank13_txempty_we = 1'd0;
wire          csr_bankarray_csrbank13_txempty_w;
reg           csr_bankarray_csrbank13_rxfull_re = 1'd0;
wire          csr_bankarray_csrbank13_rxfull_r;
reg           csr_bankarray_csrbank13_rxfull_we = 1'd0;
wire          csr_bankarray_csrbank13_rxfull_w;
wire          csr_bankarray_csrbank13_sel;
wire   [13:0] csr_bankarray_interface14_bank_bus_adr;
wire          csr_bankarray_interface14_bank_bus_we;
wire   [31:0] csr_bankarray_interface14_bank_bus_dat_w;
reg    [31:0] csr_bankarray_interface14_bank_bus_dat_r = 32'd0;
reg           csr_bankarray_csrbank14_temperature_re = 1'd0;
wire   [11:0] csr_bankarray_csrbank14_temperature_r;
reg           csr_bankarray_csrbank14_temperature_we = 1'd0;
wire   [11:0] csr_bankarray_csrbank14_temperature_w;
reg           csr_bankarray_csrbank14_vccint_re = 1'd0;
wire   [11:0] csr_bankarray_csrbank14_vccint_r;
reg           csr_bankarray_csrbank14_vccint_we = 1'd0;
wire   [11:0] csr_bankarray_csrbank14_vccint_w;
reg           csr_bankarray_csrbank14_vccaux_re = 1'd0;
wire   [11:0] csr_bankarray_csrbank14_vccaux_r;
reg           csr_bankarray_csrbank14_vccaux_we = 1'd0;
wire   [11:0] csr_bankarray_csrbank14_vccaux_w;
reg           csr_bankarray_csrbank14_vccbram_re = 1'd0;
wire   [11:0] csr_bankarray_csrbank14_vccbram_r;
reg           csr_bankarray_csrbank14_vccbram_we = 1'd0;
wire   [11:0] csr_bankarray_csrbank14_vccbram_w;
reg           csr_bankarray_csrbank14_eoc_re = 1'd0;
wire          csr_bankarray_csrbank14_eoc_r;
reg           csr_bankarray_csrbank14_eoc_we = 1'd0;
wire          csr_bankarray_csrbank14_eoc_w;
reg           csr_bankarray_csrbank14_eos_re = 1'd0;
wire          csr_bankarray_csrbank14_eos_r;
reg           csr_bankarray_csrbank14_eos_we = 1'd0;
wire          csr_bankarray_csrbank14_eos_w;
wire          csr_bankarray_csrbank14_sel;
wire   [13:0] csr_interconnect_adr;
wire          csr_interconnect_we;
wire   [31:0] csr_interconnect_dat_w;
wire   [31:0] csr_interconnect_dat_r;
wire          soclinux_reset0;
wire          soclinux_reset1;
wire          soclinux_reset2;
wire          soclinux_reset3;
wire          soclinux_reset4;
wire          soclinux_reset5;
wire          soclinux_reset6;
wire          soclinux_reset7;
wire          soclinux_mmcm_fb;
reg           soclinux_rs232phytx_state = 1'd0;
reg           soclinux_rs232phytx_next_state = 1'd0;
reg     [3:0] soclinux_tx_count_rs232phytx_next_value0 = 4'd0;
reg           soclinux_tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg           soclinux_serial_tx_rs232phytx_next_value1 = 1'd0;
reg           soclinux_serial_tx_rs232phytx_next_value_ce1 = 1'd0;
reg     [7:0] soclinux_tx_data_rs232phytx_next_value2 = 8'd0;
reg           soclinux_tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg           soclinux_rs232phyrx_state = 1'd0;
reg           soclinux_rs232phyrx_next_state = 1'd0;
reg     [3:0] soclinux_rx_count_rs232phyrx_next_value0 = 4'd0;
reg           soclinux_rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg     [7:0] soclinux_rx_data_rs232phyrx_next_value1 = 8'd0;
reg           soclinux_rx_data_rs232phyrx_next_value_ce1 = 1'd0;
reg     [1:0] soclinux_refresher_state = 2'd0;
reg     [1:0] soclinux_refresher_next_state = 2'd0;
reg     [3:0] soclinux_bankmachine0_state = 4'd0;
reg     [3:0] soclinux_bankmachine0_next_state = 4'd0;
reg     [3:0] soclinux_bankmachine1_state = 4'd0;
reg     [3:0] soclinux_bankmachine1_next_state = 4'd0;
reg     [3:0] soclinux_bankmachine2_state = 4'd0;
reg     [3:0] soclinux_bankmachine2_next_state = 4'd0;
reg     [3:0] soclinux_bankmachine3_state = 4'd0;
reg     [3:0] soclinux_bankmachine3_next_state = 4'd0;
reg     [3:0] soclinux_bankmachine4_state = 4'd0;
reg     [3:0] soclinux_bankmachine4_next_state = 4'd0;
reg     [3:0] soclinux_bankmachine5_state = 4'd0;
reg     [3:0] soclinux_bankmachine5_next_state = 4'd0;
reg     [3:0] soclinux_bankmachine6_state = 4'd0;
reg     [3:0] soclinux_bankmachine6_next_state = 4'd0;
reg     [3:0] soclinux_bankmachine7_state = 4'd0;
reg     [3:0] soclinux_bankmachine7_next_state = 4'd0;
reg     [3:0] soclinux_multiplexer_state = 4'd0;
reg     [3:0] soclinux_multiplexer_next_state = 4'd0;
wire          soclinux_roundrobin0_request;
wire          soclinux_roundrobin0_grant;
wire          soclinux_roundrobin0_ce;
wire          soclinux_roundrobin1_request;
wire          soclinux_roundrobin1_grant;
wire          soclinux_roundrobin1_ce;
wire          soclinux_roundrobin2_request;
wire          soclinux_roundrobin2_grant;
wire          soclinux_roundrobin2_ce;
wire          soclinux_roundrobin3_request;
wire          soclinux_roundrobin3_grant;
wire          soclinux_roundrobin3_ce;
wire          soclinux_roundrobin4_request;
wire          soclinux_roundrobin4_grant;
wire          soclinux_roundrobin4_ce;
wire          soclinux_roundrobin5_request;
wire          soclinux_roundrobin5_grant;
wire          soclinux_roundrobin5_ce;
wire          soclinux_roundrobin6_request;
wire          soclinux_roundrobin6_grant;
wire          soclinux_roundrobin6_ce;
wire          soclinux_roundrobin7_request;
wire          soclinux_roundrobin7_grant;
wire          soclinux_roundrobin7_ce;
reg           soclinux_locked0 = 1'd0;
reg           soclinux_locked1 = 1'd0;
reg           soclinux_locked2 = 1'd0;
reg           soclinux_locked3 = 1'd0;
reg           soclinux_locked4 = 1'd0;
reg           soclinux_locked5 = 1'd0;
reg           soclinux_locked6 = 1'd0;
reg           soclinux_locked7 = 1'd0;
reg           soclinux_new_master_wdata_ready0 = 1'd0;
reg           soclinux_new_master_wdata_ready1 = 1'd0;
reg           soclinux_new_master_rdata_valid0 = 1'd0;
reg           soclinux_new_master_rdata_valid1 = 1'd0;
reg           soclinux_new_master_rdata_valid2 = 1'd0;
reg           soclinux_new_master_rdata_valid3 = 1'd0;
reg           soclinux_new_master_rdata_valid4 = 1'd0;
reg           soclinux_new_master_rdata_valid5 = 1'd0;
reg           soclinux_new_master_rdata_valid6 = 1'd0;
reg           soclinux_new_master_rdata_valid7 = 1'd0;
reg           soclinux_new_master_rdata_valid8 = 1'd0;
reg     [1:0] soclinux_fullmemorywe_state = 2'd0;
reg     [1:0] soclinux_fullmemorywe_next_state = 2'd0;
reg     [1:0] soclinux_litedramwishbone2native_state = 2'd0;
reg     [1:0] soclinux_litedramwishbone2native_next_state = 2'd0;
reg           soclinux_aborted_litedramwishbone2native_next_value = 1'd0;
reg           soclinux_aborted_litedramwishbone2native_next_value_ce = 1'd0;
reg     [1:0] soclinux_liteethphygmiimii_state = 2'd0;
reg     [1:0] soclinux_liteethphygmiimii_next_state = 2'd0;
reg           soclinux_txdatapath_liteethmactxlastbe_state = 1'd0;
reg           soclinux_txdatapath_liteethmactxlastbe_next_state = 1'd0;
reg           soclinux_txdatapath_liteethmacpaddinginserter_state = 1'd0;
reg           soclinux_txdatapath_liteethmacpaddinginserter_next_state = 1'd0;
reg    [15:0] soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value = 16'd0;
reg           soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce = 1'd0;
reg     [1:0] soclinux_txdatapath_bufferizeendpoints_state = 2'd0;
reg     [1:0] soclinux_txdatapath_bufferizeendpoints_next_state = 2'd0;
reg    [31:0] soclinux_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0 = 32'd0;
reg           soclinux_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0 = 1'd0;
reg           soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 = 1'd0;
reg           soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 = 1'd0;
reg     [1:0] soclinux_txdatapath_liteethmacpreambleinserter_state = 2'd0;
reg     [1:0] soclinux_txdatapath_liteethmacpreambleinserter_next_state = 2'd0;
reg     [2:0] soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value = 3'd0;
reg           soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce = 1'd0;
reg           soclinux_txdatapath_liteethmacgap_state = 1'd0;
reg           soclinux_txdatapath_liteethmacgap_next_state = 1'd0;
reg     [3:0] soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value = 4'd0;
reg           soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce = 1'd0;
reg           soclinux_rxdatapath_liteethmacpreamblechecker_state = 1'd0;
reg           soclinux_rxdatapath_liteethmacpreamblechecker_next_state = 1'd0;
reg     [1:0] soclinux_rxdatapath_bufferizeendpoints_state = 2'd0;
reg     [1:0] soclinux_rxdatapath_bufferizeendpoints_next_state = 2'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value0 = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value_ce0 = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value1 = 1'd0;
reg           soclinux_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value_ce1 = 1'd0;
reg     [1:0] soclinux_liteethmacsramwriter_state = 2'd0;
reg     [1:0] soclinux_liteethmacsramwriter_next_state = 2'd0;
reg    [10:0] soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value = 11'd0;
reg           soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce = 1'd0;
reg    [31:0] soclinux_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value = 32'd0;
reg           soclinux_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce = 1'd0;
reg           soclinux_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value = 1'd0;
reg           soclinux_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce = 1'd0;
reg     [1:0] soclinux_liteethmacsramreader_state = 2'd0;
reg     [1:0] soclinux_liteethmacsramreader_next_state = 2'd0;
reg    [10:0] soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value = 11'd0;
reg           soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce = 1'd0;
reg           soclinux_sdphyinit_state = 1'd0;
reg           soclinux_sdphyinit_next_state = 1'd0;
reg     [7:0] init_count_sdphyinit_next_value = 8'd0;
reg           init_count_sdphyinit_next_value_ce = 1'd0;
reg     [1:0] soclinux_sdphycmdw_state = 2'd0;
reg     [1:0] soclinux_sdphycmdw_next_state = 2'd0;
reg     [7:0] cmdw_count_sdphycmdw_next_value = 8'd0;
reg           cmdw_count_sdphycmdw_next_value_ce = 1'd0;
reg     [2:0] soclinux_sdphycmdr_state = 3'd0;
reg     [2:0] soclinux_sdphycmdr_next_state = 3'd0;
reg    [31:0] cmdr_timeout_sdphycmdr_next_value0 = 32'd0;
reg           cmdr_timeout_sdphycmdr_next_value_ce0 = 1'd0;
reg     [7:0] cmdr_count_sdphycmdr_next_value1 = 8'd0;
reg           cmdr_count_sdphycmdr_next_value_ce1 = 1'd0;
reg           cmdr_busy_sdphycmdr_next_value2 = 1'd0;
reg           cmdr_busy_sdphycmdr_next_value_ce2 = 1'd0;
reg           cmdr_cmdr_reset_sdphycmdr_next_value3 = 1'd0;
reg           cmdr_cmdr_reset_sdphycmdr_next_value_ce3 = 1'd0;
reg     [2:0] soclinux_sdphydataw_state = 3'd0;
reg     [2:0] soclinux_sdphydataw_next_state = 3'd0;
reg           dataw_accepted1_sdphydataw_next_value0 = 1'd0;
reg           dataw_accepted1_sdphydataw_next_value_ce0 = 1'd0;
reg           dataw_crc_error1_sdphydataw_next_value1 = 1'd0;
reg           dataw_crc_error1_sdphydataw_next_value_ce1 = 1'd0;
reg           dataw_write_error1_sdphydataw_next_value2 = 1'd0;
reg           dataw_write_error1_sdphydataw_next_value_ce2 = 1'd0;
reg     [7:0] dataw_count_sdphydataw_next_value3 = 8'd0;
reg           dataw_count_sdphydataw_next_value_ce3 = 1'd0;
reg     [2:0] soclinux_sdphydatar_state = 3'd0;
reg     [2:0] soclinux_sdphydatar_next_state = 3'd0;
reg     [9:0] datar_count_sdphydatar_next_value0 = 10'd0;
reg           datar_count_sdphydatar_next_value_ce0 = 1'd0;
reg    [31:0] datar_timeout_sdphydatar_next_value1 = 32'd0;
reg           datar_timeout_sdphydatar_next_value_ce1 = 1'd0;
reg           datar_datar_reset_sdphydatar_next_value2 = 1'd0;
reg           datar_datar_reset_sdphydatar_next_value_ce2 = 1'd0;
reg           soclinux_sdcore_crc16inserter_state = 1'd0;
reg           soclinux_sdcore_crc16inserter_next_state = 1'd0;
reg     [2:0] sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value = 3'd0;
reg           sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value_ce = 1'd0;
reg     [2:0] soclinux_sdcore_fsm_state = 3'd0;
reg     [2:0] soclinux_sdcore_fsm_next_state = 3'd0;
reg           sdcore_cmd_done_sdcore_fsm_next_value0 = 1'd0;
reg           sdcore_cmd_done_sdcore_fsm_next_value_ce0 = 1'd0;
reg           sdcore_data_done_sdcore_fsm_next_value1 = 1'd0;
reg           sdcore_data_done_sdcore_fsm_next_value_ce1 = 1'd0;
reg     [2:0] sdcore_cmd_count_sdcore_fsm_next_value2 = 3'd0;
reg           sdcore_cmd_count_sdcore_fsm_next_value_ce2 = 1'd0;
reg    [31:0] sdcore_data_count_sdcore_fsm_next_value3 = 32'd0;
reg           sdcore_data_count_sdcore_fsm_next_value_ce3 = 1'd0;
reg           sdcore_cmd_error_sdcore_fsm_next_value4 = 1'd0;
reg           sdcore_cmd_error_sdcore_fsm_next_value_ce4 = 1'd0;
reg           sdcore_cmd_timeout_sdcore_fsm_next_value5 = 1'd0;
reg           sdcore_cmd_timeout_sdcore_fsm_next_value_ce5 = 1'd0;
reg           sdcore_data_error_sdcore_fsm_next_value6 = 1'd0;
reg           sdcore_data_error_sdcore_fsm_next_value_ce6 = 1'd0;
reg           sdcore_data_timeout_sdcore_fsm_next_value7 = 1'd0;
reg           sdcore_data_timeout_sdcore_fsm_next_value_ce7 = 1'd0;
reg   [127:0] sdcore_cmd_response_status_sdcore_fsm_next_value8 = 128'd0;
reg           sdcore_cmd_response_status_sdcore_fsm_next_value_ce8 = 1'd0;
reg     [1:0] soclinux_sdblock2memdma_state = 2'd0;
reg     [1:0] soclinux_sdblock2memdma_next_state = 2'd0;
reg    [31:0] sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value = 32'd0;
reg           sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value_ce = 1'd0;
reg           soclinux_sdmem2blockdma_fsm_state = 1'd0;
reg           soclinux_sdmem2blockdma_fsm_next_state = 1'd0;
reg    [31:0] sdmem2block_dma_data_sdmem2blockdma_fsm_next_value = 32'd0;
reg           sdmem2block_dma_data_sdmem2blockdma_fsm_next_value_ce = 1'd0;
reg     [1:0] soclinux_sdmem2blockdma_resetinserter_state = 2'd0;
reg     [1:0] soclinux_sdmem2blockdma_resetinserter_next_state = 2'd0;
reg    [31:0] sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value = 32'd0;
reg           sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value_ce = 1'd0;
reg     [1:0] soclinux_wishbone2csr_state = 2'd0;
reg     [1:0] soclinux_wishbone2csr_next_state = 2'd0;
reg    [31:0] soclinux_dat_w_wishbone2csr_next_value0 = 32'd0;
reg           soclinux_dat_w_wishbone2csr_next_value_ce0 = 1'd0;
reg    [13:0] soclinux_adr_wishbone2csr_next_value1 = 14'd0;
reg           soclinux_adr_wishbone2csr_next_value_ce1 = 1'd0;
reg           soclinux_we_wishbone2csr_next_value2 = 1'd0;
reg           soclinux_we_wishbone2csr_next_value_ce2 = 1'd0;
wire   [31:0] t_slice_proxy0;
wire   [31:0] t_slice_proxy1;
wire   [31:0] t_slice_proxy2;
wire   [31:0] t_slice_proxy3;
wire   [31:0] t_slice_proxy4;
wire   [31:0] t_slice_proxy5;
wire   [31:0] t_slice_proxy6;
wire   [31:0] t_slice_proxy7;
wire   [31:0] t_slice_proxy8;
wire   [31:0] t_slice_proxy9;
wire   [31:0] t_slice_proxy10;
wire   [31:0] t_slice_proxy11;
wire   [31:0] t_slice_proxy12;
wire   [31:0] t_slice_proxy13;
wire   [31:0] t_slice_proxy14;
wire   [31:0] t_slice_proxy15;
wire   [31:0] t_slice_proxy16;
wire   [31:0] t_slice_proxy17;
wire   [31:0] t_slice_proxy18;
wire   [31:0] t_slice_proxy19;
wire   [31:0] t_slice_proxy20;
wire   [31:0] t_slice_proxy21;
wire   [31:0] t_slice_proxy22;
wire   [31:0] t_slice_proxy23;
wire   [31:0] t_slice_proxy24;
wire   [31:0] t_slice_proxy25;
wire   [31:0] t_slice_proxy26;
wire   [31:0] t_slice_proxy27;
wire   [31:0] t_slice_proxy28;
wire   [31:0] t_slice_proxy29;
wire   [31:0] t_slice_proxy30;
wire   [31:0] t_slice_proxy31;
wire   [39:0] cases_slice_proxy;
wire   [31:0] t_slice_proxy32;
wire   [31:0] t_slice_proxy33;
wire   [31:0] t_slice_proxy34;
wire   [31:0] t_slice_proxy35;
wire   [31:0] t_slice_proxy36;
wire   [31:0] t_slice_proxy37;
wire   [31:0] t_slice_proxy38;
wire   [31:0] t_slice_proxy39;
wire   [31:0] t_slice_proxy40;
wire   [31:0] t_slice_proxy41;
wire   [31:0] t_slice_proxy42;
wire   [31:0] t_slice_proxy43;
wire   [31:0] t_slice_proxy44;
wire   [31:0] t_slice_proxy45;
wire   [31:0] t_slice_proxy46;
wire   [31:0] t_slice_proxy47;
wire   [31:0] t_slice_proxy48;
wire   [31:0] t_slice_proxy49;
wire   [31:0] t_slice_proxy50;
wire   [31:0] t_slice_proxy51;
wire   [31:0] t_slice_proxy52;
wire   [31:0] t_slice_proxy53;
wire   [31:0] t_slice_proxy54;
wire   [31:0] t_slice_proxy55;
wire   [31:0] t_slice_proxy56;
wire   [31:0] t_slice_proxy57;
wire   [31:0] t_slice_proxy58;
wire   [31:0] t_slice_proxy59;
wire   [31:0] t_slice_proxy60;
wire   [31:0] t_slice_proxy61;
wire   [31:0] t_slice_proxy62;
wire   [31:0] t_slice_proxy63;
reg    [29:0] rhs_array_muxed0 = 30'd0;
reg    [31:0] rhs_array_muxed1 = 32'd0;
reg     [3:0] rhs_array_muxed2 = 4'd0;
reg           rhs_array_muxed3 = 1'd0;
reg           rhs_array_muxed4 = 1'd0;
reg           rhs_array_muxed5 = 1'd0;
reg     [2:0] rhs_array_muxed6 = 3'd0;
reg     [1:0] rhs_array_muxed7 = 2'd0;
reg    [31:0] rhs_array_muxed8 = 32'd0;
reg    [31:0] rhs_array_muxed9 = 32'd0;
reg     [3:0] rhs_array_muxed10 = 4'd0;
reg           rhs_array_muxed11 = 1'd0;
reg           rhs_array_muxed12 = 1'd0;
reg           rhs_array_muxed13 = 1'd0;
reg     [2:0] rhs_array_muxed14 = 3'd0;
reg     [1:0] rhs_array_muxed15 = 2'd0;
reg           rhs_array_muxed16 = 1'd0;
reg    [13:0] rhs_array_muxed17 = 14'd0;
reg     [2:0] rhs_array_muxed18 = 3'd0;
reg           rhs_array_muxed19 = 1'd0;
reg           rhs_array_muxed20 = 1'd0;
reg           rhs_array_muxed21 = 1'd0;
reg           t_array_muxed0 = 1'd0;
reg           t_array_muxed1 = 1'd0;
reg           t_array_muxed2 = 1'd0;
reg           rhs_array_muxed22 = 1'd0;
reg    [13:0] rhs_array_muxed23 = 14'd0;
reg     [2:0] rhs_array_muxed24 = 3'd0;
reg           rhs_array_muxed25 = 1'd0;
reg           rhs_array_muxed26 = 1'd0;
reg           rhs_array_muxed27 = 1'd0;
reg           t_array_muxed3 = 1'd0;
reg           t_array_muxed4 = 1'd0;
reg           t_array_muxed5 = 1'd0;
reg    [20:0] rhs_array_muxed28 = 21'd0;
reg           rhs_array_muxed29 = 1'd0;
reg           rhs_array_muxed30 = 1'd0;
reg    [20:0] rhs_array_muxed31 = 21'd0;
reg           rhs_array_muxed32 = 1'd0;
reg           rhs_array_muxed33 = 1'd0;
reg    [20:0] rhs_array_muxed34 = 21'd0;
reg           rhs_array_muxed35 = 1'd0;
reg           rhs_array_muxed36 = 1'd0;
reg    [20:0] rhs_array_muxed37 = 21'd0;
reg           rhs_array_muxed38 = 1'd0;
reg           rhs_array_muxed39 = 1'd0;
reg    [20:0] rhs_array_muxed40 = 21'd0;
reg           rhs_array_muxed41 = 1'd0;
reg           rhs_array_muxed42 = 1'd0;
reg    [20:0] rhs_array_muxed43 = 21'd0;
reg           rhs_array_muxed44 = 1'd0;
reg           rhs_array_muxed45 = 1'd0;
reg    [20:0] rhs_array_muxed46 = 21'd0;
reg           rhs_array_muxed47 = 1'd0;
reg           rhs_array_muxed48 = 1'd0;
reg    [20:0] rhs_array_muxed49 = 21'd0;
reg           rhs_array_muxed50 = 1'd0;
reg           rhs_array_muxed51 = 1'd0;
reg     [2:0] array_muxed0 = 3'd0;
reg    [13:0] array_muxed1 = 14'd0;
reg           array_muxed2 = 1'd0;
reg           array_muxed3 = 1'd0;
reg           array_muxed4 = 1'd0;
reg           array_muxed5 = 1'd0;
reg           array_muxed6 = 1'd0;
reg     [2:0] array_muxed7 = 3'd0;
reg    [13:0] array_muxed8 = 14'd0;
reg           array_muxed9 = 1'd0;
reg           array_muxed10 = 1'd0;
reg           array_muxed11 = 1'd0;
reg           array_muxed12 = 1'd0;
reg           array_muxed13 = 1'd0;
reg     [2:0] array_muxed14 = 3'd0;
reg    [13:0] array_muxed15 = 14'd0;
reg           array_muxed16 = 1'd0;
reg           array_muxed17 = 1'd0;
reg           array_muxed18 = 1'd0;
reg           array_muxed19 = 1'd0;
reg           array_muxed20 = 1'd0;
reg     [2:0] array_muxed21 = 3'd0;
reg    [13:0] array_muxed22 = 14'd0;
reg           array_muxed23 = 1'd0;
reg           array_muxed24 = 1'd0;
reg           array_muxed25 = 1'd0;
reg           array_muxed26 = 1'd0;
reg           array_muxed27 = 1'd0;
wire          impl_xilinxasyncresetsynchronizerimpl0;
wire          impl_xilinxasyncresetsynchronizerimpl0_rst_meta;
wire          impl_xilinxasyncresetsynchronizerimpl1;
wire          impl_xilinxasyncresetsynchronizerimpl1_rst_meta;
wire          impl_xilinxasyncresetsynchronizerimpl2;
wire          impl_xilinxasyncresetsynchronizerimpl2_rst_meta;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl0_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl0_regs1 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl1_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl1_regs1 = 1'd0;
wire          impl_xilinxasyncresetsynchronizerimpl3_rst_meta;
wire          impl_xilinxasyncresetsynchronizerimpl4_rst_meta;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl2_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl2_regs1 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [5:0] impl_xilinxmultiregimpl3_regs0 = 6'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [5:0] impl_xilinxmultiregimpl3_regs1 = 6'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [5:0] impl_xilinxmultiregimpl4_regs0 = 6'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [5:0] impl_xilinxmultiregimpl4_regs1 = 6'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl5_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl5_regs1 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl6_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl6_regs1 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [5:0] impl_xilinxmultiregimpl7_regs0 = 6'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [5:0] impl_xilinxmultiregimpl7_regs1 = 6'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [5:0] impl_xilinxmultiregimpl8_regs0 = 6'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [5:0] impl_xilinxmultiregimpl8_regs1 = 6'd0;
wire          impl_xilinxsdrtristateimpl0__o;
wire          impl_xilinxsdrtristateimpl0_oe_n;
wire          impl_xilinxsdrtristateimpl0__i;
wire          impl_xilinxsdrtristateimpl1__o;
wire          impl_xilinxsdrtristateimpl1_oe_n;
wire          impl_xilinxsdrtristateimpl1__i;
wire          impl_xilinxsdrtristateimpl2__o;
wire          impl_xilinxsdrtristateimpl2_oe_n;
wire          impl_xilinxsdrtristateimpl2__i;
wire          impl_xilinxsdrtristateimpl3__o;
wire          impl_xilinxsdrtristateimpl3_oe_n;
wire          impl_xilinxsdrtristateimpl3__i;
wire          impl_xilinxsdrtristateimpl4__o;
wire          impl_xilinxsdrtristateimpl4_oe_n;
wire          impl_xilinxsdrtristateimpl4__i;
wire          impl_xilinxasyncresetsynchronizerimpl5;
wire          impl_xilinxasyncresetsynchronizerimpl5_rst_meta;
wire          impl0;
wire          impl1;
wire          impl2;
wire          impl3;
wire          impl4;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign soclinux_cpu_reset = (soclinux_soc_rst | soclinux_cpu_rst);
assign sdblock2mem_sink_sink_valid0 = sdcore_source_source_valid0;
assign sdcore_source_source_ready0 = sdblock2mem_sink_sink_ready0;
assign sdblock2mem_sink_sink_first = sdcore_source_source_first0;
assign sdblock2mem_sink_sink_last0 = sdcore_source_source_last0;
assign sdblock2mem_sink_sink_payload_data0 = sdcore_source_source_payload_data0;
assign sdcore_sink_sink_valid0 = sdmem2block_source_source_valid0;
assign sdmem2block_source_source_ready0 = sdcore_sink_sink_ready0;
assign sdcore_sink_sink_first0 = sdmem2block_source_source_first0;
assign sdcore_sink_sink_last0 = sdmem2block_source_source_last0;
assign sdcore_sink_sink_payload_data0 = sdmem2block_source_source_payload_data0;
assign block2mem_dma_trigger = sdblock2mem_irq;
assign mem2block_dma_trigger = sdmem2block_irq;
assign card_detect_trigger = card_detect_irq;
assign cmd_done_trigger = sdcore_csrfield_done0;
assign snn_3x2_clk = snn_clk_clk;
always @(*) begin
    crg_rst <= 1'd0;
    if (soclinux_soc_rst) begin
        crg_rst <= 1'd1;
    end
end
assign soclinux_bus_error = socbushandler0_error;
always @(*) begin
    soclinux_cpu_interrupt <= 32'd0;
    soclinux_cpu_interrupt[2] <= soclinux_ethmac_sram167_irq;
    soclinux_cpu_interrupt[3] <= sdirq_irq;
    soclinux_cpu_interrupt[1] <= soclinux_timer_irq;
    soclinux_cpu_interrupt[0] <= soclinux_uart_irq;
end
assign crg_reset = (cpu_reset | crg_rst);
assign sys_clk = crg_clkout_buf0;
assign sys4x_clk = crg_clkout_buf1;
assign idelay_clk = crg_clkout_buf2;
assign snn_clk_clk = clkout_buf;
assign soclinux_socbushandler_done = (soclinux_socbushandler_count == 1'd1);
always @(*) begin
    soclinux_socbushandler_adapted_interface_stb <= 1'd0;
    soclinux_socbushandler_adapted_interface_we <= 1'd0;
    soclinux_cpu_pbus_ack <= 1'd0;
    soclinux_socbushandler_skip <= 1'd0;
    soclinux_socbushandler_adapted_interface_cyc <= 1'd0;
    if ((soclinux_cpu_pbus_stb & soclinux_cpu_pbus_cyc)) begin
        soclinux_socbushandler_skip <= (soclinux_socbushandler_adapted_interface_sel == 1'd0);
        soclinux_socbushandler_adapted_interface_cyc <= (~soclinux_socbushandler_skip);
        soclinux_socbushandler_adapted_interface_stb <= (~soclinux_socbushandler_skip);
        soclinux_socbushandler_adapted_interface_we <= soclinux_cpu_pbus_we;
        if ((soclinux_socbushandler_adapted_interface_ack | soclinux_socbushandler_skip)) begin
            soclinux_cpu_pbus_ack <= soclinux_socbushandler_done;
        end
    end
end
assign soclinux_socbushandler_adapted_interface_adr = {soclinux_cpu_pbus_adr, soclinux_socbushandler_count};
always @(*) begin
    soclinux_socbushandler_adapted_interface_dat_w <= 32'd0;
    case (soclinux_socbushandler_count)
        1'd0: begin
            soclinux_socbushandler_adapted_interface_dat_w <= soclinux_cpu_pbus_dat_w[63:0];
        end
        1'd1: begin
            soclinux_socbushandler_adapted_interface_dat_w <= soclinux_cpu_pbus_dat_w[63:32];
        end
    endcase
end
always @(*) begin
    soclinux_socbushandler_adapted_interface_sel <= 4'd0;
    case (soclinux_socbushandler_count)
        1'd0: begin
            soclinux_socbushandler_adapted_interface_sel <= soclinux_cpu_pbus_sel[7:0];
        end
        1'd1: begin
            soclinux_socbushandler_adapted_interface_sel <= soclinux_cpu_pbus_sel[7:4];
        end
    endcase
end
assign soclinux_cpu_pbus_dat_r = {soclinux_socbushandler_adapted_interface_dat_r, soclinux_socbushandler_dat_r[63:32]};
assign socbushandler0_shared_adr = rhs_array_muxed0;
assign socbushandler0_shared_dat_w = rhs_array_muxed1;
assign socbushandler0_shared_sel = rhs_array_muxed2;
assign socbushandler0_shared_cyc = rhs_array_muxed3;
assign socbushandler0_shared_stb = rhs_array_muxed4;
assign socbushandler0_shared_we = rhs_array_muxed5;
assign socbushandler0_shared_cti = rhs_array_muxed6;
assign socbushandler0_shared_bte = rhs_array_muxed7;
assign soclinux_socbushandler_adapted_interface_dat_r = socbushandler0_shared_dat_r;
assign soclinux_socbushandler_adapted_interface_ack = (socbushandler0_shared_ack & (socbushandler0_grant == 1'd0));
assign soclinux_socbushandler_adapted_interface_err = (socbushandler0_shared_err & (socbushandler0_grant == 1'd0));
assign socbushandler0_request = {soclinux_socbushandler_adapted_interface_cyc};
assign socbushandler0_grant = 1'd0;
always @(*) begin
    socbushandler0_slave_sel <= 7'd0;
    socbushandler0_slave_sel[0] <= (socbushandler0_shared_adr[29:20] == 10'd963);
    socbushandler0_slave_sel[1] <= (socbushandler0_shared_adr[29:14] == 16'd61441);
    socbushandler0_slave_sel[2] <= (socbushandler0_shared_adr[29:19] == 1'd0);
    socbushandler0_slave_sel[3] <= (socbushandler0_shared_adr[29:19] == 8'd128);
    socbushandler0_slave_sel[4] <= (socbushandler0_shared_adr[29:28] == 1'd1);
    socbushandler0_slave_sel[5] <= (socbushandler0_shared_adr[29:11] == 19'd262144);
    socbushandler0_slave_sel[6] <= (socbushandler0_shared_adr[29:14] == 16'd61440);
end
assign soclinux_plicbus_adr = socbushandler0_shared_adr;
assign soclinux_plicbus_dat_w = socbushandler0_shared_dat_w;
assign soclinux_plicbus_sel = socbushandler0_shared_sel;
assign soclinux_plicbus_stb = socbushandler0_shared_stb;
assign soclinux_plicbus_we = socbushandler0_shared_we;
assign soclinux_plicbus_cti = socbushandler0_shared_cti;
assign soclinux_plicbus_bte = socbushandler0_shared_bte;
assign soclinux_clintbus_adr = socbushandler0_shared_adr;
assign soclinux_clintbus_dat_w = socbushandler0_shared_dat_w;
assign soclinux_clintbus_sel = socbushandler0_shared_sel;
assign soclinux_clintbus_stb = socbushandler0_shared_stb;
assign soclinux_clintbus_we = socbushandler0_shared_we;
assign soclinux_clintbus_cti = socbushandler0_shared_cti;
assign soclinux_clintbus_bte = socbushandler0_shared_bte;
assign soclinux_soclinux_ram_bus_adr = socbushandler0_shared_adr;
assign soclinux_soclinux_ram_bus_dat_w = socbushandler0_shared_dat_w;
assign soclinux_soclinux_ram_bus_sel = socbushandler0_shared_sel;
assign soclinux_soclinux_ram_bus_stb = socbushandler0_shared_stb;
assign soclinux_soclinux_ram_bus_we = socbushandler0_shared_we;
assign soclinux_soclinux_ram_bus_cti = socbushandler0_shared_cti;
assign soclinux_soclinux_ram_bus_bte = socbushandler0_shared_bte;
assign soclinux_ram_bus_ram_bus_adr = socbushandler0_shared_adr;
assign soclinux_ram_bus_ram_bus_dat_w = socbushandler0_shared_dat_w;
assign soclinux_ram_bus_ram_bus_sel = socbushandler0_shared_sel;
assign soclinux_ram_bus_ram_bus_stb = socbushandler0_shared_stb;
assign soclinux_ram_bus_ram_bus_we = socbushandler0_shared_we;
assign soclinux_ram_bus_ram_bus_cti = socbushandler0_shared_cti;
assign soclinux_ram_bus_ram_bus_bte = socbushandler0_shared_bte;
assign soclinux_wb_sdram_adr = socbushandler0_shared_adr;
assign soclinux_wb_sdram_dat_w = socbushandler0_shared_dat_w;
assign soclinux_wb_sdram_sel = socbushandler0_shared_sel;
assign soclinux_wb_sdram_stb = socbushandler0_shared_stb;
assign soclinux_wb_sdram_we = socbushandler0_shared_we;
assign soclinux_wb_sdram_cti = socbushandler0_shared_cti;
assign soclinux_wb_sdram_bte = socbushandler0_shared_bte;
assign soclinux_ethmac_bus_adr = socbushandler0_shared_adr;
assign soclinux_ethmac_bus_dat_w = socbushandler0_shared_dat_w;
assign soclinux_ethmac_bus_sel = socbushandler0_shared_sel;
assign soclinux_ethmac_bus_stb = socbushandler0_shared_stb;
assign soclinux_ethmac_bus_we = socbushandler0_shared_we;
assign soclinux_ethmac_bus_cti = socbushandler0_shared_cti;
assign soclinux_ethmac_bus_bte = socbushandler0_shared_bte;
assign soclinux_wishbone_adr = socbushandler0_shared_adr;
assign soclinux_wishbone_dat_w = socbushandler0_shared_dat_w;
assign soclinux_wishbone_sel = socbushandler0_shared_sel;
assign soclinux_wishbone_stb = socbushandler0_shared_stb;
assign soclinux_wishbone_we = socbushandler0_shared_we;
assign soclinux_wishbone_cti = socbushandler0_shared_cti;
assign soclinux_wishbone_bte = socbushandler0_shared_bte;
assign soclinux_plicbus_cyc = (socbushandler0_shared_cyc & socbushandler0_slave_sel[0]);
assign soclinux_clintbus_cyc = (socbushandler0_shared_cyc & socbushandler0_slave_sel[1]);
assign soclinux_soclinux_ram_bus_cyc = (socbushandler0_shared_cyc & socbushandler0_slave_sel[2]);
assign soclinux_ram_bus_ram_bus_cyc = (socbushandler0_shared_cyc & socbushandler0_slave_sel[3]);
assign soclinux_wb_sdram_cyc = (socbushandler0_shared_cyc & socbushandler0_slave_sel[4]);
assign soclinux_ethmac_bus_cyc = (socbushandler0_shared_cyc & socbushandler0_slave_sel[5]);
assign soclinux_wishbone_cyc = (socbushandler0_shared_cyc & socbushandler0_slave_sel[6]);
assign socbushandler0_shared_err = ((((((soclinux_plicbus_err | soclinux_clintbus_err) | soclinux_soclinux_ram_bus_err) | soclinux_ram_bus_ram_bus_err) | soclinux_wb_sdram_err) | soclinux_ethmac_bus_err) | soclinux_wishbone_err);
assign socbushandler0_wait = ((socbushandler0_shared_stb & socbushandler0_shared_cyc) & (~socbushandler0_shared_ack));
always @(*) begin
    socbushandler0_shared_ack <= 1'd0;
    socbushandler0_error <= 1'd0;
    socbushandler0_shared_dat_r <= 32'd0;
    socbushandler0_shared_ack <= ((((((soclinux_plicbus_ack | soclinux_clintbus_ack) | soclinux_soclinux_ram_bus_ack) | soclinux_ram_bus_ram_bus_ack) | soclinux_wb_sdram_ack) | soclinux_ethmac_bus_ack) | soclinux_wishbone_ack);
    socbushandler0_shared_dat_r <= ((((((({32{socbushandler0_slave_sel_r[0]}} & soclinux_plicbus_dat_r) | ({32{socbushandler0_slave_sel_r[1]}} & soclinux_clintbus_dat_r)) | ({32{socbushandler0_slave_sel_r[2]}} & soclinux_soclinux_ram_bus_dat_r)) | ({32{socbushandler0_slave_sel_r[3]}} & soclinux_ram_bus_ram_bus_dat_r)) | ({32{socbushandler0_slave_sel_r[4]}} & soclinux_wb_sdram_dat_r)) | ({32{socbushandler0_slave_sel_r[5]}} & soclinux_ethmac_bus_dat_r)) | ({32{socbushandler0_slave_sel_r[6]}} & soclinux_wishbone_dat_r));
    if (socbushandler0_done) begin
        socbushandler0_shared_dat_r <= 32'd4294967295;
        socbushandler0_shared_ack <= 1'd1;
        socbushandler0_error <= 1'd1;
    end
end
assign socbushandler0_done = (socbushandler0_count == 1'd0);
assign soclinux_bus_errors_status = soclinux_bus_errors;
always @(*) begin
    soclinux_soc_rst <= 1'd0;
    if (soclinux_reset_re) begin
        soclinux_soc_rst <= soclinux_reset_storage[0];
    end
end
assign soclinux_cpu_rst = soclinux_reset_storage[1];
assign csr_bankarray_csrbank0_reset0_w = soclinux_reset_storage[1:0];
assign csr_bankarray_csrbank0_scratch0_w = soclinux_scratch_storage[31:0];
assign csr_bankarray_csrbank0_bus_errors_w = soclinux_bus_errors_status[31:0];
assign soclinux_bus_errors_we = csr_bankarray_csrbank0_bus_errors_we;
assign socbushandler1_shared_adr = rhs_array_muxed8;
assign socbushandler1_shared_dat_w = rhs_array_muxed9;
assign socbushandler1_shared_sel = rhs_array_muxed10;
assign socbushandler1_shared_cyc = rhs_array_muxed11;
assign socbushandler1_shared_stb = rhs_array_muxed12;
assign socbushandler1_shared_we = rhs_array_muxed13;
assign socbushandler1_shared_cti = rhs_array_muxed14;
assign socbushandler1_shared_bte = rhs_array_muxed15;
assign interface0_bus_dat_r = socbushandler1_shared_dat_r;
assign interface1_bus_dat_r = socbushandler1_shared_dat_r;
assign interface0_bus_ack = (socbushandler1_shared_ack & (socbushandler1_grant == 1'd0));
assign interface1_bus_ack = (socbushandler1_shared_ack & (socbushandler1_grant == 1'd1));
assign interface0_bus_err = (socbushandler1_shared_err & (socbushandler1_grant == 1'd0));
assign interface1_bus_err = (socbushandler1_shared_err & (socbushandler1_grant == 1'd1));
assign socbushandler1_request = {interface1_bus_cyc, interface0_bus_cyc};
assign socbushandler1_slave_sel = 1'd1;
assign soclinux_dma_bus_dma_bus_adr = socbushandler1_shared_adr;
assign soclinux_dma_bus_dma_bus_dat_w = socbushandler1_shared_dat_w;
assign soclinux_dma_bus_dma_bus_sel = socbushandler1_shared_sel;
assign soclinux_dma_bus_dma_bus_stb = socbushandler1_shared_stb;
assign soclinux_dma_bus_dma_bus_we = socbushandler1_shared_we;
assign soclinux_dma_bus_dma_bus_cti = socbushandler1_shared_cti;
assign soclinux_dma_bus_dma_bus_bte = socbushandler1_shared_bte;
assign soclinux_dma_bus_dma_bus_cyc = (socbushandler1_shared_cyc & socbushandler1_slave_sel);
assign socbushandler1_shared_err = soclinux_dma_bus_dma_bus_err;
assign socbushandler1_wait = ((socbushandler1_shared_stb & socbushandler1_shared_cyc) & (~socbushandler1_shared_ack));
always @(*) begin
    socbushandler1_shared_dat_r <= 32'd0;
    socbushandler1_shared_ack <= 1'd0;
    socbushandler1_error <= 1'd0;
    socbushandler1_shared_ack <= soclinux_dma_bus_dma_bus_ack;
    socbushandler1_shared_dat_r <= ({32{socbushandler1_slave_sel_r}} & soclinux_dma_bus_dma_bus_dat_r);
    if (socbushandler1_done) begin
        socbushandler1_shared_dat_r <= 32'd4294967295;
        socbushandler1_shared_ack <= 1'd1;
        socbushandler1_error <= 1'd1;
    end
end
assign socbushandler1_done = (socbushandler1_count == 1'd0);
assign soclinux_cpu_dma_bus_cyc = soclinux_dma_bus_dma_bus_cyc;
assign soclinux_cpu_dma_bus_stb = soclinux_dma_bus_dma_bus_stb;
assign soclinux_dma_bus_dma_bus_ack = soclinux_cpu_dma_bus_ack;
assign soclinux_cpu_dma_bus_we = soclinux_dma_bus_dma_bus_we;
assign soclinux_cpu_dma_bus_cti = soclinux_dma_bus_dma_bus_cti;
assign soclinux_cpu_dma_bus_bte = soclinux_dma_bus_dma_bus_bte;
assign soclinux_dma_bus_dma_bus_err = soclinux_cpu_dma_bus_err;
always @(*) begin
    soclinux_cpu_dma_bus_dat_w <= 64'd0;
    soclinux_cpu_dma_bus_sel <= 8'd0;
    soclinux_dma_bus_dma_bus_dat_r <= 32'd0;
    soclinux_cpu_dma_bus_adr <= 30'd0;
    case (soclinux_dma_bus_dma_bus_adr[0])
        1'd0: begin
            soclinux_cpu_dma_bus_adr <= soclinux_dma_bus_dma_bus_adr[29:1];
            soclinux_cpu_dma_bus_sel[3:0] <= soclinux_dma_bus_dma_bus_sel;
            soclinux_cpu_dma_bus_dat_w[31:0] <= soclinux_dma_bus_dma_bus_dat_w;
            soclinux_dma_bus_dma_bus_dat_r <= soclinux_cpu_dma_bus_dat_r[31:0];
        end
        1'd1: begin
            soclinux_cpu_dma_bus_adr <= soclinux_dma_bus_dma_bus_adr[29:1];
            soclinux_cpu_dma_bus_sel[7:4] <= soclinux_dma_bus_dma_bus_sel;
            soclinux_cpu_dma_bus_dat_w[63:32] <= soclinux_dma_bus_dma_bus_dat_w;
            soclinux_dma_bus_dma_bus_dat_r <= soclinux_cpu_dma_bus_dat_r[63:32];
        end
    endcase
end
assign soclinux_soclinux_adr = soclinux_soclinux_ram_bus_adr[18:0];
assign soclinux_soclinux_ram_bus_dat_r = soclinux_soclinux_dat_r;
always @(*) begin
    soclinux_ram_we <= 4'd0;
    soclinux_ram_we[0] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[0]);
    soclinux_ram_we[1] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[1]);
    soclinux_ram_we[2] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[2]);
    soclinux_ram_we[3] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[3]);
end
assign soclinux_ram_adr = soclinux_ram_bus_ram_bus_adr[18:0];
assign soclinux_ram_bus_ram_bus_dat_r = soclinux_ram_dat_r;
assign soclinux_ram_dat_w = soclinux_ram_bus_ram_bus_dat_w;
always @(*) begin
    soclinux_tx_data_rs232phytx_next_value2 <= 8'd0;
    soclinux_tx_data_rs232phytx_next_value_ce2 <= 1'd0;
    soclinux_tx_sink_ready <= 1'd0;
    soclinux_rs232phytx_next_state <= 1'd0;
    soclinux_tx_count_rs232phytx_next_value0 <= 4'd0;
    soclinux_tx_enable <= 1'd0;
    soclinux_tx_count_rs232phytx_next_value_ce0 <= 1'd0;
    soclinux_serial_tx_rs232phytx_next_value1 <= 1'd0;
    soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
    soclinux_rs232phytx_next_state <= soclinux_rs232phytx_state;
    case (soclinux_rs232phytx_state)
        1'd1: begin
            soclinux_tx_enable <= 1'd1;
            if (soclinux_tx_tick) begin
                soclinux_serial_tx_rs232phytx_next_value1 <= soclinux_tx_data;
                soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                soclinux_tx_count_rs232phytx_next_value0 <= (soclinux_tx_count + 1'd1);
                soclinux_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
                soclinux_tx_data_rs232phytx_next_value2 <= {1'd1, soclinux_tx_data[7:1]};
                soclinux_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                if ((soclinux_tx_count == 4'd9)) begin
                    soclinux_tx_sink_ready <= 1'd1;
                    soclinux_rs232phytx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            soclinux_tx_count_rs232phytx_next_value0 <= 1'd0;
            soclinux_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
            soclinux_serial_tx_rs232phytx_next_value1 <= 1'd1;
            soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
            if (soclinux_tx_sink_valid) begin
                soclinux_serial_tx_rs232phytx_next_value1 <= 1'd0;
                soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                soclinux_tx_data_rs232phytx_next_value2 <= soclinux_tx_sink_payload_data;
                soclinux_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                soclinux_rs232phytx_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    soclinux_rx_data_rs232phyrx_next_value1 <= 8'd0;
    soclinux_rx_source_payload_data <= 8'd0;
    soclinux_rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
    soclinux_rx_source_valid <= 1'd0;
    soclinux_rs232phyrx_next_state <= 1'd0;
    soclinux_rx_count_rs232phyrx_next_value0 <= 4'd0;
    soclinux_rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
    soclinux_rx_enable <= 1'd0;
    soclinux_rs232phyrx_next_state <= soclinux_rs232phyrx_state;
    case (soclinux_rs232phyrx_state)
        1'd1: begin
            soclinux_rx_enable <= 1'd1;
            if (soclinux_rx_tick) begin
                soclinux_rx_count_rs232phyrx_next_value0 <= (soclinux_rx_count + 1'd1);
                soclinux_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
                soclinux_rx_data_rs232phyrx_next_value1 <= {soclinux_rx_rx, soclinux_rx_data[7:1]};
                soclinux_rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
                if ((soclinux_rx_count == 4'd9)) begin
                    soclinux_rx_source_valid <= (soclinux_rx_rx == 1'd1);
                    soclinux_rx_source_payload_data <= soclinux_rx_data;
                    soclinux_rs232phyrx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            soclinux_rx_count_rs232phyrx_next_value0 <= 1'd0;
            soclinux_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
            if (((soclinux_rx_rx == 1'd0) & (soclinux_rx_rx_d == 1'd1))) begin
                soclinux_rs232phyrx_next_state <= 1'd1;
            end
        end
    endcase
end
assign soclinux_uart_uart_sink_valid = soclinux_rx_source_valid;
assign soclinux_rx_source_ready = soclinux_uart_uart_sink_ready;
assign soclinux_uart_uart_sink_first = soclinux_rx_source_first;
assign soclinux_uart_uart_sink_last = soclinux_rx_source_last;
assign soclinux_uart_uart_sink_payload_data = soclinux_rx_source_payload_data;
assign soclinux_tx_sink_valid = soclinux_uart_uart_source_valid;
assign soclinux_uart_uart_source_ready = soclinux_tx_sink_ready;
assign soclinux_tx_sink_first = soclinux_uart_uart_source_first;
assign soclinux_tx_sink_last = soclinux_uart_uart_source_last;
assign soclinux_tx_sink_payload_data = soclinux_uart_uart_source_payload_data;
assign soclinux_uart_tx_fifo_sink_valid = soclinux_uart_rxtx_re;
assign soclinux_uart_tx_fifo_sink_payload_data = soclinux_uart_rxtx_r;
assign soclinux_uart_uart_source_valid = soclinux_uart_tx_fifo_source_valid;
assign soclinux_uart_tx_fifo_source_ready = soclinux_uart_uart_source_ready;
assign soclinux_uart_uart_source_first = soclinux_uart_tx_fifo_source_first;
assign soclinux_uart_uart_source_last = soclinux_uart_tx_fifo_source_last;
assign soclinux_uart_uart_source_payload_data = soclinux_uart_tx_fifo_source_payload_data;
assign soclinux_uart_txfull_status = (~soclinux_uart_tx_fifo_sink_ready);
assign soclinux_uart_txempty_status = (~soclinux_uart_tx_fifo_source_valid);
assign soclinux_uart_tx_trigger = soclinux_uart_tx_fifo_sink_ready;
assign soclinux_uart_rx_fifo_sink_valid = soclinux_uart_uart_sink_valid;
assign soclinux_uart_uart_sink_ready = soclinux_uart_rx_fifo_sink_ready;
assign soclinux_uart_rx_fifo_sink_first = soclinux_uart_uart_sink_first;
assign soclinux_uart_rx_fifo_sink_last = soclinux_uart_uart_sink_last;
assign soclinux_uart_rx_fifo_sink_payload_data = soclinux_uart_uart_sink_payload_data;
assign soclinux_uart_rxtx_w = soclinux_uart_rx_fifo_source_payload_data;
assign soclinux_uart_rx_fifo_source_ready = (soclinux_uart_rx_clear | (1'd0 & soclinux_uart_rxtx_we));
assign soclinux_uart_rxempty_status = (~soclinux_uart_rx_fifo_source_valid);
assign soclinux_uart_rxfull_status = (~soclinux_uart_rx_fifo_sink_ready);
assign soclinux_uart_rx_trigger = soclinux_uart_rx_fifo_source_valid;
assign soclinux_uart_tx0 = soclinux_uart_tx_status;
assign soclinux_uart_tx1 = soclinux_uart_tx_pending;
always @(*) begin
    soclinux_uart_tx_clear <= 1'd0;
    if ((soclinux_uart_pending_re & soclinux_uart_pending_r[0])) begin
        soclinux_uart_tx_clear <= 1'd1;
    end
end
assign soclinux_uart_rx0 = soclinux_uart_rx_status;
assign soclinux_uart_rx1 = soclinux_uart_rx_pending;
always @(*) begin
    soclinux_uart_rx_clear <= 1'd0;
    if ((soclinux_uart_pending_re & soclinux_uart_pending_r[1])) begin
        soclinux_uart_rx_clear <= 1'd1;
    end
end
assign soclinux_uart_irq = ((soclinux_uart_pending_status[0] & soclinux_uart_enable_storage[0]) | (soclinux_uart_pending_status[1] & soclinux_uart_enable_storage[1]));
assign soclinux_uart_tx_status = soclinux_uart_tx_trigger;
assign soclinux_uart_rx_status = soclinux_uart_rx_trigger;
assign soclinux_uart_tx_fifo_syncfifo_din = {soclinux_uart_tx_fifo_fifo_in_last, soclinux_uart_tx_fifo_fifo_in_first, soclinux_uart_tx_fifo_fifo_in_payload_data};
assign {soclinux_uart_tx_fifo_fifo_out_last, soclinux_uart_tx_fifo_fifo_out_first, soclinux_uart_tx_fifo_fifo_out_payload_data} = soclinux_uart_tx_fifo_syncfifo_dout;
assign soclinux_uart_tx_fifo_sink_ready = soclinux_uart_tx_fifo_syncfifo_writable;
assign soclinux_uart_tx_fifo_syncfifo_we = soclinux_uart_tx_fifo_sink_valid;
assign soclinux_uart_tx_fifo_fifo_in_first = soclinux_uart_tx_fifo_sink_first;
assign soclinux_uart_tx_fifo_fifo_in_last = soclinux_uart_tx_fifo_sink_last;
assign soclinux_uart_tx_fifo_fifo_in_payload_data = soclinux_uart_tx_fifo_sink_payload_data;
assign soclinux_uart_tx_fifo_source_valid = soclinux_uart_tx_fifo_readable;
assign soclinux_uart_tx_fifo_source_first = soclinux_uart_tx_fifo_fifo_out_first;
assign soclinux_uart_tx_fifo_source_last = soclinux_uart_tx_fifo_fifo_out_last;
assign soclinux_uart_tx_fifo_source_payload_data = soclinux_uart_tx_fifo_fifo_out_payload_data;
assign soclinux_uart_tx_fifo_re = soclinux_uart_tx_fifo_source_ready;
assign soclinux_uart_tx_fifo_syncfifo_re = (soclinux_uart_tx_fifo_syncfifo_readable & ((~soclinux_uart_tx_fifo_readable) | soclinux_uart_tx_fifo_re));
assign soclinux_uart_tx_fifo_level1 = (soclinux_uart_tx_fifo_level0 + soclinux_uart_tx_fifo_readable);
always @(*) begin
    soclinux_uart_tx_fifo_wrport_adr <= 4'd0;
    if (soclinux_uart_tx_fifo_replace) begin
        soclinux_uart_tx_fifo_wrport_adr <= (soclinux_uart_tx_fifo_produce - 1'd1);
    end else begin
        soclinux_uart_tx_fifo_wrport_adr <= soclinux_uart_tx_fifo_produce;
    end
end
assign soclinux_uart_tx_fifo_wrport_dat_w = soclinux_uart_tx_fifo_syncfifo_din;
assign soclinux_uart_tx_fifo_wrport_we = (soclinux_uart_tx_fifo_syncfifo_we & (soclinux_uart_tx_fifo_syncfifo_writable | soclinux_uart_tx_fifo_replace));
assign soclinux_uart_tx_fifo_do_read = (soclinux_uart_tx_fifo_syncfifo_readable & soclinux_uart_tx_fifo_syncfifo_re);
assign soclinux_uart_tx_fifo_rdport_adr = soclinux_uart_tx_fifo_consume;
assign soclinux_uart_tx_fifo_syncfifo_dout = soclinux_uart_tx_fifo_rdport_dat_r;
assign soclinux_uart_tx_fifo_rdport_re = soclinux_uart_tx_fifo_do_read;
assign soclinux_uart_tx_fifo_syncfifo_writable = (soclinux_uart_tx_fifo_level0 != 5'd16);
assign soclinux_uart_tx_fifo_syncfifo_readable = (soclinux_uart_tx_fifo_level0 != 1'd0);
assign soclinux_uart_rx_fifo_syncfifo_din = {soclinux_uart_rx_fifo_fifo_in_last, soclinux_uart_rx_fifo_fifo_in_first, soclinux_uart_rx_fifo_fifo_in_payload_data};
assign {soclinux_uart_rx_fifo_fifo_out_last, soclinux_uart_rx_fifo_fifo_out_first, soclinux_uart_rx_fifo_fifo_out_payload_data} = soclinux_uart_rx_fifo_syncfifo_dout;
assign soclinux_uart_rx_fifo_sink_ready = soclinux_uart_rx_fifo_syncfifo_writable;
assign soclinux_uart_rx_fifo_syncfifo_we = soclinux_uart_rx_fifo_sink_valid;
assign soclinux_uart_rx_fifo_fifo_in_first = soclinux_uart_rx_fifo_sink_first;
assign soclinux_uart_rx_fifo_fifo_in_last = soclinux_uart_rx_fifo_sink_last;
assign soclinux_uart_rx_fifo_fifo_in_payload_data = soclinux_uart_rx_fifo_sink_payload_data;
assign soclinux_uart_rx_fifo_source_valid = soclinux_uart_rx_fifo_readable;
assign soclinux_uart_rx_fifo_source_first = soclinux_uart_rx_fifo_fifo_out_first;
assign soclinux_uart_rx_fifo_source_last = soclinux_uart_rx_fifo_fifo_out_last;
assign soclinux_uart_rx_fifo_source_payload_data = soclinux_uart_rx_fifo_fifo_out_payload_data;
assign soclinux_uart_rx_fifo_re = soclinux_uart_rx_fifo_source_ready;
assign soclinux_uart_rx_fifo_syncfifo_re = (soclinux_uart_rx_fifo_syncfifo_readable & ((~soclinux_uart_rx_fifo_readable) | soclinux_uart_rx_fifo_re));
assign soclinux_uart_rx_fifo_level1 = (soclinux_uart_rx_fifo_level0 + soclinux_uart_rx_fifo_readable);
always @(*) begin
    soclinux_uart_rx_fifo_wrport_adr <= 4'd0;
    if (soclinux_uart_rx_fifo_replace) begin
        soclinux_uart_rx_fifo_wrport_adr <= (soclinux_uart_rx_fifo_produce - 1'd1);
    end else begin
        soclinux_uart_rx_fifo_wrport_adr <= soclinux_uart_rx_fifo_produce;
    end
end
assign soclinux_uart_rx_fifo_wrport_dat_w = soclinux_uart_rx_fifo_syncfifo_din;
assign soclinux_uart_rx_fifo_wrport_we = (soclinux_uart_rx_fifo_syncfifo_we & (soclinux_uart_rx_fifo_syncfifo_writable | soclinux_uart_rx_fifo_replace));
assign soclinux_uart_rx_fifo_do_read = (soclinux_uart_rx_fifo_syncfifo_readable & soclinux_uart_rx_fifo_syncfifo_re);
assign soclinux_uart_rx_fifo_rdport_adr = soclinux_uart_rx_fifo_consume;
assign soclinux_uart_rx_fifo_syncfifo_dout = soclinux_uart_rx_fifo_rdport_dat_r;
assign soclinux_uart_rx_fifo_rdport_re = soclinux_uart_rx_fifo_do_read;
assign soclinux_uart_rx_fifo_syncfifo_writable = (soclinux_uart_rx_fifo_level0 != 5'd16);
assign soclinux_uart_rx_fifo_syncfifo_readable = (soclinux_uart_rx_fifo_level0 != 1'd0);
assign soclinux_timer_zero_trigger = (soclinux_timer_value == 1'd0);
assign soclinux_timer_zero0 = soclinux_timer_zero_status;
assign soclinux_timer_zero1 = soclinux_timer_zero_pending;
always @(*) begin
    soclinux_timer_zero_clear <= 1'd0;
    if ((soclinux_timer_pending_re & soclinux_timer_pending_r)) begin
        soclinux_timer_zero_clear <= 1'd1;
    end
end
assign soclinux_timer_irq = (soclinux_timer_pending_status & soclinux_timer_enable_storage);
assign soclinux_timer_zero_status = soclinux_timer_zero_trigger;
assign ddram_ba = k7ddrphy_pads_ba;
assign k7ddrphy_dqs_oe_delay_tappeddelayline = ((k7ddrphy_dqs_preamble | k7ddrphy_dqs_oe) | k7ddrphy_dqs_postamble);
assign k7ddrphy_dq_oe_delay_tappeddelayline = ((k7ddrphy_dqs_preamble | k7ddrphy_dq_oe) | k7ddrphy_dqs_postamble);
always @(*) begin
    k7ddrphy_dfi_p0_rddata <= 128'd0;
    k7ddrphy_dfi_p0_rddata[0] <= k7ddrphy_bitslip04[0];
    k7ddrphy_dfi_p0_rddata[64] <= k7ddrphy_bitslip04[1];
    k7ddrphy_dfi_p0_rddata[1] <= k7ddrphy_bitslip14[0];
    k7ddrphy_dfi_p0_rddata[65] <= k7ddrphy_bitslip14[1];
    k7ddrphy_dfi_p0_rddata[2] <= k7ddrphy_bitslip24[0];
    k7ddrphy_dfi_p0_rddata[66] <= k7ddrphy_bitslip24[1];
    k7ddrphy_dfi_p0_rddata[3] <= k7ddrphy_bitslip34[0];
    k7ddrphy_dfi_p0_rddata[67] <= k7ddrphy_bitslip34[1];
    k7ddrphy_dfi_p0_rddata[4] <= k7ddrphy_bitslip44[0];
    k7ddrphy_dfi_p0_rddata[68] <= k7ddrphy_bitslip44[1];
    k7ddrphy_dfi_p0_rddata[5] <= k7ddrphy_bitslip54[0];
    k7ddrphy_dfi_p0_rddata[69] <= k7ddrphy_bitslip54[1];
    k7ddrphy_dfi_p0_rddata[6] <= k7ddrphy_bitslip64[0];
    k7ddrphy_dfi_p0_rddata[70] <= k7ddrphy_bitslip64[1];
    k7ddrphy_dfi_p0_rddata[7] <= k7ddrphy_bitslip74[0];
    k7ddrphy_dfi_p0_rddata[71] <= k7ddrphy_bitslip74[1];
    k7ddrphy_dfi_p0_rddata[8] <= k7ddrphy_bitslip82[0];
    k7ddrphy_dfi_p0_rddata[72] <= k7ddrphy_bitslip82[1];
    k7ddrphy_dfi_p0_rddata[9] <= k7ddrphy_bitslip92[0];
    k7ddrphy_dfi_p0_rddata[73] <= k7ddrphy_bitslip92[1];
    k7ddrphy_dfi_p0_rddata[10] <= k7ddrphy_bitslip102[0];
    k7ddrphy_dfi_p0_rddata[74] <= k7ddrphy_bitslip102[1];
    k7ddrphy_dfi_p0_rddata[11] <= k7ddrphy_bitslip112[0];
    k7ddrphy_dfi_p0_rddata[75] <= k7ddrphy_bitslip112[1];
    k7ddrphy_dfi_p0_rddata[12] <= k7ddrphy_bitslip122[0];
    k7ddrphy_dfi_p0_rddata[76] <= k7ddrphy_bitslip122[1];
    k7ddrphy_dfi_p0_rddata[13] <= k7ddrphy_bitslip132[0];
    k7ddrphy_dfi_p0_rddata[77] <= k7ddrphy_bitslip132[1];
    k7ddrphy_dfi_p0_rddata[14] <= k7ddrphy_bitslip142[0];
    k7ddrphy_dfi_p0_rddata[78] <= k7ddrphy_bitslip142[1];
    k7ddrphy_dfi_p0_rddata[15] <= k7ddrphy_bitslip152[0];
    k7ddrphy_dfi_p0_rddata[79] <= k7ddrphy_bitslip152[1];
    k7ddrphy_dfi_p0_rddata[16] <= k7ddrphy_bitslip162[0];
    k7ddrphy_dfi_p0_rddata[80] <= k7ddrphy_bitslip162[1];
    k7ddrphy_dfi_p0_rddata[17] <= k7ddrphy_bitslip172[0];
    k7ddrphy_dfi_p0_rddata[81] <= k7ddrphy_bitslip172[1];
    k7ddrphy_dfi_p0_rddata[18] <= k7ddrphy_bitslip182[0];
    k7ddrphy_dfi_p0_rddata[82] <= k7ddrphy_bitslip182[1];
    k7ddrphy_dfi_p0_rddata[19] <= k7ddrphy_bitslip192[0];
    k7ddrphy_dfi_p0_rddata[83] <= k7ddrphy_bitslip192[1];
    k7ddrphy_dfi_p0_rddata[20] <= k7ddrphy_bitslip202[0];
    k7ddrphy_dfi_p0_rddata[84] <= k7ddrphy_bitslip202[1];
    k7ddrphy_dfi_p0_rddata[21] <= k7ddrphy_bitslip212[0];
    k7ddrphy_dfi_p0_rddata[85] <= k7ddrphy_bitslip212[1];
    k7ddrphy_dfi_p0_rddata[22] <= k7ddrphy_bitslip222[0];
    k7ddrphy_dfi_p0_rddata[86] <= k7ddrphy_bitslip222[1];
    k7ddrphy_dfi_p0_rddata[23] <= k7ddrphy_bitslip232[0];
    k7ddrphy_dfi_p0_rddata[87] <= k7ddrphy_bitslip232[1];
    k7ddrphy_dfi_p0_rddata[24] <= k7ddrphy_bitslip242[0];
    k7ddrphy_dfi_p0_rddata[88] <= k7ddrphy_bitslip242[1];
    k7ddrphy_dfi_p0_rddata[25] <= k7ddrphy_bitslip252[0];
    k7ddrphy_dfi_p0_rddata[89] <= k7ddrphy_bitslip252[1];
    k7ddrphy_dfi_p0_rddata[26] <= k7ddrphy_bitslip262[0];
    k7ddrphy_dfi_p0_rddata[90] <= k7ddrphy_bitslip262[1];
    k7ddrphy_dfi_p0_rddata[27] <= k7ddrphy_bitslip272[0];
    k7ddrphy_dfi_p0_rddata[91] <= k7ddrphy_bitslip272[1];
    k7ddrphy_dfi_p0_rddata[28] <= k7ddrphy_bitslip282[0];
    k7ddrphy_dfi_p0_rddata[92] <= k7ddrphy_bitslip282[1];
    k7ddrphy_dfi_p0_rddata[29] <= k7ddrphy_bitslip292[0];
    k7ddrphy_dfi_p0_rddata[93] <= k7ddrphy_bitslip292[1];
    k7ddrphy_dfi_p0_rddata[30] <= k7ddrphy_bitslip302[0];
    k7ddrphy_dfi_p0_rddata[94] <= k7ddrphy_bitslip302[1];
    k7ddrphy_dfi_p0_rddata[31] <= k7ddrphy_bitslip312[0];
    k7ddrphy_dfi_p0_rddata[95] <= k7ddrphy_bitslip312[1];
    k7ddrphy_dfi_p0_rddata[32] <= k7ddrphy_bitslip322[0];
    k7ddrphy_dfi_p0_rddata[96] <= k7ddrphy_bitslip322[1];
    k7ddrphy_dfi_p0_rddata[33] <= k7ddrphy_bitslip332[0];
    k7ddrphy_dfi_p0_rddata[97] <= k7ddrphy_bitslip332[1];
    k7ddrphy_dfi_p0_rddata[34] <= k7ddrphy_bitslip342[0];
    k7ddrphy_dfi_p0_rddata[98] <= k7ddrphy_bitslip342[1];
    k7ddrphy_dfi_p0_rddata[35] <= k7ddrphy_bitslip352[0];
    k7ddrphy_dfi_p0_rddata[99] <= k7ddrphy_bitslip352[1];
    k7ddrphy_dfi_p0_rddata[36] <= k7ddrphy_bitslip362[0];
    k7ddrphy_dfi_p0_rddata[100] <= k7ddrphy_bitslip362[1];
    k7ddrphy_dfi_p0_rddata[37] <= k7ddrphy_bitslip372[0];
    k7ddrphy_dfi_p0_rddata[101] <= k7ddrphy_bitslip372[1];
    k7ddrphy_dfi_p0_rddata[38] <= k7ddrphy_bitslip382[0];
    k7ddrphy_dfi_p0_rddata[102] <= k7ddrphy_bitslip382[1];
    k7ddrphy_dfi_p0_rddata[39] <= k7ddrphy_bitslip392[0];
    k7ddrphy_dfi_p0_rddata[103] <= k7ddrphy_bitslip392[1];
    k7ddrphy_dfi_p0_rddata[40] <= k7ddrphy_bitslip402[0];
    k7ddrphy_dfi_p0_rddata[104] <= k7ddrphy_bitslip402[1];
    k7ddrphy_dfi_p0_rddata[41] <= k7ddrphy_bitslip412[0];
    k7ddrphy_dfi_p0_rddata[105] <= k7ddrphy_bitslip412[1];
    k7ddrphy_dfi_p0_rddata[42] <= k7ddrphy_bitslip422[0];
    k7ddrphy_dfi_p0_rddata[106] <= k7ddrphy_bitslip422[1];
    k7ddrphy_dfi_p0_rddata[43] <= k7ddrphy_bitslip432[0];
    k7ddrphy_dfi_p0_rddata[107] <= k7ddrphy_bitslip432[1];
    k7ddrphy_dfi_p0_rddata[44] <= k7ddrphy_bitslip442[0];
    k7ddrphy_dfi_p0_rddata[108] <= k7ddrphy_bitslip442[1];
    k7ddrphy_dfi_p0_rddata[45] <= k7ddrphy_bitslip452[0];
    k7ddrphy_dfi_p0_rddata[109] <= k7ddrphy_bitslip452[1];
    k7ddrphy_dfi_p0_rddata[46] <= k7ddrphy_bitslip462[0];
    k7ddrphy_dfi_p0_rddata[110] <= k7ddrphy_bitslip462[1];
    k7ddrphy_dfi_p0_rddata[47] <= k7ddrphy_bitslip472[0];
    k7ddrphy_dfi_p0_rddata[111] <= k7ddrphy_bitslip472[1];
    k7ddrphy_dfi_p0_rddata[48] <= k7ddrphy_bitslip482[0];
    k7ddrphy_dfi_p0_rddata[112] <= k7ddrphy_bitslip482[1];
    k7ddrphy_dfi_p0_rddata[49] <= k7ddrphy_bitslip492[0];
    k7ddrphy_dfi_p0_rddata[113] <= k7ddrphy_bitslip492[1];
    k7ddrphy_dfi_p0_rddata[50] <= k7ddrphy_bitslip502[0];
    k7ddrphy_dfi_p0_rddata[114] <= k7ddrphy_bitslip502[1];
    k7ddrphy_dfi_p0_rddata[51] <= k7ddrphy_bitslip512[0];
    k7ddrphy_dfi_p0_rddata[115] <= k7ddrphy_bitslip512[1];
    k7ddrphy_dfi_p0_rddata[52] <= k7ddrphy_bitslip522[0];
    k7ddrphy_dfi_p0_rddata[116] <= k7ddrphy_bitslip522[1];
    k7ddrphy_dfi_p0_rddata[53] <= k7ddrphy_bitslip532[0];
    k7ddrphy_dfi_p0_rddata[117] <= k7ddrphy_bitslip532[1];
    k7ddrphy_dfi_p0_rddata[54] <= k7ddrphy_bitslip542[0];
    k7ddrphy_dfi_p0_rddata[118] <= k7ddrphy_bitslip542[1];
    k7ddrphy_dfi_p0_rddata[55] <= k7ddrphy_bitslip552[0];
    k7ddrphy_dfi_p0_rddata[119] <= k7ddrphy_bitslip552[1];
    k7ddrphy_dfi_p0_rddata[56] <= k7ddrphy_bitslip562[0];
    k7ddrphy_dfi_p0_rddata[120] <= k7ddrphy_bitslip562[1];
    k7ddrphy_dfi_p0_rddata[57] <= k7ddrphy_bitslip572[0];
    k7ddrphy_dfi_p0_rddata[121] <= k7ddrphy_bitslip572[1];
    k7ddrphy_dfi_p0_rddata[58] <= k7ddrphy_bitslip582[0];
    k7ddrphy_dfi_p0_rddata[122] <= k7ddrphy_bitslip582[1];
    k7ddrphy_dfi_p0_rddata[59] <= k7ddrphy_bitslip592[0];
    k7ddrphy_dfi_p0_rddata[123] <= k7ddrphy_bitslip592[1];
    k7ddrphy_dfi_p0_rddata[60] <= k7ddrphy_bitslip602[0];
    k7ddrphy_dfi_p0_rddata[124] <= k7ddrphy_bitslip602[1];
    k7ddrphy_dfi_p0_rddata[61] <= k7ddrphy_bitslip612[0];
    k7ddrphy_dfi_p0_rddata[125] <= k7ddrphy_bitslip612[1];
    k7ddrphy_dfi_p0_rddata[62] <= k7ddrphy_bitslip622[0];
    k7ddrphy_dfi_p0_rddata[126] <= k7ddrphy_bitslip622[1];
    k7ddrphy_dfi_p0_rddata[63] <= k7ddrphy_bitslip632[0];
    k7ddrphy_dfi_p0_rddata[127] <= k7ddrphy_bitslip632[1];
end
always @(*) begin
    k7ddrphy_dfi_p1_rddata <= 128'd0;
    k7ddrphy_dfi_p1_rddata[0] <= k7ddrphy_bitslip04[2];
    k7ddrphy_dfi_p1_rddata[64] <= k7ddrphy_bitslip04[3];
    k7ddrphy_dfi_p1_rddata[1] <= k7ddrphy_bitslip14[2];
    k7ddrphy_dfi_p1_rddata[65] <= k7ddrphy_bitslip14[3];
    k7ddrphy_dfi_p1_rddata[2] <= k7ddrphy_bitslip24[2];
    k7ddrphy_dfi_p1_rddata[66] <= k7ddrphy_bitslip24[3];
    k7ddrphy_dfi_p1_rddata[3] <= k7ddrphy_bitslip34[2];
    k7ddrphy_dfi_p1_rddata[67] <= k7ddrphy_bitslip34[3];
    k7ddrphy_dfi_p1_rddata[4] <= k7ddrphy_bitslip44[2];
    k7ddrphy_dfi_p1_rddata[68] <= k7ddrphy_bitslip44[3];
    k7ddrphy_dfi_p1_rddata[5] <= k7ddrphy_bitslip54[2];
    k7ddrphy_dfi_p1_rddata[69] <= k7ddrphy_bitslip54[3];
    k7ddrphy_dfi_p1_rddata[6] <= k7ddrphy_bitslip64[2];
    k7ddrphy_dfi_p1_rddata[70] <= k7ddrphy_bitslip64[3];
    k7ddrphy_dfi_p1_rddata[7] <= k7ddrphy_bitslip74[2];
    k7ddrphy_dfi_p1_rddata[71] <= k7ddrphy_bitslip74[3];
    k7ddrphy_dfi_p1_rddata[8] <= k7ddrphy_bitslip82[2];
    k7ddrphy_dfi_p1_rddata[72] <= k7ddrphy_bitslip82[3];
    k7ddrphy_dfi_p1_rddata[9] <= k7ddrphy_bitslip92[2];
    k7ddrphy_dfi_p1_rddata[73] <= k7ddrphy_bitslip92[3];
    k7ddrphy_dfi_p1_rddata[10] <= k7ddrphy_bitslip102[2];
    k7ddrphy_dfi_p1_rddata[74] <= k7ddrphy_bitslip102[3];
    k7ddrphy_dfi_p1_rddata[11] <= k7ddrphy_bitslip112[2];
    k7ddrphy_dfi_p1_rddata[75] <= k7ddrphy_bitslip112[3];
    k7ddrphy_dfi_p1_rddata[12] <= k7ddrphy_bitslip122[2];
    k7ddrphy_dfi_p1_rddata[76] <= k7ddrphy_bitslip122[3];
    k7ddrphy_dfi_p1_rddata[13] <= k7ddrphy_bitslip132[2];
    k7ddrphy_dfi_p1_rddata[77] <= k7ddrphy_bitslip132[3];
    k7ddrphy_dfi_p1_rddata[14] <= k7ddrphy_bitslip142[2];
    k7ddrphy_dfi_p1_rddata[78] <= k7ddrphy_bitslip142[3];
    k7ddrphy_dfi_p1_rddata[15] <= k7ddrphy_bitslip152[2];
    k7ddrphy_dfi_p1_rddata[79] <= k7ddrphy_bitslip152[3];
    k7ddrphy_dfi_p1_rddata[16] <= k7ddrphy_bitslip162[2];
    k7ddrphy_dfi_p1_rddata[80] <= k7ddrphy_bitslip162[3];
    k7ddrphy_dfi_p1_rddata[17] <= k7ddrphy_bitslip172[2];
    k7ddrphy_dfi_p1_rddata[81] <= k7ddrphy_bitslip172[3];
    k7ddrphy_dfi_p1_rddata[18] <= k7ddrphy_bitslip182[2];
    k7ddrphy_dfi_p1_rddata[82] <= k7ddrphy_bitslip182[3];
    k7ddrphy_dfi_p1_rddata[19] <= k7ddrphy_bitslip192[2];
    k7ddrphy_dfi_p1_rddata[83] <= k7ddrphy_bitslip192[3];
    k7ddrphy_dfi_p1_rddata[20] <= k7ddrphy_bitslip202[2];
    k7ddrphy_dfi_p1_rddata[84] <= k7ddrphy_bitslip202[3];
    k7ddrphy_dfi_p1_rddata[21] <= k7ddrphy_bitslip212[2];
    k7ddrphy_dfi_p1_rddata[85] <= k7ddrphy_bitslip212[3];
    k7ddrphy_dfi_p1_rddata[22] <= k7ddrphy_bitslip222[2];
    k7ddrphy_dfi_p1_rddata[86] <= k7ddrphy_bitslip222[3];
    k7ddrphy_dfi_p1_rddata[23] <= k7ddrphy_bitslip232[2];
    k7ddrphy_dfi_p1_rddata[87] <= k7ddrphy_bitslip232[3];
    k7ddrphy_dfi_p1_rddata[24] <= k7ddrphy_bitslip242[2];
    k7ddrphy_dfi_p1_rddata[88] <= k7ddrphy_bitslip242[3];
    k7ddrphy_dfi_p1_rddata[25] <= k7ddrphy_bitslip252[2];
    k7ddrphy_dfi_p1_rddata[89] <= k7ddrphy_bitslip252[3];
    k7ddrphy_dfi_p1_rddata[26] <= k7ddrphy_bitslip262[2];
    k7ddrphy_dfi_p1_rddata[90] <= k7ddrphy_bitslip262[3];
    k7ddrphy_dfi_p1_rddata[27] <= k7ddrphy_bitslip272[2];
    k7ddrphy_dfi_p1_rddata[91] <= k7ddrphy_bitslip272[3];
    k7ddrphy_dfi_p1_rddata[28] <= k7ddrphy_bitslip282[2];
    k7ddrphy_dfi_p1_rddata[92] <= k7ddrphy_bitslip282[3];
    k7ddrphy_dfi_p1_rddata[29] <= k7ddrphy_bitslip292[2];
    k7ddrphy_dfi_p1_rddata[93] <= k7ddrphy_bitslip292[3];
    k7ddrphy_dfi_p1_rddata[30] <= k7ddrphy_bitslip302[2];
    k7ddrphy_dfi_p1_rddata[94] <= k7ddrphy_bitslip302[3];
    k7ddrphy_dfi_p1_rddata[31] <= k7ddrphy_bitslip312[2];
    k7ddrphy_dfi_p1_rddata[95] <= k7ddrphy_bitslip312[3];
    k7ddrphy_dfi_p1_rddata[32] <= k7ddrphy_bitslip322[2];
    k7ddrphy_dfi_p1_rddata[96] <= k7ddrphy_bitslip322[3];
    k7ddrphy_dfi_p1_rddata[33] <= k7ddrphy_bitslip332[2];
    k7ddrphy_dfi_p1_rddata[97] <= k7ddrphy_bitslip332[3];
    k7ddrphy_dfi_p1_rddata[34] <= k7ddrphy_bitslip342[2];
    k7ddrphy_dfi_p1_rddata[98] <= k7ddrphy_bitslip342[3];
    k7ddrphy_dfi_p1_rddata[35] <= k7ddrphy_bitslip352[2];
    k7ddrphy_dfi_p1_rddata[99] <= k7ddrphy_bitslip352[3];
    k7ddrphy_dfi_p1_rddata[36] <= k7ddrphy_bitslip362[2];
    k7ddrphy_dfi_p1_rddata[100] <= k7ddrphy_bitslip362[3];
    k7ddrphy_dfi_p1_rddata[37] <= k7ddrphy_bitslip372[2];
    k7ddrphy_dfi_p1_rddata[101] <= k7ddrphy_bitslip372[3];
    k7ddrphy_dfi_p1_rddata[38] <= k7ddrphy_bitslip382[2];
    k7ddrphy_dfi_p1_rddata[102] <= k7ddrphy_bitslip382[3];
    k7ddrphy_dfi_p1_rddata[39] <= k7ddrphy_bitslip392[2];
    k7ddrphy_dfi_p1_rddata[103] <= k7ddrphy_bitslip392[3];
    k7ddrphy_dfi_p1_rddata[40] <= k7ddrphy_bitslip402[2];
    k7ddrphy_dfi_p1_rddata[104] <= k7ddrphy_bitslip402[3];
    k7ddrphy_dfi_p1_rddata[41] <= k7ddrphy_bitslip412[2];
    k7ddrphy_dfi_p1_rddata[105] <= k7ddrphy_bitslip412[3];
    k7ddrphy_dfi_p1_rddata[42] <= k7ddrphy_bitslip422[2];
    k7ddrphy_dfi_p1_rddata[106] <= k7ddrphy_bitslip422[3];
    k7ddrphy_dfi_p1_rddata[43] <= k7ddrphy_bitslip432[2];
    k7ddrphy_dfi_p1_rddata[107] <= k7ddrphy_bitslip432[3];
    k7ddrphy_dfi_p1_rddata[44] <= k7ddrphy_bitslip442[2];
    k7ddrphy_dfi_p1_rddata[108] <= k7ddrphy_bitslip442[3];
    k7ddrphy_dfi_p1_rddata[45] <= k7ddrphy_bitslip452[2];
    k7ddrphy_dfi_p1_rddata[109] <= k7ddrphy_bitslip452[3];
    k7ddrphy_dfi_p1_rddata[46] <= k7ddrphy_bitslip462[2];
    k7ddrphy_dfi_p1_rddata[110] <= k7ddrphy_bitslip462[3];
    k7ddrphy_dfi_p1_rddata[47] <= k7ddrphy_bitslip472[2];
    k7ddrphy_dfi_p1_rddata[111] <= k7ddrphy_bitslip472[3];
    k7ddrphy_dfi_p1_rddata[48] <= k7ddrphy_bitslip482[2];
    k7ddrphy_dfi_p1_rddata[112] <= k7ddrphy_bitslip482[3];
    k7ddrphy_dfi_p1_rddata[49] <= k7ddrphy_bitslip492[2];
    k7ddrphy_dfi_p1_rddata[113] <= k7ddrphy_bitslip492[3];
    k7ddrphy_dfi_p1_rddata[50] <= k7ddrphy_bitslip502[2];
    k7ddrphy_dfi_p1_rddata[114] <= k7ddrphy_bitslip502[3];
    k7ddrphy_dfi_p1_rddata[51] <= k7ddrphy_bitslip512[2];
    k7ddrphy_dfi_p1_rddata[115] <= k7ddrphy_bitslip512[3];
    k7ddrphy_dfi_p1_rddata[52] <= k7ddrphy_bitslip522[2];
    k7ddrphy_dfi_p1_rddata[116] <= k7ddrphy_bitslip522[3];
    k7ddrphy_dfi_p1_rddata[53] <= k7ddrphy_bitslip532[2];
    k7ddrphy_dfi_p1_rddata[117] <= k7ddrphy_bitslip532[3];
    k7ddrphy_dfi_p1_rddata[54] <= k7ddrphy_bitslip542[2];
    k7ddrphy_dfi_p1_rddata[118] <= k7ddrphy_bitslip542[3];
    k7ddrphy_dfi_p1_rddata[55] <= k7ddrphy_bitslip552[2];
    k7ddrphy_dfi_p1_rddata[119] <= k7ddrphy_bitslip552[3];
    k7ddrphy_dfi_p1_rddata[56] <= k7ddrphy_bitslip562[2];
    k7ddrphy_dfi_p1_rddata[120] <= k7ddrphy_bitslip562[3];
    k7ddrphy_dfi_p1_rddata[57] <= k7ddrphy_bitslip572[2];
    k7ddrphy_dfi_p1_rddata[121] <= k7ddrphy_bitslip572[3];
    k7ddrphy_dfi_p1_rddata[58] <= k7ddrphy_bitslip582[2];
    k7ddrphy_dfi_p1_rddata[122] <= k7ddrphy_bitslip582[3];
    k7ddrphy_dfi_p1_rddata[59] <= k7ddrphy_bitslip592[2];
    k7ddrphy_dfi_p1_rddata[123] <= k7ddrphy_bitslip592[3];
    k7ddrphy_dfi_p1_rddata[60] <= k7ddrphy_bitslip602[2];
    k7ddrphy_dfi_p1_rddata[124] <= k7ddrphy_bitslip602[3];
    k7ddrphy_dfi_p1_rddata[61] <= k7ddrphy_bitslip612[2];
    k7ddrphy_dfi_p1_rddata[125] <= k7ddrphy_bitslip612[3];
    k7ddrphy_dfi_p1_rddata[62] <= k7ddrphy_bitslip622[2];
    k7ddrphy_dfi_p1_rddata[126] <= k7ddrphy_bitslip622[3];
    k7ddrphy_dfi_p1_rddata[63] <= k7ddrphy_bitslip632[2];
    k7ddrphy_dfi_p1_rddata[127] <= k7ddrphy_bitslip632[3];
end
always @(*) begin
    k7ddrphy_dfi_p2_rddata <= 128'd0;
    k7ddrphy_dfi_p2_rddata[0] <= k7ddrphy_bitslip04[4];
    k7ddrphy_dfi_p2_rddata[64] <= k7ddrphy_bitslip04[5];
    k7ddrphy_dfi_p2_rddata[1] <= k7ddrphy_bitslip14[4];
    k7ddrphy_dfi_p2_rddata[65] <= k7ddrphy_bitslip14[5];
    k7ddrphy_dfi_p2_rddata[2] <= k7ddrphy_bitslip24[4];
    k7ddrphy_dfi_p2_rddata[66] <= k7ddrphy_bitslip24[5];
    k7ddrphy_dfi_p2_rddata[3] <= k7ddrphy_bitslip34[4];
    k7ddrphy_dfi_p2_rddata[67] <= k7ddrphy_bitslip34[5];
    k7ddrphy_dfi_p2_rddata[4] <= k7ddrphy_bitslip44[4];
    k7ddrphy_dfi_p2_rddata[68] <= k7ddrphy_bitslip44[5];
    k7ddrphy_dfi_p2_rddata[5] <= k7ddrphy_bitslip54[4];
    k7ddrphy_dfi_p2_rddata[69] <= k7ddrphy_bitslip54[5];
    k7ddrphy_dfi_p2_rddata[6] <= k7ddrphy_bitslip64[4];
    k7ddrphy_dfi_p2_rddata[70] <= k7ddrphy_bitslip64[5];
    k7ddrphy_dfi_p2_rddata[7] <= k7ddrphy_bitslip74[4];
    k7ddrphy_dfi_p2_rddata[71] <= k7ddrphy_bitslip74[5];
    k7ddrphy_dfi_p2_rddata[8] <= k7ddrphy_bitslip82[4];
    k7ddrphy_dfi_p2_rddata[72] <= k7ddrphy_bitslip82[5];
    k7ddrphy_dfi_p2_rddata[9] <= k7ddrphy_bitslip92[4];
    k7ddrphy_dfi_p2_rddata[73] <= k7ddrphy_bitslip92[5];
    k7ddrphy_dfi_p2_rddata[10] <= k7ddrphy_bitslip102[4];
    k7ddrphy_dfi_p2_rddata[74] <= k7ddrphy_bitslip102[5];
    k7ddrphy_dfi_p2_rddata[11] <= k7ddrphy_bitslip112[4];
    k7ddrphy_dfi_p2_rddata[75] <= k7ddrphy_bitslip112[5];
    k7ddrphy_dfi_p2_rddata[12] <= k7ddrphy_bitslip122[4];
    k7ddrphy_dfi_p2_rddata[76] <= k7ddrphy_bitslip122[5];
    k7ddrphy_dfi_p2_rddata[13] <= k7ddrphy_bitslip132[4];
    k7ddrphy_dfi_p2_rddata[77] <= k7ddrphy_bitslip132[5];
    k7ddrphy_dfi_p2_rddata[14] <= k7ddrphy_bitslip142[4];
    k7ddrphy_dfi_p2_rddata[78] <= k7ddrphy_bitslip142[5];
    k7ddrphy_dfi_p2_rddata[15] <= k7ddrphy_bitslip152[4];
    k7ddrphy_dfi_p2_rddata[79] <= k7ddrphy_bitslip152[5];
    k7ddrphy_dfi_p2_rddata[16] <= k7ddrphy_bitslip162[4];
    k7ddrphy_dfi_p2_rddata[80] <= k7ddrphy_bitslip162[5];
    k7ddrphy_dfi_p2_rddata[17] <= k7ddrphy_bitslip172[4];
    k7ddrphy_dfi_p2_rddata[81] <= k7ddrphy_bitslip172[5];
    k7ddrphy_dfi_p2_rddata[18] <= k7ddrphy_bitslip182[4];
    k7ddrphy_dfi_p2_rddata[82] <= k7ddrphy_bitslip182[5];
    k7ddrphy_dfi_p2_rddata[19] <= k7ddrphy_bitslip192[4];
    k7ddrphy_dfi_p2_rddata[83] <= k7ddrphy_bitslip192[5];
    k7ddrphy_dfi_p2_rddata[20] <= k7ddrphy_bitslip202[4];
    k7ddrphy_dfi_p2_rddata[84] <= k7ddrphy_bitslip202[5];
    k7ddrphy_dfi_p2_rddata[21] <= k7ddrphy_bitslip212[4];
    k7ddrphy_dfi_p2_rddata[85] <= k7ddrphy_bitslip212[5];
    k7ddrphy_dfi_p2_rddata[22] <= k7ddrphy_bitslip222[4];
    k7ddrphy_dfi_p2_rddata[86] <= k7ddrphy_bitslip222[5];
    k7ddrphy_dfi_p2_rddata[23] <= k7ddrphy_bitslip232[4];
    k7ddrphy_dfi_p2_rddata[87] <= k7ddrphy_bitslip232[5];
    k7ddrphy_dfi_p2_rddata[24] <= k7ddrphy_bitslip242[4];
    k7ddrphy_dfi_p2_rddata[88] <= k7ddrphy_bitslip242[5];
    k7ddrphy_dfi_p2_rddata[25] <= k7ddrphy_bitslip252[4];
    k7ddrphy_dfi_p2_rddata[89] <= k7ddrphy_bitslip252[5];
    k7ddrphy_dfi_p2_rddata[26] <= k7ddrphy_bitslip262[4];
    k7ddrphy_dfi_p2_rddata[90] <= k7ddrphy_bitslip262[5];
    k7ddrphy_dfi_p2_rddata[27] <= k7ddrphy_bitslip272[4];
    k7ddrphy_dfi_p2_rddata[91] <= k7ddrphy_bitslip272[5];
    k7ddrphy_dfi_p2_rddata[28] <= k7ddrphy_bitslip282[4];
    k7ddrphy_dfi_p2_rddata[92] <= k7ddrphy_bitslip282[5];
    k7ddrphy_dfi_p2_rddata[29] <= k7ddrphy_bitslip292[4];
    k7ddrphy_dfi_p2_rddata[93] <= k7ddrphy_bitslip292[5];
    k7ddrphy_dfi_p2_rddata[30] <= k7ddrphy_bitslip302[4];
    k7ddrphy_dfi_p2_rddata[94] <= k7ddrphy_bitslip302[5];
    k7ddrphy_dfi_p2_rddata[31] <= k7ddrphy_bitslip312[4];
    k7ddrphy_dfi_p2_rddata[95] <= k7ddrphy_bitslip312[5];
    k7ddrphy_dfi_p2_rddata[32] <= k7ddrphy_bitslip322[4];
    k7ddrphy_dfi_p2_rddata[96] <= k7ddrphy_bitslip322[5];
    k7ddrphy_dfi_p2_rddata[33] <= k7ddrphy_bitslip332[4];
    k7ddrphy_dfi_p2_rddata[97] <= k7ddrphy_bitslip332[5];
    k7ddrphy_dfi_p2_rddata[34] <= k7ddrphy_bitslip342[4];
    k7ddrphy_dfi_p2_rddata[98] <= k7ddrphy_bitslip342[5];
    k7ddrphy_dfi_p2_rddata[35] <= k7ddrphy_bitslip352[4];
    k7ddrphy_dfi_p2_rddata[99] <= k7ddrphy_bitslip352[5];
    k7ddrphy_dfi_p2_rddata[36] <= k7ddrphy_bitslip362[4];
    k7ddrphy_dfi_p2_rddata[100] <= k7ddrphy_bitslip362[5];
    k7ddrphy_dfi_p2_rddata[37] <= k7ddrphy_bitslip372[4];
    k7ddrphy_dfi_p2_rddata[101] <= k7ddrphy_bitslip372[5];
    k7ddrphy_dfi_p2_rddata[38] <= k7ddrphy_bitslip382[4];
    k7ddrphy_dfi_p2_rddata[102] <= k7ddrphy_bitslip382[5];
    k7ddrphy_dfi_p2_rddata[39] <= k7ddrphy_bitslip392[4];
    k7ddrphy_dfi_p2_rddata[103] <= k7ddrphy_bitslip392[5];
    k7ddrphy_dfi_p2_rddata[40] <= k7ddrphy_bitslip402[4];
    k7ddrphy_dfi_p2_rddata[104] <= k7ddrphy_bitslip402[5];
    k7ddrphy_dfi_p2_rddata[41] <= k7ddrphy_bitslip412[4];
    k7ddrphy_dfi_p2_rddata[105] <= k7ddrphy_bitslip412[5];
    k7ddrphy_dfi_p2_rddata[42] <= k7ddrphy_bitslip422[4];
    k7ddrphy_dfi_p2_rddata[106] <= k7ddrphy_bitslip422[5];
    k7ddrphy_dfi_p2_rddata[43] <= k7ddrphy_bitslip432[4];
    k7ddrphy_dfi_p2_rddata[107] <= k7ddrphy_bitslip432[5];
    k7ddrphy_dfi_p2_rddata[44] <= k7ddrphy_bitslip442[4];
    k7ddrphy_dfi_p2_rddata[108] <= k7ddrphy_bitslip442[5];
    k7ddrphy_dfi_p2_rddata[45] <= k7ddrphy_bitslip452[4];
    k7ddrphy_dfi_p2_rddata[109] <= k7ddrphy_bitslip452[5];
    k7ddrphy_dfi_p2_rddata[46] <= k7ddrphy_bitslip462[4];
    k7ddrphy_dfi_p2_rddata[110] <= k7ddrphy_bitslip462[5];
    k7ddrphy_dfi_p2_rddata[47] <= k7ddrphy_bitslip472[4];
    k7ddrphy_dfi_p2_rddata[111] <= k7ddrphy_bitslip472[5];
    k7ddrphy_dfi_p2_rddata[48] <= k7ddrphy_bitslip482[4];
    k7ddrphy_dfi_p2_rddata[112] <= k7ddrphy_bitslip482[5];
    k7ddrphy_dfi_p2_rddata[49] <= k7ddrphy_bitslip492[4];
    k7ddrphy_dfi_p2_rddata[113] <= k7ddrphy_bitslip492[5];
    k7ddrphy_dfi_p2_rddata[50] <= k7ddrphy_bitslip502[4];
    k7ddrphy_dfi_p2_rddata[114] <= k7ddrphy_bitslip502[5];
    k7ddrphy_dfi_p2_rddata[51] <= k7ddrphy_bitslip512[4];
    k7ddrphy_dfi_p2_rddata[115] <= k7ddrphy_bitslip512[5];
    k7ddrphy_dfi_p2_rddata[52] <= k7ddrphy_bitslip522[4];
    k7ddrphy_dfi_p2_rddata[116] <= k7ddrphy_bitslip522[5];
    k7ddrphy_dfi_p2_rddata[53] <= k7ddrphy_bitslip532[4];
    k7ddrphy_dfi_p2_rddata[117] <= k7ddrphy_bitslip532[5];
    k7ddrphy_dfi_p2_rddata[54] <= k7ddrphy_bitslip542[4];
    k7ddrphy_dfi_p2_rddata[118] <= k7ddrphy_bitslip542[5];
    k7ddrphy_dfi_p2_rddata[55] <= k7ddrphy_bitslip552[4];
    k7ddrphy_dfi_p2_rddata[119] <= k7ddrphy_bitslip552[5];
    k7ddrphy_dfi_p2_rddata[56] <= k7ddrphy_bitslip562[4];
    k7ddrphy_dfi_p2_rddata[120] <= k7ddrphy_bitslip562[5];
    k7ddrphy_dfi_p2_rddata[57] <= k7ddrphy_bitslip572[4];
    k7ddrphy_dfi_p2_rddata[121] <= k7ddrphy_bitslip572[5];
    k7ddrphy_dfi_p2_rddata[58] <= k7ddrphy_bitslip582[4];
    k7ddrphy_dfi_p2_rddata[122] <= k7ddrphy_bitslip582[5];
    k7ddrphy_dfi_p2_rddata[59] <= k7ddrphy_bitslip592[4];
    k7ddrphy_dfi_p2_rddata[123] <= k7ddrphy_bitslip592[5];
    k7ddrphy_dfi_p2_rddata[60] <= k7ddrphy_bitslip602[4];
    k7ddrphy_dfi_p2_rddata[124] <= k7ddrphy_bitslip602[5];
    k7ddrphy_dfi_p2_rddata[61] <= k7ddrphy_bitslip612[4];
    k7ddrphy_dfi_p2_rddata[125] <= k7ddrphy_bitslip612[5];
    k7ddrphy_dfi_p2_rddata[62] <= k7ddrphy_bitslip622[4];
    k7ddrphy_dfi_p2_rddata[126] <= k7ddrphy_bitslip622[5];
    k7ddrphy_dfi_p2_rddata[63] <= k7ddrphy_bitslip632[4];
    k7ddrphy_dfi_p2_rddata[127] <= k7ddrphy_bitslip632[5];
end
always @(*) begin
    k7ddrphy_dfi_p3_rddata <= 128'd0;
    k7ddrphy_dfi_p3_rddata[0] <= k7ddrphy_bitslip04[6];
    k7ddrphy_dfi_p3_rddata[64] <= k7ddrphy_bitslip04[7];
    k7ddrphy_dfi_p3_rddata[1] <= k7ddrphy_bitslip14[6];
    k7ddrphy_dfi_p3_rddata[65] <= k7ddrphy_bitslip14[7];
    k7ddrphy_dfi_p3_rddata[2] <= k7ddrphy_bitslip24[6];
    k7ddrphy_dfi_p3_rddata[66] <= k7ddrphy_bitslip24[7];
    k7ddrphy_dfi_p3_rddata[3] <= k7ddrphy_bitslip34[6];
    k7ddrphy_dfi_p3_rddata[67] <= k7ddrphy_bitslip34[7];
    k7ddrphy_dfi_p3_rddata[4] <= k7ddrphy_bitslip44[6];
    k7ddrphy_dfi_p3_rddata[68] <= k7ddrphy_bitslip44[7];
    k7ddrphy_dfi_p3_rddata[5] <= k7ddrphy_bitslip54[6];
    k7ddrphy_dfi_p3_rddata[69] <= k7ddrphy_bitslip54[7];
    k7ddrphy_dfi_p3_rddata[6] <= k7ddrphy_bitslip64[6];
    k7ddrphy_dfi_p3_rddata[70] <= k7ddrphy_bitslip64[7];
    k7ddrphy_dfi_p3_rddata[7] <= k7ddrphy_bitslip74[6];
    k7ddrphy_dfi_p3_rddata[71] <= k7ddrphy_bitslip74[7];
    k7ddrphy_dfi_p3_rddata[8] <= k7ddrphy_bitslip82[6];
    k7ddrphy_dfi_p3_rddata[72] <= k7ddrphy_bitslip82[7];
    k7ddrphy_dfi_p3_rddata[9] <= k7ddrphy_bitslip92[6];
    k7ddrphy_dfi_p3_rddata[73] <= k7ddrphy_bitslip92[7];
    k7ddrphy_dfi_p3_rddata[10] <= k7ddrphy_bitslip102[6];
    k7ddrphy_dfi_p3_rddata[74] <= k7ddrphy_bitslip102[7];
    k7ddrphy_dfi_p3_rddata[11] <= k7ddrphy_bitslip112[6];
    k7ddrphy_dfi_p3_rddata[75] <= k7ddrphy_bitslip112[7];
    k7ddrphy_dfi_p3_rddata[12] <= k7ddrphy_bitslip122[6];
    k7ddrphy_dfi_p3_rddata[76] <= k7ddrphy_bitslip122[7];
    k7ddrphy_dfi_p3_rddata[13] <= k7ddrphy_bitslip132[6];
    k7ddrphy_dfi_p3_rddata[77] <= k7ddrphy_bitslip132[7];
    k7ddrphy_dfi_p3_rddata[14] <= k7ddrphy_bitslip142[6];
    k7ddrphy_dfi_p3_rddata[78] <= k7ddrphy_bitslip142[7];
    k7ddrphy_dfi_p3_rddata[15] <= k7ddrphy_bitslip152[6];
    k7ddrphy_dfi_p3_rddata[79] <= k7ddrphy_bitslip152[7];
    k7ddrphy_dfi_p3_rddata[16] <= k7ddrphy_bitslip162[6];
    k7ddrphy_dfi_p3_rddata[80] <= k7ddrphy_bitslip162[7];
    k7ddrphy_dfi_p3_rddata[17] <= k7ddrphy_bitslip172[6];
    k7ddrphy_dfi_p3_rddata[81] <= k7ddrphy_bitslip172[7];
    k7ddrphy_dfi_p3_rddata[18] <= k7ddrphy_bitslip182[6];
    k7ddrphy_dfi_p3_rddata[82] <= k7ddrphy_bitslip182[7];
    k7ddrphy_dfi_p3_rddata[19] <= k7ddrphy_bitslip192[6];
    k7ddrphy_dfi_p3_rddata[83] <= k7ddrphy_bitslip192[7];
    k7ddrphy_dfi_p3_rddata[20] <= k7ddrphy_bitslip202[6];
    k7ddrphy_dfi_p3_rddata[84] <= k7ddrphy_bitslip202[7];
    k7ddrphy_dfi_p3_rddata[21] <= k7ddrphy_bitslip212[6];
    k7ddrphy_dfi_p3_rddata[85] <= k7ddrphy_bitslip212[7];
    k7ddrphy_dfi_p3_rddata[22] <= k7ddrphy_bitslip222[6];
    k7ddrphy_dfi_p3_rddata[86] <= k7ddrphy_bitslip222[7];
    k7ddrphy_dfi_p3_rddata[23] <= k7ddrphy_bitslip232[6];
    k7ddrphy_dfi_p3_rddata[87] <= k7ddrphy_bitslip232[7];
    k7ddrphy_dfi_p3_rddata[24] <= k7ddrphy_bitslip242[6];
    k7ddrphy_dfi_p3_rddata[88] <= k7ddrphy_bitslip242[7];
    k7ddrphy_dfi_p3_rddata[25] <= k7ddrphy_bitslip252[6];
    k7ddrphy_dfi_p3_rddata[89] <= k7ddrphy_bitslip252[7];
    k7ddrphy_dfi_p3_rddata[26] <= k7ddrphy_bitslip262[6];
    k7ddrphy_dfi_p3_rddata[90] <= k7ddrphy_bitslip262[7];
    k7ddrphy_dfi_p3_rddata[27] <= k7ddrphy_bitslip272[6];
    k7ddrphy_dfi_p3_rddata[91] <= k7ddrphy_bitslip272[7];
    k7ddrphy_dfi_p3_rddata[28] <= k7ddrphy_bitslip282[6];
    k7ddrphy_dfi_p3_rddata[92] <= k7ddrphy_bitslip282[7];
    k7ddrphy_dfi_p3_rddata[29] <= k7ddrphy_bitslip292[6];
    k7ddrphy_dfi_p3_rddata[93] <= k7ddrphy_bitslip292[7];
    k7ddrphy_dfi_p3_rddata[30] <= k7ddrphy_bitslip302[6];
    k7ddrphy_dfi_p3_rddata[94] <= k7ddrphy_bitslip302[7];
    k7ddrphy_dfi_p3_rddata[31] <= k7ddrphy_bitslip312[6];
    k7ddrphy_dfi_p3_rddata[95] <= k7ddrphy_bitslip312[7];
    k7ddrphy_dfi_p3_rddata[32] <= k7ddrphy_bitslip322[6];
    k7ddrphy_dfi_p3_rddata[96] <= k7ddrphy_bitslip322[7];
    k7ddrphy_dfi_p3_rddata[33] <= k7ddrphy_bitslip332[6];
    k7ddrphy_dfi_p3_rddata[97] <= k7ddrphy_bitslip332[7];
    k7ddrphy_dfi_p3_rddata[34] <= k7ddrphy_bitslip342[6];
    k7ddrphy_dfi_p3_rddata[98] <= k7ddrphy_bitslip342[7];
    k7ddrphy_dfi_p3_rddata[35] <= k7ddrphy_bitslip352[6];
    k7ddrphy_dfi_p3_rddata[99] <= k7ddrphy_bitslip352[7];
    k7ddrphy_dfi_p3_rddata[36] <= k7ddrphy_bitslip362[6];
    k7ddrphy_dfi_p3_rddata[100] <= k7ddrphy_bitslip362[7];
    k7ddrphy_dfi_p3_rddata[37] <= k7ddrphy_bitslip372[6];
    k7ddrphy_dfi_p3_rddata[101] <= k7ddrphy_bitslip372[7];
    k7ddrphy_dfi_p3_rddata[38] <= k7ddrphy_bitslip382[6];
    k7ddrphy_dfi_p3_rddata[102] <= k7ddrphy_bitslip382[7];
    k7ddrphy_dfi_p3_rddata[39] <= k7ddrphy_bitslip392[6];
    k7ddrphy_dfi_p3_rddata[103] <= k7ddrphy_bitslip392[7];
    k7ddrphy_dfi_p3_rddata[40] <= k7ddrphy_bitslip402[6];
    k7ddrphy_dfi_p3_rddata[104] <= k7ddrphy_bitslip402[7];
    k7ddrphy_dfi_p3_rddata[41] <= k7ddrphy_bitslip412[6];
    k7ddrphy_dfi_p3_rddata[105] <= k7ddrphy_bitslip412[7];
    k7ddrphy_dfi_p3_rddata[42] <= k7ddrphy_bitslip422[6];
    k7ddrphy_dfi_p3_rddata[106] <= k7ddrphy_bitslip422[7];
    k7ddrphy_dfi_p3_rddata[43] <= k7ddrphy_bitslip432[6];
    k7ddrphy_dfi_p3_rddata[107] <= k7ddrphy_bitslip432[7];
    k7ddrphy_dfi_p3_rddata[44] <= k7ddrphy_bitslip442[6];
    k7ddrphy_dfi_p3_rddata[108] <= k7ddrphy_bitslip442[7];
    k7ddrphy_dfi_p3_rddata[45] <= k7ddrphy_bitslip452[6];
    k7ddrphy_dfi_p3_rddata[109] <= k7ddrphy_bitslip452[7];
    k7ddrphy_dfi_p3_rddata[46] <= k7ddrphy_bitslip462[6];
    k7ddrphy_dfi_p3_rddata[110] <= k7ddrphy_bitslip462[7];
    k7ddrphy_dfi_p3_rddata[47] <= k7ddrphy_bitslip472[6];
    k7ddrphy_dfi_p3_rddata[111] <= k7ddrphy_bitslip472[7];
    k7ddrphy_dfi_p3_rddata[48] <= k7ddrphy_bitslip482[6];
    k7ddrphy_dfi_p3_rddata[112] <= k7ddrphy_bitslip482[7];
    k7ddrphy_dfi_p3_rddata[49] <= k7ddrphy_bitslip492[6];
    k7ddrphy_dfi_p3_rddata[113] <= k7ddrphy_bitslip492[7];
    k7ddrphy_dfi_p3_rddata[50] <= k7ddrphy_bitslip502[6];
    k7ddrphy_dfi_p3_rddata[114] <= k7ddrphy_bitslip502[7];
    k7ddrphy_dfi_p3_rddata[51] <= k7ddrphy_bitslip512[6];
    k7ddrphy_dfi_p3_rddata[115] <= k7ddrphy_bitslip512[7];
    k7ddrphy_dfi_p3_rddata[52] <= k7ddrphy_bitslip522[6];
    k7ddrphy_dfi_p3_rddata[116] <= k7ddrphy_bitslip522[7];
    k7ddrphy_dfi_p3_rddata[53] <= k7ddrphy_bitslip532[6];
    k7ddrphy_dfi_p3_rddata[117] <= k7ddrphy_bitslip532[7];
    k7ddrphy_dfi_p3_rddata[54] <= k7ddrphy_bitslip542[6];
    k7ddrphy_dfi_p3_rddata[118] <= k7ddrphy_bitslip542[7];
    k7ddrphy_dfi_p3_rddata[55] <= k7ddrphy_bitslip552[6];
    k7ddrphy_dfi_p3_rddata[119] <= k7ddrphy_bitslip552[7];
    k7ddrphy_dfi_p3_rddata[56] <= k7ddrphy_bitslip562[6];
    k7ddrphy_dfi_p3_rddata[120] <= k7ddrphy_bitslip562[7];
    k7ddrphy_dfi_p3_rddata[57] <= k7ddrphy_bitslip572[6];
    k7ddrphy_dfi_p3_rddata[121] <= k7ddrphy_bitslip572[7];
    k7ddrphy_dfi_p3_rddata[58] <= k7ddrphy_bitslip582[6];
    k7ddrphy_dfi_p3_rddata[122] <= k7ddrphy_bitslip582[7];
    k7ddrphy_dfi_p3_rddata[59] <= k7ddrphy_bitslip592[6];
    k7ddrphy_dfi_p3_rddata[123] <= k7ddrphy_bitslip592[7];
    k7ddrphy_dfi_p3_rddata[60] <= k7ddrphy_bitslip602[6];
    k7ddrphy_dfi_p3_rddata[124] <= k7ddrphy_bitslip602[7];
    k7ddrphy_dfi_p3_rddata[61] <= k7ddrphy_bitslip612[6];
    k7ddrphy_dfi_p3_rddata[125] <= k7ddrphy_bitslip612[7];
    k7ddrphy_dfi_p3_rddata[62] <= k7ddrphy_bitslip622[6];
    k7ddrphy_dfi_p3_rddata[126] <= k7ddrphy_bitslip622[7];
    k7ddrphy_dfi_p3_rddata[63] <= k7ddrphy_bitslip632[6];
    k7ddrphy_dfi_p3_rddata[127] <= k7ddrphy_bitslip632[7];
end
assign k7ddrphy_dfi_p0_rddata_valid = (k7ddrphy_rddata_en_tappeddelayline7 | k7ddrphy_wlevel_en_storage);
assign k7ddrphy_dfi_p1_rddata_valid = (k7ddrphy_rddata_en_tappeddelayline7 | k7ddrphy_wlevel_en_storage);
assign k7ddrphy_dfi_p2_rddata_valid = (k7ddrphy_rddata_en_tappeddelayline7 | k7ddrphy_wlevel_en_storage);
assign k7ddrphy_dfi_p3_rddata_valid = (k7ddrphy_rddata_en_tappeddelayline7 | k7ddrphy_wlevel_en_storage);
assign k7ddrphy_dq_oe = k7ddrphy_wrdata_en_tappeddelayline1;
always @(*) begin
    k7ddrphy_dqs_oe <= 1'd0;
    if (k7ddrphy_wlevel_en_storage) begin
        k7ddrphy_dqs_oe <= 1'd1;
    end else begin
        k7ddrphy_dqs_oe <= k7ddrphy_dq_oe;
    end
end
assign k7ddrphy_dqs_preamble = (k7ddrphy_wrdata_en_tappeddelayline0 & (~k7ddrphy_wrdata_en_tappeddelayline1));
assign k7ddrphy_dqs_postamble = (k7ddrphy_wrdata_en_tappeddelayline2 & (~k7ddrphy_wrdata_en_tappeddelayline1));
always @(*) begin
    k7ddrphy_dqspattern_o <= 8'd0;
    k7ddrphy_dqspattern_o <= 7'd85;
    if (k7ddrphy_dqspattern0) begin
        k7ddrphy_dqspattern_o <= 5'd21;
    end
    if (k7ddrphy_dqspattern1) begin
        k7ddrphy_dqspattern_o <= 7'd84;
    end
    if (k7ddrphy_wlevel_en_storage) begin
        k7ddrphy_dqspattern_o <= 1'd0;
        if (k7ddrphy_wlevel_strobe_re) begin
            k7ddrphy_dqspattern_o <= 1'd1;
        end
    end
end
always @(*) begin
    k7ddrphy_bitslip00 <= 8'd0;
    case (k7ddrphy_bitslip0_value0)
        1'd0: begin
            k7ddrphy_bitslip00 <= k7ddrphy_bitslip0_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip00 <= k7ddrphy_bitslip0_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip00 <= k7ddrphy_bitslip0_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip00 <= k7ddrphy_bitslip0_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip00 <= k7ddrphy_bitslip0_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip00 <= k7ddrphy_bitslip0_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip00 <= k7ddrphy_bitslip0_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip00 <= k7ddrphy_bitslip0_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip10 <= 8'd0;
    case (k7ddrphy_bitslip1_value0)
        1'd0: begin
            k7ddrphy_bitslip10 <= k7ddrphy_bitslip1_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip10 <= k7ddrphy_bitslip1_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip10 <= k7ddrphy_bitslip1_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip10 <= k7ddrphy_bitslip1_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip10 <= k7ddrphy_bitslip1_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip10 <= k7ddrphy_bitslip1_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip10 <= k7ddrphy_bitslip1_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip10 <= k7ddrphy_bitslip1_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip20 <= 8'd0;
    case (k7ddrphy_bitslip2_value0)
        1'd0: begin
            k7ddrphy_bitslip20 <= k7ddrphy_bitslip2_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip20 <= k7ddrphy_bitslip2_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip20 <= k7ddrphy_bitslip2_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip20 <= k7ddrphy_bitslip2_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip20 <= k7ddrphy_bitslip2_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip20 <= k7ddrphy_bitslip2_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip20 <= k7ddrphy_bitslip2_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip20 <= k7ddrphy_bitslip2_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip30 <= 8'd0;
    case (k7ddrphy_bitslip3_value0)
        1'd0: begin
            k7ddrphy_bitslip30 <= k7ddrphy_bitslip3_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip30 <= k7ddrphy_bitslip3_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip30 <= k7ddrphy_bitslip3_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip30 <= k7ddrphy_bitslip3_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip30 <= k7ddrphy_bitslip3_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip30 <= k7ddrphy_bitslip3_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip30 <= k7ddrphy_bitslip3_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip30 <= k7ddrphy_bitslip3_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip40 <= 8'd0;
    case (k7ddrphy_bitslip4_value0)
        1'd0: begin
            k7ddrphy_bitslip40 <= k7ddrphy_bitslip4_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip40 <= k7ddrphy_bitslip4_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip40 <= k7ddrphy_bitslip4_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip40 <= k7ddrphy_bitslip4_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip40 <= k7ddrphy_bitslip4_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip40 <= k7ddrphy_bitslip4_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip40 <= k7ddrphy_bitslip4_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip40 <= k7ddrphy_bitslip4_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip50 <= 8'd0;
    case (k7ddrphy_bitslip5_value0)
        1'd0: begin
            k7ddrphy_bitslip50 <= k7ddrphy_bitslip5_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip50 <= k7ddrphy_bitslip5_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip50 <= k7ddrphy_bitslip5_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip50 <= k7ddrphy_bitslip5_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip50 <= k7ddrphy_bitslip5_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip50 <= k7ddrphy_bitslip5_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip50 <= k7ddrphy_bitslip5_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip50 <= k7ddrphy_bitslip5_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip60 <= 8'd0;
    case (k7ddrphy_bitslip6_value0)
        1'd0: begin
            k7ddrphy_bitslip60 <= k7ddrphy_bitslip6_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip60 <= k7ddrphy_bitslip6_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip60 <= k7ddrphy_bitslip6_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip60 <= k7ddrphy_bitslip6_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip60 <= k7ddrphy_bitslip6_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip60 <= k7ddrphy_bitslip6_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip60 <= k7ddrphy_bitslip6_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip60 <= k7ddrphy_bitslip6_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip70 <= 8'd0;
    case (k7ddrphy_bitslip7_value0)
        1'd0: begin
            k7ddrphy_bitslip70 <= k7ddrphy_bitslip7_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip70 <= k7ddrphy_bitslip7_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip70 <= k7ddrphy_bitslip7_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip70 <= k7ddrphy_bitslip7_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip70 <= k7ddrphy_bitslip7_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip70 <= k7ddrphy_bitslip7_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip70 <= k7ddrphy_bitslip7_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip70 <= k7ddrphy_bitslip7_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip01 <= 8'd0;
    case (k7ddrphy_bitslip0_value1)
        1'd0: begin
            k7ddrphy_bitslip01 <= k7ddrphy_bitslip0_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip01 <= k7ddrphy_bitslip0_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip01 <= k7ddrphy_bitslip0_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip01 <= k7ddrphy_bitslip0_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip01 <= k7ddrphy_bitslip0_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip01 <= k7ddrphy_bitslip0_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip01 <= k7ddrphy_bitslip0_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip01 <= k7ddrphy_bitslip0_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip11 <= 8'd0;
    case (k7ddrphy_bitslip1_value1)
        1'd0: begin
            k7ddrphy_bitslip11 <= k7ddrphy_bitslip1_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip11 <= k7ddrphy_bitslip1_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip11 <= k7ddrphy_bitslip1_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip11 <= k7ddrphy_bitslip1_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip11 <= k7ddrphy_bitslip1_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip11 <= k7ddrphy_bitslip1_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip11 <= k7ddrphy_bitslip1_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip11 <= k7ddrphy_bitslip1_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip21 <= 8'd0;
    case (k7ddrphy_bitslip2_value1)
        1'd0: begin
            k7ddrphy_bitslip21 <= k7ddrphy_bitslip2_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip21 <= k7ddrphy_bitslip2_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip21 <= k7ddrphy_bitslip2_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip21 <= k7ddrphy_bitslip2_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip21 <= k7ddrphy_bitslip2_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip21 <= k7ddrphy_bitslip2_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip21 <= k7ddrphy_bitslip2_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip21 <= k7ddrphy_bitslip2_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip31 <= 8'd0;
    case (k7ddrphy_bitslip3_value1)
        1'd0: begin
            k7ddrphy_bitslip31 <= k7ddrphy_bitslip3_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip31 <= k7ddrphy_bitslip3_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip31 <= k7ddrphy_bitslip3_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip31 <= k7ddrphy_bitslip3_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip31 <= k7ddrphy_bitslip3_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip31 <= k7ddrphy_bitslip3_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip31 <= k7ddrphy_bitslip3_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip31 <= k7ddrphy_bitslip3_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip41 <= 8'd0;
    case (k7ddrphy_bitslip4_value1)
        1'd0: begin
            k7ddrphy_bitslip41 <= k7ddrphy_bitslip4_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip41 <= k7ddrphy_bitslip4_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip41 <= k7ddrphy_bitslip4_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip41 <= k7ddrphy_bitslip4_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip41 <= k7ddrphy_bitslip4_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip41 <= k7ddrphy_bitslip4_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip41 <= k7ddrphy_bitslip4_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip41 <= k7ddrphy_bitslip4_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip51 <= 8'd0;
    case (k7ddrphy_bitslip5_value1)
        1'd0: begin
            k7ddrphy_bitslip51 <= k7ddrphy_bitslip5_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip51 <= k7ddrphy_bitslip5_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip51 <= k7ddrphy_bitslip5_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip51 <= k7ddrphy_bitslip5_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip51 <= k7ddrphy_bitslip5_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip51 <= k7ddrphy_bitslip5_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip51 <= k7ddrphy_bitslip5_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip51 <= k7ddrphy_bitslip5_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip61 <= 8'd0;
    case (k7ddrphy_bitslip6_value1)
        1'd0: begin
            k7ddrphy_bitslip61 <= k7ddrphy_bitslip6_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip61 <= k7ddrphy_bitslip6_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip61 <= k7ddrphy_bitslip6_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip61 <= k7ddrphy_bitslip6_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip61 <= k7ddrphy_bitslip6_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip61 <= k7ddrphy_bitslip6_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip61 <= k7ddrphy_bitslip6_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip61 <= k7ddrphy_bitslip6_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip71 <= 8'd0;
    case (k7ddrphy_bitslip7_value1)
        1'd0: begin
            k7ddrphy_bitslip71 <= k7ddrphy_bitslip7_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip71 <= k7ddrphy_bitslip7_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip71 <= k7ddrphy_bitslip7_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip71 <= k7ddrphy_bitslip7_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip71 <= k7ddrphy_bitslip7_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip71 <= k7ddrphy_bitslip7_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip71 <= k7ddrphy_bitslip7_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip71 <= k7ddrphy_bitslip7_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip02 <= 8'd0;
    case (k7ddrphy_bitslip0_value2)
        1'd0: begin
            k7ddrphy_bitslip02 <= k7ddrphy_bitslip0_r2[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip02 <= k7ddrphy_bitslip0_r2[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip02 <= k7ddrphy_bitslip0_r2[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip02 <= k7ddrphy_bitslip0_r2[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip02 <= k7ddrphy_bitslip0_r2[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip02 <= k7ddrphy_bitslip0_r2[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip02 <= k7ddrphy_bitslip0_r2[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip02 <= k7ddrphy_bitslip0_r2[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip04 <= 8'd0;
    case (k7ddrphy_bitslip0_value3)
        1'd0: begin
            k7ddrphy_bitslip04 <= k7ddrphy_bitslip0_r3[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip04 <= k7ddrphy_bitslip0_r3[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip04 <= k7ddrphy_bitslip0_r3[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip04 <= k7ddrphy_bitslip0_r3[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip04 <= k7ddrphy_bitslip0_r3[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip04 <= k7ddrphy_bitslip0_r3[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip04 <= k7ddrphy_bitslip0_r3[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip04 <= k7ddrphy_bitslip0_r3[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip12 <= 8'd0;
    case (k7ddrphy_bitslip1_value2)
        1'd0: begin
            k7ddrphy_bitslip12 <= k7ddrphy_bitslip1_r2[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip12 <= k7ddrphy_bitslip1_r2[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip12 <= k7ddrphy_bitslip1_r2[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip12 <= k7ddrphy_bitslip1_r2[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip12 <= k7ddrphy_bitslip1_r2[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip12 <= k7ddrphy_bitslip1_r2[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip12 <= k7ddrphy_bitslip1_r2[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip12 <= k7ddrphy_bitslip1_r2[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip14 <= 8'd0;
    case (k7ddrphy_bitslip1_value3)
        1'd0: begin
            k7ddrphy_bitslip14 <= k7ddrphy_bitslip1_r3[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip14 <= k7ddrphy_bitslip1_r3[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip14 <= k7ddrphy_bitslip1_r3[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip14 <= k7ddrphy_bitslip1_r3[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip14 <= k7ddrphy_bitslip1_r3[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip14 <= k7ddrphy_bitslip1_r3[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip14 <= k7ddrphy_bitslip1_r3[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip14 <= k7ddrphy_bitslip1_r3[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip22 <= 8'd0;
    case (k7ddrphy_bitslip2_value2)
        1'd0: begin
            k7ddrphy_bitslip22 <= k7ddrphy_bitslip2_r2[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip22 <= k7ddrphy_bitslip2_r2[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip22 <= k7ddrphy_bitslip2_r2[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip22 <= k7ddrphy_bitslip2_r2[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip22 <= k7ddrphy_bitslip2_r2[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip22 <= k7ddrphy_bitslip2_r2[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip22 <= k7ddrphy_bitslip2_r2[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip22 <= k7ddrphy_bitslip2_r2[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip24 <= 8'd0;
    case (k7ddrphy_bitslip2_value3)
        1'd0: begin
            k7ddrphy_bitslip24 <= k7ddrphy_bitslip2_r3[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip24 <= k7ddrphy_bitslip2_r3[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip24 <= k7ddrphy_bitslip2_r3[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip24 <= k7ddrphy_bitslip2_r3[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip24 <= k7ddrphy_bitslip2_r3[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip24 <= k7ddrphy_bitslip2_r3[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip24 <= k7ddrphy_bitslip2_r3[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip24 <= k7ddrphy_bitslip2_r3[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip32 <= 8'd0;
    case (k7ddrphy_bitslip3_value2)
        1'd0: begin
            k7ddrphy_bitslip32 <= k7ddrphy_bitslip3_r2[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip32 <= k7ddrphy_bitslip3_r2[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip32 <= k7ddrphy_bitslip3_r2[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip32 <= k7ddrphy_bitslip3_r2[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip32 <= k7ddrphy_bitslip3_r2[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip32 <= k7ddrphy_bitslip3_r2[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip32 <= k7ddrphy_bitslip3_r2[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip32 <= k7ddrphy_bitslip3_r2[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip34 <= 8'd0;
    case (k7ddrphy_bitslip3_value3)
        1'd0: begin
            k7ddrphy_bitslip34 <= k7ddrphy_bitslip3_r3[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip34 <= k7ddrphy_bitslip3_r3[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip34 <= k7ddrphy_bitslip3_r3[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip34 <= k7ddrphy_bitslip3_r3[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip34 <= k7ddrphy_bitslip3_r3[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip34 <= k7ddrphy_bitslip3_r3[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip34 <= k7ddrphy_bitslip3_r3[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip34 <= k7ddrphy_bitslip3_r3[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip42 <= 8'd0;
    case (k7ddrphy_bitslip4_value2)
        1'd0: begin
            k7ddrphy_bitslip42 <= k7ddrphy_bitslip4_r2[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip42 <= k7ddrphy_bitslip4_r2[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip42 <= k7ddrphy_bitslip4_r2[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip42 <= k7ddrphy_bitslip4_r2[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip42 <= k7ddrphy_bitslip4_r2[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip42 <= k7ddrphy_bitslip4_r2[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip42 <= k7ddrphy_bitslip4_r2[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip42 <= k7ddrphy_bitslip4_r2[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip44 <= 8'd0;
    case (k7ddrphy_bitslip4_value3)
        1'd0: begin
            k7ddrphy_bitslip44 <= k7ddrphy_bitslip4_r3[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip44 <= k7ddrphy_bitslip4_r3[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip44 <= k7ddrphy_bitslip4_r3[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip44 <= k7ddrphy_bitslip4_r3[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip44 <= k7ddrphy_bitslip4_r3[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip44 <= k7ddrphy_bitslip4_r3[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip44 <= k7ddrphy_bitslip4_r3[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip44 <= k7ddrphy_bitslip4_r3[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip52 <= 8'd0;
    case (k7ddrphy_bitslip5_value2)
        1'd0: begin
            k7ddrphy_bitslip52 <= k7ddrphy_bitslip5_r2[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip52 <= k7ddrphy_bitslip5_r2[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip52 <= k7ddrphy_bitslip5_r2[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip52 <= k7ddrphy_bitslip5_r2[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip52 <= k7ddrphy_bitslip5_r2[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip52 <= k7ddrphy_bitslip5_r2[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip52 <= k7ddrphy_bitslip5_r2[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip52 <= k7ddrphy_bitslip5_r2[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip54 <= 8'd0;
    case (k7ddrphy_bitslip5_value3)
        1'd0: begin
            k7ddrphy_bitslip54 <= k7ddrphy_bitslip5_r3[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip54 <= k7ddrphy_bitslip5_r3[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip54 <= k7ddrphy_bitslip5_r3[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip54 <= k7ddrphy_bitslip5_r3[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip54 <= k7ddrphy_bitslip5_r3[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip54 <= k7ddrphy_bitslip5_r3[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip54 <= k7ddrphy_bitslip5_r3[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip54 <= k7ddrphy_bitslip5_r3[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip62 <= 8'd0;
    case (k7ddrphy_bitslip6_value2)
        1'd0: begin
            k7ddrphy_bitslip62 <= k7ddrphy_bitslip6_r2[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip62 <= k7ddrphy_bitslip6_r2[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip62 <= k7ddrphy_bitslip6_r2[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip62 <= k7ddrphy_bitslip6_r2[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip62 <= k7ddrphy_bitslip6_r2[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip62 <= k7ddrphy_bitslip6_r2[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip62 <= k7ddrphy_bitslip6_r2[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip62 <= k7ddrphy_bitslip6_r2[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip64 <= 8'd0;
    case (k7ddrphy_bitslip6_value3)
        1'd0: begin
            k7ddrphy_bitslip64 <= k7ddrphy_bitslip6_r3[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip64 <= k7ddrphy_bitslip6_r3[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip64 <= k7ddrphy_bitslip6_r3[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip64 <= k7ddrphy_bitslip6_r3[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip64 <= k7ddrphy_bitslip6_r3[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip64 <= k7ddrphy_bitslip6_r3[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip64 <= k7ddrphy_bitslip6_r3[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip64 <= k7ddrphy_bitslip6_r3[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip72 <= 8'd0;
    case (k7ddrphy_bitslip7_value2)
        1'd0: begin
            k7ddrphy_bitslip72 <= k7ddrphy_bitslip7_r2[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip72 <= k7ddrphy_bitslip7_r2[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip72 <= k7ddrphy_bitslip7_r2[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip72 <= k7ddrphy_bitslip7_r2[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip72 <= k7ddrphy_bitslip7_r2[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip72 <= k7ddrphy_bitslip7_r2[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip72 <= k7ddrphy_bitslip7_r2[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip72 <= k7ddrphy_bitslip7_r2[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip74 <= 8'd0;
    case (k7ddrphy_bitslip7_value3)
        1'd0: begin
            k7ddrphy_bitslip74 <= k7ddrphy_bitslip7_r3[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip74 <= k7ddrphy_bitslip7_r3[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip74 <= k7ddrphy_bitslip7_r3[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip74 <= k7ddrphy_bitslip7_r3[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip74 <= k7ddrphy_bitslip7_r3[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip74 <= k7ddrphy_bitslip7_r3[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip74 <= k7ddrphy_bitslip7_r3[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip74 <= k7ddrphy_bitslip7_r3[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip80 <= 8'd0;
    case (k7ddrphy_bitslip8_value0)
        1'd0: begin
            k7ddrphy_bitslip80 <= k7ddrphy_bitslip8_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip80 <= k7ddrphy_bitslip8_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip80 <= k7ddrphy_bitslip8_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip80 <= k7ddrphy_bitslip8_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip80 <= k7ddrphy_bitslip8_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip80 <= k7ddrphy_bitslip8_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip80 <= k7ddrphy_bitslip8_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip80 <= k7ddrphy_bitslip8_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip82 <= 8'd0;
    case (k7ddrphy_bitslip8_value1)
        1'd0: begin
            k7ddrphy_bitslip82 <= k7ddrphy_bitslip8_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip82 <= k7ddrphy_bitslip8_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip82 <= k7ddrphy_bitslip8_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip82 <= k7ddrphy_bitslip8_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip82 <= k7ddrphy_bitslip8_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip82 <= k7ddrphy_bitslip8_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip82 <= k7ddrphy_bitslip8_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip82 <= k7ddrphy_bitslip8_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip90 <= 8'd0;
    case (k7ddrphy_bitslip9_value0)
        1'd0: begin
            k7ddrphy_bitslip90 <= k7ddrphy_bitslip9_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip90 <= k7ddrphy_bitslip9_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip90 <= k7ddrphy_bitslip9_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip90 <= k7ddrphy_bitslip9_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip90 <= k7ddrphy_bitslip9_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip90 <= k7ddrphy_bitslip9_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip90 <= k7ddrphy_bitslip9_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip90 <= k7ddrphy_bitslip9_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip92 <= 8'd0;
    case (k7ddrphy_bitslip9_value1)
        1'd0: begin
            k7ddrphy_bitslip92 <= k7ddrphy_bitslip9_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip92 <= k7ddrphy_bitslip9_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip92 <= k7ddrphy_bitslip9_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip92 <= k7ddrphy_bitslip9_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip92 <= k7ddrphy_bitslip9_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip92 <= k7ddrphy_bitslip9_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip92 <= k7ddrphy_bitslip9_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip92 <= k7ddrphy_bitslip9_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip100 <= 8'd0;
    case (k7ddrphy_bitslip10_value0)
        1'd0: begin
            k7ddrphy_bitslip100 <= k7ddrphy_bitslip10_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip100 <= k7ddrphy_bitslip10_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip100 <= k7ddrphy_bitslip10_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip100 <= k7ddrphy_bitslip10_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip100 <= k7ddrphy_bitslip10_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip100 <= k7ddrphy_bitslip10_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip100 <= k7ddrphy_bitslip10_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip100 <= k7ddrphy_bitslip10_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip102 <= 8'd0;
    case (k7ddrphy_bitslip10_value1)
        1'd0: begin
            k7ddrphy_bitslip102 <= k7ddrphy_bitslip10_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip102 <= k7ddrphy_bitslip10_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip102 <= k7ddrphy_bitslip10_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip102 <= k7ddrphy_bitslip10_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip102 <= k7ddrphy_bitslip10_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip102 <= k7ddrphy_bitslip10_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip102 <= k7ddrphy_bitslip10_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip102 <= k7ddrphy_bitslip10_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip110 <= 8'd0;
    case (k7ddrphy_bitslip11_value0)
        1'd0: begin
            k7ddrphy_bitslip110 <= k7ddrphy_bitslip11_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip110 <= k7ddrphy_bitslip11_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip110 <= k7ddrphy_bitslip11_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip110 <= k7ddrphy_bitslip11_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip110 <= k7ddrphy_bitslip11_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip110 <= k7ddrphy_bitslip11_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip110 <= k7ddrphy_bitslip11_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip110 <= k7ddrphy_bitslip11_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip112 <= 8'd0;
    case (k7ddrphy_bitslip11_value1)
        1'd0: begin
            k7ddrphy_bitslip112 <= k7ddrphy_bitslip11_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip112 <= k7ddrphy_bitslip11_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip112 <= k7ddrphy_bitslip11_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip112 <= k7ddrphy_bitslip11_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip112 <= k7ddrphy_bitslip11_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip112 <= k7ddrphy_bitslip11_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip112 <= k7ddrphy_bitslip11_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip112 <= k7ddrphy_bitslip11_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip120 <= 8'd0;
    case (k7ddrphy_bitslip12_value0)
        1'd0: begin
            k7ddrphy_bitslip120 <= k7ddrphy_bitslip12_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip120 <= k7ddrphy_bitslip12_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip120 <= k7ddrphy_bitslip12_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip120 <= k7ddrphy_bitslip12_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip120 <= k7ddrphy_bitslip12_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip120 <= k7ddrphy_bitslip12_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip120 <= k7ddrphy_bitslip12_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip120 <= k7ddrphy_bitslip12_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip122 <= 8'd0;
    case (k7ddrphy_bitslip12_value1)
        1'd0: begin
            k7ddrphy_bitslip122 <= k7ddrphy_bitslip12_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip122 <= k7ddrphy_bitslip12_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip122 <= k7ddrphy_bitslip12_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip122 <= k7ddrphy_bitslip12_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip122 <= k7ddrphy_bitslip12_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip122 <= k7ddrphy_bitslip12_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip122 <= k7ddrphy_bitslip12_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip122 <= k7ddrphy_bitslip12_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip130 <= 8'd0;
    case (k7ddrphy_bitslip13_value0)
        1'd0: begin
            k7ddrphy_bitslip130 <= k7ddrphy_bitslip13_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip130 <= k7ddrphy_bitslip13_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip130 <= k7ddrphy_bitslip13_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip130 <= k7ddrphy_bitslip13_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip130 <= k7ddrphy_bitslip13_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip130 <= k7ddrphy_bitslip13_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip130 <= k7ddrphy_bitslip13_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip130 <= k7ddrphy_bitslip13_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip132 <= 8'd0;
    case (k7ddrphy_bitslip13_value1)
        1'd0: begin
            k7ddrphy_bitslip132 <= k7ddrphy_bitslip13_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip132 <= k7ddrphy_bitslip13_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip132 <= k7ddrphy_bitslip13_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip132 <= k7ddrphy_bitslip13_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip132 <= k7ddrphy_bitslip13_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip132 <= k7ddrphy_bitslip13_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip132 <= k7ddrphy_bitslip13_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip132 <= k7ddrphy_bitslip13_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip140 <= 8'd0;
    case (k7ddrphy_bitslip14_value0)
        1'd0: begin
            k7ddrphy_bitslip140 <= k7ddrphy_bitslip14_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip140 <= k7ddrphy_bitslip14_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip140 <= k7ddrphy_bitslip14_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip140 <= k7ddrphy_bitslip14_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip140 <= k7ddrphy_bitslip14_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip140 <= k7ddrphy_bitslip14_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip140 <= k7ddrphy_bitslip14_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip140 <= k7ddrphy_bitslip14_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip142 <= 8'd0;
    case (k7ddrphy_bitslip14_value1)
        1'd0: begin
            k7ddrphy_bitslip142 <= k7ddrphy_bitslip14_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip142 <= k7ddrphy_bitslip14_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip142 <= k7ddrphy_bitslip14_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip142 <= k7ddrphy_bitslip14_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip142 <= k7ddrphy_bitslip14_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip142 <= k7ddrphy_bitslip14_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip142 <= k7ddrphy_bitslip14_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip142 <= k7ddrphy_bitslip14_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip150 <= 8'd0;
    case (k7ddrphy_bitslip15_value0)
        1'd0: begin
            k7ddrphy_bitslip150 <= k7ddrphy_bitslip15_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip150 <= k7ddrphy_bitslip15_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip150 <= k7ddrphy_bitslip15_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip150 <= k7ddrphy_bitslip15_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip150 <= k7ddrphy_bitslip15_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip150 <= k7ddrphy_bitslip15_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip150 <= k7ddrphy_bitslip15_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip150 <= k7ddrphy_bitslip15_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip152 <= 8'd0;
    case (k7ddrphy_bitslip15_value1)
        1'd0: begin
            k7ddrphy_bitslip152 <= k7ddrphy_bitslip15_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip152 <= k7ddrphy_bitslip15_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip152 <= k7ddrphy_bitslip15_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip152 <= k7ddrphy_bitslip15_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip152 <= k7ddrphy_bitslip15_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip152 <= k7ddrphy_bitslip15_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip152 <= k7ddrphy_bitslip15_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip152 <= k7ddrphy_bitslip15_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip160 <= 8'd0;
    case (k7ddrphy_bitslip16_value0)
        1'd0: begin
            k7ddrphy_bitslip160 <= k7ddrphy_bitslip16_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip160 <= k7ddrphy_bitslip16_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip160 <= k7ddrphy_bitslip16_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip160 <= k7ddrphy_bitslip16_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip160 <= k7ddrphy_bitslip16_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip160 <= k7ddrphy_bitslip16_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip160 <= k7ddrphy_bitslip16_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip160 <= k7ddrphy_bitslip16_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip162 <= 8'd0;
    case (k7ddrphy_bitslip16_value1)
        1'd0: begin
            k7ddrphy_bitslip162 <= k7ddrphy_bitslip16_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip162 <= k7ddrphy_bitslip16_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip162 <= k7ddrphy_bitslip16_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip162 <= k7ddrphy_bitslip16_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip162 <= k7ddrphy_bitslip16_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip162 <= k7ddrphy_bitslip16_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip162 <= k7ddrphy_bitslip16_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip162 <= k7ddrphy_bitslip16_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip170 <= 8'd0;
    case (k7ddrphy_bitslip17_value0)
        1'd0: begin
            k7ddrphy_bitslip170 <= k7ddrphy_bitslip17_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip170 <= k7ddrphy_bitslip17_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip170 <= k7ddrphy_bitslip17_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip170 <= k7ddrphy_bitslip17_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip170 <= k7ddrphy_bitslip17_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip170 <= k7ddrphy_bitslip17_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip170 <= k7ddrphy_bitslip17_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip170 <= k7ddrphy_bitslip17_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip172 <= 8'd0;
    case (k7ddrphy_bitslip17_value1)
        1'd0: begin
            k7ddrphy_bitslip172 <= k7ddrphy_bitslip17_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip172 <= k7ddrphy_bitslip17_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip172 <= k7ddrphy_bitslip17_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip172 <= k7ddrphy_bitslip17_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip172 <= k7ddrphy_bitslip17_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip172 <= k7ddrphy_bitslip17_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip172 <= k7ddrphy_bitslip17_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip172 <= k7ddrphy_bitslip17_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip180 <= 8'd0;
    case (k7ddrphy_bitslip18_value0)
        1'd0: begin
            k7ddrphy_bitslip180 <= k7ddrphy_bitslip18_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip180 <= k7ddrphy_bitslip18_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip180 <= k7ddrphy_bitslip18_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip180 <= k7ddrphy_bitslip18_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip180 <= k7ddrphy_bitslip18_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip180 <= k7ddrphy_bitslip18_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip180 <= k7ddrphy_bitslip18_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip180 <= k7ddrphy_bitslip18_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip182 <= 8'd0;
    case (k7ddrphy_bitslip18_value1)
        1'd0: begin
            k7ddrphy_bitslip182 <= k7ddrphy_bitslip18_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip182 <= k7ddrphy_bitslip18_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip182 <= k7ddrphy_bitslip18_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip182 <= k7ddrphy_bitslip18_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip182 <= k7ddrphy_bitslip18_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip182 <= k7ddrphy_bitslip18_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip182 <= k7ddrphy_bitslip18_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip182 <= k7ddrphy_bitslip18_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip190 <= 8'd0;
    case (k7ddrphy_bitslip19_value0)
        1'd0: begin
            k7ddrphy_bitslip190 <= k7ddrphy_bitslip19_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip190 <= k7ddrphy_bitslip19_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip190 <= k7ddrphy_bitslip19_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip190 <= k7ddrphy_bitslip19_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip190 <= k7ddrphy_bitslip19_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip190 <= k7ddrphy_bitslip19_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip190 <= k7ddrphy_bitslip19_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip190 <= k7ddrphy_bitslip19_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip192 <= 8'd0;
    case (k7ddrphy_bitslip19_value1)
        1'd0: begin
            k7ddrphy_bitslip192 <= k7ddrphy_bitslip19_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip192 <= k7ddrphy_bitslip19_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip192 <= k7ddrphy_bitslip19_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip192 <= k7ddrphy_bitslip19_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip192 <= k7ddrphy_bitslip19_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip192 <= k7ddrphy_bitslip19_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip192 <= k7ddrphy_bitslip19_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip192 <= k7ddrphy_bitslip19_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip200 <= 8'd0;
    case (k7ddrphy_bitslip20_value0)
        1'd0: begin
            k7ddrphy_bitslip200 <= k7ddrphy_bitslip20_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip200 <= k7ddrphy_bitslip20_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip200 <= k7ddrphy_bitslip20_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip200 <= k7ddrphy_bitslip20_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip200 <= k7ddrphy_bitslip20_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip200 <= k7ddrphy_bitslip20_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip200 <= k7ddrphy_bitslip20_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip200 <= k7ddrphy_bitslip20_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip202 <= 8'd0;
    case (k7ddrphy_bitslip20_value1)
        1'd0: begin
            k7ddrphy_bitslip202 <= k7ddrphy_bitslip20_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip202 <= k7ddrphy_bitslip20_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip202 <= k7ddrphy_bitslip20_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip202 <= k7ddrphy_bitslip20_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip202 <= k7ddrphy_bitslip20_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip202 <= k7ddrphy_bitslip20_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip202 <= k7ddrphy_bitslip20_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip202 <= k7ddrphy_bitslip20_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip210 <= 8'd0;
    case (k7ddrphy_bitslip21_value0)
        1'd0: begin
            k7ddrphy_bitslip210 <= k7ddrphy_bitslip21_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip210 <= k7ddrphy_bitslip21_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip210 <= k7ddrphy_bitslip21_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip210 <= k7ddrphy_bitslip21_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip210 <= k7ddrphy_bitslip21_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip210 <= k7ddrphy_bitslip21_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip210 <= k7ddrphy_bitslip21_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip210 <= k7ddrphy_bitslip21_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip212 <= 8'd0;
    case (k7ddrphy_bitslip21_value1)
        1'd0: begin
            k7ddrphy_bitslip212 <= k7ddrphy_bitslip21_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip212 <= k7ddrphy_bitslip21_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip212 <= k7ddrphy_bitslip21_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip212 <= k7ddrphy_bitslip21_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip212 <= k7ddrphy_bitslip21_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip212 <= k7ddrphy_bitslip21_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip212 <= k7ddrphy_bitslip21_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip212 <= k7ddrphy_bitslip21_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip220 <= 8'd0;
    case (k7ddrphy_bitslip22_value0)
        1'd0: begin
            k7ddrphy_bitslip220 <= k7ddrphy_bitslip22_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip220 <= k7ddrphy_bitslip22_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip220 <= k7ddrphy_bitslip22_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip220 <= k7ddrphy_bitslip22_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip220 <= k7ddrphy_bitslip22_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip220 <= k7ddrphy_bitslip22_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip220 <= k7ddrphy_bitslip22_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip220 <= k7ddrphy_bitslip22_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip222 <= 8'd0;
    case (k7ddrphy_bitslip22_value1)
        1'd0: begin
            k7ddrphy_bitslip222 <= k7ddrphy_bitslip22_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip222 <= k7ddrphy_bitslip22_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip222 <= k7ddrphy_bitslip22_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip222 <= k7ddrphy_bitslip22_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip222 <= k7ddrphy_bitslip22_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip222 <= k7ddrphy_bitslip22_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip222 <= k7ddrphy_bitslip22_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip222 <= k7ddrphy_bitslip22_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip230 <= 8'd0;
    case (k7ddrphy_bitslip23_value0)
        1'd0: begin
            k7ddrphy_bitslip230 <= k7ddrphy_bitslip23_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip230 <= k7ddrphy_bitslip23_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip230 <= k7ddrphy_bitslip23_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip230 <= k7ddrphy_bitslip23_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip230 <= k7ddrphy_bitslip23_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip230 <= k7ddrphy_bitslip23_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip230 <= k7ddrphy_bitslip23_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip230 <= k7ddrphy_bitslip23_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip232 <= 8'd0;
    case (k7ddrphy_bitslip23_value1)
        1'd0: begin
            k7ddrphy_bitslip232 <= k7ddrphy_bitslip23_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip232 <= k7ddrphy_bitslip23_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip232 <= k7ddrphy_bitslip23_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip232 <= k7ddrphy_bitslip23_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip232 <= k7ddrphy_bitslip23_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip232 <= k7ddrphy_bitslip23_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip232 <= k7ddrphy_bitslip23_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip232 <= k7ddrphy_bitslip23_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip240 <= 8'd0;
    case (k7ddrphy_bitslip24_value0)
        1'd0: begin
            k7ddrphy_bitslip240 <= k7ddrphy_bitslip24_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip240 <= k7ddrphy_bitslip24_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip240 <= k7ddrphy_bitslip24_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip240 <= k7ddrphy_bitslip24_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip240 <= k7ddrphy_bitslip24_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip240 <= k7ddrphy_bitslip24_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip240 <= k7ddrphy_bitslip24_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip240 <= k7ddrphy_bitslip24_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip242 <= 8'd0;
    case (k7ddrphy_bitslip24_value1)
        1'd0: begin
            k7ddrphy_bitslip242 <= k7ddrphy_bitslip24_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip242 <= k7ddrphy_bitslip24_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip242 <= k7ddrphy_bitslip24_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip242 <= k7ddrphy_bitslip24_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip242 <= k7ddrphy_bitslip24_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip242 <= k7ddrphy_bitslip24_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip242 <= k7ddrphy_bitslip24_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip242 <= k7ddrphy_bitslip24_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip250 <= 8'd0;
    case (k7ddrphy_bitslip25_value0)
        1'd0: begin
            k7ddrphy_bitslip250 <= k7ddrphy_bitslip25_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip250 <= k7ddrphy_bitslip25_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip250 <= k7ddrphy_bitslip25_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip250 <= k7ddrphy_bitslip25_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip250 <= k7ddrphy_bitslip25_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip250 <= k7ddrphy_bitslip25_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip250 <= k7ddrphy_bitslip25_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip250 <= k7ddrphy_bitslip25_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip252 <= 8'd0;
    case (k7ddrphy_bitslip25_value1)
        1'd0: begin
            k7ddrphy_bitslip252 <= k7ddrphy_bitslip25_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip252 <= k7ddrphy_bitslip25_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip252 <= k7ddrphy_bitslip25_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip252 <= k7ddrphy_bitslip25_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip252 <= k7ddrphy_bitslip25_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip252 <= k7ddrphy_bitslip25_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip252 <= k7ddrphy_bitslip25_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip252 <= k7ddrphy_bitslip25_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip260 <= 8'd0;
    case (k7ddrphy_bitslip26_value0)
        1'd0: begin
            k7ddrphy_bitslip260 <= k7ddrphy_bitslip26_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip260 <= k7ddrphy_bitslip26_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip260 <= k7ddrphy_bitslip26_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip260 <= k7ddrphy_bitslip26_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip260 <= k7ddrphy_bitslip26_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip260 <= k7ddrphy_bitslip26_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip260 <= k7ddrphy_bitslip26_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip260 <= k7ddrphy_bitslip26_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip262 <= 8'd0;
    case (k7ddrphy_bitslip26_value1)
        1'd0: begin
            k7ddrphy_bitslip262 <= k7ddrphy_bitslip26_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip262 <= k7ddrphy_bitslip26_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip262 <= k7ddrphy_bitslip26_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip262 <= k7ddrphy_bitslip26_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip262 <= k7ddrphy_bitslip26_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip262 <= k7ddrphy_bitslip26_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip262 <= k7ddrphy_bitslip26_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip262 <= k7ddrphy_bitslip26_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip270 <= 8'd0;
    case (k7ddrphy_bitslip27_value0)
        1'd0: begin
            k7ddrphy_bitslip270 <= k7ddrphy_bitslip27_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip270 <= k7ddrphy_bitslip27_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip270 <= k7ddrphy_bitslip27_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip270 <= k7ddrphy_bitslip27_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip270 <= k7ddrphy_bitslip27_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip270 <= k7ddrphy_bitslip27_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip270 <= k7ddrphy_bitslip27_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip270 <= k7ddrphy_bitslip27_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip272 <= 8'd0;
    case (k7ddrphy_bitslip27_value1)
        1'd0: begin
            k7ddrphy_bitslip272 <= k7ddrphy_bitslip27_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip272 <= k7ddrphy_bitslip27_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip272 <= k7ddrphy_bitslip27_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip272 <= k7ddrphy_bitslip27_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip272 <= k7ddrphy_bitslip27_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip272 <= k7ddrphy_bitslip27_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip272 <= k7ddrphy_bitslip27_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip272 <= k7ddrphy_bitslip27_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip280 <= 8'd0;
    case (k7ddrphy_bitslip28_value0)
        1'd0: begin
            k7ddrphy_bitslip280 <= k7ddrphy_bitslip28_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip280 <= k7ddrphy_bitslip28_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip280 <= k7ddrphy_bitslip28_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip280 <= k7ddrphy_bitslip28_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip280 <= k7ddrphy_bitslip28_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip280 <= k7ddrphy_bitslip28_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip280 <= k7ddrphy_bitslip28_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip280 <= k7ddrphy_bitslip28_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip282 <= 8'd0;
    case (k7ddrphy_bitslip28_value1)
        1'd0: begin
            k7ddrphy_bitslip282 <= k7ddrphy_bitslip28_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip282 <= k7ddrphy_bitslip28_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip282 <= k7ddrphy_bitslip28_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip282 <= k7ddrphy_bitslip28_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip282 <= k7ddrphy_bitslip28_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip282 <= k7ddrphy_bitslip28_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip282 <= k7ddrphy_bitslip28_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip282 <= k7ddrphy_bitslip28_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip290 <= 8'd0;
    case (k7ddrphy_bitslip29_value0)
        1'd0: begin
            k7ddrphy_bitslip290 <= k7ddrphy_bitslip29_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip290 <= k7ddrphy_bitslip29_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip290 <= k7ddrphy_bitslip29_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip290 <= k7ddrphy_bitslip29_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip290 <= k7ddrphy_bitslip29_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip290 <= k7ddrphy_bitslip29_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip290 <= k7ddrphy_bitslip29_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip290 <= k7ddrphy_bitslip29_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip292 <= 8'd0;
    case (k7ddrphy_bitslip29_value1)
        1'd0: begin
            k7ddrphy_bitslip292 <= k7ddrphy_bitslip29_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip292 <= k7ddrphy_bitslip29_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip292 <= k7ddrphy_bitslip29_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip292 <= k7ddrphy_bitslip29_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip292 <= k7ddrphy_bitslip29_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip292 <= k7ddrphy_bitslip29_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip292 <= k7ddrphy_bitslip29_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip292 <= k7ddrphy_bitslip29_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip300 <= 8'd0;
    case (k7ddrphy_bitslip30_value0)
        1'd0: begin
            k7ddrphy_bitslip300 <= k7ddrphy_bitslip30_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip300 <= k7ddrphy_bitslip30_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip300 <= k7ddrphy_bitslip30_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip300 <= k7ddrphy_bitslip30_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip300 <= k7ddrphy_bitslip30_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip300 <= k7ddrphy_bitslip30_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip300 <= k7ddrphy_bitslip30_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip300 <= k7ddrphy_bitslip30_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip302 <= 8'd0;
    case (k7ddrphy_bitslip30_value1)
        1'd0: begin
            k7ddrphy_bitslip302 <= k7ddrphy_bitslip30_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip302 <= k7ddrphy_bitslip30_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip302 <= k7ddrphy_bitslip30_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip302 <= k7ddrphy_bitslip30_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip302 <= k7ddrphy_bitslip30_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip302 <= k7ddrphy_bitslip30_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip302 <= k7ddrphy_bitslip30_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip302 <= k7ddrphy_bitslip30_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip310 <= 8'd0;
    case (k7ddrphy_bitslip31_value0)
        1'd0: begin
            k7ddrphy_bitslip310 <= k7ddrphy_bitslip31_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip310 <= k7ddrphy_bitslip31_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip310 <= k7ddrphy_bitslip31_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip310 <= k7ddrphy_bitslip31_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip310 <= k7ddrphy_bitslip31_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip310 <= k7ddrphy_bitslip31_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip310 <= k7ddrphy_bitslip31_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip310 <= k7ddrphy_bitslip31_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip312 <= 8'd0;
    case (k7ddrphy_bitslip31_value1)
        1'd0: begin
            k7ddrphy_bitslip312 <= k7ddrphy_bitslip31_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip312 <= k7ddrphy_bitslip31_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip312 <= k7ddrphy_bitslip31_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip312 <= k7ddrphy_bitslip31_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip312 <= k7ddrphy_bitslip31_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip312 <= k7ddrphy_bitslip31_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip312 <= k7ddrphy_bitslip31_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip312 <= k7ddrphy_bitslip31_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip320 <= 8'd0;
    case (k7ddrphy_bitslip32_value0)
        1'd0: begin
            k7ddrphy_bitslip320 <= k7ddrphy_bitslip32_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip320 <= k7ddrphy_bitslip32_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip320 <= k7ddrphy_bitslip32_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip320 <= k7ddrphy_bitslip32_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip320 <= k7ddrphy_bitslip32_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip320 <= k7ddrphy_bitslip32_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip320 <= k7ddrphy_bitslip32_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip320 <= k7ddrphy_bitslip32_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip322 <= 8'd0;
    case (k7ddrphy_bitslip32_value1)
        1'd0: begin
            k7ddrphy_bitslip322 <= k7ddrphy_bitslip32_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip322 <= k7ddrphy_bitslip32_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip322 <= k7ddrphy_bitslip32_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip322 <= k7ddrphy_bitslip32_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip322 <= k7ddrphy_bitslip32_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip322 <= k7ddrphy_bitslip32_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip322 <= k7ddrphy_bitslip32_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip322 <= k7ddrphy_bitslip32_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip330 <= 8'd0;
    case (k7ddrphy_bitslip33_value0)
        1'd0: begin
            k7ddrphy_bitslip330 <= k7ddrphy_bitslip33_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip330 <= k7ddrphy_bitslip33_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip330 <= k7ddrphy_bitslip33_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip330 <= k7ddrphy_bitslip33_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip330 <= k7ddrphy_bitslip33_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip330 <= k7ddrphy_bitslip33_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip330 <= k7ddrphy_bitslip33_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip330 <= k7ddrphy_bitslip33_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip332 <= 8'd0;
    case (k7ddrphy_bitslip33_value1)
        1'd0: begin
            k7ddrphy_bitslip332 <= k7ddrphy_bitslip33_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip332 <= k7ddrphy_bitslip33_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip332 <= k7ddrphy_bitslip33_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip332 <= k7ddrphy_bitslip33_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip332 <= k7ddrphy_bitslip33_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip332 <= k7ddrphy_bitslip33_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip332 <= k7ddrphy_bitslip33_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip332 <= k7ddrphy_bitslip33_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip340 <= 8'd0;
    case (k7ddrphy_bitslip34_value0)
        1'd0: begin
            k7ddrphy_bitslip340 <= k7ddrphy_bitslip34_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip340 <= k7ddrphy_bitslip34_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip340 <= k7ddrphy_bitslip34_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip340 <= k7ddrphy_bitslip34_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip340 <= k7ddrphy_bitslip34_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip340 <= k7ddrphy_bitslip34_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip340 <= k7ddrphy_bitslip34_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip340 <= k7ddrphy_bitslip34_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip342 <= 8'd0;
    case (k7ddrphy_bitslip34_value1)
        1'd0: begin
            k7ddrphy_bitslip342 <= k7ddrphy_bitslip34_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip342 <= k7ddrphy_bitslip34_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip342 <= k7ddrphy_bitslip34_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip342 <= k7ddrphy_bitslip34_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip342 <= k7ddrphy_bitslip34_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip342 <= k7ddrphy_bitslip34_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip342 <= k7ddrphy_bitslip34_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip342 <= k7ddrphy_bitslip34_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip350 <= 8'd0;
    case (k7ddrphy_bitslip35_value0)
        1'd0: begin
            k7ddrphy_bitslip350 <= k7ddrphy_bitslip35_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip350 <= k7ddrphy_bitslip35_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip350 <= k7ddrphy_bitslip35_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip350 <= k7ddrphy_bitslip35_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip350 <= k7ddrphy_bitslip35_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip350 <= k7ddrphy_bitslip35_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip350 <= k7ddrphy_bitslip35_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip350 <= k7ddrphy_bitslip35_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip352 <= 8'd0;
    case (k7ddrphy_bitslip35_value1)
        1'd0: begin
            k7ddrphy_bitslip352 <= k7ddrphy_bitslip35_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip352 <= k7ddrphy_bitslip35_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip352 <= k7ddrphy_bitslip35_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip352 <= k7ddrphy_bitslip35_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip352 <= k7ddrphy_bitslip35_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip352 <= k7ddrphy_bitslip35_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip352 <= k7ddrphy_bitslip35_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip352 <= k7ddrphy_bitslip35_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip360 <= 8'd0;
    case (k7ddrphy_bitslip36_value0)
        1'd0: begin
            k7ddrphy_bitslip360 <= k7ddrphy_bitslip36_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip360 <= k7ddrphy_bitslip36_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip360 <= k7ddrphy_bitslip36_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip360 <= k7ddrphy_bitslip36_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip360 <= k7ddrphy_bitslip36_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip360 <= k7ddrphy_bitslip36_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip360 <= k7ddrphy_bitslip36_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip360 <= k7ddrphy_bitslip36_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip362 <= 8'd0;
    case (k7ddrphy_bitslip36_value1)
        1'd0: begin
            k7ddrphy_bitslip362 <= k7ddrphy_bitslip36_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip362 <= k7ddrphy_bitslip36_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip362 <= k7ddrphy_bitslip36_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip362 <= k7ddrphy_bitslip36_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip362 <= k7ddrphy_bitslip36_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip362 <= k7ddrphy_bitslip36_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip362 <= k7ddrphy_bitslip36_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip362 <= k7ddrphy_bitslip36_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip370 <= 8'd0;
    case (k7ddrphy_bitslip37_value0)
        1'd0: begin
            k7ddrphy_bitslip370 <= k7ddrphy_bitslip37_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip370 <= k7ddrphy_bitslip37_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip370 <= k7ddrphy_bitslip37_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip370 <= k7ddrphy_bitslip37_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip370 <= k7ddrphy_bitslip37_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip370 <= k7ddrphy_bitslip37_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip370 <= k7ddrphy_bitslip37_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip370 <= k7ddrphy_bitslip37_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip372 <= 8'd0;
    case (k7ddrphy_bitslip37_value1)
        1'd0: begin
            k7ddrphy_bitslip372 <= k7ddrphy_bitslip37_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip372 <= k7ddrphy_bitslip37_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip372 <= k7ddrphy_bitslip37_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip372 <= k7ddrphy_bitslip37_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip372 <= k7ddrphy_bitslip37_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip372 <= k7ddrphy_bitslip37_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip372 <= k7ddrphy_bitslip37_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip372 <= k7ddrphy_bitslip37_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip380 <= 8'd0;
    case (k7ddrphy_bitslip38_value0)
        1'd0: begin
            k7ddrphy_bitslip380 <= k7ddrphy_bitslip38_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip380 <= k7ddrphy_bitslip38_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip380 <= k7ddrphy_bitslip38_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip380 <= k7ddrphy_bitslip38_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip380 <= k7ddrphy_bitslip38_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip380 <= k7ddrphy_bitslip38_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip380 <= k7ddrphy_bitslip38_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip380 <= k7ddrphy_bitslip38_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip382 <= 8'd0;
    case (k7ddrphy_bitslip38_value1)
        1'd0: begin
            k7ddrphy_bitslip382 <= k7ddrphy_bitslip38_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip382 <= k7ddrphy_bitslip38_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip382 <= k7ddrphy_bitslip38_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip382 <= k7ddrphy_bitslip38_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip382 <= k7ddrphy_bitslip38_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip382 <= k7ddrphy_bitslip38_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip382 <= k7ddrphy_bitslip38_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip382 <= k7ddrphy_bitslip38_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip390 <= 8'd0;
    case (k7ddrphy_bitslip39_value0)
        1'd0: begin
            k7ddrphy_bitslip390 <= k7ddrphy_bitslip39_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip390 <= k7ddrphy_bitslip39_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip390 <= k7ddrphy_bitslip39_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip390 <= k7ddrphy_bitslip39_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip390 <= k7ddrphy_bitslip39_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip390 <= k7ddrphy_bitslip39_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip390 <= k7ddrphy_bitslip39_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip390 <= k7ddrphy_bitslip39_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip392 <= 8'd0;
    case (k7ddrphy_bitslip39_value1)
        1'd0: begin
            k7ddrphy_bitslip392 <= k7ddrphy_bitslip39_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip392 <= k7ddrphy_bitslip39_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip392 <= k7ddrphy_bitslip39_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip392 <= k7ddrphy_bitslip39_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip392 <= k7ddrphy_bitslip39_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip392 <= k7ddrphy_bitslip39_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip392 <= k7ddrphy_bitslip39_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip392 <= k7ddrphy_bitslip39_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip400 <= 8'd0;
    case (k7ddrphy_bitslip40_value0)
        1'd0: begin
            k7ddrphy_bitslip400 <= k7ddrphy_bitslip40_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip400 <= k7ddrphy_bitslip40_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip400 <= k7ddrphy_bitslip40_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip400 <= k7ddrphy_bitslip40_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip400 <= k7ddrphy_bitslip40_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip400 <= k7ddrphy_bitslip40_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip400 <= k7ddrphy_bitslip40_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip400 <= k7ddrphy_bitslip40_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip402 <= 8'd0;
    case (k7ddrphy_bitslip40_value1)
        1'd0: begin
            k7ddrphy_bitslip402 <= k7ddrphy_bitslip40_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip402 <= k7ddrphy_bitslip40_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip402 <= k7ddrphy_bitslip40_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip402 <= k7ddrphy_bitslip40_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip402 <= k7ddrphy_bitslip40_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip402 <= k7ddrphy_bitslip40_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip402 <= k7ddrphy_bitslip40_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip402 <= k7ddrphy_bitslip40_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip410 <= 8'd0;
    case (k7ddrphy_bitslip41_value0)
        1'd0: begin
            k7ddrphy_bitslip410 <= k7ddrphy_bitslip41_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip410 <= k7ddrphy_bitslip41_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip410 <= k7ddrphy_bitslip41_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip410 <= k7ddrphy_bitslip41_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip410 <= k7ddrphy_bitslip41_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip410 <= k7ddrphy_bitslip41_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip410 <= k7ddrphy_bitslip41_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip410 <= k7ddrphy_bitslip41_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip412 <= 8'd0;
    case (k7ddrphy_bitslip41_value1)
        1'd0: begin
            k7ddrphy_bitslip412 <= k7ddrphy_bitslip41_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip412 <= k7ddrphy_bitslip41_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip412 <= k7ddrphy_bitslip41_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip412 <= k7ddrphy_bitslip41_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip412 <= k7ddrphy_bitslip41_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip412 <= k7ddrphy_bitslip41_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip412 <= k7ddrphy_bitslip41_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip412 <= k7ddrphy_bitslip41_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip420 <= 8'd0;
    case (k7ddrphy_bitslip42_value0)
        1'd0: begin
            k7ddrphy_bitslip420 <= k7ddrphy_bitslip42_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip420 <= k7ddrphy_bitslip42_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip420 <= k7ddrphy_bitslip42_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip420 <= k7ddrphy_bitslip42_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip420 <= k7ddrphy_bitslip42_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip420 <= k7ddrphy_bitslip42_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip420 <= k7ddrphy_bitslip42_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip420 <= k7ddrphy_bitslip42_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip422 <= 8'd0;
    case (k7ddrphy_bitslip42_value1)
        1'd0: begin
            k7ddrphy_bitslip422 <= k7ddrphy_bitslip42_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip422 <= k7ddrphy_bitslip42_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip422 <= k7ddrphy_bitslip42_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip422 <= k7ddrphy_bitslip42_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip422 <= k7ddrphy_bitslip42_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip422 <= k7ddrphy_bitslip42_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip422 <= k7ddrphy_bitslip42_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip422 <= k7ddrphy_bitslip42_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip430 <= 8'd0;
    case (k7ddrphy_bitslip43_value0)
        1'd0: begin
            k7ddrphy_bitslip430 <= k7ddrphy_bitslip43_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip430 <= k7ddrphy_bitslip43_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip430 <= k7ddrphy_bitslip43_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip430 <= k7ddrphy_bitslip43_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip430 <= k7ddrphy_bitslip43_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip430 <= k7ddrphy_bitslip43_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip430 <= k7ddrphy_bitslip43_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip430 <= k7ddrphy_bitslip43_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip432 <= 8'd0;
    case (k7ddrphy_bitslip43_value1)
        1'd0: begin
            k7ddrphy_bitslip432 <= k7ddrphy_bitslip43_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip432 <= k7ddrphy_bitslip43_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip432 <= k7ddrphy_bitslip43_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip432 <= k7ddrphy_bitslip43_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip432 <= k7ddrphy_bitslip43_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip432 <= k7ddrphy_bitslip43_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip432 <= k7ddrphy_bitslip43_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip432 <= k7ddrphy_bitslip43_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip440 <= 8'd0;
    case (k7ddrphy_bitslip44_value0)
        1'd0: begin
            k7ddrphy_bitslip440 <= k7ddrphy_bitslip44_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip440 <= k7ddrphy_bitslip44_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip440 <= k7ddrphy_bitslip44_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip440 <= k7ddrphy_bitslip44_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip440 <= k7ddrphy_bitslip44_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip440 <= k7ddrphy_bitslip44_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip440 <= k7ddrphy_bitslip44_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip440 <= k7ddrphy_bitslip44_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip442 <= 8'd0;
    case (k7ddrphy_bitslip44_value1)
        1'd0: begin
            k7ddrphy_bitslip442 <= k7ddrphy_bitslip44_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip442 <= k7ddrphy_bitslip44_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip442 <= k7ddrphy_bitslip44_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip442 <= k7ddrphy_bitslip44_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip442 <= k7ddrphy_bitslip44_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip442 <= k7ddrphy_bitslip44_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip442 <= k7ddrphy_bitslip44_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip442 <= k7ddrphy_bitslip44_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip450 <= 8'd0;
    case (k7ddrphy_bitslip45_value0)
        1'd0: begin
            k7ddrphy_bitslip450 <= k7ddrphy_bitslip45_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip450 <= k7ddrphy_bitslip45_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip450 <= k7ddrphy_bitslip45_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip450 <= k7ddrphy_bitslip45_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip450 <= k7ddrphy_bitslip45_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip450 <= k7ddrphy_bitslip45_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip450 <= k7ddrphy_bitslip45_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip450 <= k7ddrphy_bitslip45_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip452 <= 8'd0;
    case (k7ddrphy_bitslip45_value1)
        1'd0: begin
            k7ddrphy_bitslip452 <= k7ddrphy_bitslip45_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip452 <= k7ddrphy_bitslip45_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip452 <= k7ddrphy_bitslip45_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip452 <= k7ddrphy_bitslip45_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip452 <= k7ddrphy_bitslip45_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip452 <= k7ddrphy_bitslip45_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip452 <= k7ddrphy_bitslip45_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip452 <= k7ddrphy_bitslip45_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip460 <= 8'd0;
    case (k7ddrphy_bitslip46_value0)
        1'd0: begin
            k7ddrphy_bitslip460 <= k7ddrphy_bitslip46_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip460 <= k7ddrphy_bitslip46_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip460 <= k7ddrphy_bitslip46_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip460 <= k7ddrphy_bitslip46_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip460 <= k7ddrphy_bitslip46_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip460 <= k7ddrphy_bitslip46_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip460 <= k7ddrphy_bitslip46_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip460 <= k7ddrphy_bitslip46_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip462 <= 8'd0;
    case (k7ddrphy_bitslip46_value1)
        1'd0: begin
            k7ddrphy_bitslip462 <= k7ddrphy_bitslip46_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip462 <= k7ddrphy_bitslip46_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip462 <= k7ddrphy_bitslip46_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip462 <= k7ddrphy_bitslip46_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip462 <= k7ddrphy_bitslip46_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip462 <= k7ddrphy_bitslip46_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip462 <= k7ddrphy_bitslip46_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip462 <= k7ddrphy_bitslip46_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip470 <= 8'd0;
    case (k7ddrphy_bitslip47_value0)
        1'd0: begin
            k7ddrphy_bitslip470 <= k7ddrphy_bitslip47_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip470 <= k7ddrphy_bitslip47_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip470 <= k7ddrphy_bitslip47_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip470 <= k7ddrphy_bitslip47_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip470 <= k7ddrphy_bitslip47_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip470 <= k7ddrphy_bitslip47_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip470 <= k7ddrphy_bitslip47_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip470 <= k7ddrphy_bitslip47_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip472 <= 8'd0;
    case (k7ddrphy_bitslip47_value1)
        1'd0: begin
            k7ddrphy_bitslip472 <= k7ddrphy_bitslip47_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip472 <= k7ddrphy_bitslip47_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip472 <= k7ddrphy_bitslip47_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip472 <= k7ddrphy_bitslip47_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip472 <= k7ddrphy_bitslip47_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip472 <= k7ddrphy_bitslip47_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip472 <= k7ddrphy_bitslip47_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip472 <= k7ddrphy_bitslip47_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip480 <= 8'd0;
    case (k7ddrphy_bitslip48_value0)
        1'd0: begin
            k7ddrphy_bitslip480 <= k7ddrphy_bitslip48_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip480 <= k7ddrphy_bitslip48_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip480 <= k7ddrphy_bitslip48_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip480 <= k7ddrphy_bitslip48_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip480 <= k7ddrphy_bitslip48_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip480 <= k7ddrphy_bitslip48_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip480 <= k7ddrphy_bitslip48_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip480 <= k7ddrphy_bitslip48_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip482 <= 8'd0;
    case (k7ddrphy_bitslip48_value1)
        1'd0: begin
            k7ddrphy_bitslip482 <= k7ddrphy_bitslip48_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip482 <= k7ddrphy_bitslip48_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip482 <= k7ddrphy_bitslip48_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip482 <= k7ddrphy_bitslip48_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip482 <= k7ddrphy_bitslip48_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip482 <= k7ddrphy_bitslip48_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip482 <= k7ddrphy_bitslip48_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip482 <= k7ddrphy_bitslip48_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip490 <= 8'd0;
    case (k7ddrphy_bitslip49_value0)
        1'd0: begin
            k7ddrphy_bitslip490 <= k7ddrphy_bitslip49_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip490 <= k7ddrphy_bitslip49_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip490 <= k7ddrphy_bitslip49_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip490 <= k7ddrphy_bitslip49_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip490 <= k7ddrphy_bitslip49_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip490 <= k7ddrphy_bitslip49_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip490 <= k7ddrphy_bitslip49_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip490 <= k7ddrphy_bitslip49_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip492 <= 8'd0;
    case (k7ddrphy_bitslip49_value1)
        1'd0: begin
            k7ddrphy_bitslip492 <= k7ddrphy_bitslip49_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip492 <= k7ddrphy_bitslip49_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip492 <= k7ddrphy_bitslip49_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip492 <= k7ddrphy_bitslip49_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip492 <= k7ddrphy_bitslip49_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip492 <= k7ddrphy_bitslip49_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip492 <= k7ddrphy_bitslip49_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip492 <= k7ddrphy_bitslip49_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip500 <= 8'd0;
    case (k7ddrphy_bitslip50_value0)
        1'd0: begin
            k7ddrphy_bitslip500 <= k7ddrphy_bitslip50_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip500 <= k7ddrphy_bitslip50_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip500 <= k7ddrphy_bitslip50_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip500 <= k7ddrphy_bitslip50_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip500 <= k7ddrphy_bitslip50_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip500 <= k7ddrphy_bitslip50_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip500 <= k7ddrphy_bitslip50_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip500 <= k7ddrphy_bitslip50_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip502 <= 8'd0;
    case (k7ddrphy_bitslip50_value1)
        1'd0: begin
            k7ddrphy_bitslip502 <= k7ddrphy_bitslip50_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip502 <= k7ddrphy_bitslip50_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip502 <= k7ddrphy_bitslip50_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip502 <= k7ddrphy_bitslip50_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip502 <= k7ddrphy_bitslip50_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip502 <= k7ddrphy_bitslip50_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip502 <= k7ddrphy_bitslip50_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip502 <= k7ddrphy_bitslip50_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip510 <= 8'd0;
    case (k7ddrphy_bitslip51_value0)
        1'd0: begin
            k7ddrphy_bitslip510 <= k7ddrphy_bitslip51_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip510 <= k7ddrphy_bitslip51_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip510 <= k7ddrphy_bitslip51_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip510 <= k7ddrphy_bitslip51_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip510 <= k7ddrphy_bitslip51_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip510 <= k7ddrphy_bitslip51_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip510 <= k7ddrphy_bitslip51_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip510 <= k7ddrphy_bitslip51_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip512 <= 8'd0;
    case (k7ddrphy_bitslip51_value1)
        1'd0: begin
            k7ddrphy_bitslip512 <= k7ddrphy_bitslip51_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip512 <= k7ddrphy_bitslip51_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip512 <= k7ddrphy_bitslip51_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip512 <= k7ddrphy_bitslip51_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip512 <= k7ddrphy_bitslip51_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip512 <= k7ddrphy_bitslip51_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip512 <= k7ddrphy_bitslip51_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip512 <= k7ddrphy_bitslip51_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip520 <= 8'd0;
    case (k7ddrphy_bitslip52_value0)
        1'd0: begin
            k7ddrphy_bitslip520 <= k7ddrphy_bitslip52_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip520 <= k7ddrphy_bitslip52_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip520 <= k7ddrphy_bitslip52_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip520 <= k7ddrphy_bitslip52_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip520 <= k7ddrphy_bitslip52_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip520 <= k7ddrphy_bitslip52_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip520 <= k7ddrphy_bitslip52_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip520 <= k7ddrphy_bitslip52_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip522 <= 8'd0;
    case (k7ddrphy_bitslip52_value1)
        1'd0: begin
            k7ddrphy_bitslip522 <= k7ddrphy_bitslip52_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip522 <= k7ddrphy_bitslip52_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip522 <= k7ddrphy_bitslip52_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip522 <= k7ddrphy_bitslip52_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip522 <= k7ddrphy_bitslip52_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip522 <= k7ddrphy_bitslip52_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip522 <= k7ddrphy_bitslip52_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip522 <= k7ddrphy_bitslip52_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip530 <= 8'd0;
    case (k7ddrphy_bitslip53_value0)
        1'd0: begin
            k7ddrphy_bitslip530 <= k7ddrphy_bitslip53_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip530 <= k7ddrphy_bitslip53_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip530 <= k7ddrphy_bitslip53_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip530 <= k7ddrphy_bitslip53_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip530 <= k7ddrphy_bitslip53_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip530 <= k7ddrphy_bitslip53_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip530 <= k7ddrphy_bitslip53_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip530 <= k7ddrphy_bitslip53_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip532 <= 8'd0;
    case (k7ddrphy_bitslip53_value1)
        1'd0: begin
            k7ddrphy_bitslip532 <= k7ddrphy_bitslip53_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip532 <= k7ddrphy_bitslip53_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip532 <= k7ddrphy_bitslip53_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip532 <= k7ddrphy_bitslip53_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip532 <= k7ddrphy_bitslip53_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip532 <= k7ddrphy_bitslip53_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip532 <= k7ddrphy_bitslip53_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip532 <= k7ddrphy_bitslip53_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip540 <= 8'd0;
    case (k7ddrphy_bitslip54_value0)
        1'd0: begin
            k7ddrphy_bitslip540 <= k7ddrphy_bitslip54_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip540 <= k7ddrphy_bitslip54_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip540 <= k7ddrphy_bitslip54_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip540 <= k7ddrphy_bitslip54_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip540 <= k7ddrphy_bitslip54_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip540 <= k7ddrphy_bitslip54_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip540 <= k7ddrphy_bitslip54_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip540 <= k7ddrphy_bitslip54_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip542 <= 8'd0;
    case (k7ddrphy_bitslip54_value1)
        1'd0: begin
            k7ddrphy_bitslip542 <= k7ddrphy_bitslip54_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip542 <= k7ddrphy_bitslip54_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip542 <= k7ddrphy_bitslip54_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip542 <= k7ddrphy_bitslip54_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip542 <= k7ddrphy_bitslip54_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip542 <= k7ddrphy_bitslip54_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip542 <= k7ddrphy_bitslip54_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip542 <= k7ddrphy_bitslip54_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip550 <= 8'd0;
    case (k7ddrphy_bitslip55_value0)
        1'd0: begin
            k7ddrphy_bitslip550 <= k7ddrphy_bitslip55_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip550 <= k7ddrphy_bitslip55_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip550 <= k7ddrphy_bitslip55_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip550 <= k7ddrphy_bitslip55_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip550 <= k7ddrphy_bitslip55_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip550 <= k7ddrphy_bitslip55_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip550 <= k7ddrphy_bitslip55_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip550 <= k7ddrphy_bitslip55_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip552 <= 8'd0;
    case (k7ddrphy_bitslip55_value1)
        1'd0: begin
            k7ddrphy_bitslip552 <= k7ddrphy_bitslip55_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip552 <= k7ddrphy_bitslip55_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip552 <= k7ddrphy_bitslip55_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip552 <= k7ddrphy_bitslip55_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip552 <= k7ddrphy_bitslip55_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip552 <= k7ddrphy_bitslip55_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip552 <= k7ddrphy_bitslip55_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip552 <= k7ddrphy_bitslip55_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip560 <= 8'd0;
    case (k7ddrphy_bitslip56_value0)
        1'd0: begin
            k7ddrphy_bitslip560 <= k7ddrphy_bitslip56_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip560 <= k7ddrphy_bitslip56_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip560 <= k7ddrphy_bitslip56_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip560 <= k7ddrphy_bitslip56_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip560 <= k7ddrphy_bitslip56_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip560 <= k7ddrphy_bitslip56_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip560 <= k7ddrphy_bitslip56_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip560 <= k7ddrphy_bitslip56_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip562 <= 8'd0;
    case (k7ddrphy_bitslip56_value1)
        1'd0: begin
            k7ddrphy_bitslip562 <= k7ddrphy_bitslip56_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip562 <= k7ddrphy_bitslip56_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip562 <= k7ddrphy_bitslip56_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip562 <= k7ddrphy_bitslip56_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip562 <= k7ddrphy_bitslip56_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip562 <= k7ddrphy_bitslip56_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip562 <= k7ddrphy_bitslip56_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip562 <= k7ddrphy_bitslip56_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip570 <= 8'd0;
    case (k7ddrphy_bitslip57_value0)
        1'd0: begin
            k7ddrphy_bitslip570 <= k7ddrphy_bitslip57_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip570 <= k7ddrphy_bitslip57_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip570 <= k7ddrphy_bitslip57_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip570 <= k7ddrphy_bitslip57_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip570 <= k7ddrphy_bitslip57_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip570 <= k7ddrphy_bitslip57_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip570 <= k7ddrphy_bitslip57_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip570 <= k7ddrphy_bitslip57_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip572 <= 8'd0;
    case (k7ddrphy_bitslip57_value1)
        1'd0: begin
            k7ddrphy_bitslip572 <= k7ddrphy_bitslip57_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip572 <= k7ddrphy_bitslip57_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip572 <= k7ddrphy_bitslip57_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip572 <= k7ddrphy_bitslip57_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip572 <= k7ddrphy_bitslip57_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip572 <= k7ddrphy_bitslip57_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip572 <= k7ddrphy_bitslip57_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip572 <= k7ddrphy_bitslip57_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip580 <= 8'd0;
    case (k7ddrphy_bitslip58_value0)
        1'd0: begin
            k7ddrphy_bitslip580 <= k7ddrphy_bitslip58_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip580 <= k7ddrphy_bitslip58_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip580 <= k7ddrphy_bitslip58_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip580 <= k7ddrphy_bitslip58_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip580 <= k7ddrphy_bitslip58_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip580 <= k7ddrphy_bitslip58_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip580 <= k7ddrphy_bitslip58_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip580 <= k7ddrphy_bitslip58_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip582 <= 8'd0;
    case (k7ddrphy_bitslip58_value1)
        1'd0: begin
            k7ddrphy_bitslip582 <= k7ddrphy_bitslip58_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip582 <= k7ddrphy_bitslip58_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip582 <= k7ddrphy_bitslip58_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip582 <= k7ddrphy_bitslip58_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip582 <= k7ddrphy_bitslip58_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip582 <= k7ddrphy_bitslip58_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip582 <= k7ddrphy_bitslip58_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip582 <= k7ddrphy_bitslip58_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip590 <= 8'd0;
    case (k7ddrphy_bitslip59_value0)
        1'd0: begin
            k7ddrphy_bitslip590 <= k7ddrphy_bitslip59_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip590 <= k7ddrphy_bitslip59_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip590 <= k7ddrphy_bitslip59_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip590 <= k7ddrphy_bitslip59_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip590 <= k7ddrphy_bitslip59_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip590 <= k7ddrphy_bitslip59_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip590 <= k7ddrphy_bitslip59_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip590 <= k7ddrphy_bitslip59_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip592 <= 8'd0;
    case (k7ddrphy_bitslip59_value1)
        1'd0: begin
            k7ddrphy_bitslip592 <= k7ddrphy_bitslip59_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip592 <= k7ddrphy_bitslip59_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip592 <= k7ddrphy_bitslip59_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip592 <= k7ddrphy_bitslip59_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip592 <= k7ddrphy_bitslip59_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip592 <= k7ddrphy_bitslip59_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip592 <= k7ddrphy_bitslip59_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip592 <= k7ddrphy_bitslip59_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip600 <= 8'd0;
    case (k7ddrphy_bitslip60_value0)
        1'd0: begin
            k7ddrphy_bitslip600 <= k7ddrphy_bitslip60_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip600 <= k7ddrphy_bitslip60_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip600 <= k7ddrphy_bitslip60_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip600 <= k7ddrphy_bitslip60_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip600 <= k7ddrphy_bitslip60_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip600 <= k7ddrphy_bitslip60_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip600 <= k7ddrphy_bitslip60_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip600 <= k7ddrphy_bitslip60_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip602 <= 8'd0;
    case (k7ddrphy_bitslip60_value1)
        1'd0: begin
            k7ddrphy_bitslip602 <= k7ddrphy_bitslip60_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip602 <= k7ddrphy_bitslip60_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip602 <= k7ddrphy_bitslip60_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip602 <= k7ddrphy_bitslip60_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip602 <= k7ddrphy_bitslip60_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip602 <= k7ddrphy_bitslip60_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip602 <= k7ddrphy_bitslip60_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip602 <= k7ddrphy_bitslip60_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip610 <= 8'd0;
    case (k7ddrphy_bitslip61_value0)
        1'd0: begin
            k7ddrphy_bitslip610 <= k7ddrphy_bitslip61_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip610 <= k7ddrphy_bitslip61_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip610 <= k7ddrphy_bitslip61_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip610 <= k7ddrphy_bitslip61_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip610 <= k7ddrphy_bitslip61_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip610 <= k7ddrphy_bitslip61_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip610 <= k7ddrphy_bitslip61_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip610 <= k7ddrphy_bitslip61_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip612 <= 8'd0;
    case (k7ddrphy_bitslip61_value1)
        1'd0: begin
            k7ddrphy_bitslip612 <= k7ddrphy_bitslip61_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip612 <= k7ddrphy_bitslip61_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip612 <= k7ddrphy_bitslip61_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip612 <= k7ddrphy_bitslip61_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip612 <= k7ddrphy_bitslip61_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip612 <= k7ddrphy_bitslip61_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip612 <= k7ddrphy_bitslip61_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip612 <= k7ddrphy_bitslip61_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip620 <= 8'd0;
    case (k7ddrphy_bitslip62_value0)
        1'd0: begin
            k7ddrphy_bitslip620 <= k7ddrphy_bitslip62_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip620 <= k7ddrphy_bitslip62_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip620 <= k7ddrphy_bitslip62_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip620 <= k7ddrphy_bitslip62_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip620 <= k7ddrphy_bitslip62_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip620 <= k7ddrphy_bitslip62_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip620 <= k7ddrphy_bitslip62_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip620 <= k7ddrphy_bitslip62_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip622 <= 8'd0;
    case (k7ddrphy_bitslip62_value1)
        1'd0: begin
            k7ddrphy_bitslip622 <= k7ddrphy_bitslip62_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip622 <= k7ddrphy_bitslip62_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip622 <= k7ddrphy_bitslip62_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip622 <= k7ddrphy_bitslip62_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip622 <= k7ddrphy_bitslip62_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip622 <= k7ddrphy_bitslip62_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip622 <= k7ddrphy_bitslip62_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip622 <= k7ddrphy_bitslip62_r1[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip630 <= 8'd0;
    case (k7ddrphy_bitslip63_value0)
        1'd0: begin
            k7ddrphy_bitslip630 <= k7ddrphy_bitslip63_r0[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip630 <= k7ddrphy_bitslip63_r0[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip630 <= k7ddrphy_bitslip63_r0[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip630 <= k7ddrphy_bitslip63_r0[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip630 <= k7ddrphy_bitslip63_r0[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip630 <= k7ddrphy_bitslip63_r0[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip630 <= k7ddrphy_bitslip63_r0[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip630 <= k7ddrphy_bitslip63_r0[15:8];
        end
    endcase
end
always @(*) begin
    k7ddrphy_bitslip632 <= 8'd0;
    case (k7ddrphy_bitslip63_value1)
        1'd0: begin
            k7ddrphy_bitslip632 <= k7ddrphy_bitslip63_r1[8:1];
        end
        1'd1: begin
            k7ddrphy_bitslip632 <= k7ddrphy_bitslip63_r1[9:2];
        end
        2'd2: begin
            k7ddrphy_bitslip632 <= k7ddrphy_bitslip63_r1[10:3];
        end
        2'd3: begin
            k7ddrphy_bitslip632 <= k7ddrphy_bitslip63_r1[11:4];
        end
        3'd4: begin
            k7ddrphy_bitslip632 <= k7ddrphy_bitslip63_r1[12:5];
        end
        3'd5: begin
            k7ddrphy_bitslip632 <= k7ddrphy_bitslip63_r1[13:6];
        end
        3'd6: begin
            k7ddrphy_bitslip632 <= k7ddrphy_bitslip63_r1[14:7];
        end
        3'd7: begin
            k7ddrphy_bitslip632 <= k7ddrphy_bitslip63_r1[15:8];
        end
    endcase
end
assign k7ddrphy_dfi_p0_address = soclinux_sdram_master_p0_address;
assign k7ddrphy_dfi_p0_bank = soclinux_sdram_master_p0_bank;
assign k7ddrphy_dfi_p0_cas_n = soclinux_sdram_master_p0_cas_n;
assign k7ddrphy_dfi_p0_cs_n = soclinux_sdram_master_p0_cs_n;
assign k7ddrphy_dfi_p0_ras_n = soclinux_sdram_master_p0_ras_n;
assign k7ddrphy_dfi_p0_we_n = soclinux_sdram_master_p0_we_n;
assign k7ddrphy_dfi_p0_cke = soclinux_sdram_master_p0_cke;
assign k7ddrphy_dfi_p0_odt = soclinux_sdram_master_p0_odt;
assign k7ddrphy_dfi_p0_reset_n = soclinux_sdram_master_p0_reset_n;
assign k7ddrphy_dfi_p0_act_n = soclinux_sdram_master_p0_act_n;
assign k7ddrphy_dfi_p0_wrdata = soclinux_sdram_master_p0_wrdata;
assign k7ddrphy_dfi_p0_wrdata_en = soclinux_sdram_master_p0_wrdata_en;
assign k7ddrphy_dfi_p0_wrdata_mask = soclinux_sdram_master_p0_wrdata_mask;
assign k7ddrphy_dfi_p0_rddata_en = soclinux_sdram_master_p0_rddata_en;
assign soclinux_sdram_master_p0_rddata = k7ddrphy_dfi_p0_rddata;
assign soclinux_sdram_master_p0_rddata_valid = k7ddrphy_dfi_p0_rddata_valid;
assign k7ddrphy_dfi_p1_address = soclinux_sdram_master_p1_address;
assign k7ddrphy_dfi_p1_bank = soclinux_sdram_master_p1_bank;
assign k7ddrphy_dfi_p1_cas_n = soclinux_sdram_master_p1_cas_n;
assign k7ddrphy_dfi_p1_cs_n = soclinux_sdram_master_p1_cs_n;
assign k7ddrphy_dfi_p1_ras_n = soclinux_sdram_master_p1_ras_n;
assign k7ddrphy_dfi_p1_we_n = soclinux_sdram_master_p1_we_n;
assign k7ddrphy_dfi_p1_cke = soclinux_sdram_master_p1_cke;
assign k7ddrphy_dfi_p1_odt = soclinux_sdram_master_p1_odt;
assign k7ddrphy_dfi_p1_reset_n = soclinux_sdram_master_p1_reset_n;
assign k7ddrphy_dfi_p1_act_n = soclinux_sdram_master_p1_act_n;
assign k7ddrphy_dfi_p1_wrdata = soclinux_sdram_master_p1_wrdata;
assign k7ddrphy_dfi_p1_wrdata_en = soclinux_sdram_master_p1_wrdata_en;
assign k7ddrphy_dfi_p1_wrdata_mask = soclinux_sdram_master_p1_wrdata_mask;
assign k7ddrphy_dfi_p1_rddata_en = soclinux_sdram_master_p1_rddata_en;
assign soclinux_sdram_master_p1_rddata = k7ddrphy_dfi_p1_rddata;
assign soclinux_sdram_master_p1_rddata_valid = k7ddrphy_dfi_p1_rddata_valid;
assign k7ddrphy_dfi_p2_address = soclinux_sdram_master_p2_address;
assign k7ddrphy_dfi_p2_bank = soclinux_sdram_master_p2_bank;
assign k7ddrphy_dfi_p2_cas_n = soclinux_sdram_master_p2_cas_n;
assign k7ddrphy_dfi_p2_cs_n = soclinux_sdram_master_p2_cs_n;
assign k7ddrphy_dfi_p2_ras_n = soclinux_sdram_master_p2_ras_n;
assign k7ddrphy_dfi_p2_we_n = soclinux_sdram_master_p2_we_n;
assign k7ddrphy_dfi_p2_cke = soclinux_sdram_master_p2_cke;
assign k7ddrphy_dfi_p2_odt = soclinux_sdram_master_p2_odt;
assign k7ddrphy_dfi_p2_reset_n = soclinux_sdram_master_p2_reset_n;
assign k7ddrphy_dfi_p2_act_n = soclinux_sdram_master_p2_act_n;
assign k7ddrphy_dfi_p2_wrdata = soclinux_sdram_master_p2_wrdata;
assign k7ddrphy_dfi_p2_wrdata_en = soclinux_sdram_master_p2_wrdata_en;
assign k7ddrphy_dfi_p2_wrdata_mask = soclinux_sdram_master_p2_wrdata_mask;
assign k7ddrphy_dfi_p2_rddata_en = soclinux_sdram_master_p2_rddata_en;
assign soclinux_sdram_master_p2_rddata = k7ddrphy_dfi_p2_rddata;
assign soclinux_sdram_master_p2_rddata_valid = k7ddrphy_dfi_p2_rddata_valid;
assign k7ddrphy_dfi_p3_address = soclinux_sdram_master_p3_address;
assign k7ddrphy_dfi_p3_bank = soclinux_sdram_master_p3_bank;
assign k7ddrphy_dfi_p3_cas_n = soclinux_sdram_master_p3_cas_n;
assign k7ddrphy_dfi_p3_cs_n = soclinux_sdram_master_p3_cs_n;
assign k7ddrphy_dfi_p3_ras_n = soclinux_sdram_master_p3_ras_n;
assign k7ddrphy_dfi_p3_we_n = soclinux_sdram_master_p3_we_n;
assign k7ddrphy_dfi_p3_cke = soclinux_sdram_master_p3_cke;
assign k7ddrphy_dfi_p3_odt = soclinux_sdram_master_p3_odt;
assign k7ddrphy_dfi_p3_reset_n = soclinux_sdram_master_p3_reset_n;
assign k7ddrphy_dfi_p3_act_n = soclinux_sdram_master_p3_act_n;
assign k7ddrphy_dfi_p3_wrdata = soclinux_sdram_master_p3_wrdata;
assign k7ddrphy_dfi_p3_wrdata_en = soclinux_sdram_master_p3_wrdata_en;
assign k7ddrphy_dfi_p3_wrdata_mask = soclinux_sdram_master_p3_wrdata_mask;
assign k7ddrphy_dfi_p3_rddata_en = soclinux_sdram_master_p3_rddata_en;
assign soclinux_sdram_master_p3_rddata = k7ddrphy_dfi_p3_rddata;
assign soclinux_sdram_master_p3_rddata_valid = k7ddrphy_dfi_p3_rddata_valid;
assign soclinux_sdram_slave_p0_address = soclinux_sdram_dfi_p0_address;
assign soclinux_sdram_slave_p0_bank = soclinux_sdram_dfi_p0_bank;
assign soclinux_sdram_slave_p0_cas_n = soclinux_sdram_dfi_p0_cas_n;
assign soclinux_sdram_slave_p0_cs_n = soclinux_sdram_dfi_p0_cs_n;
assign soclinux_sdram_slave_p0_ras_n = soclinux_sdram_dfi_p0_ras_n;
assign soclinux_sdram_slave_p0_we_n = soclinux_sdram_dfi_p0_we_n;
assign soclinux_sdram_slave_p0_cke = soclinux_sdram_dfi_p0_cke;
assign soclinux_sdram_slave_p0_odt = soclinux_sdram_dfi_p0_odt;
assign soclinux_sdram_slave_p0_reset_n = soclinux_sdram_dfi_p0_reset_n;
assign soclinux_sdram_slave_p0_act_n = soclinux_sdram_dfi_p0_act_n;
assign soclinux_sdram_slave_p0_wrdata = soclinux_sdram_dfi_p0_wrdata;
assign soclinux_sdram_slave_p0_wrdata_en = soclinux_sdram_dfi_p0_wrdata_en;
assign soclinux_sdram_slave_p0_wrdata_mask = soclinux_sdram_dfi_p0_wrdata_mask;
assign soclinux_sdram_slave_p0_rddata_en = soclinux_sdram_dfi_p0_rddata_en;
assign soclinux_sdram_dfi_p0_rddata = soclinux_sdram_slave_p0_rddata;
assign soclinux_sdram_dfi_p0_rddata_valid = soclinux_sdram_slave_p0_rddata_valid;
assign soclinux_sdram_slave_p1_address = soclinux_sdram_dfi_p1_address;
assign soclinux_sdram_slave_p1_bank = soclinux_sdram_dfi_p1_bank;
assign soclinux_sdram_slave_p1_cas_n = soclinux_sdram_dfi_p1_cas_n;
assign soclinux_sdram_slave_p1_cs_n = soclinux_sdram_dfi_p1_cs_n;
assign soclinux_sdram_slave_p1_ras_n = soclinux_sdram_dfi_p1_ras_n;
assign soclinux_sdram_slave_p1_we_n = soclinux_sdram_dfi_p1_we_n;
assign soclinux_sdram_slave_p1_cke = soclinux_sdram_dfi_p1_cke;
assign soclinux_sdram_slave_p1_odt = soclinux_sdram_dfi_p1_odt;
assign soclinux_sdram_slave_p1_reset_n = soclinux_sdram_dfi_p1_reset_n;
assign soclinux_sdram_slave_p1_act_n = soclinux_sdram_dfi_p1_act_n;
assign soclinux_sdram_slave_p1_wrdata = soclinux_sdram_dfi_p1_wrdata;
assign soclinux_sdram_slave_p1_wrdata_en = soclinux_sdram_dfi_p1_wrdata_en;
assign soclinux_sdram_slave_p1_wrdata_mask = soclinux_sdram_dfi_p1_wrdata_mask;
assign soclinux_sdram_slave_p1_rddata_en = soclinux_sdram_dfi_p1_rddata_en;
assign soclinux_sdram_dfi_p1_rddata = soclinux_sdram_slave_p1_rddata;
assign soclinux_sdram_dfi_p1_rddata_valid = soclinux_sdram_slave_p1_rddata_valid;
assign soclinux_sdram_slave_p2_address = soclinux_sdram_dfi_p2_address;
assign soclinux_sdram_slave_p2_bank = soclinux_sdram_dfi_p2_bank;
assign soclinux_sdram_slave_p2_cas_n = soclinux_sdram_dfi_p2_cas_n;
assign soclinux_sdram_slave_p2_cs_n = soclinux_sdram_dfi_p2_cs_n;
assign soclinux_sdram_slave_p2_ras_n = soclinux_sdram_dfi_p2_ras_n;
assign soclinux_sdram_slave_p2_we_n = soclinux_sdram_dfi_p2_we_n;
assign soclinux_sdram_slave_p2_cke = soclinux_sdram_dfi_p2_cke;
assign soclinux_sdram_slave_p2_odt = soclinux_sdram_dfi_p2_odt;
assign soclinux_sdram_slave_p2_reset_n = soclinux_sdram_dfi_p2_reset_n;
assign soclinux_sdram_slave_p2_act_n = soclinux_sdram_dfi_p2_act_n;
assign soclinux_sdram_slave_p2_wrdata = soclinux_sdram_dfi_p2_wrdata;
assign soclinux_sdram_slave_p2_wrdata_en = soclinux_sdram_dfi_p2_wrdata_en;
assign soclinux_sdram_slave_p2_wrdata_mask = soclinux_sdram_dfi_p2_wrdata_mask;
assign soclinux_sdram_slave_p2_rddata_en = soclinux_sdram_dfi_p2_rddata_en;
assign soclinux_sdram_dfi_p2_rddata = soclinux_sdram_slave_p2_rddata;
assign soclinux_sdram_dfi_p2_rddata_valid = soclinux_sdram_slave_p2_rddata_valid;
assign soclinux_sdram_slave_p3_address = soclinux_sdram_dfi_p3_address;
assign soclinux_sdram_slave_p3_bank = soclinux_sdram_dfi_p3_bank;
assign soclinux_sdram_slave_p3_cas_n = soclinux_sdram_dfi_p3_cas_n;
assign soclinux_sdram_slave_p3_cs_n = soclinux_sdram_dfi_p3_cs_n;
assign soclinux_sdram_slave_p3_ras_n = soclinux_sdram_dfi_p3_ras_n;
assign soclinux_sdram_slave_p3_we_n = soclinux_sdram_dfi_p3_we_n;
assign soclinux_sdram_slave_p3_cke = soclinux_sdram_dfi_p3_cke;
assign soclinux_sdram_slave_p3_odt = soclinux_sdram_dfi_p3_odt;
assign soclinux_sdram_slave_p3_reset_n = soclinux_sdram_dfi_p3_reset_n;
assign soclinux_sdram_slave_p3_act_n = soclinux_sdram_dfi_p3_act_n;
assign soclinux_sdram_slave_p3_wrdata = soclinux_sdram_dfi_p3_wrdata;
assign soclinux_sdram_slave_p3_wrdata_en = soclinux_sdram_dfi_p3_wrdata_en;
assign soclinux_sdram_slave_p3_wrdata_mask = soclinux_sdram_dfi_p3_wrdata_mask;
assign soclinux_sdram_slave_p3_rddata_en = soclinux_sdram_dfi_p3_rddata_en;
assign soclinux_sdram_dfi_p3_rddata = soclinux_sdram_slave_p3_rddata;
assign soclinux_sdram_dfi_p3_rddata_valid = soclinux_sdram_slave_p3_rddata_valid;
always @(*) begin
    soclinux_sdram_master_p2_we_n <= 1'd1;
    soclinux_sdram_master_p2_cke <= 1'd0;
    soclinux_sdram_master_p2_odt <= 1'd0;
    soclinux_sdram_master_p2_reset_n <= 1'd0;
    soclinux_sdram_master_p2_act_n <= 1'd1;
    soclinux_sdram_master_p2_wrdata <= 128'd0;
    soclinux_sdram_master_p2_wrdata_en <= 1'd0;
    soclinux_sdram_master_p2_wrdata_mask <= 16'd0;
    soclinux_sdram_master_p2_rddata_en <= 1'd0;
    soclinux_sdram_master_p3_address <= 14'd0;
    soclinux_sdram_master_p2_cas_n <= 1'd1;
    soclinux_sdram_master_p3_bank <= 3'd0;
    soclinux_sdram_master_p3_cas_n <= 1'd1;
    soclinux_sdram_ext_dfi_p1_rddata <= 128'd0;
    soclinux_sdram_master_p3_cs_n <= 1'd1;
    soclinux_sdram_ext_dfi_p1_rddata_valid <= 1'd0;
    soclinux_sdram_master_p3_ras_n <= 1'd1;
    soclinux_sdram_master_p3_we_n <= 1'd1;
    soclinux_sdram_master_p2_cs_n <= 1'd1;
    soclinux_sdram_master_p3_cke <= 1'd0;
    soclinux_sdram_master_p3_odt <= 1'd0;
    soclinux_sdram_master_p3_reset_n <= 1'd0;
    soclinux_sdram_master_p3_act_n <= 1'd1;
    soclinux_sdram_master_p3_wrdata <= 128'd0;
    soclinux_sdram_master_p3_wrdata_en <= 1'd0;
    soclinux_sdram_master_p3_wrdata_mask <= 16'd0;
    soclinux_sdram_master_p3_rddata_en <= 1'd0;
    soclinux_sdram_ext_dfi_p2_rddata <= 128'd0;
    soclinux_sdram_ext_dfi_p2_rddata_valid <= 1'd0;
    soclinux_sdram_slave_p0_rddata <= 128'd0;
    soclinux_sdram_slave_p0_rddata_valid <= 1'd0;
    soclinux_sdram_ext_dfi_p3_rddata <= 128'd0;
    soclinux_sdram_ext_dfi_p3_rddata_valid <= 1'd0;
    soclinux_sdram_slave_p1_rddata <= 128'd0;
    soclinux_sdram_slave_p1_rddata_valid <= 1'd0;
    soclinux_sdram_csr_dfi_p0_rddata <= 128'd0;
    soclinux_sdram_csr_dfi_p0_rddata_valid <= 1'd0;
    soclinux_sdram_slave_p2_rddata <= 128'd0;
    soclinux_sdram_slave_p2_rddata_valid <= 1'd0;
    soclinux_sdram_csr_dfi_p1_rddata <= 128'd0;
    soclinux_sdram_csr_dfi_p1_rddata_valid <= 1'd0;
    soclinux_sdram_slave_p3_rddata <= 128'd0;
    soclinux_sdram_slave_p3_rddata_valid <= 1'd0;
    soclinux_sdram_csr_dfi_p2_rddata <= 128'd0;
    soclinux_sdram_csr_dfi_p2_rddata_valid <= 1'd0;
    soclinux_sdram_master_p0_address <= 14'd0;
    soclinux_sdram_master_p0_bank <= 3'd0;
    soclinux_sdram_master_p0_cas_n <= 1'd1;
    soclinux_sdram_master_p0_cs_n <= 1'd1;
    soclinux_sdram_master_p0_ras_n <= 1'd1;
    soclinux_sdram_master_p0_we_n <= 1'd1;
    soclinux_sdram_master_p0_cke <= 1'd0;
    soclinux_sdram_master_p0_odt <= 1'd0;
    soclinux_sdram_csr_dfi_p3_rddata <= 128'd0;
    soclinux_sdram_master_p0_reset_n <= 1'd0;
    soclinux_sdram_csr_dfi_p3_rddata_valid <= 1'd0;
    soclinux_sdram_master_p0_act_n <= 1'd1;
    soclinux_sdram_master_p0_wrdata <= 128'd0;
    soclinux_sdram_master_p0_wrdata_en <= 1'd0;
    soclinux_sdram_master_p0_wrdata_mask <= 16'd0;
    soclinux_sdram_master_p0_rddata_en <= 1'd0;
    soclinux_sdram_master_p1_address <= 14'd0;
    soclinux_sdram_master_p1_bank <= 3'd0;
    soclinux_sdram_master_p1_cas_n <= 1'd1;
    soclinux_sdram_master_p1_cs_n <= 1'd1;
    soclinux_sdram_master_p1_ras_n <= 1'd1;
    soclinux_sdram_master_p1_we_n <= 1'd1;
    soclinux_sdram_master_p1_cke <= 1'd0;
    soclinux_sdram_master_p1_odt <= 1'd0;
    soclinux_sdram_master_p1_reset_n <= 1'd0;
    soclinux_sdram_master_p1_act_n <= 1'd1;
    soclinux_sdram_master_p1_wrdata <= 128'd0;
    soclinux_sdram_master_p1_wrdata_en <= 1'd0;
    soclinux_sdram_master_p1_wrdata_mask <= 16'd0;
    soclinux_sdram_master_p1_rddata_en <= 1'd0;
    soclinux_sdram_master_p2_address <= 14'd0;
    soclinux_sdram_master_p2_bank <= 3'd0;
    soclinux_sdram_ext_dfi_p0_rddata <= 128'd0;
    soclinux_sdram_ext_dfi_p0_rddata_valid <= 1'd0;
    soclinux_sdram_master_p2_ras_n <= 1'd1;
    if (soclinux_sdram_sel) begin
        if (soclinux_sdram_ext_dfi_sel) begin
            soclinux_sdram_master_p0_address <= soclinux_sdram_ext_dfi_p0_address;
            soclinux_sdram_master_p0_bank <= soclinux_sdram_ext_dfi_p0_bank;
            soclinux_sdram_master_p0_cas_n <= soclinux_sdram_ext_dfi_p0_cas_n;
            soclinux_sdram_master_p0_cs_n <= soclinux_sdram_ext_dfi_p0_cs_n;
            soclinux_sdram_master_p0_ras_n <= soclinux_sdram_ext_dfi_p0_ras_n;
            soclinux_sdram_master_p0_we_n <= soclinux_sdram_ext_dfi_p0_we_n;
            soclinux_sdram_master_p0_cke <= soclinux_sdram_ext_dfi_p0_cke;
            soclinux_sdram_master_p0_odt <= soclinux_sdram_ext_dfi_p0_odt;
            soclinux_sdram_master_p0_reset_n <= soclinux_sdram_ext_dfi_p0_reset_n;
            soclinux_sdram_master_p0_act_n <= soclinux_sdram_ext_dfi_p0_act_n;
            soclinux_sdram_master_p0_wrdata <= soclinux_sdram_ext_dfi_p0_wrdata;
            soclinux_sdram_master_p0_wrdata_en <= soclinux_sdram_ext_dfi_p0_wrdata_en;
            soclinux_sdram_master_p0_wrdata_mask <= soclinux_sdram_ext_dfi_p0_wrdata_mask;
            soclinux_sdram_master_p0_rddata_en <= soclinux_sdram_ext_dfi_p0_rddata_en;
            soclinux_sdram_ext_dfi_p0_rddata <= soclinux_sdram_master_p0_rddata;
            soclinux_sdram_ext_dfi_p0_rddata_valid <= soclinux_sdram_master_p0_rddata_valid;
            soclinux_sdram_master_p1_address <= soclinux_sdram_ext_dfi_p1_address;
            soclinux_sdram_master_p1_bank <= soclinux_sdram_ext_dfi_p1_bank;
            soclinux_sdram_master_p1_cas_n <= soclinux_sdram_ext_dfi_p1_cas_n;
            soclinux_sdram_master_p1_cs_n <= soclinux_sdram_ext_dfi_p1_cs_n;
            soclinux_sdram_master_p1_ras_n <= soclinux_sdram_ext_dfi_p1_ras_n;
            soclinux_sdram_master_p1_we_n <= soclinux_sdram_ext_dfi_p1_we_n;
            soclinux_sdram_master_p1_cke <= soclinux_sdram_ext_dfi_p1_cke;
            soclinux_sdram_master_p1_odt <= soclinux_sdram_ext_dfi_p1_odt;
            soclinux_sdram_master_p1_reset_n <= soclinux_sdram_ext_dfi_p1_reset_n;
            soclinux_sdram_master_p1_act_n <= soclinux_sdram_ext_dfi_p1_act_n;
            soclinux_sdram_master_p1_wrdata <= soclinux_sdram_ext_dfi_p1_wrdata;
            soclinux_sdram_master_p1_wrdata_en <= soclinux_sdram_ext_dfi_p1_wrdata_en;
            soclinux_sdram_master_p1_wrdata_mask <= soclinux_sdram_ext_dfi_p1_wrdata_mask;
            soclinux_sdram_master_p1_rddata_en <= soclinux_sdram_ext_dfi_p1_rddata_en;
            soclinux_sdram_ext_dfi_p1_rddata <= soclinux_sdram_master_p1_rddata;
            soclinux_sdram_ext_dfi_p1_rddata_valid <= soclinux_sdram_master_p1_rddata_valid;
            soclinux_sdram_master_p2_address <= soclinux_sdram_ext_dfi_p2_address;
            soclinux_sdram_master_p2_bank <= soclinux_sdram_ext_dfi_p2_bank;
            soclinux_sdram_master_p2_cas_n <= soclinux_sdram_ext_dfi_p2_cas_n;
            soclinux_sdram_master_p2_cs_n <= soclinux_sdram_ext_dfi_p2_cs_n;
            soclinux_sdram_master_p2_ras_n <= soclinux_sdram_ext_dfi_p2_ras_n;
            soclinux_sdram_master_p2_we_n <= soclinux_sdram_ext_dfi_p2_we_n;
            soclinux_sdram_master_p2_cke <= soclinux_sdram_ext_dfi_p2_cke;
            soclinux_sdram_master_p2_odt <= soclinux_sdram_ext_dfi_p2_odt;
            soclinux_sdram_master_p2_reset_n <= soclinux_sdram_ext_dfi_p2_reset_n;
            soclinux_sdram_master_p2_act_n <= soclinux_sdram_ext_dfi_p2_act_n;
            soclinux_sdram_master_p2_wrdata <= soclinux_sdram_ext_dfi_p2_wrdata;
            soclinux_sdram_master_p2_wrdata_en <= soclinux_sdram_ext_dfi_p2_wrdata_en;
            soclinux_sdram_master_p2_wrdata_mask <= soclinux_sdram_ext_dfi_p2_wrdata_mask;
            soclinux_sdram_master_p2_rddata_en <= soclinux_sdram_ext_dfi_p2_rddata_en;
            soclinux_sdram_ext_dfi_p2_rddata <= soclinux_sdram_master_p2_rddata;
            soclinux_sdram_ext_dfi_p2_rddata_valid <= soclinux_sdram_master_p2_rddata_valid;
            soclinux_sdram_master_p3_address <= soclinux_sdram_ext_dfi_p3_address;
            soclinux_sdram_master_p3_bank <= soclinux_sdram_ext_dfi_p3_bank;
            soclinux_sdram_master_p3_cas_n <= soclinux_sdram_ext_dfi_p3_cas_n;
            soclinux_sdram_master_p3_cs_n <= soclinux_sdram_ext_dfi_p3_cs_n;
            soclinux_sdram_master_p3_ras_n <= soclinux_sdram_ext_dfi_p3_ras_n;
            soclinux_sdram_master_p3_we_n <= soclinux_sdram_ext_dfi_p3_we_n;
            soclinux_sdram_master_p3_cke <= soclinux_sdram_ext_dfi_p3_cke;
            soclinux_sdram_master_p3_odt <= soclinux_sdram_ext_dfi_p3_odt;
            soclinux_sdram_master_p3_reset_n <= soclinux_sdram_ext_dfi_p3_reset_n;
            soclinux_sdram_master_p3_act_n <= soclinux_sdram_ext_dfi_p3_act_n;
            soclinux_sdram_master_p3_wrdata <= soclinux_sdram_ext_dfi_p3_wrdata;
            soclinux_sdram_master_p3_wrdata_en <= soclinux_sdram_ext_dfi_p3_wrdata_en;
            soclinux_sdram_master_p3_wrdata_mask <= soclinux_sdram_ext_dfi_p3_wrdata_mask;
            soclinux_sdram_master_p3_rddata_en <= soclinux_sdram_ext_dfi_p3_rddata_en;
            soclinux_sdram_ext_dfi_p3_rddata <= soclinux_sdram_master_p3_rddata;
            soclinux_sdram_ext_dfi_p3_rddata_valid <= soclinux_sdram_master_p3_rddata_valid;
        end else begin
            soclinux_sdram_master_p0_address <= soclinux_sdram_slave_p0_address;
            soclinux_sdram_master_p0_bank <= soclinux_sdram_slave_p0_bank;
            soclinux_sdram_master_p0_cas_n <= soclinux_sdram_slave_p0_cas_n;
            soclinux_sdram_master_p0_cs_n <= soclinux_sdram_slave_p0_cs_n;
            soclinux_sdram_master_p0_ras_n <= soclinux_sdram_slave_p0_ras_n;
            soclinux_sdram_master_p0_we_n <= soclinux_sdram_slave_p0_we_n;
            soclinux_sdram_master_p0_cke <= soclinux_sdram_slave_p0_cke;
            soclinux_sdram_master_p0_odt <= soclinux_sdram_slave_p0_odt;
            soclinux_sdram_master_p0_reset_n <= soclinux_sdram_slave_p0_reset_n;
            soclinux_sdram_master_p0_act_n <= soclinux_sdram_slave_p0_act_n;
            soclinux_sdram_master_p0_wrdata <= soclinux_sdram_slave_p0_wrdata;
            soclinux_sdram_master_p0_wrdata_en <= soclinux_sdram_slave_p0_wrdata_en;
            soclinux_sdram_master_p0_wrdata_mask <= soclinux_sdram_slave_p0_wrdata_mask;
            soclinux_sdram_master_p0_rddata_en <= soclinux_sdram_slave_p0_rddata_en;
            soclinux_sdram_slave_p0_rddata <= soclinux_sdram_master_p0_rddata;
            soclinux_sdram_slave_p0_rddata_valid <= soclinux_sdram_master_p0_rddata_valid;
            soclinux_sdram_master_p1_address <= soclinux_sdram_slave_p1_address;
            soclinux_sdram_master_p1_bank <= soclinux_sdram_slave_p1_bank;
            soclinux_sdram_master_p1_cas_n <= soclinux_sdram_slave_p1_cas_n;
            soclinux_sdram_master_p1_cs_n <= soclinux_sdram_slave_p1_cs_n;
            soclinux_sdram_master_p1_ras_n <= soclinux_sdram_slave_p1_ras_n;
            soclinux_sdram_master_p1_we_n <= soclinux_sdram_slave_p1_we_n;
            soclinux_sdram_master_p1_cke <= soclinux_sdram_slave_p1_cke;
            soclinux_sdram_master_p1_odt <= soclinux_sdram_slave_p1_odt;
            soclinux_sdram_master_p1_reset_n <= soclinux_sdram_slave_p1_reset_n;
            soclinux_sdram_master_p1_act_n <= soclinux_sdram_slave_p1_act_n;
            soclinux_sdram_master_p1_wrdata <= soclinux_sdram_slave_p1_wrdata;
            soclinux_sdram_master_p1_wrdata_en <= soclinux_sdram_slave_p1_wrdata_en;
            soclinux_sdram_master_p1_wrdata_mask <= soclinux_sdram_slave_p1_wrdata_mask;
            soclinux_sdram_master_p1_rddata_en <= soclinux_sdram_slave_p1_rddata_en;
            soclinux_sdram_slave_p1_rddata <= soclinux_sdram_master_p1_rddata;
            soclinux_sdram_slave_p1_rddata_valid <= soclinux_sdram_master_p1_rddata_valid;
            soclinux_sdram_master_p2_address <= soclinux_sdram_slave_p2_address;
            soclinux_sdram_master_p2_bank <= soclinux_sdram_slave_p2_bank;
            soclinux_sdram_master_p2_cas_n <= soclinux_sdram_slave_p2_cas_n;
            soclinux_sdram_master_p2_cs_n <= soclinux_sdram_slave_p2_cs_n;
            soclinux_sdram_master_p2_ras_n <= soclinux_sdram_slave_p2_ras_n;
            soclinux_sdram_master_p2_we_n <= soclinux_sdram_slave_p2_we_n;
            soclinux_sdram_master_p2_cke <= soclinux_sdram_slave_p2_cke;
            soclinux_sdram_master_p2_odt <= soclinux_sdram_slave_p2_odt;
            soclinux_sdram_master_p2_reset_n <= soclinux_sdram_slave_p2_reset_n;
            soclinux_sdram_master_p2_act_n <= soclinux_sdram_slave_p2_act_n;
            soclinux_sdram_master_p2_wrdata <= soclinux_sdram_slave_p2_wrdata;
            soclinux_sdram_master_p2_wrdata_en <= soclinux_sdram_slave_p2_wrdata_en;
            soclinux_sdram_master_p2_wrdata_mask <= soclinux_sdram_slave_p2_wrdata_mask;
            soclinux_sdram_master_p2_rddata_en <= soclinux_sdram_slave_p2_rddata_en;
            soclinux_sdram_slave_p2_rddata <= soclinux_sdram_master_p2_rddata;
            soclinux_sdram_slave_p2_rddata_valid <= soclinux_sdram_master_p2_rddata_valid;
            soclinux_sdram_master_p3_address <= soclinux_sdram_slave_p3_address;
            soclinux_sdram_master_p3_bank <= soclinux_sdram_slave_p3_bank;
            soclinux_sdram_master_p3_cas_n <= soclinux_sdram_slave_p3_cas_n;
            soclinux_sdram_master_p3_cs_n <= soclinux_sdram_slave_p3_cs_n;
            soclinux_sdram_master_p3_ras_n <= soclinux_sdram_slave_p3_ras_n;
            soclinux_sdram_master_p3_we_n <= soclinux_sdram_slave_p3_we_n;
            soclinux_sdram_master_p3_cke <= soclinux_sdram_slave_p3_cke;
            soclinux_sdram_master_p3_odt <= soclinux_sdram_slave_p3_odt;
            soclinux_sdram_master_p3_reset_n <= soclinux_sdram_slave_p3_reset_n;
            soclinux_sdram_master_p3_act_n <= soclinux_sdram_slave_p3_act_n;
            soclinux_sdram_master_p3_wrdata <= soclinux_sdram_slave_p3_wrdata;
            soclinux_sdram_master_p3_wrdata_en <= soclinux_sdram_slave_p3_wrdata_en;
            soclinux_sdram_master_p3_wrdata_mask <= soclinux_sdram_slave_p3_wrdata_mask;
            soclinux_sdram_master_p3_rddata_en <= soclinux_sdram_slave_p3_rddata_en;
            soclinux_sdram_slave_p3_rddata <= soclinux_sdram_master_p3_rddata;
            soclinux_sdram_slave_p3_rddata_valid <= soclinux_sdram_master_p3_rddata_valid;
        end
    end else begin
        soclinux_sdram_master_p0_address <= soclinux_sdram_csr_dfi_p0_address;
        soclinux_sdram_master_p0_bank <= soclinux_sdram_csr_dfi_p0_bank;
        soclinux_sdram_master_p0_cas_n <= soclinux_sdram_csr_dfi_p0_cas_n;
        soclinux_sdram_master_p0_cs_n <= soclinux_sdram_csr_dfi_p0_cs_n;
        soclinux_sdram_master_p0_ras_n <= soclinux_sdram_csr_dfi_p0_ras_n;
        soclinux_sdram_master_p0_we_n <= soclinux_sdram_csr_dfi_p0_we_n;
        soclinux_sdram_master_p0_cke <= soclinux_sdram_csr_dfi_p0_cke;
        soclinux_sdram_master_p0_odt <= soclinux_sdram_csr_dfi_p0_odt;
        soclinux_sdram_master_p0_reset_n <= soclinux_sdram_csr_dfi_p0_reset_n;
        soclinux_sdram_master_p0_act_n <= soclinux_sdram_csr_dfi_p0_act_n;
        soclinux_sdram_master_p0_wrdata <= soclinux_sdram_csr_dfi_p0_wrdata;
        soclinux_sdram_master_p0_wrdata_en <= soclinux_sdram_csr_dfi_p0_wrdata_en;
        soclinux_sdram_master_p0_wrdata_mask <= soclinux_sdram_csr_dfi_p0_wrdata_mask;
        soclinux_sdram_master_p0_rddata_en <= soclinux_sdram_csr_dfi_p0_rddata_en;
        soclinux_sdram_csr_dfi_p0_rddata <= soclinux_sdram_master_p0_rddata;
        soclinux_sdram_csr_dfi_p0_rddata_valid <= soclinux_sdram_master_p0_rddata_valid;
        soclinux_sdram_master_p1_address <= soclinux_sdram_csr_dfi_p1_address;
        soclinux_sdram_master_p1_bank <= soclinux_sdram_csr_dfi_p1_bank;
        soclinux_sdram_master_p1_cas_n <= soclinux_sdram_csr_dfi_p1_cas_n;
        soclinux_sdram_master_p1_cs_n <= soclinux_sdram_csr_dfi_p1_cs_n;
        soclinux_sdram_master_p1_ras_n <= soclinux_sdram_csr_dfi_p1_ras_n;
        soclinux_sdram_master_p1_we_n <= soclinux_sdram_csr_dfi_p1_we_n;
        soclinux_sdram_master_p1_cke <= soclinux_sdram_csr_dfi_p1_cke;
        soclinux_sdram_master_p1_odt <= soclinux_sdram_csr_dfi_p1_odt;
        soclinux_sdram_master_p1_reset_n <= soclinux_sdram_csr_dfi_p1_reset_n;
        soclinux_sdram_master_p1_act_n <= soclinux_sdram_csr_dfi_p1_act_n;
        soclinux_sdram_master_p1_wrdata <= soclinux_sdram_csr_dfi_p1_wrdata;
        soclinux_sdram_master_p1_wrdata_en <= soclinux_sdram_csr_dfi_p1_wrdata_en;
        soclinux_sdram_master_p1_wrdata_mask <= soclinux_sdram_csr_dfi_p1_wrdata_mask;
        soclinux_sdram_master_p1_rddata_en <= soclinux_sdram_csr_dfi_p1_rddata_en;
        soclinux_sdram_csr_dfi_p1_rddata <= soclinux_sdram_master_p1_rddata;
        soclinux_sdram_csr_dfi_p1_rddata_valid <= soclinux_sdram_master_p1_rddata_valid;
        soclinux_sdram_master_p2_address <= soclinux_sdram_csr_dfi_p2_address;
        soclinux_sdram_master_p2_bank <= soclinux_sdram_csr_dfi_p2_bank;
        soclinux_sdram_master_p2_cas_n <= soclinux_sdram_csr_dfi_p2_cas_n;
        soclinux_sdram_master_p2_cs_n <= soclinux_sdram_csr_dfi_p2_cs_n;
        soclinux_sdram_master_p2_ras_n <= soclinux_sdram_csr_dfi_p2_ras_n;
        soclinux_sdram_master_p2_we_n <= soclinux_sdram_csr_dfi_p2_we_n;
        soclinux_sdram_master_p2_cke <= soclinux_sdram_csr_dfi_p2_cke;
        soclinux_sdram_master_p2_odt <= soclinux_sdram_csr_dfi_p2_odt;
        soclinux_sdram_master_p2_reset_n <= soclinux_sdram_csr_dfi_p2_reset_n;
        soclinux_sdram_master_p2_act_n <= soclinux_sdram_csr_dfi_p2_act_n;
        soclinux_sdram_master_p2_wrdata <= soclinux_sdram_csr_dfi_p2_wrdata;
        soclinux_sdram_master_p2_wrdata_en <= soclinux_sdram_csr_dfi_p2_wrdata_en;
        soclinux_sdram_master_p2_wrdata_mask <= soclinux_sdram_csr_dfi_p2_wrdata_mask;
        soclinux_sdram_master_p2_rddata_en <= soclinux_sdram_csr_dfi_p2_rddata_en;
        soclinux_sdram_csr_dfi_p2_rddata <= soclinux_sdram_master_p2_rddata;
        soclinux_sdram_csr_dfi_p2_rddata_valid <= soclinux_sdram_master_p2_rddata_valid;
        soclinux_sdram_master_p3_address <= soclinux_sdram_csr_dfi_p3_address;
        soclinux_sdram_master_p3_bank <= soclinux_sdram_csr_dfi_p3_bank;
        soclinux_sdram_master_p3_cas_n <= soclinux_sdram_csr_dfi_p3_cas_n;
        soclinux_sdram_master_p3_cs_n <= soclinux_sdram_csr_dfi_p3_cs_n;
        soclinux_sdram_master_p3_ras_n <= soclinux_sdram_csr_dfi_p3_ras_n;
        soclinux_sdram_master_p3_we_n <= soclinux_sdram_csr_dfi_p3_we_n;
        soclinux_sdram_master_p3_cke <= soclinux_sdram_csr_dfi_p3_cke;
        soclinux_sdram_master_p3_odt <= soclinux_sdram_csr_dfi_p3_odt;
        soclinux_sdram_master_p3_reset_n <= soclinux_sdram_csr_dfi_p3_reset_n;
        soclinux_sdram_master_p3_act_n <= soclinux_sdram_csr_dfi_p3_act_n;
        soclinux_sdram_master_p3_wrdata <= soclinux_sdram_csr_dfi_p3_wrdata;
        soclinux_sdram_master_p3_wrdata_en <= soclinux_sdram_csr_dfi_p3_wrdata_en;
        soclinux_sdram_master_p3_wrdata_mask <= soclinux_sdram_csr_dfi_p3_wrdata_mask;
        soclinux_sdram_master_p3_rddata_en <= soclinux_sdram_csr_dfi_p3_rddata_en;
        soclinux_sdram_csr_dfi_p3_rddata <= soclinux_sdram_master_p3_rddata;
        soclinux_sdram_csr_dfi_p3_rddata_valid <= soclinux_sdram_master_p3_rddata_valid;
    end
end
assign soclinux_sdram_csr_dfi_p0_cke = soclinux_sdram_cke;
assign soclinux_sdram_csr_dfi_p1_cke = soclinux_sdram_cke;
assign soclinux_sdram_csr_dfi_p2_cke = soclinux_sdram_cke;
assign soclinux_sdram_csr_dfi_p3_cke = soclinux_sdram_cke;
assign soclinux_sdram_csr_dfi_p0_odt = soclinux_sdram_odt;
assign soclinux_sdram_csr_dfi_p1_odt = soclinux_sdram_odt;
assign soclinux_sdram_csr_dfi_p2_odt = soclinux_sdram_odt;
assign soclinux_sdram_csr_dfi_p3_odt = soclinux_sdram_odt;
assign soclinux_sdram_csr_dfi_p0_reset_n = soclinux_sdram_reset_n;
assign soclinux_sdram_csr_dfi_p1_reset_n = soclinux_sdram_reset_n;
assign soclinux_sdram_csr_dfi_p2_reset_n = soclinux_sdram_reset_n;
assign soclinux_sdram_csr_dfi_p3_reset_n = soclinux_sdram_reset_n;
always @(*) begin
    soclinux_sdram_csr_dfi_p0_cs_n <= 1'd1;
    soclinux_sdram_csr_dfi_p0_ras_n <= 1'd1;
    soclinux_sdram_csr_dfi_p0_we_n <= 1'd1;
    soclinux_sdram_csr_dfi_p0_cas_n <= 1'd1;
    if (soclinux_sdram_phaseinjector0_command_issue_re) begin
        soclinux_sdram_csr_dfi_p0_cs_n <= {1{(~soclinux_sdram_phaseinjector0_csrfield_cs)}};
        soclinux_sdram_csr_dfi_p0_we_n <= (~soclinux_sdram_phaseinjector0_csrfield_we);
        soclinux_sdram_csr_dfi_p0_cas_n <= (~soclinux_sdram_phaseinjector0_csrfield_cas);
        soclinux_sdram_csr_dfi_p0_ras_n <= (~soclinux_sdram_phaseinjector0_csrfield_ras);
    end else begin
        soclinux_sdram_csr_dfi_p0_cs_n <= {1{1'd1}};
        soclinux_sdram_csr_dfi_p0_we_n <= 1'd1;
        soclinux_sdram_csr_dfi_p0_cas_n <= 1'd1;
        soclinux_sdram_csr_dfi_p0_ras_n <= 1'd1;
    end
end
assign soclinux_sdram_csr_dfi_p0_address = soclinux_sdram_phaseinjector0_address_storage;
assign soclinux_sdram_csr_dfi_p0_bank = soclinux_sdram_phaseinjector0_baddress_storage;
assign soclinux_sdram_csr_dfi_p0_wrdata_en = (soclinux_sdram_phaseinjector0_command_issue_re & soclinux_sdram_phaseinjector0_csrfield_wren);
assign soclinux_sdram_csr_dfi_p0_rddata_en = (soclinux_sdram_phaseinjector0_command_issue_re & soclinux_sdram_phaseinjector0_csrfield_rden);
assign soclinux_sdram_csr_dfi_p0_wrdata = soclinux_sdram_phaseinjector0_wrdata_storage;
assign soclinux_sdram_csr_dfi_p0_wrdata_mask = 1'd0;
always @(*) begin
    soclinux_sdram_csr_dfi_p1_cs_n <= 1'd1;
    soclinux_sdram_csr_dfi_p1_ras_n <= 1'd1;
    soclinux_sdram_csr_dfi_p1_we_n <= 1'd1;
    soclinux_sdram_csr_dfi_p1_cas_n <= 1'd1;
    if (soclinux_sdram_phaseinjector1_command_issue_re) begin
        soclinux_sdram_csr_dfi_p1_cs_n <= {1{(~soclinux_sdram_phaseinjector1_csrfield_cs)}};
        soclinux_sdram_csr_dfi_p1_we_n <= (~soclinux_sdram_phaseinjector1_csrfield_we);
        soclinux_sdram_csr_dfi_p1_cas_n <= (~soclinux_sdram_phaseinjector1_csrfield_cas);
        soclinux_sdram_csr_dfi_p1_ras_n <= (~soclinux_sdram_phaseinjector1_csrfield_ras);
    end else begin
        soclinux_sdram_csr_dfi_p1_cs_n <= {1{1'd1}};
        soclinux_sdram_csr_dfi_p1_we_n <= 1'd1;
        soclinux_sdram_csr_dfi_p1_cas_n <= 1'd1;
        soclinux_sdram_csr_dfi_p1_ras_n <= 1'd1;
    end
end
assign soclinux_sdram_csr_dfi_p1_address = soclinux_sdram_phaseinjector1_address_storage;
assign soclinux_sdram_csr_dfi_p1_bank = soclinux_sdram_phaseinjector1_baddress_storage;
assign soclinux_sdram_csr_dfi_p1_wrdata_en = (soclinux_sdram_phaseinjector1_command_issue_re & soclinux_sdram_phaseinjector1_csrfield_wren);
assign soclinux_sdram_csr_dfi_p1_rddata_en = (soclinux_sdram_phaseinjector1_command_issue_re & soclinux_sdram_phaseinjector1_csrfield_rden);
assign soclinux_sdram_csr_dfi_p1_wrdata = soclinux_sdram_phaseinjector1_wrdata_storage;
assign soclinux_sdram_csr_dfi_p1_wrdata_mask = 1'd0;
always @(*) begin
    soclinux_sdram_csr_dfi_p2_cs_n <= 1'd1;
    soclinux_sdram_csr_dfi_p2_ras_n <= 1'd1;
    soclinux_sdram_csr_dfi_p2_we_n <= 1'd1;
    soclinux_sdram_csr_dfi_p2_cas_n <= 1'd1;
    if (soclinux_sdram_phaseinjector2_command_issue_re) begin
        soclinux_sdram_csr_dfi_p2_cs_n <= {1{(~soclinux_sdram_phaseinjector2_csrfield_cs)}};
        soclinux_sdram_csr_dfi_p2_we_n <= (~soclinux_sdram_phaseinjector2_csrfield_we);
        soclinux_sdram_csr_dfi_p2_cas_n <= (~soclinux_sdram_phaseinjector2_csrfield_cas);
        soclinux_sdram_csr_dfi_p2_ras_n <= (~soclinux_sdram_phaseinjector2_csrfield_ras);
    end else begin
        soclinux_sdram_csr_dfi_p2_cs_n <= {1{1'd1}};
        soclinux_sdram_csr_dfi_p2_we_n <= 1'd1;
        soclinux_sdram_csr_dfi_p2_cas_n <= 1'd1;
        soclinux_sdram_csr_dfi_p2_ras_n <= 1'd1;
    end
end
assign soclinux_sdram_csr_dfi_p2_address = soclinux_sdram_phaseinjector2_address_storage;
assign soclinux_sdram_csr_dfi_p2_bank = soclinux_sdram_phaseinjector2_baddress_storage;
assign soclinux_sdram_csr_dfi_p2_wrdata_en = (soclinux_sdram_phaseinjector2_command_issue_re & soclinux_sdram_phaseinjector2_csrfield_wren);
assign soclinux_sdram_csr_dfi_p2_rddata_en = (soclinux_sdram_phaseinjector2_command_issue_re & soclinux_sdram_phaseinjector2_csrfield_rden);
assign soclinux_sdram_csr_dfi_p2_wrdata = soclinux_sdram_phaseinjector2_wrdata_storage;
assign soclinux_sdram_csr_dfi_p2_wrdata_mask = 1'd0;
always @(*) begin
    soclinux_sdram_csr_dfi_p3_cs_n <= 1'd1;
    soclinux_sdram_csr_dfi_p3_ras_n <= 1'd1;
    soclinux_sdram_csr_dfi_p3_we_n <= 1'd1;
    soclinux_sdram_csr_dfi_p3_cas_n <= 1'd1;
    if (soclinux_sdram_phaseinjector3_command_issue_re) begin
        soclinux_sdram_csr_dfi_p3_cs_n <= {1{(~soclinux_sdram_phaseinjector3_csrfield_cs)}};
        soclinux_sdram_csr_dfi_p3_we_n <= (~soclinux_sdram_phaseinjector3_csrfield_we);
        soclinux_sdram_csr_dfi_p3_cas_n <= (~soclinux_sdram_phaseinjector3_csrfield_cas);
        soclinux_sdram_csr_dfi_p3_ras_n <= (~soclinux_sdram_phaseinjector3_csrfield_ras);
    end else begin
        soclinux_sdram_csr_dfi_p3_cs_n <= {1{1'd1}};
        soclinux_sdram_csr_dfi_p3_we_n <= 1'd1;
        soclinux_sdram_csr_dfi_p3_cas_n <= 1'd1;
        soclinux_sdram_csr_dfi_p3_ras_n <= 1'd1;
    end
end
assign soclinux_sdram_csr_dfi_p3_address = soclinux_sdram_phaseinjector3_address_storage;
assign soclinux_sdram_csr_dfi_p3_bank = soclinux_sdram_phaseinjector3_baddress_storage;
assign soclinux_sdram_csr_dfi_p3_wrdata_en = (soclinux_sdram_phaseinjector3_command_issue_re & soclinux_sdram_phaseinjector3_csrfield_wren);
assign soclinux_sdram_csr_dfi_p3_rddata_en = (soclinux_sdram_phaseinjector3_command_issue_re & soclinux_sdram_phaseinjector3_csrfield_rden);
assign soclinux_sdram_csr_dfi_p3_wrdata = soclinux_sdram_phaseinjector3_wrdata_storage;
assign soclinux_sdram_csr_dfi_p3_wrdata_mask = 1'd0;
assign soclinux_sdram_bankmachine0_req_valid = soclinux_sdram_interface_bank0_valid;
assign soclinux_sdram_interface_bank0_ready = soclinux_sdram_bankmachine0_req_ready;
assign soclinux_sdram_bankmachine0_req_we = soclinux_sdram_interface_bank0_we;
assign soclinux_sdram_bankmachine0_req_addr = soclinux_sdram_interface_bank0_addr;
assign soclinux_sdram_interface_bank0_lock = soclinux_sdram_bankmachine0_req_lock;
assign soclinux_sdram_interface_bank0_wdata_ready = soclinux_sdram_bankmachine0_req_wdata_ready;
assign soclinux_sdram_interface_bank0_rdata_valid = soclinux_sdram_bankmachine0_req_rdata_valid;
assign soclinux_sdram_bankmachine1_req_valid = soclinux_sdram_interface_bank1_valid;
assign soclinux_sdram_interface_bank1_ready = soclinux_sdram_bankmachine1_req_ready;
assign soclinux_sdram_bankmachine1_req_we = soclinux_sdram_interface_bank1_we;
assign soclinux_sdram_bankmachine1_req_addr = soclinux_sdram_interface_bank1_addr;
assign soclinux_sdram_interface_bank1_lock = soclinux_sdram_bankmachine1_req_lock;
assign soclinux_sdram_interface_bank1_wdata_ready = soclinux_sdram_bankmachine1_req_wdata_ready;
assign soclinux_sdram_interface_bank1_rdata_valid = soclinux_sdram_bankmachine1_req_rdata_valid;
assign soclinux_sdram_bankmachine2_req_valid = soclinux_sdram_interface_bank2_valid;
assign soclinux_sdram_interface_bank2_ready = soclinux_sdram_bankmachine2_req_ready;
assign soclinux_sdram_bankmachine2_req_we = soclinux_sdram_interface_bank2_we;
assign soclinux_sdram_bankmachine2_req_addr = soclinux_sdram_interface_bank2_addr;
assign soclinux_sdram_interface_bank2_lock = soclinux_sdram_bankmachine2_req_lock;
assign soclinux_sdram_interface_bank2_wdata_ready = soclinux_sdram_bankmachine2_req_wdata_ready;
assign soclinux_sdram_interface_bank2_rdata_valid = soclinux_sdram_bankmachine2_req_rdata_valid;
assign soclinux_sdram_bankmachine3_req_valid = soclinux_sdram_interface_bank3_valid;
assign soclinux_sdram_interface_bank3_ready = soclinux_sdram_bankmachine3_req_ready;
assign soclinux_sdram_bankmachine3_req_we = soclinux_sdram_interface_bank3_we;
assign soclinux_sdram_bankmachine3_req_addr = soclinux_sdram_interface_bank3_addr;
assign soclinux_sdram_interface_bank3_lock = soclinux_sdram_bankmachine3_req_lock;
assign soclinux_sdram_interface_bank3_wdata_ready = soclinux_sdram_bankmachine3_req_wdata_ready;
assign soclinux_sdram_interface_bank3_rdata_valid = soclinux_sdram_bankmachine3_req_rdata_valid;
assign soclinux_sdram_bankmachine4_req_valid = soclinux_sdram_interface_bank4_valid;
assign soclinux_sdram_interface_bank4_ready = soclinux_sdram_bankmachine4_req_ready;
assign soclinux_sdram_bankmachine4_req_we = soclinux_sdram_interface_bank4_we;
assign soclinux_sdram_bankmachine4_req_addr = soclinux_sdram_interface_bank4_addr;
assign soclinux_sdram_interface_bank4_lock = soclinux_sdram_bankmachine4_req_lock;
assign soclinux_sdram_interface_bank4_wdata_ready = soclinux_sdram_bankmachine4_req_wdata_ready;
assign soclinux_sdram_interface_bank4_rdata_valid = soclinux_sdram_bankmachine4_req_rdata_valid;
assign soclinux_sdram_bankmachine5_req_valid = soclinux_sdram_interface_bank5_valid;
assign soclinux_sdram_interface_bank5_ready = soclinux_sdram_bankmachine5_req_ready;
assign soclinux_sdram_bankmachine5_req_we = soclinux_sdram_interface_bank5_we;
assign soclinux_sdram_bankmachine5_req_addr = soclinux_sdram_interface_bank5_addr;
assign soclinux_sdram_interface_bank5_lock = soclinux_sdram_bankmachine5_req_lock;
assign soclinux_sdram_interface_bank5_wdata_ready = soclinux_sdram_bankmachine5_req_wdata_ready;
assign soclinux_sdram_interface_bank5_rdata_valid = soclinux_sdram_bankmachine5_req_rdata_valid;
assign soclinux_sdram_bankmachine6_req_valid = soclinux_sdram_interface_bank6_valid;
assign soclinux_sdram_interface_bank6_ready = soclinux_sdram_bankmachine6_req_ready;
assign soclinux_sdram_bankmachine6_req_we = soclinux_sdram_interface_bank6_we;
assign soclinux_sdram_bankmachine6_req_addr = soclinux_sdram_interface_bank6_addr;
assign soclinux_sdram_interface_bank6_lock = soclinux_sdram_bankmachine6_req_lock;
assign soclinux_sdram_interface_bank6_wdata_ready = soclinux_sdram_bankmachine6_req_wdata_ready;
assign soclinux_sdram_interface_bank6_rdata_valid = soclinux_sdram_bankmachine6_req_rdata_valid;
assign soclinux_sdram_bankmachine7_req_valid = soclinux_sdram_interface_bank7_valid;
assign soclinux_sdram_interface_bank7_ready = soclinux_sdram_bankmachine7_req_ready;
assign soclinux_sdram_bankmachine7_req_we = soclinux_sdram_interface_bank7_we;
assign soclinux_sdram_bankmachine7_req_addr = soclinux_sdram_interface_bank7_addr;
assign soclinux_sdram_interface_bank7_lock = soclinux_sdram_bankmachine7_req_lock;
assign soclinux_sdram_interface_bank7_wdata_ready = soclinux_sdram_bankmachine7_req_wdata_ready;
assign soclinux_sdram_interface_bank7_rdata_valid = soclinux_sdram_bankmachine7_req_rdata_valid;
assign soclinux_sdram_timer_wait = (~soclinux_sdram_timer_done0);
assign soclinux_sdram_postponer_req_i = soclinux_sdram_timer_done0;
assign soclinux_sdram_wants_refresh = soclinux_sdram_postponer_req_o;
assign soclinux_sdram_wants_zqcs = soclinux_sdram_zqcs_timer_done0;
assign soclinux_sdram_zqcs_timer_wait = (~soclinux_sdram_zqcs_executer_done);
assign soclinux_sdram_timer_done1 = (soclinux_sdram_timer_count1 == 1'd0);
assign soclinux_sdram_timer_done0 = soclinux_sdram_timer_done1;
assign soclinux_sdram_timer_count0 = soclinux_sdram_timer_count1;
assign soclinux_sdram_sequencer_start1 = (soclinux_sdram_sequencer_start0 | (soclinux_sdram_sequencer_count != 1'd0));
assign soclinux_sdram_sequencer_done0 = (soclinux_sdram_sequencer_done1 & (soclinux_sdram_sequencer_count == 1'd0));
assign soclinux_sdram_zqcs_timer_done1 = (soclinux_sdram_zqcs_timer_count1 == 1'd0);
assign soclinux_sdram_zqcs_timer_done0 = soclinux_sdram_zqcs_timer_done1;
assign soclinux_sdram_zqcs_timer_count0 = soclinux_sdram_zqcs_timer_count1;
always @(*) begin
    soclinux_refresher_next_state <= 2'd0;
    soclinux_sdram_cmd_valid <= 1'd0;
    soclinux_sdram_zqcs_executer_start <= 1'd0;
    soclinux_sdram_cmd_last <= 1'd0;
    soclinux_sdram_sequencer_start0 <= 1'd0;
    soclinux_refresher_next_state <= soclinux_refresher_state;
    case (soclinux_refresher_state)
        1'd1: begin
            soclinux_sdram_cmd_valid <= 1'd1;
            if (soclinux_sdram_cmd_ready) begin
                soclinux_sdram_sequencer_start0 <= 1'd1;
                soclinux_refresher_next_state <= 2'd2;
            end
        end
        2'd2: begin
            soclinux_sdram_cmd_valid <= 1'd1;
            if (soclinux_sdram_sequencer_done0) begin
                if (soclinux_sdram_wants_zqcs) begin
                    soclinux_sdram_zqcs_executer_start <= 1'd1;
                    soclinux_refresher_next_state <= 2'd3;
                end else begin
                    soclinux_sdram_cmd_valid <= 1'd0;
                    soclinux_sdram_cmd_last <= 1'd1;
                    soclinux_refresher_next_state <= 1'd0;
                end
            end
        end
        2'd3: begin
            soclinux_sdram_cmd_valid <= 1'd1;
            if (soclinux_sdram_zqcs_executer_done) begin
                soclinux_sdram_cmd_valid <= 1'd0;
                soclinux_sdram_cmd_last <= 1'd1;
                soclinux_refresher_next_state <= 1'd0;
            end
        end
        default: begin
            if (1'd1) begin
                if (soclinux_sdram_wants_refresh) begin
                    soclinux_refresher_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign soclinux_sdram_bankmachine0_sink_valid = soclinux_sdram_bankmachine0_req_valid;
assign soclinux_sdram_bankmachine0_req_ready = soclinux_sdram_bankmachine0_sink_ready;
assign soclinux_sdram_bankmachine0_sink_payload_we = soclinux_sdram_bankmachine0_req_we;
assign soclinux_sdram_bankmachine0_sink_payload_addr = soclinux_sdram_bankmachine0_req_addr;
assign soclinux_sdram_bankmachine0_sink_sink_valid = soclinux_sdram_bankmachine0_source_valid;
assign soclinux_sdram_bankmachine0_source_ready = soclinux_sdram_bankmachine0_sink_sink_ready;
assign soclinux_sdram_bankmachine0_sink_sink_first = soclinux_sdram_bankmachine0_source_first;
assign soclinux_sdram_bankmachine0_sink_sink_last = soclinux_sdram_bankmachine0_source_last;
assign soclinux_sdram_bankmachine0_sink_sink_payload_we = soclinux_sdram_bankmachine0_source_payload_we;
assign soclinux_sdram_bankmachine0_sink_sink_payload_addr = soclinux_sdram_bankmachine0_source_payload_addr;
assign soclinux_sdram_bankmachine0_source_source_ready = (soclinux_sdram_bankmachine0_req_wdata_ready | soclinux_sdram_bankmachine0_req_rdata_valid);
assign soclinux_sdram_bankmachine0_req_lock = (soclinux_sdram_bankmachine0_source_valid | soclinux_sdram_bankmachine0_source_source_valid);
assign soclinux_sdram_bankmachine0_row_hit = (soclinux_sdram_bankmachine0_row == soclinux_sdram_bankmachine0_source_source_payload_addr[20:7]);
assign soclinux_sdram_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
    soclinux_sdram_bankmachine0_cmd_payload_a <= 14'd0;
    if (soclinux_sdram_bankmachine0_row_col_n_addr_sel) begin
        soclinux_sdram_bankmachine0_cmd_payload_a <= soclinux_sdram_bankmachine0_source_source_payload_addr[20:7];
    end else begin
        soclinux_sdram_bankmachine0_cmd_payload_a <= ((soclinux_sdram_bankmachine0_auto_precharge <<< 4'd10) | {soclinux_sdram_bankmachine0_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_sdram_bankmachine0_twtpcon_valid = ((soclinux_sdram_bankmachine0_cmd_valid & soclinux_sdram_bankmachine0_cmd_ready) & soclinux_sdram_bankmachine0_cmd_payload_is_write);
assign soclinux_sdram_bankmachine0_trccon_valid = ((soclinux_sdram_bankmachine0_cmd_valid & soclinux_sdram_bankmachine0_cmd_ready) & soclinux_sdram_bankmachine0_row_open);
assign soclinux_sdram_bankmachine0_trascon_valid = ((soclinux_sdram_bankmachine0_cmd_valid & soclinux_sdram_bankmachine0_cmd_ready) & soclinux_sdram_bankmachine0_row_open);
always @(*) begin
    soclinux_sdram_bankmachine0_auto_precharge <= 1'd0;
    if ((soclinux_sdram_bankmachine0_source_valid & soclinux_sdram_bankmachine0_source_source_valid)) begin
        if ((soclinux_sdram_bankmachine0_source_payload_addr[20:7] != soclinux_sdram_bankmachine0_source_source_payload_addr[20:7])) begin
            soclinux_sdram_bankmachine0_auto_precharge <= (soclinux_sdram_bankmachine0_row_close == 1'd0);
        end
    end
end
assign soclinux_sdram_bankmachine0_syncfifo0_din = {soclinux_sdram_bankmachine0_fifo_in_last, soclinux_sdram_bankmachine0_fifo_in_first, soclinux_sdram_bankmachine0_fifo_in_payload_addr, soclinux_sdram_bankmachine0_fifo_in_payload_we};
assign {soclinux_sdram_bankmachine0_fifo_out_last, soclinux_sdram_bankmachine0_fifo_out_first, soclinux_sdram_bankmachine0_fifo_out_payload_addr, soclinux_sdram_bankmachine0_fifo_out_payload_we} = soclinux_sdram_bankmachine0_syncfifo0_dout;
assign soclinux_sdram_bankmachine0_sink_ready = soclinux_sdram_bankmachine0_syncfifo0_writable;
assign soclinux_sdram_bankmachine0_syncfifo0_we = soclinux_sdram_bankmachine0_sink_valid;
assign soclinux_sdram_bankmachine0_fifo_in_first = soclinux_sdram_bankmachine0_sink_first;
assign soclinux_sdram_bankmachine0_fifo_in_last = soclinux_sdram_bankmachine0_sink_last;
assign soclinux_sdram_bankmachine0_fifo_in_payload_we = soclinux_sdram_bankmachine0_sink_payload_we;
assign soclinux_sdram_bankmachine0_fifo_in_payload_addr = soclinux_sdram_bankmachine0_sink_payload_addr;
assign soclinux_sdram_bankmachine0_source_valid = soclinux_sdram_bankmachine0_syncfifo0_readable;
assign soclinux_sdram_bankmachine0_source_first = soclinux_sdram_bankmachine0_fifo_out_first;
assign soclinux_sdram_bankmachine0_source_last = soclinux_sdram_bankmachine0_fifo_out_last;
assign soclinux_sdram_bankmachine0_source_payload_we = soclinux_sdram_bankmachine0_fifo_out_payload_we;
assign soclinux_sdram_bankmachine0_source_payload_addr = soclinux_sdram_bankmachine0_fifo_out_payload_addr;
assign soclinux_sdram_bankmachine0_syncfifo0_re = soclinux_sdram_bankmachine0_source_ready;
always @(*) begin
    soclinux_sdram_bankmachine0_wrport_adr <= 3'd0;
    if (soclinux_sdram_bankmachine0_replace) begin
        soclinux_sdram_bankmachine0_wrport_adr <= (soclinux_sdram_bankmachine0_produce - 1'd1);
    end else begin
        soclinux_sdram_bankmachine0_wrport_adr <= soclinux_sdram_bankmachine0_produce;
    end
end
assign soclinux_sdram_bankmachine0_wrport_dat_w = soclinux_sdram_bankmachine0_syncfifo0_din;
assign soclinux_sdram_bankmachine0_wrport_we = (soclinux_sdram_bankmachine0_syncfifo0_we & (soclinux_sdram_bankmachine0_syncfifo0_writable | soclinux_sdram_bankmachine0_replace));
assign soclinux_sdram_bankmachine0_do_read = (soclinux_sdram_bankmachine0_syncfifo0_readable & soclinux_sdram_bankmachine0_syncfifo0_re);
assign soclinux_sdram_bankmachine0_rdport_adr = soclinux_sdram_bankmachine0_consume;
assign soclinux_sdram_bankmachine0_syncfifo0_dout = soclinux_sdram_bankmachine0_rdport_dat_r;
assign soclinux_sdram_bankmachine0_syncfifo0_writable = (soclinux_sdram_bankmachine0_level != 4'd8);
assign soclinux_sdram_bankmachine0_syncfifo0_readable = (soclinux_sdram_bankmachine0_level != 1'd0);
assign soclinux_sdram_bankmachine0_pipe_valid_sink_ready = ((~soclinux_sdram_bankmachine0_pipe_valid_source_valid) | soclinux_sdram_bankmachine0_pipe_valid_source_ready);
assign soclinux_sdram_bankmachine0_pipe_valid_sink_valid = soclinux_sdram_bankmachine0_sink_sink_valid;
assign soclinux_sdram_bankmachine0_sink_sink_ready = soclinux_sdram_bankmachine0_pipe_valid_sink_ready;
assign soclinux_sdram_bankmachine0_pipe_valid_sink_first = soclinux_sdram_bankmachine0_sink_sink_first;
assign soclinux_sdram_bankmachine0_pipe_valid_sink_last = soclinux_sdram_bankmachine0_sink_sink_last;
assign soclinux_sdram_bankmachine0_pipe_valid_sink_payload_we = soclinux_sdram_bankmachine0_sink_sink_payload_we;
assign soclinux_sdram_bankmachine0_pipe_valid_sink_payload_addr = soclinux_sdram_bankmachine0_sink_sink_payload_addr;
assign soclinux_sdram_bankmachine0_source_source_valid = soclinux_sdram_bankmachine0_pipe_valid_source_valid;
assign soclinux_sdram_bankmachine0_pipe_valid_source_ready = soclinux_sdram_bankmachine0_source_source_ready;
assign soclinux_sdram_bankmachine0_source_source_first = soclinux_sdram_bankmachine0_pipe_valid_source_first;
assign soclinux_sdram_bankmachine0_source_source_last = soclinux_sdram_bankmachine0_pipe_valid_source_last;
assign soclinux_sdram_bankmachine0_source_source_payload_we = soclinux_sdram_bankmachine0_pipe_valid_source_payload_we;
assign soclinux_sdram_bankmachine0_source_source_payload_addr = soclinux_sdram_bankmachine0_pipe_valid_source_payload_addr;
always @(*) begin
    soclinux_bankmachine0_next_state <= 4'd0;
    soclinux_sdram_bankmachine0_cmd_payload_is_write <= 1'd0;
    soclinux_sdram_bankmachine0_req_wdata_ready <= 1'd0;
    soclinux_sdram_bankmachine0_req_rdata_valid <= 1'd0;
    soclinux_sdram_bankmachine0_refresh_gnt <= 1'd0;
    soclinux_sdram_bankmachine0_row_open <= 1'd0;
    soclinux_sdram_bankmachine0_cmd_valid <= 1'd0;
    soclinux_sdram_bankmachine0_row_close <= 1'd0;
    soclinux_sdram_bankmachine0_row_col_n_addr_sel <= 1'd0;
    soclinux_sdram_bankmachine0_cmd_payload_cas <= 1'd0;
    soclinux_sdram_bankmachine0_cmd_payload_ras <= 1'd0;
    soclinux_sdram_bankmachine0_cmd_payload_we <= 1'd0;
    soclinux_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd0;
    soclinux_sdram_bankmachine0_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine0_next_state <= soclinux_bankmachine0_state;
    case (soclinux_bankmachine0_state)
        1'd1: begin
            if ((soclinux_sdram_bankmachine0_twtpcon_ready & soclinux_sdram_bankmachine0_trascon_ready)) begin
                soclinux_sdram_bankmachine0_cmd_valid <= 1'd1;
                if (soclinux_sdram_bankmachine0_cmd_ready) begin
                    soclinux_bankmachine0_next_state <= 3'd5;
                end
                soclinux_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
                soclinux_sdram_bankmachine0_cmd_payload_we <= 1'd1;
                soclinux_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_sdram_bankmachine0_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_sdram_bankmachine0_twtpcon_ready & soclinux_sdram_bankmachine0_trascon_ready)) begin
                soclinux_bankmachine0_next_state <= 3'd5;
            end
            soclinux_sdram_bankmachine0_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_sdram_bankmachine0_trccon_ready) begin
                soclinux_sdram_bankmachine0_row_col_n_addr_sel <= 1'd1;
                soclinux_sdram_bankmachine0_row_open <= 1'd1;
                soclinux_sdram_bankmachine0_cmd_valid <= 1'd1;
                soclinux_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_sdram_bankmachine0_cmd_ready) begin
                    soclinux_bankmachine0_next_state <= 3'd7;
                end
                soclinux_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_sdram_bankmachine0_twtpcon_ready) begin
                soclinux_sdram_bankmachine0_refresh_gnt <= 1'd1;
            end
            soclinux_sdram_bankmachine0_row_close <= 1'd1;
            soclinux_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_sdram_bankmachine0_refresh_req)) begin
                soclinux_bankmachine0_next_state <= 1'd0;
            end
        end
        3'd5: begin
            soclinux_bankmachine0_next_state <= 3'd6;
        end
        3'd6: begin
            soclinux_bankmachine0_next_state <= 2'd3;
        end
        3'd7: begin
            soclinux_bankmachine0_next_state <= 4'd8;
        end
        4'd8: begin
            soclinux_bankmachine0_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_sdram_bankmachine0_refresh_req) begin
                soclinux_bankmachine0_next_state <= 3'd4;
            end else begin
                if (soclinux_sdram_bankmachine0_source_source_valid) begin
                    if (soclinux_sdram_bankmachine0_row_opened) begin
                        if (soclinux_sdram_bankmachine0_row_hit) begin
                            soclinux_sdram_bankmachine0_cmd_valid <= 1'd1;
                            if (soclinux_sdram_bankmachine0_source_source_payload_we) begin
                                soclinux_sdram_bankmachine0_req_wdata_ready <= soclinux_sdram_bankmachine0_cmd_ready;
                                soclinux_sdram_bankmachine0_cmd_payload_is_write <= 1'd1;
                                soclinux_sdram_bankmachine0_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_sdram_bankmachine0_req_rdata_valid <= soclinux_sdram_bankmachine0_cmd_ready;
                                soclinux_sdram_bankmachine0_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_sdram_bankmachine0_cmd_payload_cas <= 1'd1;
                            if ((soclinux_sdram_bankmachine0_cmd_ready & soclinux_sdram_bankmachine0_auto_precharge)) begin
                                soclinux_bankmachine0_next_state <= 2'd2;
                            end
                        end else begin
                            soclinux_bankmachine0_next_state <= 1'd1;
                        end
                    end else begin
                        soclinux_bankmachine0_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_sdram_bankmachine1_sink_valid = soclinux_sdram_bankmachine1_req_valid;
assign soclinux_sdram_bankmachine1_req_ready = soclinux_sdram_bankmachine1_sink_ready;
assign soclinux_sdram_bankmachine1_sink_payload_we = soclinux_sdram_bankmachine1_req_we;
assign soclinux_sdram_bankmachine1_sink_payload_addr = soclinux_sdram_bankmachine1_req_addr;
assign soclinux_sdram_bankmachine1_sink_sink_valid = soclinux_sdram_bankmachine1_source_valid;
assign soclinux_sdram_bankmachine1_source_ready = soclinux_sdram_bankmachine1_sink_sink_ready;
assign soclinux_sdram_bankmachine1_sink_sink_first = soclinux_sdram_bankmachine1_source_first;
assign soclinux_sdram_bankmachine1_sink_sink_last = soclinux_sdram_bankmachine1_source_last;
assign soclinux_sdram_bankmachine1_sink_sink_payload_we = soclinux_sdram_bankmachine1_source_payload_we;
assign soclinux_sdram_bankmachine1_sink_sink_payload_addr = soclinux_sdram_bankmachine1_source_payload_addr;
assign soclinux_sdram_bankmachine1_source_source_ready = (soclinux_sdram_bankmachine1_req_wdata_ready | soclinux_sdram_bankmachine1_req_rdata_valid);
assign soclinux_sdram_bankmachine1_req_lock = (soclinux_sdram_bankmachine1_source_valid | soclinux_sdram_bankmachine1_source_source_valid);
assign soclinux_sdram_bankmachine1_row_hit = (soclinux_sdram_bankmachine1_row == soclinux_sdram_bankmachine1_source_source_payload_addr[20:7]);
assign soclinux_sdram_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
    soclinux_sdram_bankmachine1_cmd_payload_a <= 14'd0;
    if (soclinux_sdram_bankmachine1_row_col_n_addr_sel) begin
        soclinux_sdram_bankmachine1_cmd_payload_a <= soclinux_sdram_bankmachine1_source_source_payload_addr[20:7];
    end else begin
        soclinux_sdram_bankmachine1_cmd_payload_a <= ((soclinux_sdram_bankmachine1_auto_precharge <<< 4'd10) | {soclinux_sdram_bankmachine1_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_sdram_bankmachine1_twtpcon_valid = ((soclinux_sdram_bankmachine1_cmd_valid & soclinux_sdram_bankmachine1_cmd_ready) & soclinux_sdram_bankmachine1_cmd_payload_is_write);
assign soclinux_sdram_bankmachine1_trccon_valid = ((soclinux_sdram_bankmachine1_cmd_valid & soclinux_sdram_bankmachine1_cmd_ready) & soclinux_sdram_bankmachine1_row_open);
assign soclinux_sdram_bankmachine1_trascon_valid = ((soclinux_sdram_bankmachine1_cmd_valid & soclinux_sdram_bankmachine1_cmd_ready) & soclinux_sdram_bankmachine1_row_open);
always @(*) begin
    soclinux_sdram_bankmachine1_auto_precharge <= 1'd0;
    if ((soclinux_sdram_bankmachine1_source_valid & soclinux_sdram_bankmachine1_source_source_valid)) begin
        if ((soclinux_sdram_bankmachine1_source_payload_addr[20:7] != soclinux_sdram_bankmachine1_source_source_payload_addr[20:7])) begin
            soclinux_sdram_bankmachine1_auto_precharge <= (soclinux_sdram_bankmachine1_row_close == 1'd0);
        end
    end
end
assign soclinux_sdram_bankmachine1_syncfifo1_din = {soclinux_sdram_bankmachine1_fifo_in_last, soclinux_sdram_bankmachine1_fifo_in_first, soclinux_sdram_bankmachine1_fifo_in_payload_addr, soclinux_sdram_bankmachine1_fifo_in_payload_we};
assign {soclinux_sdram_bankmachine1_fifo_out_last, soclinux_sdram_bankmachine1_fifo_out_first, soclinux_sdram_bankmachine1_fifo_out_payload_addr, soclinux_sdram_bankmachine1_fifo_out_payload_we} = soclinux_sdram_bankmachine1_syncfifo1_dout;
assign soclinux_sdram_bankmachine1_sink_ready = soclinux_sdram_bankmachine1_syncfifo1_writable;
assign soclinux_sdram_bankmachine1_syncfifo1_we = soclinux_sdram_bankmachine1_sink_valid;
assign soclinux_sdram_bankmachine1_fifo_in_first = soclinux_sdram_bankmachine1_sink_first;
assign soclinux_sdram_bankmachine1_fifo_in_last = soclinux_sdram_bankmachine1_sink_last;
assign soclinux_sdram_bankmachine1_fifo_in_payload_we = soclinux_sdram_bankmachine1_sink_payload_we;
assign soclinux_sdram_bankmachine1_fifo_in_payload_addr = soclinux_sdram_bankmachine1_sink_payload_addr;
assign soclinux_sdram_bankmachine1_source_valid = soclinux_sdram_bankmachine1_syncfifo1_readable;
assign soclinux_sdram_bankmachine1_source_first = soclinux_sdram_bankmachine1_fifo_out_first;
assign soclinux_sdram_bankmachine1_source_last = soclinux_sdram_bankmachine1_fifo_out_last;
assign soclinux_sdram_bankmachine1_source_payload_we = soclinux_sdram_bankmachine1_fifo_out_payload_we;
assign soclinux_sdram_bankmachine1_source_payload_addr = soclinux_sdram_bankmachine1_fifo_out_payload_addr;
assign soclinux_sdram_bankmachine1_syncfifo1_re = soclinux_sdram_bankmachine1_source_ready;
always @(*) begin
    soclinux_sdram_bankmachine1_wrport_adr <= 3'd0;
    if (soclinux_sdram_bankmachine1_replace) begin
        soclinux_sdram_bankmachine1_wrport_adr <= (soclinux_sdram_bankmachine1_produce - 1'd1);
    end else begin
        soclinux_sdram_bankmachine1_wrport_adr <= soclinux_sdram_bankmachine1_produce;
    end
end
assign soclinux_sdram_bankmachine1_wrport_dat_w = soclinux_sdram_bankmachine1_syncfifo1_din;
assign soclinux_sdram_bankmachine1_wrport_we = (soclinux_sdram_bankmachine1_syncfifo1_we & (soclinux_sdram_bankmachine1_syncfifo1_writable | soclinux_sdram_bankmachine1_replace));
assign soclinux_sdram_bankmachine1_do_read = (soclinux_sdram_bankmachine1_syncfifo1_readable & soclinux_sdram_bankmachine1_syncfifo1_re);
assign soclinux_sdram_bankmachine1_rdport_adr = soclinux_sdram_bankmachine1_consume;
assign soclinux_sdram_bankmachine1_syncfifo1_dout = soclinux_sdram_bankmachine1_rdport_dat_r;
assign soclinux_sdram_bankmachine1_syncfifo1_writable = (soclinux_sdram_bankmachine1_level != 4'd8);
assign soclinux_sdram_bankmachine1_syncfifo1_readable = (soclinux_sdram_bankmachine1_level != 1'd0);
assign soclinux_sdram_bankmachine1_pipe_valid_sink_ready = ((~soclinux_sdram_bankmachine1_pipe_valid_source_valid) | soclinux_sdram_bankmachine1_pipe_valid_source_ready);
assign soclinux_sdram_bankmachine1_pipe_valid_sink_valid = soclinux_sdram_bankmachine1_sink_sink_valid;
assign soclinux_sdram_bankmachine1_sink_sink_ready = soclinux_sdram_bankmachine1_pipe_valid_sink_ready;
assign soclinux_sdram_bankmachine1_pipe_valid_sink_first = soclinux_sdram_bankmachine1_sink_sink_first;
assign soclinux_sdram_bankmachine1_pipe_valid_sink_last = soclinux_sdram_bankmachine1_sink_sink_last;
assign soclinux_sdram_bankmachine1_pipe_valid_sink_payload_we = soclinux_sdram_bankmachine1_sink_sink_payload_we;
assign soclinux_sdram_bankmachine1_pipe_valid_sink_payload_addr = soclinux_sdram_bankmachine1_sink_sink_payload_addr;
assign soclinux_sdram_bankmachine1_source_source_valid = soclinux_sdram_bankmachine1_pipe_valid_source_valid;
assign soclinux_sdram_bankmachine1_pipe_valid_source_ready = soclinux_sdram_bankmachine1_source_source_ready;
assign soclinux_sdram_bankmachine1_source_source_first = soclinux_sdram_bankmachine1_pipe_valid_source_first;
assign soclinux_sdram_bankmachine1_source_source_last = soclinux_sdram_bankmachine1_pipe_valid_source_last;
assign soclinux_sdram_bankmachine1_source_source_payload_we = soclinux_sdram_bankmachine1_pipe_valid_source_payload_we;
assign soclinux_sdram_bankmachine1_source_source_payload_addr = soclinux_sdram_bankmachine1_pipe_valid_source_payload_addr;
always @(*) begin
    soclinux_bankmachine1_next_state <= 4'd0;
    soclinux_sdram_bankmachine1_row_open <= 1'd0;
    soclinux_sdram_bankmachine1_cmd_valid <= 1'd0;
    soclinux_sdram_bankmachine1_row_close <= 1'd0;
    soclinux_sdram_bankmachine1_refresh_gnt <= 1'd0;
    soclinux_sdram_bankmachine1_row_col_n_addr_sel <= 1'd0;
    soclinux_sdram_bankmachine1_cmd_payload_cas <= 1'd0;
    soclinux_sdram_bankmachine1_cmd_payload_ras <= 1'd0;
    soclinux_sdram_bankmachine1_cmd_payload_we <= 1'd0;
    soclinux_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd0;
    soclinux_sdram_bankmachine1_cmd_payload_is_read <= 1'd0;
    soclinux_sdram_bankmachine1_cmd_payload_is_write <= 1'd0;
    soclinux_sdram_bankmachine1_req_wdata_ready <= 1'd0;
    soclinux_sdram_bankmachine1_req_rdata_valid <= 1'd0;
    soclinux_bankmachine1_next_state <= soclinux_bankmachine1_state;
    case (soclinux_bankmachine1_state)
        1'd1: begin
            if ((soclinux_sdram_bankmachine1_twtpcon_ready & soclinux_sdram_bankmachine1_trascon_ready)) begin
                soclinux_sdram_bankmachine1_cmd_valid <= 1'd1;
                if (soclinux_sdram_bankmachine1_cmd_ready) begin
                    soclinux_bankmachine1_next_state <= 3'd5;
                end
                soclinux_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
                soclinux_sdram_bankmachine1_cmd_payload_we <= 1'd1;
                soclinux_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_sdram_bankmachine1_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_sdram_bankmachine1_twtpcon_ready & soclinux_sdram_bankmachine1_trascon_ready)) begin
                soclinux_bankmachine1_next_state <= 3'd5;
            end
            soclinux_sdram_bankmachine1_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_sdram_bankmachine1_trccon_ready) begin
                soclinux_sdram_bankmachine1_row_col_n_addr_sel <= 1'd1;
                soclinux_sdram_bankmachine1_row_open <= 1'd1;
                soclinux_sdram_bankmachine1_cmd_valid <= 1'd1;
                soclinux_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_sdram_bankmachine1_cmd_ready) begin
                    soclinux_bankmachine1_next_state <= 3'd7;
                end
                soclinux_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_sdram_bankmachine1_twtpcon_ready) begin
                soclinux_sdram_bankmachine1_refresh_gnt <= 1'd1;
            end
            soclinux_sdram_bankmachine1_row_close <= 1'd1;
            soclinux_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_sdram_bankmachine1_refresh_req)) begin
                soclinux_bankmachine1_next_state <= 1'd0;
            end
        end
        3'd5: begin
            soclinux_bankmachine1_next_state <= 3'd6;
        end
        3'd6: begin
            soclinux_bankmachine1_next_state <= 2'd3;
        end
        3'd7: begin
            soclinux_bankmachine1_next_state <= 4'd8;
        end
        4'd8: begin
            soclinux_bankmachine1_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_sdram_bankmachine1_refresh_req) begin
                soclinux_bankmachine1_next_state <= 3'd4;
            end else begin
                if (soclinux_sdram_bankmachine1_source_source_valid) begin
                    if (soclinux_sdram_bankmachine1_row_opened) begin
                        if (soclinux_sdram_bankmachine1_row_hit) begin
                            soclinux_sdram_bankmachine1_cmd_valid <= 1'd1;
                            if (soclinux_sdram_bankmachine1_source_source_payload_we) begin
                                soclinux_sdram_bankmachine1_req_wdata_ready <= soclinux_sdram_bankmachine1_cmd_ready;
                                soclinux_sdram_bankmachine1_cmd_payload_is_write <= 1'd1;
                                soclinux_sdram_bankmachine1_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_sdram_bankmachine1_req_rdata_valid <= soclinux_sdram_bankmachine1_cmd_ready;
                                soclinux_sdram_bankmachine1_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_sdram_bankmachine1_cmd_payload_cas <= 1'd1;
                            if ((soclinux_sdram_bankmachine1_cmd_ready & soclinux_sdram_bankmachine1_auto_precharge)) begin
                                soclinux_bankmachine1_next_state <= 2'd2;
                            end
                        end else begin
                            soclinux_bankmachine1_next_state <= 1'd1;
                        end
                    end else begin
                        soclinux_bankmachine1_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_sdram_bankmachine2_sink_valid = soclinux_sdram_bankmachine2_req_valid;
assign soclinux_sdram_bankmachine2_req_ready = soclinux_sdram_bankmachine2_sink_ready;
assign soclinux_sdram_bankmachine2_sink_payload_we = soclinux_sdram_bankmachine2_req_we;
assign soclinux_sdram_bankmachine2_sink_payload_addr = soclinux_sdram_bankmachine2_req_addr;
assign soclinux_sdram_bankmachine2_sink_sink_valid = soclinux_sdram_bankmachine2_source_valid;
assign soclinux_sdram_bankmachine2_source_ready = soclinux_sdram_bankmachine2_sink_sink_ready;
assign soclinux_sdram_bankmachine2_sink_sink_first = soclinux_sdram_bankmachine2_source_first;
assign soclinux_sdram_bankmachine2_sink_sink_last = soclinux_sdram_bankmachine2_source_last;
assign soclinux_sdram_bankmachine2_sink_sink_payload_we = soclinux_sdram_bankmachine2_source_payload_we;
assign soclinux_sdram_bankmachine2_sink_sink_payload_addr = soclinux_sdram_bankmachine2_source_payload_addr;
assign soclinux_sdram_bankmachine2_source_source_ready = (soclinux_sdram_bankmachine2_req_wdata_ready | soclinux_sdram_bankmachine2_req_rdata_valid);
assign soclinux_sdram_bankmachine2_req_lock = (soclinux_sdram_bankmachine2_source_valid | soclinux_sdram_bankmachine2_source_source_valid);
assign soclinux_sdram_bankmachine2_row_hit = (soclinux_sdram_bankmachine2_row == soclinux_sdram_bankmachine2_source_source_payload_addr[20:7]);
assign soclinux_sdram_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
    soclinux_sdram_bankmachine2_cmd_payload_a <= 14'd0;
    if (soclinux_sdram_bankmachine2_row_col_n_addr_sel) begin
        soclinux_sdram_bankmachine2_cmd_payload_a <= soclinux_sdram_bankmachine2_source_source_payload_addr[20:7];
    end else begin
        soclinux_sdram_bankmachine2_cmd_payload_a <= ((soclinux_sdram_bankmachine2_auto_precharge <<< 4'd10) | {soclinux_sdram_bankmachine2_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_sdram_bankmachine2_twtpcon_valid = ((soclinux_sdram_bankmachine2_cmd_valid & soclinux_sdram_bankmachine2_cmd_ready) & soclinux_sdram_bankmachine2_cmd_payload_is_write);
assign soclinux_sdram_bankmachine2_trccon_valid = ((soclinux_sdram_bankmachine2_cmd_valid & soclinux_sdram_bankmachine2_cmd_ready) & soclinux_sdram_bankmachine2_row_open);
assign soclinux_sdram_bankmachine2_trascon_valid = ((soclinux_sdram_bankmachine2_cmd_valid & soclinux_sdram_bankmachine2_cmd_ready) & soclinux_sdram_bankmachine2_row_open);
always @(*) begin
    soclinux_sdram_bankmachine2_auto_precharge <= 1'd0;
    if ((soclinux_sdram_bankmachine2_source_valid & soclinux_sdram_bankmachine2_source_source_valid)) begin
        if ((soclinux_sdram_bankmachine2_source_payload_addr[20:7] != soclinux_sdram_bankmachine2_source_source_payload_addr[20:7])) begin
            soclinux_sdram_bankmachine2_auto_precharge <= (soclinux_sdram_bankmachine2_row_close == 1'd0);
        end
    end
end
assign soclinux_sdram_bankmachine2_syncfifo2_din = {soclinux_sdram_bankmachine2_fifo_in_last, soclinux_sdram_bankmachine2_fifo_in_first, soclinux_sdram_bankmachine2_fifo_in_payload_addr, soclinux_sdram_bankmachine2_fifo_in_payload_we};
assign {soclinux_sdram_bankmachine2_fifo_out_last, soclinux_sdram_bankmachine2_fifo_out_first, soclinux_sdram_bankmachine2_fifo_out_payload_addr, soclinux_sdram_bankmachine2_fifo_out_payload_we} = soclinux_sdram_bankmachine2_syncfifo2_dout;
assign soclinux_sdram_bankmachine2_sink_ready = soclinux_sdram_bankmachine2_syncfifo2_writable;
assign soclinux_sdram_bankmachine2_syncfifo2_we = soclinux_sdram_bankmachine2_sink_valid;
assign soclinux_sdram_bankmachine2_fifo_in_first = soclinux_sdram_bankmachine2_sink_first;
assign soclinux_sdram_bankmachine2_fifo_in_last = soclinux_sdram_bankmachine2_sink_last;
assign soclinux_sdram_bankmachine2_fifo_in_payload_we = soclinux_sdram_bankmachine2_sink_payload_we;
assign soclinux_sdram_bankmachine2_fifo_in_payload_addr = soclinux_sdram_bankmachine2_sink_payload_addr;
assign soclinux_sdram_bankmachine2_source_valid = soclinux_sdram_bankmachine2_syncfifo2_readable;
assign soclinux_sdram_bankmachine2_source_first = soclinux_sdram_bankmachine2_fifo_out_first;
assign soclinux_sdram_bankmachine2_source_last = soclinux_sdram_bankmachine2_fifo_out_last;
assign soclinux_sdram_bankmachine2_source_payload_we = soclinux_sdram_bankmachine2_fifo_out_payload_we;
assign soclinux_sdram_bankmachine2_source_payload_addr = soclinux_sdram_bankmachine2_fifo_out_payload_addr;
assign soclinux_sdram_bankmachine2_syncfifo2_re = soclinux_sdram_bankmachine2_source_ready;
always @(*) begin
    soclinux_sdram_bankmachine2_wrport_adr <= 3'd0;
    if (soclinux_sdram_bankmachine2_replace) begin
        soclinux_sdram_bankmachine2_wrport_adr <= (soclinux_sdram_bankmachine2_produce - 1'd1);
    end else begin
        soclinux_sdram_bankmachine2_wrport_adr <= soclinux_sdram_bankmachine2_produce;
    end
end
assign soclinux_sdram_bankmachine2_wrport_dat_w = soclinux_sdram_bankmachine2_syncfifo2_din;
assign soclinux_sdram_bankmachine2_wrport_we = (soclinux_sdram_bankmachine2_syncfifo2_we & (soclinux_sdram_bankmachine2_syncfifo2_writable | soclinux_sdram_bankmachine2_replace));
assign soclinux_sdram_bankmachine2_do_read = (soclinux_sdram_bankmachine2_syncfifo2_readable & soclinux_sdram_bankmachine2_syncfifo2_re);
assign soclinux_sdram_bankmachine2_rdport_adr = soclinux_sdram_bankmachine2_consume;
assign soclinux_sdram_bankmachine2_syncfifo2_dout = soclinux_sdram_bankmachine2_rdport_dat_r;
assign soclinux_sdram_bankmachine2_syncfifo2_writable = (soclinux_sdram_bankmachine2_level != 4'd8);
assign soclinux_sdram_bankmachine2_syncfifo2_readable = (soclinux_sdram_bankmachine2_level != 1'd0);
assign soclinux_sdram_bankmachine2_pipe_valid_sink_ready = ((~soclinux_sdram_bankmachine2_pipe_valid_source_valid) | soclinux_sdram_bankmachine2_pipe_valid_source_ready);
assign soclinux_sdram_bankmachine2_pipe_valid_sink_valid = soclinux_sdram_bankmachine2_sink_sink_valid;
assign soclinux_sdram_bankmachine2_sink_sink_ready = soclinux_sdram_bankmachine2_pipe_valid_sink_ready;
assign soclinux_sdram_bankmachine2_pipe_valid_sink_first = soclinux_sdram_bankmachine2_sink_sink_first;
assign soclinux_sdram_bankmachine2_pipe_valid_sink_last = soclinux_sdram_bankmachine2_sink_sink_last;
assign soclinux_sdram_bankmachine2_pipe_valid_sink_payload_we = soclinux_sdram_bankmachine2_sink_sink_payload_we;
assign soclinux_sdram_bankmachine2_pipe_valid_sink_payload_addr = soclinux_sdram_bankmachine2_sink_sink_payload_addr;
assign soclinux_sdram_bankmachine2_source_source_valid = soclinux_sdram_bankmachine2_pipe_valid_source_valid;
assign soclinux_sdram_bankmachine2_pipe_valid_source_ready = soclinux_sdram_bankmachine2_source_source_ready;
assign soclinux_sdram_bankmachine2_source_source_first = soclinux_sdram_bankmachine2_pipe_valid_source_first;
assign soclinux_sdram_bankmachine2_source_source_last = soclinux_sdram_bankmachine2_pipe_valid_source_last;
assign soclinux_sdram_bankmachine2_source_source_payload_we = soclinux_sdram_bankmachine2_pipe_valid_source_payload_we;
assign soclinux_sdram_bankmachine2_source_source_payload_addr = soclinux_sdram_bankmachine2_pipe_valid_source_payload_addr;
always @(*) begin
    soclinux_bankmachine2_next_state <= 4'd0;
    soclinux_sdram_bankmachine2_row_col_n_addr_sel <= 1'd0;
    soclinux_sdram_bankmachine2_cmd_payload_cas <= 1'd0;
    soclinux_sdram_bankmachine2_cmd_payload_ras <= 1'd0;
    soclinux_sdram_bankmachine2_cmd_payload_we <= 1'd0;
    soclinux_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd0;
    soclinux_sdram_bankmachine2_cmd_payload_is_read <= 1'd0;
    soclinux_sdram_bankmachine2_cmd_payload_is_write <= 1'd0;
    soclinux_sdram_bankmachine2_req_wdata_ready <= 1'd0;
    soclinux_sdram_bankmachine2_req_rdata_valid <= 1'd0;
    soclinux_sdram_bankmachine2_refresh_gnt <= 1'd0;
    soclinux_sdram_bankmachine2_row_open <= 1'd0;
    soclinux_sdram_bankmachine2_cmd_valid <= 1'd0;
    soclinux_sdram_bankmachine2_row_close <= 1'd0;
    soclinux_bankmachine2_next_state <= soclinux_bankmachine2_state;
    case (soclinux_bankmachine2_state)
        1'd1: begin
            if ((soclinux_sdram_bankmachine2_twtpcon_ready & soclinux_sdram_bankmachine2_trascon_ready)) begin
                soclinux_sdram_bankmachine2_cmd_valid <= 1'd1;
                if (soclinux_sdram_bankmachine2_cmd_ready) begin
                    soclinux_bankmachine2_next_state <= 3'd5;
                end
                soclinux_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
                soclinux_sdram_bankmachine2_cmd_payload_we <= 1'd1;
                soclinux_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_sdram_bankmachine2_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_sdram_bankmachine2_twtpcon_ready & soclinux_sdram_bankmachine2_trascon_ready)) begin
                soclinux_bankmachine2_next_state <= 3'd5;
            end
            soclinux_sdram_bankmachine2_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_sdram_bankmachine2_trccon_ready) begin
                soclinux_sdram_bankmachine2_row_col_n_addr_sel <= 1'd1;
                soclinux_sdram_bankmachine2_row_open <= 1'd1;
                soclinux_sdram_bankmachine2_cmd_valid <= 1'd1;
                soclinux_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_sdram_bankmachine2_cmd_ready) begin
                    soclinux_bankmachine2_next_state <= 3'd7;
                end
                soclinux_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_sdram_bankmachine2_twtpcon_ready) begin
                soclinux_sdram_bankmachine2_refresh_gnt <= 1'd1;
            end
            soclinux_sdram_bankmachine2_row_close <= 1'd1;
            soclinux_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_sdram_bankmachine2_refresh_req)) begin
                soclinux_bankmachine2_next_state <= 1'd0;
            end
        end
        3'd5: begin
            soclinux_bankmachine2_next_state <= 3'd6;
        end
        3'd6: begin
            soclinux_bankmachine2_next_state <= 2'd3;
        end
        3'd7: begin
            soclinux_bankmachine2_next_state <= 4'd8;
        end
        4'd8: begin
            soclinux_bankmachine2_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_sdram_bankmachine2_refresh_req) begin
                soclinux_bankmachine2_next_state <= 3'd4;
            end else begin
                if (soclinux_sdram_bankmachine2_source_source_valid) begin
                    if (soclinux_sdram_bankmachine2_row_opened) begin
                        if (soclinux_sdram_bankmachine2_row_hit) begin
                            soclinux_sdram_bankmachine2_cmd_valid <= 1'd1;
                            if (soclinux_sdram_bankmachine2_source_source_payload_we) begin
                                soclinux_sdram_bankmachine2_req_wdata_ready <= soclinux_sdram_bankmachine2_cmd_ready;
                                soclinux_sdram_bankmachine2_cmd_payload_is_write <= 1'd1;
                                soclinux_sdram_bankmachine2_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_sdram_bankmachine2_req_rdata_valid <= soclinux_sdram_bankmachine2_cmd_ready;
                                soclinux_sdram_bankmachine2_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_sdram_bankmachine2_cmd_payload_cas <= 1'd1;
                            if ((soclinux_sdram_bankmachine2_cmd_ready & soclinux_sdram_bankmachine2_auto_precharge)) begin
                                soclinux_bankmachine2_next_state <= 2'd2;
                            end
                        end else begin
                            soclinux_bankmachine2_next_state <= 1'd1;
                        end
                    end else begin
                        soclinux_bankmachine2_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_sdram_bankmachine3_sink_valid = soclinux_sdram_bankmachine3_req_valid;
assign soclinux_sdram_bankmachine3_req_ready = soclinux_sdram_bankmachine3_sink_ready;
assign soclinux_sdram_bankmachine3_sink_payload_we = soclinux_sdram_bankmachine3_req_we;
assign soclinux_sdram_bankmachine3_sink_payload_addr = soclinux_sdram_bankmachine3_req_addr;
assign soclinux_sdram_bankmachine3_sink_sink_valid = soclinux_sdram_bankmachine3_source_valid;
assign soclinux_sdram_bankmachine3_source_ready = soclinux_sdram_bankmachine3_sink_sink_ready;
assign soclinux_sdram_bankmachine3_sink_sink_first = soclinux_sdram_bankmachine3_source_first;
assign soclinux_sdram_bankmachine3_sink_sink_last = soclinux_sdram_bankmachine3_source_last;
assign soclinux_sdram_bankmachine3_sink_sink_payload_we = soclinux_sdram_bankmachine3_source_payload_we;
assign soclinux_sdram_bankmachine3_sink_sink_payload_addr = soclinux_sdram_bankmachine3_source_payload_addr;
assign soclinux_sdram_bankmachine3_source_source_ready = (soclinux_sdram_bankmachine3_req_wdata_ready | soclinux_sdram_bankmachine3_req_rdata_valid);
assign soclinux_sdram_bankmachine3_req_lock = (soclinux_sdram_bankmachine3_source_valid | soclinux_sdram_bankmachine3_source_source_valid);
assign soclinux_sdram_bankmachine3_row_hit = (soclinux_sdram_bankmachine3_row == soclinux_sdram_bankmachine3_source_source_payload_addr[20:7]);
assign soclinux_sdram_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
    soclinux_sdram_bankmachine3_cmd_payload_a <= 14'd0;
    if (soclinux_sdram_bankmachine3_row_col_n_addr_sel) begin
        soclinux_sdram_bankmachine3_cmd_payload_a <= soclinux_sdram_bankmachine3_source_source_payload_addr[20:7];
    end else begin
        soclinux_sdram_bankmachine3_cmd_payload_a <= ((soclinux_sdram_bankmachine3_auto_precharge <<< 4'd10) | {soclinux_sdram_bankmachine3_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_sdram_bankmachine3_twtpcon_valid = ((soclinux_sdram_bankmachine3_cmd_valid & soclinux_sdram_bankmachine3_cmd_ready) & soclinux_sdram_bankmachine3_cmd_payload_is_write);
assign soclinux_sdram_bankmachine3_trccon_valid = ((soclinux_sdram_bankmachine3_cmd_valid & soclinux_sdram_bankmachine3_cmd_ready) & soclinux_sdram_bankmachine3_row_open);
assign soclinux_sdram_bankmachine3_trascon_valid = ((soclinux_sdram_bankmachine3_cmd_valid & soclinux_sdram_bankmachine3_cmd_ready) & soclinux_sdram_bankmachine3_row_open);
always @(*) begin
    soclinux_sdram_bankmachine3_auto_precharge <= 1'd0;
    if ((soclinux_sdram_bankmachine3_source_valid & soclinux_sdram_bankmachine3_source_source_valid)) begin
        if ((soclinux_sdram_bankmachine3_source_payload_addr[20:7] != soclinux_sdram_bankmachine3_source_source_payload_addr[20:7])) begin
            soclinux_sdram_bankmachine3_auto_precharge <= (soclinux_sdram_bankmachine3_row_close == 1'd0);
        end
    end
end
assign soclinux_sdram_bankmachine3_syncfifo3_din = {soclinux_sdram_bankmachine3_fifo_in_last, soclinux_sdram_bankmachine3_fifo_in_first, soclinux_sdram_bankmachine3_fifo_in_payload_addr, soclinux_sdram_bankmachine3_fifo_in_payload_we};
assign {soclinux_sdram_bankmachine3_fifo_out_last, soclinux_sdram_bankmachine3_fifo_out_first, soclinux_sdram_bankmachine3_fifo_out_payload_addr, soclinux_sdram_bankmachine3_fifo_out_payload_we} = soclinux_sdram_bankmachine3_syncfifo3_dout;
assign soclinux_sdram_bankmachine3_sink_ready = soclinux_sdram_bankmachine3_syncfifo3_writable;
assign soclinux_sdram_bankmachine3_syncfifo3_we = soclinux_sdram_bankmachine3_sink_valid;
assign soclinux_sdram_bankmachine3_fifo_in_first = soclinux_sdram_bankmachine3_sink_first;
assign soclinux_sdram_bankmachine3_fifo_in_last = soclinux_sdram_bankmachine3_sink_last;
assign soclinux_sdram_bankmachine3_fifo_in_payload_we = soclinux_sdram_bankmachine3_sink_payload_we;
assign soclinux_sdram_bankmachine3_fifo_in_payload_addr = soclinux_sdram_bankmachine3_sink_payload_addr;
assign soclinux_sdram_bankmachine3_source_valid = soclinux_sdram_bankmachine3_syncfifo3_readable;
assign soclinux_sdram_bankmachine3_source_first = soclinux_sdram_bankmachine3_fifo_out_first;
assign soclinux_sdram_bankmachine3_source_last = soclinux_sdram_bankmachine3_fifo_out_last;
assign soclinux_sdram_bankmachine3_source_payload_we = soclinux_sdram_bankmachine3_fifo_out_payload_we;
assign soclinux_sdram_bankmachine3_source_payload_addr = soclinux_sdram_bankmachine3_fifo_out_payload_addr;
assign soclinux_sdram_bankmachine3_syncfifo3_re = soclinux_sdram_bankmachine3_source_ready;
always @(*) begin
    soclinux_sdram_bankmachine3_wrport_adr <= 3'd0;
    if (soclinux_sdram_bankmachine3_replace) begin
        soclinux_sdram_bankmachine3_wrport_adr <= (soclinux_sdram_bankmachine3_produce - 1'd1);
    end else begin
        soclinux_sdram_bankmachine3_wrport_adr <= soclinux_sdram_bankmachine3_produce;
    end
end
assign soclinux_sdram_bankmachine3_wrport_dat_w = soclinux_sdram_bankmachine3_syncfifo3_din;
assign soclinux_sdram_bankmachine3_wrport_we = (soclinux_sdram_bankmachine3_syncfifo3_we & (soclinux_sdram_bankmachine3_syncfifo3_writable | soclinux_sdram_bankmachine3_replace));
assign soclinux_sdram_bankmachine3_do_read = (soclinux_sdram_bankmachine3_syncfifo3_readable & soclinux_sdram_bankmachine3_syncfifo3_re);
assign soclinux_sdram_bankmachine3_rdport_adr = soclinux_sdram_bankmachine3_consume;
assign soclinux_sdram_bankmachine3_syncfifo3_dout = soclinux_sdram_bankmachine3_rdport_dat_r;
assign soclinux_sdram_bankmachine3_syncfifo3_writable = (soclinux_sdram_bankmachine3_level != 4'd8);
assign soclinux_sdram_bankmachine3_syncfifo3_readable = (soclinux_sdram_bankmachine3_level != 1'd0);
assign soclinux_sdram_bankmachine3_pipe_valid_sink_ready = ((~soclinux_sdram_bankmachine3_pipe_valid_source_valid) | soclinux_sdram_bankmachine3_pipe_valid_source_ready);
assign soclinux_sdram_bankmachine3_pipe_valid_sink_valid = soclinux_sdram_bankmachine3_sink_sink_valid;
assign soclinux_sdram_bankmachine3_sink_sink_ready = soclinux_sdram_bankmachine3_pipe_valid_sink_ready;
assign soclinux_sdram_bankmachine3_pipe_valid_sink_first = soclinux_sdram_bankmachine3_sink_sink_first;
assign soclinux_sdram_bankmachine3_pipe_valid_sink_last = soclinux_sdram_bankmachine3_sink_sink_last;
assign soclinux_sdram_bankmachine3_pipe_valid_sink_payload_we = soclinux_sdram_bankmachine3_sink_sink_payload_we;
assign soclinux_sdram_bankmachine3_pipe_valid_sink_payload_addr = soclinux_sdram_bankmachine3_sink_sink_payload_addr;
assign soclinux_sdram_bankmachine3_source_source_valid = soclinux_sdram_bankmachine3_pipe_valid_source_valid;
assign soclinux_sdram_bankmachine3_pipe_valid_source_ready = soclinux_sdram_bankmachine3_source_source_ready;
assign soclinux_sdram_bankmachine3_source_source_first = soclinux_sdram_bankmachine3_pipe_valid_source_first;
assign soclinux_sdram_bankmachine3_source_source_last = soclinux_sdram_bankmachine3_pipe_valid_source_last;
assign soclinux_sdram_bankmachine3_source_source_payload_we = soclinux_sdram_bankmachine3_pipe_valid_source_payload_we;
assign soclinux_sdram_bankmachine3_source_source_payload_addr = soclinux_sdram_bankmachine3_pipe_valid_source_payload_addr;
always @(*) begin
    soclinux_bankmachine3_next_state <= 4'd0;
    soclinux_sdram_bankmachine3_cmd_payload_ras <= 1'd0;
    soclinux_sdram_bankmachine3_cmd_payload_we <= 1'd0;
    soclinux_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd0;
    soclinux_sdram_bankmachine3_cmd_payload_is_read <= 1'd0;
    soclinux_sdram_bankmachine3_cmd_payload_is_write <= 1'd0;
    soclinux_sdram_bankmachine3_req_wdata_ready <= 1'd0;
    soclinux_sdram_bankmachine3_req_rdata_valid <= 1'd0;
    soclinux_sdram_bankmachine3_refresh_gnt <= 1'd0;
    soclinux_sdram_bankmachine3_row_open <= 1'd0;
    soclinux_sdram_bankmachine3_cmd_valid <= 1'd0;
    soclinux_sdram_bankmachine3_row_close <= 1'd0;
    soclinux_sdram_bankmachine3_row_col_n_addr_sel <= 1'd0;
    soclinux_sdram_bankmachine3_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine3_next_state <= soclinux_bankmachine3_state;
    case (soclinux_bankmachine3_state)
        1'd1: begin
            if ((soclinux_sdram_bankmachine3_twtpcon_ready & soclinux_sdram_bankmachine3_trascon_ready)) begin
                soclinux_sdram_bankmachine3_cmd_valid <= 1'd1;
                if (soclinux_sdram_bankmachine3_cmd_ready) begin
                    soclinux_bankmachine3_next_state <= 3'd5;
                end
                soclinux_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
                soclinux_sdram_bankmachine3_cmd_payload_we <= 1'd1;
                soclinux_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_sdram_bankmachine3_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_sdram_bankmachine3_twtpcon_ready & soclinux_sdram_bankmachine3_trascon_ready)) begin
                soclinux_bankmachine3_next_state <= 3'd5;
            end
            soclinux_sdram_bankmachine3_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_sdram_bankmachine3_trccon_ready) begin
                soclinux_sdram_bankmachine3_row_col_n_addr_sel <= 1'd1;
                soclinux_sdram_bankmachine3_row_open <= 1'd1;
                soclinux_sdram_bankmachine3_cmd_valid <= 1'd1;
                soclinux_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_sdram_bankmachine3_cmd_ready) begin
                    soclinux_bankmachine3_next_state <= 3'd7;
                end
                soclinux_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_sdram_bankmachine3_twtpcon_ready) begin
                soclinux_sdram_bankmachine3_refresh_gnt <= 1'd1;
            end
            soclinux_sdram_bankmachine3_row_close <= 1'd1;
            soclinux_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_sdram_bankmachine3_refresh_req)) begin
                soclinux_bankmachine3_next_state <= 1'd0;
            end
        end
        3'd5: begin
            soclinux_bankmachine3_next_state <= 3'd6;
        end
        3'd6: begin
            soclinux_bankmachine3_next_state <= 2'd3;
        end
        3'd7: begin
            soclinux_bankmachine3_next_state <= 4'd8;
        end
        4'd8: begin
            soclinux_bankmachine3_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_sdram_bankmachine3_refresh_req) begin
                soclinux_bankmachine3_next_state <= 3'd4;
            end else begin
                if (soclinux_sdram_bankmachine3_source_source_valid) begin
                    if (soclinux_sdram_bankmachine3_row_opened) begin
                        if (soclinux_sdram_bankmachine3_row_hit) begin
                            soclinux_sdram_bankmachine3_cmd_valid <= 1'd1;
                            if (soclinux_sdram_bankmachine3_source_source_payload_we) begin
                                soclinux_sdram_bankmachine3_req_wdata_ready <= soclinux_sdram_bankmachine3_cmd_ready;
                                soclinux_sdram_bankmachine3_cmd_payload_is_write <= 1'd1;
                                soclinux_sdram_bankmachine3_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_sdram_bankmachine3_req_rdata_valid <= soclinux_sdram_bankmachine3_cmd_ready;
                                soclinux_sdram_bankmachine3_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_sdram_bankmachine3_cmd_payload_cas <= 1'd1;
                            if ((soclinux_sdram_bankmachine3_cmd_ready & soclinux_sdram_bankmachine3_auto_precharge)) begin
                                soclinux_bankmachine3_next_state <= 2'd2;
                            end
                        end else begin
                            soclinux_bankmachine3_next_state <= 1'd1;
                        end
                    end else begin
                        soclinux_bankmachine3_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_sdram_bankmachine4_sink_valid = soclinux_sdram_bankmachine4_req_valid;
assign soclinux_sdram_bankmachine4_req_ready = soclinux_sdram_bankmachine4_sink_ready;
assign soclinux_sdram_bankmachine4_sink_payload_we = soclinux_sdram_bankmachine4_req_we;
assign soclinux_sdram_bankmachine4_sink_payload_addr = soclinux_sdram_bankmachine4_req_addr;
assign soclinux_sdram_bankmachine4_sink_sink_valid = soclinux_sdram_bankmachine4_source_valid;
assign soclinux_sdram_bankmachine4_source_ready = soclinux_sdram_bankmachine4_sink_sink_ready;
assign soclinux_sdram_bankmachine4_sink_sink_first = soclinux_sdram_bankmachine4_source_first;
assign soclinux_sdram_bankmachine4_sink_sink_last = soclinux_sdram_bankmachine4_source_last;
assign soclinux_sdram_bankmachine4_sink_sink_payload_we = soclinux_sdram_bankmachine4_source_payload_we;
assign soclinux_sdram_bankmachine4_sink_sink_payload_addr = soclinux_sdram_bankmachine4_source_payload_addr;
assign soclinux_sdram_bankmachine4_source_source_ready = (soclinux_sdram_bankmachine4_req_wdata_ready | soclinux_sdram_bankmachine4_req_rdata_valid);
assign soclinux_sdram_bankmachine4_req_lock = (soclinux_sdram_bankmachine4_source_valid | soclinux_sdram_bankmachine4_source_source_valid);
assign soclinux_sdram_bankmachine4_row_hit = (soclinux_sdram_bankmachine4_row == soclinux_sdram_bankmachine4_source_source_payload_addr[20:7]);
assign soclinux_sdram_bankmachine4_cmd_payload_ba = 3'd4;
always @(*) begin
    soclinux_sdram_bankmachine4_cmd_payload_a <= 14'd0;
    if (soclinux_sdram_bankmachine4_row_col_n_addr_sel) begin
        soclinux_sdram_bankmachine4_cmd_payload_a <= soclinux_sdram_bankmachine4_source_source_payload_addr[20:7];
    end else begin
        soclinux_sdram_bankmachine4_cmd_payload_a <= ((soclinux_sdram_bankmachine4_auto_precharge <<< 4'd10) | {soclinux_sdram_bankmachine4_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_sdram_bankmachine4_twtpcon_valid = ((soclinux_sdram_bankmachine4_cmd_valid & soclinux_sdram_bankmachine4_cmd_ready) & soclinux_sdram_bankmachine4_cmd_payload_is_write);
assign soclinux_sdram_bankmachine4_trccon_valid = ((soclinux_sdram_bankmachine4_cmd_valid & soclinux_sdram_bankmachine4_cmd_ready) & soclinux_sdram_bankmachine4_row_open);
assign soclinux_sdram_bankmachine4_trascon_valid = ((soclinux_sdram_bankmachine4_cmd_valid & soclinux_sdram_bankmachine4_cmd_ready) & soclinux_sdram_bankmachine4_row_open);
always @(*) begin
    soclinux_sdram_bankmachine4_auto_precharge <= 1'd0;
    if ((soclinux_sdram_bankmachine4_source_valid & soclinux_sdram_bankmachine4_source_source_valid)) begin
        if ((soclinux_sdram_bankmachine4_source_payload_addr[20:7] != soclinux_sdram_bankmachine4_source_source_payload_addr[20:7])) begin
            soclinux_sdram_bankmachine4_auto_precharge <= (soclinux_sdram_bankmachine4_row_close == 1'd0);
        end
    end
end
assign soclinux_sdram_bankmachine4_syncfifo4_din = {soclinux_sdram_bankmachine4_fifo_in_last, soclinux_sdram_bankmachine4_fifo_in_first, soclinux_sdram_bankmachine4_fifo_in_payload_addr, soclinux_sdram_bankmachine4_fifo_in_payload_we};
assign {soclinux_sdram_bankmachine4_fifo_out_last, soclinux_sdram_bankmachine4_fifo_out_first, soclinux_sdram_bankmachine4_fifo_out_payload_addr, soclinux_sdram_bankmachine4_fifo_out_payload_we} = soclinux_sdram_bankmachine4_syncfifo4_dout;
assign soclinux_sdram_bankmachine4_sink_ready = soclinux_sdram_bankmachine4_syncfifo4_writable;
assign soclinux_sdram_bankmachine4_syncfifo4_we = soclinux_sdram_bankmachine4_sink_valid;
assign soclinux_sdram_bankmachine4_fifo_in_first = soclinux_sdram_bankmachine4_sink_first;
assign soclinux_sdram_bankmachine4_fifo_in_last = soclinux_sdram_bankmachine4_sink_last;
assign soclinux_sdram_bankmachine4_fifo_in_payload_we = soclinux_sdram_bankmachine4_sink_payload_we;
assign soclinux_sdram_bankmachine4_fifo_in_payload_addr = soclinux_sdram_bankmachine4_sink_payload_addr;
assign soclinux_sdram_bankmachine4_source_valid = soclinux_sdram_bankmachine4_syncfifo4_readable;
assign soclinux_sdram_bankmachine4_source_first = soclinux_sdram_bankmachine4_fifo_out_first;
assign soclinux_sdram_bankmachine4_source_last = soclinux_sdram_bankmachine4_fifo_out_last;
assign soclinux_sdram_bankmachine4_source_payload_we = soclinux_sdram_bankmachine4_fifo_out_payload_we;
assign soclinux_sdram_bankmachine4_source_payload_addr = soclinux_sdram_bankmachine4_fifo_out_payload_addr;
assign soclinux_sdram_bankmachine4_syncfifo4_re = soclinux_sdram_bankmachine4_source_ready;
always @(*) begin
    soclinux_sdram_bankmachine4_wrport_adr <= 3'd0;
    if (soclinux_sdram_bankmachine4_replace) begin
        soclinux_sdram_bankmachine4_wrport_adr <= (soclinux_sdram_bankmachine4_produce - 1'd1);
    end else begin
        soclinux_sdram_bankmachine4_wrport_adr <= soclinux_sdram_bankmachine4_produce;
    end
end
assign soclinux_sdram_bankmachine4_wrport_dat_w = soclinux_sdram_bankmachine4_syncfifo4_din;
assign soclinux_sdram_bankmachine4_wrport_we = (soclinux_sdram_bankmachine4_syncfifo4_we & (soclinux_sdram_bankmachine4_syncfifo4_writable | soclinux_sdram_bankmachine4_replace));
assign soclinux_sdram_bankmachine4_do_read = (soclinux_sdram_bankmachine4_syncfifo4_readable & soclinux_sdram_bankmachine4_syncfifo4_re);
assign soclinux_sdram_bankmachine4_rdport_adr = soclinux_sdram_bankmachine4_consume;
assign soclinux_sdram_bankmachine4_syncfifo4_dout = soclinux_sdram_bankmachine4_rdport_dat_r;
assign soclinux_sdram_bankmachine4_syncfifo4_writable = (soclinux_sdram_bankmachine4_level != 4'd8);
assign soclinux_sdram_bankmachine4_syncfifo4_readable = (soclinux_sdram_bankmachine4_level != 1'd0);
assign soclinux_sdram_bankmachine4_pipe_valid_sink_ready = ((~soclinux_sdram_bankmachine4_pipe_valid_source_valid) | soclinux_sdram_bankmachine4_pipe_valid_source_ready);
assign soclinux_sdram_bankmachine4_pipe_valid_sink_valid = soclinux_sdram_bankmachine4_sink_sink_valid;
assign soclinux_sdram_bankmachine4_sink_sink_ready = soclinux_sdram_bankmachine4_pipe_valid_sink_ready;
assign soclinux_sdram_bankmachine4_pipe_valid_sink_first = soclinux_sdram_bankmachine4_sink_sink_first;
assign soclinux_sdram_bankmachine4_pipe_valid_sink_last = soclinux_sdram_bankmachine4_sink_sink_last;
assign soclinux_sdram_bankmachine4_pipe_valid_sink_payload_we = soclinux_sdram_bankmachine4_sink_sink_payload_we;
assign soclinux_sdram_bankmachine4_pipe_valid_sink_payload_addr = soclinux_sdram_bankmachine4_sink_sink_payload_addr;
assign soclinux_sdram_bankmachine4_source_source_valid = soclinux_sdram_bankmachine4_pipe_valid_source_valid;
assign soclinux_sdram_bankmachine4_pipe_valid_source_ready = soclinux_sdram_bankmachine4_source_source_ready;
assign soclinux_sdram_bankmachine4_source_source_first = soclinux_sdram_bankmachine4_pipe_valid_source_first;
assign soclinux_sdram_bankmachine4_source_source_last = soclinux_sdram_bankmachine4_pipe_valid_source_last;
assign soclinux_sdram_bankmachine4_source_source_payload_we = soclinux_sdram_bankmachine4_pipe_valid_source_payload_we;
assign soclinux_sdram_bankmachine4_source_source_payload_addr = soclinux_sdram_bankmachine4_pipe_valid_source_payload_addr;
always @(*) begin
    soclinux_bankmachine4_next_state <= 4'd0;
    soclinux_sdram_bankmachine4_cmd_payload_is_write <= 1'd0;
    soclinux_sdram_bankmachine4_req_wdata_ready <= 1'd0;
    soclinux_sdram_bankmachine4_req_rdata_valid <= 1'd0;
    soclinux_sdram_bankmachine4_refresh_gnt <= 1'd0;
    soclinux_sdram_bankmachine4_row_open <= 1'd0;
    soclinux_sdram_bankmachine4_cmd_valid <= 1'd0;
    soclinux_sdram_bankmachine4_row_close <= 1'd0;
    soclinux_sdram_bankmachine4_row_col_n_addr_sel <= 1'd0;
    soclinux_sdram_bankmachine4_cmd_payload_cas <= 1'd0;
    soclinux_sdram_bankmachine4_cmd_payload_ras <= 1'd0;
    soclinux_sdram_bankmachine4_cmd_payload_we <= 1'd0;
    soclinux_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd0;
    soclinux_sdram_bankmachine4_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine4_next_state <= soclinux_bankmachine4_state;
    case (soclinux_bankmachine4_state)
        1'd1: begin
            if ((soclinux_sdram_bankmachine4_twtpcon_ready & soclinux_sdram_bankmachine4_trascon_ready)) begin
                soclinux_sdram_bankmachine4_cmd_valid <= 1'd1;
                if (soclinux_sdram_bankmachine4_cmd_ready) begin
                    soclinux_bankmachine4_next_state <= 3'd5;
                end
                soclinux_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
                soclinux_sdram_bankmachine4_cmd_payload_we <= 1'd1;
                soclinux_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_sdram_bankmachine4_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_sdram_bankmachine4_twtpcon_ready & soclinux_sdram_bankmachine4_trascon_ready)) begin
                soclinux_bankmachine4_next_state <= 3'd5;
            end
            soclinux_sdram_bankmachine4_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_sdram_bankmachine4_trccon_ready) begin
                soclinux_sdram_bankmachine4_row_col_n_addr_sel <= 1'd1;
                soclinux_sdram_bankmachine4_row_open <= 1'd1;
                soclinux_sdram_bankmachine4_cmd_valid <= 1'd1;
                soclinux_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_sdram_bankmachine4_cmd_ready) begin
                    soclinux_bankmachine4_next_state <= 3'd7;
                end
                soclinux_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_sdram_bankmachine4_twtpcon_ready) begin
                soclinux_sdram_bankmachine4_refresh_gnt <= 1'd1;
            end
            soclinux_sdram_bankmachine4_row_close <= 1'd1;
            soclinux_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_sdram_bankmachine4_refresh_req)) begin
                soclinux_bankmachine4_next_state <= 1'd0;
            end
        end
        3'd5: begin
            soclinux_bankmachine4_next_state <= 3'd6;
        end
        3'd6: begin
            soclinux_bankmachine4_next_state <= 2'd3;
        end
        3'd7: begin
            soclinux_bankmachine4_next_state <= 4'd8;
        end
        4'd8: begin
            soclinux_bankmachine4_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_sdram_bankmachine4_refresh_req) begin
                soclinux_bankmachine4_next_state <= 3'd4;
            end else begin
                if (soclinux_sdram_bankmachine4_source_source_valid) begin
                    if (soclinux_sdram_bankmachine4_row_opened) begin
                        if (soclinux_sdram_bankmachine4_row_hit) begin
                            soclinux_sdram_bankmachine4_cmd_valid <= 1'd1;
                            if (soclinux_sdram_bankmachine4_source_source_payload_we) begin
                                soclinux_sdram_bankmachine4_req_wdata_ready <= soclinux_sdram_bankmachine4_cmd_ready;
                                soclinux_sdram_bankmachine4_cmd_payload_is_write <= 1'd1;
                                soclinux_sdram_bankmachine4_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_sdram_bankmachine4_req_rdata_valid <= soclinux_sdram_bankmachine4_cmd_ready;
                                soclinux_sdram_bankmachine4_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_sdram_bankmachine4_cmd_payload_cas <= 1'd1;
                            if ((soclinux_sdram_bankmachine4_cmd_ready & soclinux_sdram_bankmachine4_auto_precharge)) begin
                                soclinux_bankmachine4_next_state <= 2'd2;
                            end
                        end else begin
                            soclinux_bankmachine4_next_state <= 1'd1;
                        end
                    end else begin
                        soclinux_bankmachine4_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_sdram_bankmachine5_sink_valid = soclinux_sdram_bankmachine5_req_valid;
assign soclinux_sdram_bankmachine5_req_ready = soclinux_sdram_bankmachine5_sink_ready;
assign soclinux_sdram_bankmachine5_sink_payload_we = soclinux_sdram_bankmachine5_req_we;
assign soclinux_sdram_bankmachine5_sink_payload_addr = soclinux_sdram_bankmachine5_req_addr;
assign soclinux_sdram_bankmachine5_sink_sink_valid = soclinux_sdram_bankmachine5_source_valid;
assign soclinux_sdram_bankmachine5_source_ready = soclinux_sdram_bankmachine5_sink_sink_ready;
assign soclinux_sdram_bankmachine5_sink_sink_first = soclinux_sdram_bankmachine5_source_first;
assign soclinux_sdram_bankmachine5_sink_sink_last = soclinux_sdram_bankmachine5_source_last;
assign soclinux_sdram_bankmachine5_sink_sink_payload_we = soclinux_sdram_bankmachine5_source_payload_we;
assign soclinux_sdram_bankmachine5_sink_sink_payload_addr = soclinux_sdram_bankmachine5_source_payload_addr;
assign soclinux_sdram_bankmachine5_source_source_ready = (soclinux_sdram_bankmachine5_req_wdata_ready | soclinux_sdram_bankmachine5_req_rdata_valid);
assign soclinux_sdram_bankmachine5_req_lock = (soclinux_sdram_bankmachine5_source_valid | soclinux_sdram_bankmachine5_source_source_valid);
assign soclinux_sdram_bankmachine5_row_hit = (soclinux_sdram_bankmachine5_row == soclinux_sdram_bankmachine5_source_source_payload_addr[20:7]);
assign soclinux_sdram_bankmachine5_cmd_payload_ba = 3'd5;
always @(*) begin
    soclinux_sdram_bankmachine5_cmd_payload_a <= 14'd0;
    if (soclinux_sdram_bankmachine5_row_col_n_addr_sel) begin
        soclinux_sdram_bankmachine5_cmd_payload_a <= soclinux_sdram_bankmachine5_source_source_payload_addr[20:7];
    end else begin
        soclinux_sdram_bankmachine5_cmd_payload_a <= ((soclinux_sdram_bankmachine5_auto_precharge <<< 4'd10) | {soclinux_sdram_bankmachine5_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_sdram_bankmachine5_twtpcon_valid = ((soclinux_sdram_bankmachine5_cmd_valid & soclinux_sdram_bankmachine5_cmd_ready) & soclinux_sdram_bankmachine5_cmd_payload_is_write);
assign soclinux_sdram_bankmachine5_trccon_valid = ((soclinux_sdram_bankmachine5_cmd_valid & soclinux_sdram_bankmachine5_cmd_ready) & soclinux_sdram_bankmachine5_row_open);
assign soclinux_sdram_bankmachine5_trascon_valid = ((soclinux_sdram_bankmachine5_cmd_valid & soclinux_sdram_bankmachine5_cmd_ready) & soclinux_sdram_bankmachine5_row_open);
always @(*) begin
    soclinux_sdram_bankmachine5_auto_precharge <= 1'd0;
    if ((soclinux_sdram_bankmachine5_source_valid & soclinux_sdram_bankmachine5_source_source_valid)) begin
        if ((soclinux_sdram_bankmachine5_source_payload_addr[20:7] != soclinux_sdram_bankmachine5_source_source_payload_addr[20:7])) begin
            soclinux_sdram_bankmachine5_auto_precharge <= (soclinux_sdram_bankmachine5_row_close == 1'd0);
        end
    end
end
assign soclinux_sdram_bankmachine5_syncfifo5_din = {soclinux_sdram_bankmachine5_fifo_in_last, soclinux_sdram_bankmachine5_fifo_in_first, soclinux_sdram_bankmachine5_fifo_in_payload_addr, soclinux_sdram_bankmachine5_fifo_in_payload_we};
assign {soclinux_sdram_bankmachine5_fifo_out_last, soclinux_sdram_bankmachine5_fifo_out_first, soclinux_sdram_bankmachine5_fifo_out_payload_addr, soclinux_sdram_bankmachine5_fifo_out_payload_we} = soclinux_sdram_bankmachine5_syncfifo5_dout;
assign soclinux_sdram_bankmachine5_sink_ready = soclinux_sdram_bankmachine5_syncfifo5_writable;
assign soclinux_sdram_bankmachine5_syncfifo5_we = soclinux_sdram_bankmachine5_sink_valid;
assign soclinux_sdram_bankmachine5_fifo_in_first = soclinux_sdram_bankmachine5_sink_first;
assign soclinux_sdram_bankmachine5_fifo_in_last = soclinux_sdram_bankmachine5_sink_last;
assign soclinux_sdram_bankmachine5_fifo_in_payload_we = soclinux_sdram_bankmachine5_sink_payload_we;
assign soclinux_sdram_bankmachine5_fifo_in_payload_addr = soclinux_sdram_bankmachine5_sink_payload_addr;
assign soclinux_sdram_bankmachine5_source_valid = soclinux_sdram_bankmachine5_syncfifo5_readable;
assign soclinux_sdram_bankmachine5_source_first = soclinux_sdram_bankmachine5_fifo_out_first;
assign soclinux_sdram_bankmachine5_source_last = soclinux_sdram_bankmachine5_fifo_out_last;
assign soclinux_sdram_bankmachine5_source_payload_we = soclinux_sdram_bankmachine5_fifo_out_payload_we;
assign soclinux_sdram_bankmachine5_source_payload_addr = soclinux_sdram_bankmachine5_fifo_out_payload_addr;
assign soclinux_sdram_bankmachine5_syncfifo5_re = soclinux_sdram_bankmachine5_source_ready;
always @(*) begin
    soclinux_sdram_bankmachine5_wrport_adr <= 3'd0;
    if (soclinux_sdram_bankmachine5_replace) begin
        soclinux_sdram_bankmachine5_wrport_adr <= (soclinux_sdram_bankmachine5_produce - 1'd1);
    end else begin
        soclinux_sdram_bankmachine5_wrport_adr <= soclinux_sdram_bankmachine5_produce;
    end
end
assign soclinux_sdram_bankmachine5_wrport_dat_w = soclinux_sdram_bankmachine5_syncfifo5_din;
assign soclinux_sdram_bankmachine5_wrport_we = (soclinux_sdram_bankmachine5_syncfifo5_we & (soclinux_sdram_bankmachine5_syncfifo5_writable | soclinux_sdram_bankmachine5_replace));
assign soclinux_sdram_bankmachine5_do_read = (soclinux_sdram_bankmachine5_syncfifo5_readable & soclinux_sdram_bankmachine5_syncfifo5_re);
assign soclinux_sdram_bankmachine5_rdport_adr = soclinux_sdram_bankmachine5_consume;
assign soclinux_sdram_bankmachine5_syncfifo5_dout = soclinux_sdram_bankmachine5_rdport_dat_r;
assign soclinux_sdram_bankmachine5_syncfifo5_writable = (soclinux_sdram_bankmachine5_level != 4'd8);
assign soclinux_sdram_bankmachine5_syncfifo5_readable = (soclinux_sdram_bankmachine5_level != 1'd0);
assign soclinux_sdram_bankmachine5_pipe_valid_sink_ready = ((~soclinux_sdram_bankmachine5_pipe_valid_source_valid) | soclinux_sdram_bankmachine5_pipe_valid_source_ready);
assign soclinux_sdram_bankmachine5_pipe_valid_sink_valid = soclinux_sdram_bankmachine5_sink_sink_valid;
assign soclinux_sdram_bankmachine5_sink_sink_ready = soclinux_sdram_bankmachine5_pipe_valid_sink_ready;
assign soclinux_sdram_bankmachine5_pipe_valid_sink_first = soclinux_sdram_bankmachine5_sink_sink_first;
assign soclinux_sdram_bankmachine5_pipe_valid_sink_last = soclinux_sdram_bankmachine5_sink_sink_last;
assign soclinux_sdram_bankmachine5_pipe_valid_sink_payload_we = soclinux_sdram_bankmachine5_sink_sink_payload_we;
assign soclinux_sdram_bankmachine5_pipe_valid_sink_payload_addr = soclinux_sdram_bankmachine5_sink_sink_payload_addr;
assign soclinux_sdram_bankmachine5_source_source_valid = soclinux_sdram_bankmachine5_pipe_valid_source_valid;
assign soclinux_sdram_bankmachine5_pipe_valid_source_ready = soclinux_sdram_bankmachine5_source_source_ready;
assign soclinux_sdram_bankmachine5_source_source_first = soclinux_sdram_bankmachine5_pipe_valid_source_first;
assign soclinux_sdram_bankmachine5_source_source_last = soclinux_sdram_bankmachine5_pipe_valid_source_last;
assign soclinux_sdram_bankmachine5_source_source_payload_we = soclinux_sdram_bankmachine5_pipe_valid_source_payload_we;
assign soclinux_sdram_bankmachine5_source_source_payload_addr = soclinux_sdram_bankmachine5_pipe_valid_source_payload_addr;
always @(*) begin
    soclinux_bankmachine5_next_state <= 4'd0;
    soclinux_sdram_bankmachine5_row_open <= 1'd0;
    soclinux_sdram_bankmachine5_cmd_valid <= 1'd0;
    soclinux_sdram_bankmachine5_row_close <= 1'd0;
    soclinux_sdram_bankmachine5_refresh_gnt <= 1'd0;
    soclinux_sdram_bankmachine5_row_col_n_addr_sel <= 1'd0;
    soclinux_sdram_bankmachine5_cmd_payload_cas <= 1'd0;
    soclinux_sdram_bankmachine5_cmd_payload_ras <= 1'd0;
    soclinux_sdram_bankmachine5_cmd_payload_we <= 1'd0;
    soclinux_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd0;
    soclinux_sdram_bankmachine5_cmd_payload_is_read <= 1'd0;
    soclinux_sdram_bankmachine5_cmd_payload_is_write <= 1'd0;
    soclinux_sdram_bankmachine5_req_wdata_ready <= 1'd0;
    soclinux_sdram_bankmachine5_req_rdata_valid <= 1'd0;
    soclinux_bankmachine5_next_state <= soclinux_bankmachine5_state;
    case (soclinux_bankmachine5_state)
        1'd1: begin
            if ((soclinux_sdram_bankmachine5_twtpcon_ready & soclinux_sdram_bankmachine5_trascon_ready)) begin
                soclinux_sdram_bankmachine5_cmd_valid <= 1'd1;
                if (soclinux_sdram_bankmachine5_cmd_ready) begin
                    soclinux_bankmachine5_next_state <= 3'd5;
                end
                soclinux_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
                soclinux_sdram_bankmachine5_cmd_payload_we <= 1'd1;
                soclinux_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_sdram_bankmachine5_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_sdram_bankmachine5_twtpcon_ready & soclinux_sdram_bankmachine5_trascon_ready)) begin
                soclinux_bankmachine5_next_state <= 3'd5;
            end
            soclinux_sdram_bankmachine5_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_sdram_bankmachine5_trccon_ready) begin
                soclinux_sdram_bankmachine5_row_col_n_addr_sel <= 1'd1;
                soclinux_sdram_bankmachine5_row_open <= 1'd1;
                soclinux_sdram_bankmachine5_cmd_valid <= 1'd1;
                soclinux_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_sdram_bankmachine5_cmd_ready) begin
                    soclinux_bankmachine5_next_state <= 3'd7;
                end
                soclinux_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_sdram_bankmachine5_twtpcon_ready) begin
                soclinux_sdram_bankmachine5_refresh_gnt <= 1'd1;
            end
            soclinux_sdram_bankmachine5_row_close <= 1'd1;
            soclinux_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_sdram_bankmachine5_refresh_req)) begin
                soclinux_bankmachine5_next_state <= 1'd0;
            end
        end
        3'd5: begin
            soclinux_bankmachine5_next_state <= 3'd6;
        end
        3'd6: begin
            soclinux_bankmachine5_next_state <= 2'd3;
        end
        3'd7: begin
            soclinux_bankmachine5_next_state <= 4'd8;
        end
        4'd8: begin
            soclinux_bankmachine5_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_sdram_bankmachine5_refresh_req) begin
                soclinux_bankmachine5_next_state <= 3'd4;
            end else begin
                if (soclinux_sdram_bankmachine5_source_source_valid) begin
                    if (soclinux_sdram_bankmachine5_row_opened) begin
                        if (soclinux_sdram_bankmachine5_row_hit) begin
                            soclinux_sdram_bankmachine5_cmd_valid <= 1'd1;
                            if (soclinux_sdram_bankmachine5_source_source_payload_we) begin
                                soclinux_sdram_bankmachine5_req_wdata_ready <= soclinux_sdram_bankmachine5_cmd_ready;
                                soclinux_sdram_bankmachine5_cmd_payload_is_write <= 1'd1;
                                soclinux_sdram_bankmachine5_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_sdram_bankmachine5_req_rdata_valid <= soclinux_sdram_bankmachine5_cmd_ready;
                                soclinux_sdram_bankmachine5_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_sdram_bankmachine5_cmd_payload_cas <= 1'd1;
                            if ((soclinux_sdram_bankmachine5_cmd_ready & soclinux_sdram_bankmachine5_auto_precharge)) begin
                                soclinux_bankmachine5_next_state <= 2'd2;
                            end
                        end else begin
                            soclinux_bankmachine5_next_state <= 1'd1;
                        end
                    end else begin
                        soclinux_bankmachine5_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_sdram_bankmachine6_sink_valid = soclinux_sdram_bankmachine6_req_valid;
assign soclinux_sdram_bankmachine6_req_ready = soclinux_sdram_bankmachine6_sink_ready;
assign soclinux_sdram_bankmachine6_sink_payload_we = soclinux_sdram_bankmachine6_req_we;
assign soclinux_sdram_bankmachine6_sink_payload_addr = soclinux_sdram_bankmachine6_req_addr;
assign soclinux_sdram_bankmachine6_sink_sink_valid = soclinux_sdram_bankmachine6_source_valid;
assign soclinux_sdram_bankmachine6_source_ready = soclinux_sdram_bankmachine6_sink_sink_ready;
assign soclinux_sdram_bankmachine6_sink_sink_first = soclinux_sdram_bankmachine6_source_first;
assign soclinux_sdram_bankmachine6_sink_sink_last = soclinux_sdram_bankmachine6_source_last;
assign soclinux_sdram_bankmachine6_sink_sink_payload_we = soclinux_sdram_bankmachine6_source_payload_we;
assign soclinux_sdram_bankmachine6_sink_sink_payload_addr = soclinux_sdram_bankmachine6_source_payload_addr;
assign soclinux_sdram_bankmachine6_source_source_ready = (soclinux_sdram_bankmachine6_req_wdata_ready | soclinux_sdram_bankmachine6_req_rdata_valid);
assign soclinux_sdram_bankmachine6_req_lock = (soclinux_sdram_bankmachine6_source_valid | soclinux_sdram_bankmachine6_source_source_valid);
assign soclinux_sdram_bankmachine6_row_hit = (soclinux_sdram_bankmachine6_row == soclinux_sdram_bankmachine6_source_source_payload_addr[20:7]);
assign soclinux_sdram_bankmachine6_cmd_payload_ba = 3'd6;
always @(*) begin
    soclinux_sdram_bankmachine6_cmd_payload_a <= 14'd0;
    if (soclinux_sdram_bankmachine6_row_col_n_addr_sel) begin
        soclinux_sdram_bankmachine6_cmd_payload_a <= soclinux_sdram_bankmachine6_source_source_payload_addr[20:7];
    end else begin
        soclinux_sdram_bankmachine6_cmd_payload_a <= ((soclinux_sdram_bankmachine6_auto_precharge <<< 4'd10) | {soclinux_sdram_bankmachine6_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_sdram_bankmachine6_twtpcon_valid = ((soclinux_sdram_bankmachine6_cmd_valid & soclinux_sdram_bankmachine6_cmd_ready) & soclinux_sdram_bankmachine6_cmd_payload_is_write);
assign soclinux_sdram_bankmachine6_trccon_valid = ((soclinux_sdram_bankmachine6_cmd_valid & soclinux_sdram_bankmachine6_cmd_ready) & soclinux_sdram_bankmachine6_row_open);
assign soclinux_sdram_bankmachine6_trascon_valid = ((soclinux_sdram_bankmachine6_cmd_valid & soclinux_sdram_bankmachine6_cmd_ready) & soclinux_sdram_bankmachine6_row_open);
always @(*) begin
    soclinux_sdram_bankmachine6_auto_precharge <= 1'd0;
    if ((soclinux_sdram_bankmachine6_source_valid & soclinux_sdram_bankmachine6_source_source_valid)) begin
        if ((soclinux_sdram_bankmachine6_source_payload_addr[20:7] != soclinux_sdram_bankmachine6_source_source_payload_addr[20:7])) begin
            soclinux_sdram_bankmachine6_auto_precharge <= (soclinux_sdram_bankmachine6_row_close == 1'd0);
        end
    end
end
assign soclinux_sdram_bankmachine6_syncfifo6_din = {soclinux_sdram_bankmachine6_fifo_in_last, soclinux_sdram_bankmachine6_fifo_in_first, soclinux_sdram_bankmachine6_fifo_in_payload_addr, soclinux_sdram_bankmachine6_fifo_in_payload_we};
assign {soclinux_sdram_bankmachine6_fifo_out_last, soclinux_sdram_bankmachine6_fifo_out_first, soclinux_sdram_bankmachine6_fifo_out_payload_addr, soclinux_sdram_bankmachine6_fifo_out_payload_we} = soclinux_sdram_bankmachine6_syncfifo6_dout;
assign soclinux_sdram_bankmachine6_sink_ready = soclinux_sdram_bankmachine6_syncfifo6_writable;
assign soclinux_sdram_bankmachine6_syncfifo6_we = soclinux_sdram_bankmachine6_sink_valid;
assign soclinux_sdram_bankmachine6_fifo_in_first = soclinux_sdram_bankmachine6_sink_first;
assign soclinux_sdram_bankmachine6_fifo_in_last = soclinux_sdram_bankmachine6_sink_last;
assign soclinux_sdram_bankmachine6_fifo_in_payload_we = soclinux_sdram_bankmachine6_sink_payload_we;
assign soclinux_sdram_bankmachine6_fifo_in_payload_addr = soclinux_sdram_bankmachine6_sink_payload_addr;
assign soclinux_sdram_bankmachine6_source_valid = soclinux_sdram_bankmachine6_syncfifo6_readable;
assign soclinux_sdram_bankmachine6_source_first = soclinux_sdram_bankmachine6_fifo_out_first;
assign soclinux_sdram_bankmachine6_source_last = soclinux_sdram_bankmachine6_fifo_out_last;
assign soclinux_sdram_bankmachine6_source_payload_we = soclinux_sdram_bankmachine6_fifo_out_payload_we;
assign soclinux_sdram_bankmachine6_source_payload_addr = soclinux_sdram_bankmachine6_fifo_out_payload_addr;
assign soclinux_sdram_bankmachine6_syncfifo6_re = soclinux_sdram_bankmachine6_source_ready;
always @(*) begin
    soclinux_sdram_bankmachine6_wrport_adr <= 3'd0;
    if (soclinux_sdram_bankmachine6_replace) begin
        soclinux_sdram_bankmachine6_wrport_adr <= (soclinux_sdram_bankmachine6_produce - 1'd1);
    end else begin
        soclinux_sdram_bankmachine6_wrport_adr <= soclinux_sdram_bankmachine6_produce;
    end
end
assign soclinux_sdram_bankmachine6_wrport_dat_w = soclinux_sdram_bankmachine6_syncfifo6_din;
assign soclinux_sdram_bankmachine6_wrport_we = (soclinux_sdram_bankmachine6_syncfifo6_we & (soclinux_sdram_bankmachine6_syncfifo6_writable | soclinux_sdram_bankmachine6_replace));
assign soclinux_sdram_bankmachine6_do_read = (soclinux_sdram_bankmachine6_syncfifo6_readable & soclinux_sdram_bankmachine6_syncfifo6_re);
assign soclinux_sdram_bankmachine6_rdport_adr = soclinux_sdram_bankmachine6_consume;
assign soclinux_sdram_bankmachine6_syncfifo6_dout = soclinux_sdram_bankmachine6_rdport_dat_r;
assign soclinux_sdram_bankmachine6_syncfifo6_writable = (soclinux_sdram_bankmachine6_level != 4'd8);
assign soclinux_sdram_bankmachine6_syncfifo6_readable = (soclinux_sdram_bankmachine6_level != 1'd0);
assign soclinux_sdram_bankmachine6_pipe_valid_sink_ready = ((~soclinux_sdram_bankmachine6_pipe_valid_source_valid) | soclinux_sdram_bankmachine6_pipe_valid_source_ready);
assign soclinux_sdram_bankmachine6_pipe_valid_sink_valid = soclinux_sdram_bankmachine6_sink_sink_valid;
assign soclinux_sdram_bankmachine6_sink_sink_ready = soclinux_sdram_bankmachine6_pipe_valid_sink_ready;
assign soclinux_sdram_bankmachine6_pipe_valid_sink_first = soclinux_sdram_bankmachine6_sink_sink_first;
assign soclinux_sdram_bankmachine6_pipe_valid_sink_last = soclinux_sdram_bankmachine6_sink_sink_last;
assign soclinux_sdram_bankmachine6_pipe_valid_sink_payload_we = soclinux_sdram_bankmachine6_sink_sink_payload_we;
assign soclinux_sdram_bankmachine6_pipe_valid_sink_payload_addr = soclinux_sdram_bankmachine6_sink_sink_payload_addr;
assign soclinux_sdram_bankmachine6_source_source_valid = soclinux_sdram_bankmachine6_pipe_valid_source_valid;
assign soclinux_sdram_bankmachine6_pipe_valid_source_ready = soclinux_sdram_bankmachine6_source_source_ready;
assign soclinux_sdram_bankmachine6_source_source_first = soclinux_sdram_bankmachine6_pipe_valid_source_first;
assign soclinux_sdram_bankmachine6_source_source_last = soclinux_sdram_bankmachine6_pipe_valid_source_last;
assign soclinux_sdram_bankmachine6_source_source_payload_we = soclinux_sdram_bankmachine6_pipe_valid_source_payload_we;
assign soclinux_sdram_bankmachine6_source_source_payload_addr = soclinux_sdram_bankmachine6_pipe_valid_source_payload_addr;
always @(*) begin
    soclinux_bankmachine6_next_state <= 4'd0;
    soclinux_sdram_bankmachine6_row_col_n_addr_sel <= 1'd0;
    soclinux_sdram_bankmachine6_cmd_payload_cas <= 1'd0;
    soclinux_sdram_bankmachine6_cmd_payload_ras <= 1'd0;
    soclinux_sdram_bankmachine6_cmd_payload_we <= 1'd0;
    soclinux_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd0;
    soclinux_sdram_bankmachine6_cmd_payload_is_read <= 1'd0;
    soclinux_sdram_bankmachine6_cmd_payload_is_write <= 1'd0;
    soclinux_sdram_bankmachine6_req_wdata_ready <= 1'd0;
    soclinux_sdram_bankmachine6_req_rdata_valid <= 1'd0;
    soclinux_sdram_bankmachine6_refresh_gnt <= 1'd0;
    soclinux_sdram_bankmachine6_row_open <= 1'd0;
    soclinux_sdram_bankmachine6_cmd_valid <= 1'd0;
    soclinux_sdram_bankmachine6_row_close <= 1'd0;
    soclinux_bankmachine6_next_state <= soclinux_bankmachine6_state;
    case (soclinux_bankmachine6_state)
        1'd1: begin
            if ((soclinux_sdram_bankmachine6_twtpcon_ready & soclinux_sdram_bankmachine6_trascon_ready)) begin
                soclinux_sdram_bankmachine6_cmd_valid <= 1'd1;
                if (soclinux_sdram_bankmachine6_cmd_ready) begin
                    soclinux_bankmachine6_next_state <= 3'd5;
                end
                soclinux_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
                soclinux_sdram_bankmachine6_cmd_payload_we <= 1'd1;
                soclinux_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_sdram_bankmachine6_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_sdram_bankmachine6_twtpcon_ready & soclinux_sdram_bankmachine6_trascon_ready)) begin
                soclinux_bankmachine6_next_state <= 3'd5;
            end
            soclinux_sdram_bankmachine6_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_sdram_bankmachine6_trccon_ready) begin
                soclinux_sdram_bankmachine6_row_col_n_addr_sel <= 1'd1;
                soclinux_sdram_bankmachine6_row_open <= 1'd1;
                soclinux_sdram_bankmachine6_cmd_valid <= 1'd1;
                soclinux_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_sdram_bankmachine6_cmd_ready) begin
                    soclinux_bankmachine6_next_state <= 3'd7;
                end
                soclinux_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_sdram_bankmachine6_twtpcon_ready) begin
                soclinux_sdram_bankmachine6_refresh_gnt <= 1'd1;
            end
            soclinux_sdram_bankmachine6_row_close <= 1'd1;
            soclinux_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_sdram_bankmachine6_refresh_req)) begin
                soclinux_bankmachine6_next_state <= 1'd0;
            end
        end
        3'd5: begin
            soclinux_bankmachine6_next_state <= 3'd6;
        end
        3'd6: begin
            soclinux_bankmachine6_next_state <= 2'd3;
        end
        3'd7: begin
            soclinux_bankmachine6_next_state <= 4'd8;
        end
        4'd8: begin
            soclinux_bankmachine6_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_sdram_bankmachine6_refresh_req) begin
                soclinux_bankmachine6_next_state <= 3'd4;
            end else begin
                if (soclinux_sdram_bankmachine6_source_source_valid) begin
                    if (soclinux_sdram_bankmachine6_row_opened) begin
                        if (soclinux_sdram_bankmachine6_row_hit) begin
                            soclinux_sdram_bankmachine6_cmd_valid <= 1'd1;
                            if (soclinux_sdram_bankmachine6_source_source_payload_we) begin
                                soclinux_sdram_bankmachine6_req_wdata_ready <= soclinux_sdram_bankmachine6_cmd_ready;
                                soclinux_sdram_bankmachine6_cmd_payload_is_write <= 1'd1;
                                soclinux_sdram_bankmachine6_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_sdram_bankmachine6_req_rdata_valid <= soclinux_sdram_bankmachine6_cmd_ready;
                                soclinux_sdram_bankmachine6_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_sdram_bankmachine6_cmd_payload_cas <= 1'd1;
                            if ((soclinux_sdram_bankmachine6_cmd_ready & soclinux_sdram_bankmachine6_auto_precharge)) begin
                                soclinux_bankmachine6_next_state <= 2'd2;
                            end
                        end else begin
                            soclinux_bankmachine6_next_state <= 1'd1;
                        end
                    end else begin
                        soclinux_bankmachine6_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_sdram_bankmachine7_sink_valid = soclinux_sdram_bankmachine7_req_valid;
assign soclinux_sdram_bankmachine7_req_ready = soclinux_sdram_bankmachine7_sink_ready;
assign soclinux_sdram_bankmachine7_sink_payload_we = soclinux_sdram_bankmachine7_req_we;
assign soclinux_sdram_bankmachine7_sink_payload_addr = soclinux_sdram_bankmachine7_req_addr;
assign soclinux_sdram_bankmachine7_sink_sink_valid = soclinux_sdram_bankmachine7_source_valid;
assign soclinux_sdram_bankmachine7_source_ready = soclinux_sdram_bankmachine7_sink_sink_ready;
assign soclinux_sdram_bankmachine7_sink_sink_first = soclinux_sdram_bankmachine7_source_first;
assign soclinux_sdram_bankmachine7_sink_sink_last = soclinux_sdram_bankmachine7_source_last;
assign soclinux_sdram_bankmachine7_sink_sink_payload_we = soclinux_sdram_bankmachine7_source_payload_we;
assign soclinux_sdram_bankmachine7_sink_sink_payload_addr = soclinux_sdram_bankmachine7_source_payload_addr;
assign soclinux_sdram_bankmachine7_source_source_ready = (soclinux_sdram_bankmachine7_req_wdata_ready | soclinux_sdram_bankmachine7_req_rdata_valid);
assign soclinux_sdram_bankmachine7_req_lock = (soclinux_sdram_bankmachine7_source_valid | soclinux_sdram_bankmachine7_source_source_valid);
assign soclinux_sdram_bankmachine7_row_hit = (soclinux_sdram_bankmachine7_row == soclinux_sdram_bankmachine7_source_source_payload_addr[20:7]);
assign soclinux_sdram_bankmachine7_cmd_payload_ba = 3'd7;
always @(*) begin
    soclinux_sdram_bankmachine7_cmd_payload_a <= 14'd0;
    if (soclinux_sdram_bankmachine7_row_col_n_addr_sel) begin
        soclinux_sdram_bankmachine7_cmd_payload_a <= soclinux_sdram_bankmachine7_source_source_payload_addr[20:7];
    end else begin
        soclinux_sdram_bankmachine7_cmd_payload_a <= ((soclinux_sdram_bankmachine7_auto_precharge <<< 4'd10) | {soclinux_sdram_bankmachine7_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_sdram_bankmachine7_twtpcon_valid = ((soclinux_sdram_bankmachine7_cmd_valid & soclinux_sdram_bankmachine7_cmd_ready) & soclinux_sdram_bankmachine7_cmd_payload_is_write);
assign soclinux_sdram_bankmachine7_trccon_valid = ((soclinux_sdram_bankmachine7_cmd_valid & soclinux_sdram_bankmachine7_cmd_ready) & soclinux_sdram_bankmachine7_row_open);
assign soclinux_sdram_bankmachine7_trascon_valid = ((soclinux_sdram_bankmachine7_cmd_valid & soclinux_sdram_bankmachine7_cmd_ready) & soclinux_sdram_bankmachine7_row_open);
always @(*) begin
    soclinux_sdram_bankmachine7_auto_precharge <= 1'd0;
    if ((soclinux_sdram_bankmachine7_source_valid & soclinux_sdram_bankmachine7_source_source_valid)) begin
        if ((soclinux_sdram_bankmachine7_source_payload_addr[20:7] != soclinux_sdram_bankmachine7_source_source_payload_addr[20:7])) begin
            soclinux_sdram_bankmachine7_auto_precharge <= (soclinux_sdram_bankmachine7_row_close == 1'd0);
        end
    end
end
assign soclinux_sdram_bankmachine7_syncfifo7_din = {soclinux_sdram_bankmachine7_fifo_in_last, soclinux_sdram_bankmachine7_fifo_in_first, soclinux_sdram_bankmachine7_fifo_in_payload_addr, soclinux_sdram_bankmachine7_fifo_in_payload_we};
assign {soclinux_sdram_bankmachine7_fifo_out_last, soclinux_sdram_bankmachine7_fifo_out_first, soclinux_sdram_bankmachine7_fifo_out_payload_addr, soclinux_sdram_bankmachine7_fifo_out_payload_we} = soclinux_sdram_bankmachine7_syncfifo7_dout;
assign soclinux_sdram_bankmachine7_sink_ready = soclinux_sdram_bankmachine7_syncfifo7_writable;
assign soclinux_sdram_bankmachine7_syncfifo7_we = soclinux_sdram_bankmachine7_sink_valid;
assign soclinux_sdram_bankmachine7_fifo_in_first = soclinux_sdram_bankmachine7_sink_first;
assign soclinux_sdram_bankmachine7_fifo_in_last = soclinux_sdram_bankmachine7_sink_last;
assign soclinux_sdram_bankmachine7_fifo_in_payload_we = soclinux_sdram_bankmachine7_sink_payload_we;
assign soclinux_sdram_bankmachine7_fifo_in_payload_addr = soclinux_sdram_bankmachine7_sink_payload_addr;
assign soclinux_sdram_bankmachine7_source_valid = soclinux_sdram_bankmachine7_syncfifo7_readable;
assign soclinux_sdram_bankmachine7_source_first = soclinux_sdram_bankmachine7_fifo_out_first;
assign soclinux_sdram_bankmachine7_source_last = soclinux_sdram_bankmachine7_fifo_out_last;
assign soclinux_sdram_bankmachine7_source_payload_we = soclinux_sdram_bankmachine7_fifo_out_payload_we;
assign soclinux_sdram_bankmachine7_source_payload_addr = soclinux_sdram_bankmachine7_fifo_out_payload_addr;
assign soclinux_sdram_bankmachine7_syncfifo7_re = soclinux_sdram_bankmachine7_source_ready;
always @(*) begin
    soclinux_sdram_bankmachine7_wrport_adr <= 3'd0;
    if (soclinux_sdram_bankmachine7_replace) begin
        soclinux_sdram_bankmachine7_wrport_adr <= (soclinux_sdram_bankmachine7_produce - 1'd1);
    end else begin
        soclinux_sdram_bankmachine7_wrport_adr <= soclinux_sdram_bankmachine7_produce;
    end
end
assign soclinux_sdram_bankmachine7_wrport_dat_w = soclinux_sdram_bankmachine7_syncfifo7_din;
assign soclinux_sdram_bankmachine7_wrport_we = (soclinux_sdram_bankmachine7_syncfifo7_we & (soclinux_sdram_bankmachine7_syncfifo7_writable | soclinux_sdram_bankmachine7_replace));
assign soclinux_sdram_bankmachine7_do_read = (soclinux_sdram_bankmachine7_syncfifo7_readable & soclinux_sdram_bankmachine7_syncfifo7_re);
assign soclinux_sdram_bankmachine7_rdport_adr = soclinux_sdram_bankmachine7_consume;
assign soclinux_sdram_bankmachine7_syncfifo7_dout = soclinux_sdram_bankmachine7_rdport_dat_r;
assign soclinux_sdram_bankmachine7_syncfifo7_writable = (soclinux_sdram_bankmachine7_level != 4'd8);
assign soclinux_sdram_bankmachine7_syncfifo7_readable = (soclinux_sdram_bankmachine7_level != 1'd0);
assign soclinux_sdram_bankmachine7_pipe_valid_sink_ready = ((~soclinux_sdram_bankmachine7_pipe_valid_source_valid) | soclinux_sdram_bankmachine7_pipe_valid_source_ready);
assign soclinux_sdram_bankmachine7_pipe_valid_sink_valid = soclinux_sdram_bankmachine7_sink_sink_valid;
assign soclinux_sdram_bankmachine7_sink_sink_ready = soclinux_sdram_bankmachine7_pipe_valid_sink_ready;
assign soclinux_sdram_bankmachine7_pipe_valid_sink_first = soclinux_sdram_bankmachine7_sink_sink_first;
assign soclinux_sdram_bankmachine7_pipe_valid_sink_last = soclinux_sdram_bankmachine7_sink_sink_last;
assign soclinux_sdram_bankmachine7_pipe_valid_sink_payload_we = soclinux_sdram_bankmachine7_sink_sink_payload_we;
assign soclinux_sdram_bankmachine7_pipe_valid_sink_payload_addr = soclinux_sdram_bankmachine7_sink_sink_payload_addr;
assign soclinux_sdram_bankmachine7_source_source_valid = soclinux_sdram_bankmachine7_pipe_valid_source_valid;
assign soclinux_sdram_bankmachine7_pipe_valid_source_ready = soclinux_sdram_bankmachine7_source_source_ready;
assign soclinux_sdram_bankmachine7_source_source_first = soclinux_sdram_bankmachine7_pipe_valid_source_first;
assign soclinux_sdram_bankmachine7_source_source_last = soclinux_sdram_bankmachine7_pipe_valid_source_last;
assign soclinux_sdram_bankmachine7_source_source_payload_we = soclinux_sdram_bankmachine7_pipe_valid_source_payload_we;
assign soclinux_sdram_bankmachine7_source_source_payload_addr = soclinux_sdram_bankmachine7_pipe_valid_source_payload_addr;
always @(*) begin
    soclinux_bankmachine7_next_state <= 4'd0;
    soclinux_sdram_bankmachine7_cmd_payload_ras <= 1'd0;
    soclinux_sdram_bankmachine7_cmd_payload_we <= 1'd0;
    soclinux_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd0;
    soclinux_sdram_bankmachine7_cmd_payload_is_read <= 1'd0;
    soclinux_sdram_bankmachine7_cmd_payload_is_write <= 1'd0;
    soclinux_sdram_bankmachine7_req_wdata_ready <= 1'd0;
    soclinux_sdram_bankmachine7_req_rdata_valid <= 1'd0;
    soclinux_sdram_bankmachine7_refresh_gnt <= 1'd0;
    soclinux_sdram_bankmachine7_row_open <= 1'd0;
    soclinux_sdram_bankmachine7_cmd_valid <= 1'd0;
    soclinux_sdram_bankmachine7_row_close <= 1'd0;
    soclinux_sdram_bankmachine7_row_col_n_addr_sel <= 1'd0;
    soclinux_sdram_bankmachine7_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine7_next_state <= soclinux_bankmachine7_state;
    case (soclinux_bankmachine7_state)
        1'd1: begin
            if ((soclinux_sdram_bankmachine7_twtpcon_ready & soclinux_sdram_bankmachine7_trascon_ready)) begin
                soclinux_sdram_bankmachine7_cmd_valid <= 1'd1;
                if (soclinux_sdram_bankmachine7_cmd_ready) begin
                    soclinux_bankmachine7_next_state <= 3'd5;
                end
                soclinux_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
                soclinux_sdram_bankmachine7_cmd_payload_we <= 1'd1;
                soclinux_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_sdram_bankmachine7_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_sdram_bankmachine7_twtpcon_ready & soclinux_sdram_bankmachine7_trascon_ready)) begin
                soclinux_bankmachine7_next_state <= 3'd5;
            end
            soclinux_sdram_bankmachine7_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_sdram_bankmachine7_trccon_ready) begin
                soclinux_sdram_bankmachine7_row_col_n_addr_sel <= 1'd1;
                soclinux_sdram_bankmachine7_row_open <= 1'd1;
                soclinux_sdram_bankmachine7_cmd_valid <= 1'd1;
                soclinux_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_sdram_bankmachine7_cmd_ready) begin
                    soclinux_bankmachine7_next_state <= 3'd7;
                end
                soclinux_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_sdram_bankmachine7_twtpcon_ready) begin
                soclinux_sdram_bankmachine7_refresh_gnt <= 1'd1;
            end
            soclinux_sdram_bankmachine7_row_close <= 1'd1;
            soclinux_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_sdram_bankmachine7_refresh_req)) begin
                soclinux_bankmachine7_next_state <= 1'd0;
            end
        end
        3'd5: begin
            soclinux_bankmachine7_next_state <= 3'd6;
        end
        3'd6: begin
            soclinux_bankmachine7_next_state <= 2'd3;
        end
        3'd7: begin
            soclinux_bankmachine7_next_state <= 4'd8;
        end
        4'd8: begin
            soclinux_bankmachine7_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_sdram_bankmachine7_refresh_req) begin
                soclinux_bankmachine7_next_state <= 3'd4;
            end else begin
                if (soclinux_sdram_bankmachine7_source_source_valid) begin
                    if (soclinux_sdram_bankmachine7_row_opened) begin
                        if (soclinux_sdram_bankmachine7_row_hit) begin
                            soclinux_sdram_bankmachine7_cmd_valid <= 1'd1;
                            if (soclinux_sdram_bankmachine7_source_source_payload_we) begin
                                soclinux_sdram_bankmachine7_req_wdata_ready <= soclinux_sdram_bankmachine7_cmd_ready;
                                soclinux_sdram_bankmachine7_cmd_payload_is_write <= 1'd1;
                                soclinux_sdram_bankmachine7_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_sdram_bankmachine7_req_rdata_valid <= soclinux_sdram_bankmachine7_cmd_ready;
                                soclinux_sdram_bankmachine7_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_sdram_bankmachine7_cmd_payload_cas <= 1'd1;
                            if ((soclinux_sdram_bankmachine7_cmd_ready & soclinux_sdram_bankmachine7_auto_precharge)) begin
                                soclinux_bankmachine7_next_state <= 2'd2;
                            end
                        end else begin
                            soclinux_bankmachine7_next_state <= 1'd1;
                        end
                    end else begin
                        soclinux_bankmachine7_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_sdram_rdcmdphase = (k7ddrphy_rdphase_storage - 1'd1);
assign soclinux_sdram_wrcmdphase = (k7ddrphy_wrphase_storage - 1'd1);
assign soclinux_sdram_trrdcon_valid = ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & ((soclinux_sdram_choose_cmd_cmd_payload_ras & (~soclinux_sdram_choose_cmd_cmd_payload_cas)) & (~soclinux_sdram_choose_cmd_cmd_payload_we)));
assign soclinux_sdram_tfawcon_valid = ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & ((soclinux_sdram_choose_cmd_cmd_payload_ras & (~soclinux_sdram_choose_cmd_cmd_payload_cas)) & (~soclinux_sdram_choose_cmd_cmd_payload_we)));
assign soclinux_sdram_ras_allowed = (soclinux_sdram_trrdcon_ready & soclinux_sdram_tfawcon_ready);
assign soclinux_sdram_tccdcon_valid = ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & (soclinux_sdram_choose_req_cmd_payload_is_write | soclinux_sdram_choose_req_cmd_payload_is_read));
assign soclinux_sdram_cas_allowed = soclinux_sdram_tccdcon_ready;
assign soclinux_sdram_twtrcon_valid = ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_is_write);
assign soclinux_sdram_read_available = ((((((((soclinux_sdram_bankmachine0_cmd_valid & soclinux_sdram_bankmachine0_cmd_payload_is_read) | (soclinux_sdram_bankmachine1_cmd_valid & soclinux_sdram_bankmachine1_cmd_payload_is_read)) | (soclinux_sdram_bankmachine2_cmd_valid & soclinux_sdram_bankmachine2_cmd_payload_is_read)) | (soclinux_sdram_bankmachine3_cmd_valid & soclinux_sdram_bankmachine3_cmd_payload_is_read)) | (soclinux_sdram_bankmachine4_cmd_valid & soclinux_sdram_bankmachine4_cmd_payload_is_read)) | (soclinux_sdram_bankmachine5_cmd_valid & soclinux_sdram_bankmachine5_cmd_payload_is_read)) | (soclinux_sdram_bankmachine6_cmd_valid & soclinux_sdram_bankmachine6_cmd_payload_is_read)) | (soclinux_sdram_bankmachine7_cmd_valid & soclinux_sdram_bankmachine7_cmd_payload_is_read));
assign soclinux_sdram_write_available = ((((((((soclinux_sdram_bankmachine0_cmd_valid & soclinux_sdram_bankmachine0_cmd_payload_is_write) | (soclinux_sdram_bankmachine1_cmd_valid & soclinux_sdram_bankmachine1_cmd_payload_is_write)) | (soclinux_sdram_bankmachine2_cmd_valid & soclinux_sdram_bankmachine2_cmd_payload_is_write)) | (soclinux_sdram_bankmachine3_cmd_valid & soclinux_sdram_bankmachine3_cmd_payload_is_write)) | (soclinux_sdram_bankmachine4_cmd_valid & soclinux_sdram_bankmachine4_cmd_payload_is_write)) | (soclinux_sdram_bankmachine5_cmd_valid & soclinux_sdram_bankmachine5_cmd_payload_is_write)) | (soclinux_sdram_bankmachine6_cmd_valid & soclinux_sdram_bankmachine6_cmd_payload_is_write)) | (soclinux_sdram_bankmachine7_cmd_valid & soclinux_sdram_bankmachine7_cmd_payload_is_write));
assign soclinux_sdram_max_time0 = (soclinux_sdram_time0 == 1'd0);
assign soclinux_sdram_max_time1 = (soclinux_sdram_time1 == 1'd0);
assign soclinux_sdram_bankmachine0_refresh_req = soclinux_sdram_cmd_valid;
assign soclinux_sdram_bankmachine1_refresh_req = soclinux_sdram_cmd_valid;
assign soclinux_sdram_bankmachine2_refresh_req = soclinux_sdram_cmd_valid;
assign soclinux_sdram_bankmachine3_refresh_req = soclinux_sdram_cmd_valid;
assign soclinux_sdram_bankmachine4_refresh_req = soclinux_sdram_cmd_valid;
assign soclinux_sdram_bankmachine5_refresh_req = soclinux_sdram_cmd_valid;
assign soclinux_sdram_bankmachine6_refresh_req = soclinux_sdram_cmd_valid;
assign soclinux_sdram_bankmachine7_refresh_req = soclinux_sdram_cmd_valid;
assign soclinux_sdram_go_to_refresh = (((((((soclinux_sdram_bankmachine0_refresh_gnt & soclinux_sdram_bankmachine1_refresh_gnt) & soclinux_sdram_bankmachine2_refresh_gnt) & soclinux_sdram_bankmachine3_refresh_gnt) & soclinux_sdram_bankmachine4_refresh_gnt) & soclinux_sdram_bankmachine5_refresh_gnt) & soclinux_sdram_bankmachine6_refresh_gnt) & soclinux_sdram_bankmachine7_refresh_gnt);
assign soclinux_sdram_interface_rdata = {soclinux_sdram_dfi_p3_rddata, soclinux_sdram_dfi_p2_rddata, soclinux_sdram_dfi_p1_rddata, soclinux_sdram_dfi_p0_rddata};
assign {soclinux_sdram_dfi_p3_wrdata, soclinux_sdram_dfi_p2_wrdata, soclinux_sdram_dfi_p1_wrdata, soclinux_sdram_dfi_p0_wrdata} = soclinux_sdram_interface_wdata;
assign {soclinux_sdram_dfi_p3_wrdata_mask, soclinux_sdram_dfi_p2_wrdata_mask, soclinux_sdram_dfi_p1_wrdata_mask, soclinux_sdram_dfi_p0_wrdata_mask} = (~soclinux_sdram_interface_wdata_we);
always @(*) begin
    soclinux_sdram_choose_cmd_valids <= 8'd0;
    soclinux_sdram_choose_cmd_valids[0] <= (soclinux_sdram_bankmachine0_cmd_valid & (((soclinux_sdram_bankmachine0_cmd_payload_is_cmd & soclinux_sdram_choose_cmd_want_cmds) & ((~((soclinux_sdram_bankmachine0_cmd_payload_ras & (~soclinux_sdram_bankmachine0_cmd_payload_cas)) & (~soclinux_sdram_bankmachine0_cmd_payload_we))) | soclinux_sdram_choose_cmd_want_activates)) | ((soclinux_sdram_bankmachine0_cmd_payload_is_read == soclinux_sdram_choose_cmd_want_reads) & (soclinux_sdram_bankmachine0_cmd_payload_is_write == soclinux_sdram_choose_cmd_want_writes))));
    soclinux_sdram_choose_cmd_valids[1] <= (soclinux_sdram_bankmachine1_cmd_valid & (((soclinux_sdram_bankmachine1_cmd_payload_is_cmd & soclinux_sdram_choose_cmd_want_cmds) & ((~((soclinux_sdram_bankmachine1_cmd_payload_ras & (~soclinux_sdram_bankmachine1_cmd_payload_cas)) & (~soclinux_sdram_bankmachine1_cmd_payload_we))) | soclinux_sdram_choose_cmd_want_activates)) | ((soclinux_sdram_bankmachine1_cmd_payload_is_read == soclinux_sdram_choose_cmd_want_reads) & (soclinux_sdram_bankmachine1_cmd_payload_is_write == soclinux_sdram_choose_cmd_want_writes))));
    soclinux_sdram_choose_cmd_valids[2] <= (soclinux_sdram_bankmachine2_cmd_valid & (((soclinux_sdram_bankmachine2_cmd_payload_is_cmd & soclinux_sdram_choose_cmd_want_cmds) & ((~((soclinux_sdram_bankmachine2_cmd_payload_ras & (~soclinux_sdram_bankmachine2_cmd_payload_cas)) & (~soclinux_sdram_bankmachine2_cmd_payload_we))) | soclinux_sdram_choose_cmd_want_activates)) | ((soclinux_sdram_bankmachine2_cmd_payload_is_read == soclinux_sdram_choose_cmd_want_reads) & (soclinux_sdram_bankmachine2_cmd_payload_is_write == soclinux_sdram_choose_cmd_want_writes))));
    soclinux_sdram_choose_cmd_valids[3] <= (soclinux_sdram_bankmachine3_cmd_valid & (((soclinux_sdram_bankmachine3_cmd_payload_is_cmd & soclinux_sdram_choose_cmd_want_cmds) & ((~((soclinux_sdram_bankmachine3_cmd_payload_ras & (~soclinux_sdram_bankmachine3_cmd_payload_cas)) & (~soclinux_sdram_bankmachine3_cmd_payload_we))) | soclinux_sdram_choose_cmd_want_activates)) | ((soclinux_sdram_bankmachine3_cmd_payload_is_read == soclinux_sdram_choose_cmd_want_reads) & (soclinux_sdram_bankmachine3_cmd_payload_is_write == soclinux_sdram_choose_cmd_want_writes))));
    soclinux_sdram_choose_cmd_valids[4] <= (soclinux_sdram_bankmachine4_cmd_valid & (((soclinux_sdram_bankmachine4_cmd_payload_is_cmd & soclinux_sdram_choose_cmd_want_cmds) & ((~((soclinux_sdram_bankmachine4_cmd_payload_ras & (~soclinux_sdram_bankmachine4_cmd_payload_cas)) & (~soclinux_sdram_bankmachine4_cmd_payload_we))) | soclinux_sdram_choose_cmd_want_activates)) | ((soclinux_sdram_bankmachine4_cmd_payload_is_read == soclinux_sdram_choose_cmd_want_reads) & (soclinux_sdram_bankmachine4_cmd_payload_is_write == soclinux_sdram_choose_cmd_want_writes))));
    soclinux_sdram_choose_cmd_valids[5] <= (soclinux_sdram_bankmachine5_cmd_valid & (((soclinux_sdram_bankmachine5_cmd_payload_is_cmd & soclinux_sdram_choose_cmd_want_cmds) & ((~((soclinux_sdram_bankmachine5_cmd_payload_ras & (~soclinux_sdram_bankmachine5_cmd_payload_cas)) & (~soclinux_sdram_bankmachine5_cmd_payload_we))) | soclinux_sdram_choose_cmd_want_activates)) | ((soclinux_sdram_bankmachine5_cmd_payload_is_read == soclinux_sdram_choose_cmd_want_reads) & (soclinux_sdram_bankmachine5_cmd_payload_is_write == soclinux_sdram_choose_cmd_want_writes))));
    soclinux_sdram_choose_cmd_valids[6] <= (soclinux_sdram_bankmachine6_cmd_valid & (((soclinux_sdram_bankmachine6_cmd_payload_is_cmd & soclinux_sdram_choose_cmd_want_cmds) & ((~((soclinux_sdram_bankmachine6_cmd_payload_ras & (~soclinux_sdram_bankmachine6_cmd_payload_cas)) & (~soclinux_sdram_bankmachine6_cmd_payload_we))) | soclinux_sdram_choose_cmd_want_activates)) | ((soclinux_sdram_bankmachine6_cmd_payload_is_read == soclinux_sdram_choose_cmd_want_reads) & (soclinux_sdram_bankmachine6_cmd_payload_is_write == soclinux_sdram_choose_cmd_want_writes))));
    soclinux_sdram_choose_cmd_valids[7] <= (soclinux_sdram_bankmachine7_cmd_valid & (((soclinux_sdram_bankmachine7_cmd_payload_is_cmd & soclinux_sdram_choose_cmd_want_cmds) & ((~((soclinux_sdram_bankmachine7_cmd_payload_ras & (~soclinux_sdram_bankmachine7_cmd_payload_cas)) & (~soclinux_sdram_bankmachine7_cmd_payload_we))) | soclinux_sdram_choose_cmd_want_activates)) | ((soclinux_sdram_bankmachine7_cmd_payload_is_read == soclinux_sdram_choose_cmd_want_reads) & (soclinux_sdram_bankmachine7_cmd_payload_is_write == soclinux_sdram_choose_cmd_want_writes))));
end
assign soclinux_sdram_choose_cmd_request = soclinux_sdram_choose_cmd_valids;
assign soclinux_sdram_choose_cmd_cmd_valid = rhs_array_muxed16;
assign soclinux_sdram_choose_cmd_cmd_payload_a = rhs_array_muxed17;
assign soclinux_sdram_choose_cmd_cmd_payload_ba = rhs_array_muxed18;
assign soclinux_sdram_choose_cmd_cmd_payload_is_read = rhs_array_muxed19;
assign soclinux_sdram_choose_cmd_cmd_payload_is_write = rhs_array_muxed20;
assign soclinux_sdram_choose_cmd_cmd_payload_is_cmd = rhs_array_muxed21;
always @(*) begin
    soclinux_sdram_choose_cmd_cmd_payload_cas <= 1'd0;
    if (soclinux_sdram_choose_cmd_cmd_valid) begin
        soclinux_sdram_choose_cmd_cmd_payload_cas <= t_array_muxed0;
    end
end
always @(*) begin
    soclinux_sdram_choose_cmd_cmd_payload_ras <= 1'd0;
    if (soclinux_sdram_choose_cmd_cmd_valid) begin
        soclinux_sdram_choose_cmd_cmd_payload_ras <= t_array_muxed1;
    end
end
always @(*) begin
    soclinux_sdram_choose_cmd_cmd_payload_we <= 1'd0;
    if (soclinux_sdram_choose_cmd_cmd_valid) begin
        soclinux_sdram_choose_cmd_cmd_payload_we <= t_array_muxed2;
    end
end
assign soclinux_sdram_choose_cmd_ce = (soclinux_sdram_choose_cmd_cmd_ready | (~soclinux_sdram_choose_cmd_cmd_valid));
always @(*) begin
    soclinux_sdram_choose_req_valids <= 8'd0;
    soclinux_sdram_choose_req_valids[0] <= (soclinux_sdram_bankmachine0_cmd_valid & (((soclinux_sdram_bankmachine0_cmd_payload_is_cmd & soclinux_sdram_choose_req_want_cmds) & ((~((soclinux_sdram_bankmachine0_cmd_payload_ras & (~soclinux_sdram_bankmachine0_cmd_payload_cas)) & (~soclinux_sdram_bankmachine0_cmd_payload_we))) | soclinux_sdram_choose_req_want_activates)) | ((soclinux_sdram_bankmachine0_cmd_payload_is_read == soclinux_sdram_choose_req_want_reads) & (soclinux_sdram_bankmachine0_cmd_payload_is_write == soclinux_sdram_choose_req_want_writes))));
    soclinux_sdram_choose_req_valids[1] <= (soclinux_sdram_bankmachine1_cmd_valid & (((soclinux_sdram_bankmachine1_cmd_payload_is_cmd & soclinux_sdram_choose_req_want_cmds) & ((~((soclinux_sdram_bankmachine1_cmd_payload_ras & (~soclinux_sdram_bankmachine1_cmd_payload_cas)) & (~soclinux_sdram_bankmachine1_cmd_payload_we))) | soclinux_sdram_choose_req_want_activates)) | ((soclinux_sdram_bankmachine1_cmd_payload_is_read == soclinux_sdram_choose_req_want_reads) & (soclinux_sdram_bankmachine1_cmd_payload_is_write == soclinux_sdram_choose_req_want_writes))));
    soclinux_sdram_choose_req_valids[2] <= (soclinux_sdram_bankmachine2_cmd_valid & (((soclinux_sdram_bankmachine2_cmd_payload_is_cmd & soclinux_sdram_choose_req_want_cmds) & ((~((soclinux_sdram_bankmachine2_cmd_payload_ras & (~soclinux_sdram_bankmachine2_cmd_payload_cas)) & (~soclinux_sdram_bankmachine2_cmd_payload_we))) | soclinux_sdram_choose_req_want_activates)) | ((soclinux_sdram_bankmachine2_cmd_payload_is_read == soclinux_sdram_choose_req_want_reads) & (soclinux_sdram_bankmachine2_cmd_payload_is_write == soclinux_sdram_choose_req_want_writes))));
    soclinux_sdram_choose_req_valids[3] <= (soclinux_sdram_bankmachine3_cmd_valid & (((soclinux_sdram_bankmachine3_cmd_payload_is_cmd & soclinux_sdram_choose_req_want_cmds) & ((~((soclinux_sdram_bankmachine3_cmd_payload_ras & (~soclinux_sdram_bankmachine3_cmd_payload_cas)) & (~soclinux_sdram_bankmachine3_cmd_payload_we))) | soclinux_sdram_choose_req_want_activates)) | ((soclinux_sdram_bankmachine3_cmd_payload_is_read == soclinux_sdram_choose_req_want_reads) & (soclinux_sdram_bankmachine3_cmd_payload_is_write == soclinux_sdram_choose_req_want_writes))));
    soclinux_sdram_choose_req_valids[4] <= (soclinux_sdram_bankmachine4_cmd_valid & (((soclinux_sdram_bankmachine4_cmd_payload_is_cmd & soclinux_sdram_choose_req_want_cmds) & ((~((soclinux_sdram_bankmachine4_cmd_payload_ras & (~soclinux_sdram_bankmachine4_cmd_payload_cas)) & (~soclinux_sdram_bankmachine4_cmd_payload_we))) | soclinux_sdram_choose_req_want_activates)) | ((soclinux_sdram_bankmachine4_cmd_payload_is_read == soclinux_sdram_choose_req_want_reads) & (soclinux_sdram_bankmachine4_cmd_payload_is_write == soclinux_sdram_choose_req_want_writes))));
    soclinux_sdram_choose_req_valids[5] <= (soclinux_sdram_bankmachine5_cmd_valid & (((soclinux_sdram_bankmachine5_cmd_payload_is_cmd & soclinux_sdram_choose_req_want_cmds) & ((~((soclinux_sdram_bankmachine5_cmd_payload_ras & (~soclinux_sdram_bankmachine5_cmd_payload_cas)) & (~soclinux_sdram_bankmachine5_cmd_payload_we))) | soclinux_sdram_choose_req_want_activates)) | ((soclinux_sdram_bankmachine5_cmd_payload_is_read == soclinux_sdram_choose_req_want_reads) & (soclinux_sdram_bankmachine5_cmd_payload_is_write == soclinux_sdram_choose_req_want_writes))));
    soclinux_sdram_choose_req_valids[6] <= (soclinux_sdram_bankmachine6_cmd_valid & (((soclinux_sdram_bankmachine6_cmd_payload_is_cmd & soclinux_sdram_choose_req_want_cmds) & ((~((soclinux_sdram_bankmachine6_cmd_payload_ras & (~soclinux_sdram_bankmachine6_cmd_payload_cas)) & (~soclinux_sdram_bankmachine6_cmd_payload_we))) | soclinux_sdram_choose_req_want_activates)) | ((soclinux_sdram_bankmachine6_cmd_payload_is_read == soclinux_sdram_choose_req_want_reads) & (soclinux_sdram_bankmachine6_cmd_payload_is_write == soclinux_sdram_choose_req_want_writes))));
    soclinux_sdram_choose_req_valids[7] <= (soclinux_sdram_bankmachine7_cmd_valid & (((soclinux_sdram_bankmachine7_cmd_payload_is_cmd & soclinux_sdram_choose_req_want_cmds) & ((~((soclinux_sdram_bankmachine7_cmd_payload_ras & (~soclinux_sdram_bankmachine7_cmd_payload_cas)) & (~soclinux_sdram_bankmachine7_cmd_payload_we))) | soclinux_sdram_choose_req_want_activates)) | ((soclinux_sdram_bankmachine7_cmd_payload_is_read == soclinux_sdram_choose_req_want_reads) & (soclinux_sdram_bankmachine7_cmd_payload_is_write == soclinux_sdram_choose_req_want_writes))));
end
assign soclinux_sdram_choose_req_request = soclinux_sdram_choose_req_valids;
assign soclinux_sdram_choose_req_cmd_valid = rhs_array_muxed22;
assign soclinux_sdram_choose_req_cmd_payload_a = rhs_array_muxed23;
assign soclinux_sdram_choose_req_cmd_payload_ba = rhs_array_muxed24;
assign soclinux_sdram_choose_req_cmd_payload_is_read = rhs_array_muxed25;
assign soclinux_sdram_choose_req_cmd_payload_is_write = rhs_array_muxed26;
assign soclinux_sdram_choose_req_cmd_payload_is_cmd = rhs_array_muxed27;
always @(*) begin
    soclinux_sdram_choose_req_cmd_payload_cas <= 1'd0;
    if (soclinux_sdram_choose_req_cmd_valid) begin
        soclinux_sdram_choose_req_cmd_payload_cas <= t_array_muxed3;
    end
end
always @(*) begin
    soclinux_sdram_choose_req_cmd_payload_ras <= 1'd0;
    if (soclinux_sdram_choose_req_cmd_valid) begin
        soclinux_sdram_choose_req_cmd_payload_ras <= t_array_muxed4;
    end
end
always @(*) begin
    soclinux_sdram_choose_req_cmd_payload_we <= 1'd0;
    if (soclinux_sdram_choose_req_cmd_valid) begin
        soclinux_sdram_choose_req_cmd_payload_we <= t_array_muxed5;
    end
end
always @(*) begin
    soclinux_sdram_bankmachine0_cmd_ready <= 1'd0;
    if (((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & (soclinux_sdram_choose_cmd_grant == 1'd0))) begin
        soclinux_sdram_bankmachine0_cmd_ready <= 1'd1;
    end
    if (((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & (soclinux_sdram_choose_req_grant == 1'd0))) begin
        soclinux_sdram_bankmachine0_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_sdram_bankmachine1_cmd_ready <= 1'd0;
    if (((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & (soclinux_sdram_choose_cmd_grant == 1'd1))) begin
        soclinux_sdram_bankmachine1_cmd_ready <= 1'd1;
    end
    if (((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & (soclinux_sdram_choose_req_grant == 1'd1))) begin
        soclinux_sdram_bankmachine1_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_sdram_bankmachine2_cmd_ready <= 1'd0;
    if (((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & (soclinux_sdram_choose_cmd_grant == 2'd2))) begin
        soclinux_sdram_bankmachine2_cmd_ready <= 1'd1;
    end
    if (((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & (soclinux_sdram_choose_req_grant == 2'd2))) begin
        soclinux_sdram_bankmachine2_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_sdram_bankmachine3_cmd_ready <= 1'd0;
    if (((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & (soclinux_sdram_choose_cmd_grant == 2'd3))) begin
        soclinux_sdram_bankmachine3_cmd_ready <= 1'd1;
    end
    if (((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & (soclinux_sdram_choose_req_grant == 2'd3))) begin
        soclinux_sdram_bankmachine3_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_sdram_bankmachine4_cmd_ready <= 1'd0;
    if (((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & (soclinux_sdram_choose_cmd_grant == 3'd4))) begin
        soclinux_sdram_bankmachine4_cmd_ready <= 1'd1;
    end
    if (((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & (soclinux_sdram_choose_req_grant == 3'd4))) begin
        soclinux_sdram_bankmachine4_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_sdram_bankmachine5_cmd_ready <= 1'd0;
    if (((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & (soclinux_sdram_choose_cmd_grant == 3'd5))) begin
        soclinux_sdram_bankmachine5_cmd_ready <= 1'd1;
    end
    if (((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & (soclinux_sdram_choose_req_grant == 3'd5))) begin
        soclinux_sdram_bankmachine5_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_sdram_bankmachine6_cmd_ready <= 1'd0;
    if (((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & (soclinux_sdram_choose_cmd_grant == 3'd6))) begin
        soclinux_sdram_bankmachine6_cmd_ready <= 1'd1;
    end
    if (((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & (soclinux_sdram_choose_req_grant == 3'd6))) begin
        soclinux_sdram_bankmachine6_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_sdram_bankmachine7_cmd_ready <= 1'd0;
    if (((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & (soclinux_sdram_choose_cmd_grant == 3'd7))) begin
        soclinux_sdram_bankmachine7_cmd_ready <= 1'd1;
    end
    if (((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & (soclinux_sdram_choose_req_grant == 3'd7))) begin
        soclinux_sdram_bankmachine7_cmd_ready <= 1'd1;
    end
end
assign soclinux_sdram_choose_req_ce = (soclinux_sdram_choose_req_cmd_ready | (~soclinux_sdram_choose_req_cmd_valid));
assign soclinux_sdram_dfi_p0_reset_n = 1'd1;
assign soclinux_sdram_dfi_p0_cke = {1{soclinux_sdram_steerer0}};
assign soclinux_sdram_dfi_p0_odt = {1{soclinux_sdram_steerer1}};
assign soclinux_sdram_dfi_p1_reset_n = 1'd1;
assign soclinux_sdram_dfi_p1_cke = {1{soclinux_sdram_steerer2}};
assign soclinux_sdram_dfi_p1_odt = {1{soclinux_sdram_steerer3}};
assign soclinux_sdram_dfi_p2_reset_n = 1'd1;
assign soclinux_sdram_dfi_p2_cke = {1{soclinux_sdram_steerer4}};
assign soclinux_sdram_dfi_p2_odt = {1{soclinux_sdram_steerer5}};
assign soclinux_sdram_dfi_p3_reset_n = 1'd1;
assign soclinux_sdram_dfi_p3_cke = {1{soclinux_sdram_steerer6}};
assign soclinux_sdram_dfi_p3_odt = {1{soclinux_sdram_steerer7}};
assign soclinux_sdram_tfawcon_count = ((((soclinux_sdram_tfawcon_window[0] + soclinux_sdram_tfawcon_window[1]) + soclinux_sdram_tfawcon_window[2]) + soclinux_sdram_tfawcon_window[3]) + soclinux_sdram_tfawcon_window[4]);
always @(*) begin
    soclinux_multiplexer_next_state <= 4'd0;
    soclinux_sdram_en1 <= 1'd0;
    soclinux_sdram_steerer_sel0 <= 2'd0;
    soclinux_sdram_cmd_ready <= 1'd0;
    soclinux_sdram_steerer_sel1 <= 2'd0;
    soclinux_sdram_steerer_sel2 <= 2'd0;
    soclinux_sdram_choose_cmd_want_activates <= 1'd0;
    soclinux_sdram_steerer_sel3 <= 2'd0;
    soclinux_sdram_en0 <= 1'd0;
    soclinux_sdram_choose_cmd_cmd_ready <= 1'd0;
    soclinux_sdram_choose_req_want_reads <= 1'd0;
    soclinux_sdram_choose_req_want_writes <= 1'd0;
    soclinux_sdram_choose_req_cmd_ready <= 1'd0;
    soclinux_multiplexer_next_state <= soclinux_multiplexer_state;
    case (soclinux_multiplexer_state)
        1'd1: begin
            soclinux_sdram_en1 <= 1'd1;
            soclinux_sdram_choose_req_want_writes <= 1'd1;
            if (1'd0) begin
                soclinux_sdram_choose_req_cmd_ready <= (soclinux_sdram_cas_allowed & ((~((soclinux_sdram_choose_req_cmd_payload_ras & (~soclinux_sdram_choose_req_cmd_payload_cas)) & (~soclinux_sdram_choose_req_cmd_payload_we))) | soclinux_sdram_ras_allowed));
            end else begin
                soclinux_sdram_choose_cmd_want_activates <= soclinux_sdram_ras_allowed;
                soclinux_sdram_choose_cmd_cmd_ready <= ((~((soclinux_sdram_choose_cmd_cmd_payload_ras & (~soclinux_sdram_choose_cmd_cmd_payload_cas)) & (~soclinux_sdram_choose_cmd_cmd_payload_we))) | soclinux_sdram_ras_allowed);
                soclinux_sdram_choose_req_cmd_ready <= soclinux_sdram_cas_allowed;
            end
            soclinux_sdram_steerer_sel0 <= 1'd0;
            if ((k7ddrphy_wrphase_storage == 1'd0)) begin
                soclinux_sdram_steerer_sel0 <= 2'd2;
            end
            if ((soclinux_sdram_wrcmdphase == 1'd0)) begin
                soclinux_sdram_steerer_sel0 <= 1'd1;
            end
            soclinux_sdram_steerer_sel1 <= 1'd0;
            if ((k7ddrphy_wrphase_storage == 1'd1)) begin
                soclinux_sdram_steerer_sel1 <= 2'd2;
            end
            if ((soclinux_sdram_wrcmdphase == 1'd1)) begin
                soclinux_sdram_steerer_sel1 <= 1'd1;
            end
            soclinux_sdram_steerer_sel2 <= 1'd0;
            if ((k7ddrphy_wrphase_storage == 2'd2)) begin
                soclinux_sdram_steerer_sel2 <= 2'd2;
            end
            if ((soclinux_sdram_wrcmdphase == 2'd2)) begin
                soclinux_sdram_steerer_sel2 <= 1'd1;
            end
            soclinux_sdram_steerer_sel3 <= 1'd0;
            if ((k7ddrphy_wrphase_storage == 2'd3)) begin
                soclinux_sdram_steerer_sel3 <= 2'd2;
            end
            if ((soclinux_sdram_wrcmdphase == 2'd3)) begin
                soclinux_sdram_steerer_sel3 <= 1'd1;
            end
            if (soclinux_sdram_read_available) begin
                if (((~soclinux_sdram_write_available) | soclinux_sdram_max_time1)) begin
                    soclinux_multiplexer_next_state <= 2'd3;
                end
            end
            if (soclinux_sdram_go_to_refresh) begin
                soclinux_multiplexer_next_state <= 2'd2;
            end
        end
        2'd2: begin
            soclinux_sdram_steerer_sel0 <= 2'd3;
            soclinux_sdram_cmd_ready <= 1'd1;
            if (soclinux_sdram_cmd_last) begin
                soclinux_multiplexer_next_state <= 1'd0;
            end
        end
        2'd3: begin
            if (soclinux_sdram_twtrcon_ready) begin
                soclinux_multiplexer_next_state <= 1'd0;
            end
        end
        3'd4: begin
            soclinux_multiplexer_next_state <= 3'd5;
        end
        3'd5: begin
            soclinux_multiplexer_next_state <= 3'd6;
        end
        3'd6: begin
            soclinux_multiplexer_next_state <= 3'd7;
        end
        3'd7: begin
            soclinux_multiplexer_next_state <= 4'd8;
        end
        4'd8: begin
            soclinux_multiplexer_next_state <= 4'd9;
        end
        4'd9: begin
            soclinux_multiplexer_next_state <= 4'd10;
        end
        4'd10: begin
            soclinux_multiplexer_next_state <= 1'd1;
        end
        default: begin
            soclinux_sdram_en0 <= 1'd1;
            soclinux_sdram_choose_req_want_reads <= 1'd1;
            if (1'd0) begin
                soclinux_sdram_choose_req_cmd_ready <= (soclinux_sdram_cas_allowed & ((~((soclinux_sdram_choose_req_cmd_payload_ras & (~soclinux_sdram_choose_req_cmd_payload_cas)) & (~soclinux_sdram_choose_req_cmd_payload_we))) | soclinux_sdram_ras_allowed));
            end else begin
                soclinux_sdram_choose_cmd_want_activates <= soclinux_sdram_ras_allowed;
                soclinux_sdram_choose_cmd_cmd_ready <= ((~((soclinux_sdram_choose_cmd_cmd_payload_ras & (~soclinux_sdram_choose_cmd_cmd_payload_cas)) & (~soclinux_sdram_choose_cmd_cmd_payload_we))) | soclinux_sdram_ras_allowed);
                soclinux_sdram_choose_req_cmd_ready <= soclinux_sdram_cas_allowed;
            end
            soclinux_sdram_steerer_sel0 <= 1'd0;
            if ((k7ddrphy_rdphase_storage == 1'd0)) begin
                soclinux_sdram_steerer_sel0 <= 2'd2;
            end
            if ((soclinux_sdram_rdcmdphase == 1'd0)) begin
                soclinux_sdram_steerer_sel0 <= 1'd1;
            end
            soclinux_sdram_steerer_sel1 <= 1'd0;
            if ((k7ddrphy_rdphase_storage == 1'd1)) begin
                soclinux_sdram_steerer_sel1 <= 2'd2;
            end
            if ((soclinux_sdram_rdcmdphase == 1'd1)) begin
                soclinux_sdram_steerer_sel1 <= 1'd1;
            end
            soclinux_sdram_steerer_sel2 <= 1'd0;
            if ((k7ddrphy_rdphase_storage == 2'd2)) begin
                soclinux_sdram_steerer_sel2 <= 2'd2;
            end
            if ((soclinux_sdram_rdcmdphase == 2'd2)) begin
                soclinux_sdram_steerer_sel2 <= 1'd1;
            end
            soclinux_sdram_steerer_sel3 <= 1'd0;
            if ((k7ddrphy_rdphase_storage == 2'd3)) begin
                soclinux_sdram_steerer_sel3 <= 2'd2;
            end
            if ((soclinux_sdram_rdcmdphase == 2'd3)) begin
                soclinux_sdram_steerer_sel3 <= 1'd1;
            end
            if (soclinux_sdram_write_available) begin
                if (((~soclinux_sdram_read_available) | soclinux_sdram_max_time0)) begin
                    soclinux_multiplexer_next_state <= 3'd4;
                end
            end
            if (soclinux_sdram_go_to_refresh) begin
                soclinux_multiplexer_next_state <= 2'd2;
            end
        end
    endcase
end
assign soclinux_roundrobin0_request = {(((soclinux_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((soclinux_locked0 | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid)};
assign soclinux_roundrobin0_ce = ((~soclinux_sdram_interface_bank0_valid) & (~soclinux_sdram_interface_bank0_lock));
assign soclinux_sdram_interface_bank0_addr = rhs_array_muxed28;
assign soclinux_sdram_interface_bank0_we = rhs_array_muxed29;
assign soclinux_sdram_interface_bank0_valid = rhs_array_muxed30;
assign soclinux_roundrobin1_request = {(((soclinux_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((soclinux_locked1 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid)};
assign soclinux_roundrobin1_ce = ((~soclinux_sdram_interface_bank1_valid) & (~soclinux_sdram_interface_bank1_lock));
assign soclinux_sdram_interface_bank1_addr = rhs_array_muxed31;
assign soclinux_sdram_interface_bank1_we = rhs_array_muxed32;
assign soclinux_sdram_interface_bank1_valid = rhs_array_muxed33;
assign soclinux_roundrobin2_request = {(((soclinux_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((soclinux_locked2 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid)};
assign soclinux_roundrobin2_ce = ((~soclinux_sdram_interface_bank2_valid) & (~soclinux_sdram_interface_bank2_lock));
assign soclinux_sdram_interface_bank2_addr = rhs_array_muxed34;
assign soclinux_sdram_interface_bank2_we = rhs_array_muxed35;
assign soclinux_sdram_interface_bank2_valid = rhs_array_muxed36;
assign soclinux_roundrobin3_request = {(((soclinux_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((soclinux_locked3 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid)};
assign soclinux_roundrobin3_ce = ((~soclinux_sdram_interface_bank3_valid) & (~soclinux_sdram_interface_bank3_lock));
assign soclinux_sdram_interface_bank3_addr = rhs_array_muxed37;
assign soclinux_sdram_interface_bank3_we = rhs_array_muxed38;
assign soclinux_sdram_interface_bank3_valid = rhs_array_muxed39;
assign soclinux_roundrobin4_request = {(((soclinux_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((soclinux_locked4 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid)};
assign soclinux_roundrobin4_ce = ((~soclinux_sdram_interface_bank4_valid) & (~soclinux_sdram_interface_bank4_lock));
assign soclinux_sdram_interface_bank4_addr = rhs_array_muxed40;
assign soclinux_sdram_interface_bank4_we = rhs_array_muxed41;
assign soclinux_sdram_interface_bank4_valid = rhs_array_muxed42;
assign soclinux_roundrobin5_request = {(((soclinux_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((soclinux_locked5 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid)};
assign soclinux_roundrobin5_ce = ((~soclinux_sdram_interface_bank5_valid) & (~soclinux_sdram_interface_bank5_lock));
assign soclinux_sdram_interface_bank5_addr = rhs_array_muxed43;
assign soclinux_sdram_interface_bank5_we = rhs_array_muxed44;
assign soclinux_sdram_interface_bank5_valid = rhs_array_muxed45;
assign soclinux_roundrobin6_request = {(((soclinux_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((soclinux_locked6 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid)};
assign soclinux_roundrobin6_ce = ((~soclinux_sdram_interface_bank6_valid) & (~soclinux_sdram_interface_bank6_lock));
assign soclinux_sdram_interface_bank6_addr = rhs_array_muxed46;
assign soclinux_sdram_interface_bank6_we = rhs_array_muxed47;
assign soclinux_sdram_interface_bank6_valid = rhs_array_muxed48;
assign soclinux_roundrobin7_request = {(((soclinux_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((soclinux_locked7 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))))) & soclinux_port_cmd_valid)};
assign soclinux_roundrobin7_ce = ((~soclinux_sdram_interface_bank7_valid) & (~soclinux_sdram_interface_bank7_lock));
assign soclinux_sdram_interface_bank7_addr = rhs_array_muxed49;
assign soclinux_sdram_interface_bank7_we = rhs_array_muxed50;
assign soclinux_sdram_interface_bank7_valid = rhs_array_muxed51;
assign soclinux_port_cmd_ready = ((((((((1'd0 | (((soclinux_roundrobin0_grant == 1'd0) & ((soclinux_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((soclinux_locked0 | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0)))))) & soclinux_sdram_interface_bank0_ready)) | (((soclinux_roundrobin1_grant == 1'd0) & ((soclinux_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((soclinux_locked1 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0)))))) & soclinux_sdram_interface_bank1_ready)) | (((soclinux_roundrobin2_grant == 1'd0) & ((soclinux_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((soclinux_locked2 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0)))))) & soclinux_sdram_interface_bank2_ready)) | (((soclinux_roundrobin3_grant == 1'd0) & ((soclinux_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((soclinux_locked3 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0)))))) & soclinux_sdram_interface_bank3_ready)) | (((soclinux_roundrobin4_grant == 1'd0) & ((soclinux_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((soclinux_locked4 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0)))))) & soclinux_sdram_interface_bank4_ready)) | (((soclinux_roundrobin5_grant == 1'd0) & ((soclinux_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((soclinux_locked5 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0)))))) & soclinux_sdram_interface_bank5_ready)) | (((soclinux_roundrobin6_grant == 1'd0) & ((soclinux_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((soclinux_locked6 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0)))))) & soclinux_sdram_interface_bank6_ready)) | (((soclinux_roundrobin7_grant == 1'd0) & ((soclinux_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((soclinux_locked7 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0)))))) & soclinux_sdram_interface_bank7_ready));
assign soclinux_port_wdata_ready = soclinux_new_master_wdata_ready1;
assign soclinux_port_rdata_valid = soclinux_new_master_rdata_valid8;
always @(*) begin
    soclinux_sdram_interface_wdata <= 512'd0;
    soclinux_sdram_interface_wdata_we <= 64'd0;
    case ({soclinux_new_master_wdata_ready1})
        1'd1: begin
            soclinux_sdram_interface_wdata <= soclinux_port_wdata_payload_data;
            soclinux_sdram_interface_wdata_we <= soclinux_port_wdata_payload_we;
        end
        default: begin
            soclinux_sdram_interface_wdata <= 1'd0;
            soclinux_sdram_interface_wdata_we <= 1'd0;
        end
    endcase
end
assign soclinux_port_rdata_payload_data = soclinux_sdram_interface_rdata;
assign soclinux_roundrobin0_grant = 1'd0;
assign soclinux_roundrobin1_grant = 1'd0;
assign soclinux_roundrobin2_grant = 1'd0;
assign soclinux_roundrobin3_grant = 1'd0;
assign soclinux_roundrobin4_grant = 1'd0;
assign soclinux_roundrobin5_grant = 1'd0;
assign soclinux_roundrobin6_grant = 1'd0;
assign soclinux_roundrobin7_grant = 1'd0;
assign soclinux_data_port_adr = soclinux_wb_sdram_adr[10:4];
always @(*) begin
    soclinux_data_port_we <= 64'd0;
    soclinux_data_port_dat_w <= 512'd0;
    if (soclinux_write_from_slave) begin
        soclinux_data_port_dat_w <= soclinux_interface_dat_r;
        soclinux_data_port_we <= {64{1'd1}};
    end else begin
        soclinux_data_port_dat_w <= {16{soclinux_wb_sdram_dat_w}};
        if ((((soclinux_wb_sdram_cyc & soclinux_wb_sdram_stb) & soclinux_wb_sdram_we) & soclinux_wb_sdram_ack)) begin
            soclinux_data_port_we <= {({4{(soclinux_wb_sdram_adr[3:0] == 4'd15)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 4'd14)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 4'd13)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 4'd12)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 4'd11)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 4'd10)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 4'd9)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 4'd8)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 3'd7)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 3'd6)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 3'd5)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 3'd4)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 2'd3)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 2'd2)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 1'd1)}} & soclinux_wb_sdram_sel), ({4{(soclinux_wb_sdram_adr[3:0] == 1'd0)}} & soclinux_wb_sdram_sel)};
        end
    end
end
assign soclinux_interface_dat_w = soclinux_data_port_dat_r;
assign soclinux_interface_sel = 64'd18446744073709551615;
always @(*) begin
    soclinux_wb_sdram_dat_r <= 32'd0;
    case (soclinux_adr_offset_r)
        1'd0: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[31:0];
        end
        1'd1: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[63:32];
        end
        2'd2: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[95:64];
        end
        2'd3: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[127:96];
        end
        3'd4: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[159:128];
        end
        3'd5: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[191:160];
        end
        3'd6: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[223:192];
        end
        3'd7: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[255:224];
        end
        4'd8: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[287:256];
        end
        4'd9: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[319:288];
        end
        4'd10: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[351:320];
        end
        4'd11: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[383:352];
        end
        4'd12: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[415:384];
        end
        4'd13: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[447:416];
        end
        4'd14: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[479:448];
        end
        default: begin
            soclinux_wb_sdram_dat_r <= soclinux_data_port_dat_r[511:480];
        end
    endcase
end
assign {soclinux_tag_do_dirty, soclinux_tag_do_tag} = soclinux_tag_port_dat_r;
assign soclinux_tag_port_dat_w = {soclinux_tag_di_dirty, soclinux_tag_di_tag};
assign soclinux_tag_port_adr = soclinux_wb_sdram_adr[10:4];
assign soclinux_tag_di_tag = soclinux_wb_sdram_adr[29:11];
assign soclinux_interface_adr = {soclinux_tag_do_tag, soclinux_wb_sdram_adr[10:4]};
always @(*) begin
    soclinux_tag_port_we <= 1'd0;
    soclinux_wb_sdram_ack <= 1'd0;
    soclinux_tag_di_dirty <= 1'd0;
    soclinux_fullmemorywe_next_state <= 2'd0;
    soclinux_write_from_slave <= 1'd0;
    soclinux_word_clr <= 1'd0;
    soclinux_interface_cyc <= 1'd0;
    soclinux_word_inc <= 1'd0;
    soclinux_interface_stb <= 1'd0;
    soclinux_interface_we <= 1'd0;
    soclinux_fullmemorywe_next_state <= soclinux_fullmemorywe_state;
    case (soclinux_fullmemorywe_state)
        1'd1: begin
            soclinux_word_clr <= 1'd1;
            if ((soclinux_tag_do_tag == soclinux_wb_sdram_adr[29:11])) begin
                soclinux_wb_sdram_ack <= 1'd1;
                if (soclinux_wb_sdram_we) begin
                    soclinux_tag_di_dirty <= 1'd1;
                    soclinux_tag_port_we <= 1'd1;
                end
                soclinux_fullmemorywe_next_state <= 1'd0;
            end else begin
                if (soclinux_tag_do_dirty) begin
                    soclinux_fullmemorywe_next_state <= 2'd2;
                end else begin
                    soclinux_tag_port_we <= 1'd1;
                    soclinux_word_clr <= 1'd1;
                    soclinux_fullmemorywe_next_state <= 2'd3;
                end
            end
        end
        2'd2: begin
            soclinux_interface_stb <= 1'd1;
            soclinux_interface_cyc <= 1'd1;
            soclinux_interface_we <= 1'd1;
            if (soclinux_interface_ack) begin
                soclinux_word_inc <= 1'd1;
                if (1'd1) begin
                    soclinux_tag_port_we <= 1'd1;
                    soclinux_word_clr <= 1'd1;
                    soclinux_fullmemorywe_next_state <= 2'd3;
                end
            end
        end
        2'd3: begin
            soclinux_interface_stb <= 1'd1;
            soclinux_interface_cyc <= 1'd1;
            soclinux_interface_we <= 1'd0;
            if (soclinux_interface_ack) begin
                soclinux_write_from_slave <= 1'd1;
                soclinux_word_inc <= 1'd1;
                if (1'd1) begin
                    soclinux_fullmemorywe_next_state <= 1'd1;
                end else begin
                    soclinux_fullmemorywe_next_state <= 2'd3;
                end
            end
        end
        default: begin
            if ((soclinux_wb_sdram_cyc & soclinux_wb_sdram_stb)) begin
                soclinux_fullmemorywe_next_state <= 1'd1;
            end
        end
    endcase
end
assign soclinux_port_cmd_payload_addr = (soclinux_interface_adr - 25'd16777216);
assign soclinux_port_cmd_payload_we = soclinux_interface_we;
assign soclinux_port_cmd_last = (~soclinux_interface_we);
assign soclinux_port_flush = (~soclinux_interface_cyc);
always @(*) begin
    soclinux_port_wdata_valid <= 1'd0;
    soclinux_port_wdata_valid <= (soclinux_interface_stb & soclinux_interface_we);
    if (1'd1) begin
        if ((~soclinux_is_ongoing)) begin
            soclinux_port_wdata_valid <= 1'd0;
        end
    end
end
assign soclinux_port_wdata_payload_data = soclinux_interface_dat_w;
assign soclinux_port_wdata_payload_we = soclinux_interface_sel;
assign soclinux_port_rdata_ready = 1'd1;
always @(*) begin
    soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd0;
    soclinux_is_ongoing <= 1'd0;
    soclinux_interface_dat_r <= 512'd0;
    soclinux_litedramwishbone2native_next_state <= 2'd0;
    soclinux_port_cmd_valid <= 1'd0;
    soclinux_interface_ack <= 1'd0;
    soclinux_aborted_litedramwishbone2native_next_value <= 1'd0;
    soclinux_litedramwishbone2native_next_state <= soclinux_litedramwishbone2native_state;
    case (soclinux_litedramwishbone2native_state)
        1'd1: begin
            soclinux_is_ongoing <= 1'd1;
            soclinux_aborted_litedramwishbone2native_next_value <= ((~soclinux_interface_cyc) | soclinux_aborted);
            soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if ((soclinux_port_wdata_valid & soclinux_port_wdata_ready)) begin
                soclinux_interface_ack <= (soclinux_interface_cyc & (~soclinux_aborted));
                soclinux_litedramwishbone2native_next_state <= 1'd0;
            end
        end
        2'd2: begin
            soclinux_aborted_litedramwishbone2native_next_value <= ((~soclinux_interface_cyc) | soclinux_aborted);
            soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if (soclinux_port_rdata_valid) begin
                soclinux_interface_ack <= (soclinux_interface_cyc & (~soclinux_aborted));
                soclinux_interface_dat_r <= soclinux_port_rdata_payload_data;
                soclinux_litedramwishbone2native_next_state <= 1'd0;
            end
        end
        default: begin
            soclinux_port_cmd_valid <= (soclinux_interface_cyc & soclinux_interface_stb);
            if (((soclinux_port_cmd_valid & soclinux_port_cmd_ready) & soclinux_interface_we)) begin
                soclinux_litedramwishbone2native_next_state <= 1'd1;
            end
            if (((soclinux_port_cmd_valid & soclinux_port_cmd_ready) & (~soclinux_interface_we))) begin
                soclinux_litedramwishbone2native_next_state <= 2'd2;
            end
            soclinux_aborted_litedramwishbone2native_next_value <= 1'd0;
            soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
        end
    endcase
end
assign ethphy_mode_status = ethphy_mode0;
assign ethphy_eth_tick = (ethphy_eth_counter == 1'd0);
assign ethphy_i = ethphy_eth_tick;
assign ethphy_sys_tick = ethphy_o;
assign ethphy_o = (ethphy_toggle_o ^ ethphy_toggle_o_r);
always @(*) begin
    ethphy_sys_counter_ce <= 1'd0;
    ethphy_mode1 <= 1'd0;
    ethphy_update_mode <= 1'd0;
    soclinux_liteethphygmiimii_next_state <= 2'd0;
    ethphy_sys_counter_reset <= 1'd0;
    soclinux_liteethphygmiimii_next_state <= soclinux_liteethphygmiimii_state;
    case (soclinux_liteethphygmiimii_state)
        1'd1: begin
            ethphy_sys_counter_ce <= 1'd1;
            if (ethphy_sys_tick) begin
                soclinux_liteethphygmiimii_next_state <= 2'd2;
            end
        end
        2'd2: begin
            ethphy_update_mode <= 1'd1;
            if ((ethphy_sys_counter > 11'd1075)) begin
                ethphy_mode1 <= 1'd1;
            end else begin
                ethphy_mode1 <= 1'd0;
            end
            soclinux_liteethphygmiimii_next_state <= 1'd0;
        end
        default: begin
            ethphy_sys_counter_reset <= 1'd1;
            if (ethphy_sys_tick) begin
                soclinux_liteethphygmiimii_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    ethphy_eth_tx_clk <= 1'd0;
    if ((ethphy_mode0 == 1'd1)) begin
        ethphy_eth_tx_clk <= eth_clocks_tx;
    end else begin
        ethphy_eth_tx_clk <= eth_clocks_rx;
    end
end
assign ethphy_reset0 = (ethphy_reset_storage | ethphy_reset1);
assign eth_rst_n = (~ethphy_reset0);
assign ethphy_counter_done = (ethphy_counter == 9'd256);
assign ethphy_counter_ce = (~ethphy_counter_done);
assign ethphy_reset1 = (~ethphy_counter_done);
assign ethphy_liteethphygmiimiitx_demux_sel = (ethphy_mode0 == 1'd1);
assign ethphy_liteethphygmiimiitx_demux_sink_valid = ethphy_liteethphygmiimiitx_sink_sink_valid0;
assign ethphy_liteethphygmiimiitx_sink_sink_ready0 = ethphy_liteethphygmiimiitx_demux_sink_ready;
assign ethphy_liteethphygmiimiitx_demux_sink_first = ethphy_liteethphygmiimiitx_sink_sink_first0;
assign ethphy_liteethphygmiimiitx_demux_sink_last = ethphy_liteethphygmiimiitx_sink_sink_last0;
assign ethphy_liteethphygmiimiitx_demux_sink_payload_data = ethphy_liteethphygmiimiitx_sink_sink_payload_data0;
assign ethphy_liteethphygmiimiitx_demux_sink_payload_last_be = ethphy_liteethphygmiimiitx_sink_sink_payload_last_be0;
assign ethphy_liteethphygmiimiitx_demux_sink_payload_error = ethphy_liteethphygmiimiitx_sink_sink_payload_error0;
assign ethphy_liteethphygmiimiitx_gmii_tx_sink_valid = ethphy_liteethphygmiimiitx_demux_endpoint0_source_valid;
assign ethphy_liteethphygmiimiitx_demux_endpoint0_source_ready = ethphy_liteethphygmiimiitx_gmii_tx_sink_ready;
assign ethphy_liteethphygmiimiitx_gmii_tx_sink_first = ethphy_liteethphygmiimiitx_demux_endpoint0_source_first;
assign ethphy_liteethphygmiimiitx_gmii_tx_sink_last = ethphy_liteethphygmiimiitx_demux_endpoint0_source_last;
assign ethphy_liteethphygmiimiitx_gmii_tx_sink_payload_data = ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_data;
assign ethphy_liteethphygmiimiitx_gmii_tx_sink_payload_last_be = ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_last_be;
assign ethphy_liteethphygmiimiitx_gmii_tx_sink_payload_error = ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_error;
assign ethphy_liteethphygmiimiitx_sink_sink_valid1 = ethphy_liteethphygmiimiitx_demux_endpoint1_source_valid;
assign ethphy_liteethphygmiimiitx_demux_endpoint1_source_ready = ethphy_liteethphygmiimiitx_sink_sink_ready1;
assign ethphy_liteethphygmiimiitx_sink_sink_first1 = ethphy_liteethphygmiimiitx_demux_endpoint1_source_first;
assign ethphy_liteethphygmiimiitx_sink_sink_last1 = ethphy_liteethphygmiimiitx_demux_endpoint1_source_last;
assign ethphy_liteethphygmiimiitx_sink_sink_payload_data1 = ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_data;
assign ethphy_liteethphygmiimiitx_sink_sink_payload_last_be1 = ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_last_be;
assign ethphy_liteethphygmiimiitx_sink_sink_payload_error1 = ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_error;
assign eth_tx_er = 1'd0;
assign ethphy_liteethphygmiimiitx_converter_sink_valid = ethphy_liteethphygmiimiitx_sink_sink_valid1;
assign ethphy_liteethphygmiimiitx_converter_sink_payload_data = ethphy_liteethphygmiimiitx_sink_sink_payload_data1;
assign ethphy_liteethphygmiimiitx_sink_sink_ready1 = ethphy_liteethphygmiimiitx_converter_sink_ready;
assign ethphy_liteethphygmiimiitx_converter_source_ready = 1'd1;
assign ethphy_liteethphygmiimiitx_converter_converter_sink_valid = ethphy_liteethphygmiimiitx_converter_sink_valid;
assign ethphy_liteethphygmiimiitx_converter_converter_sink_first = ethphy_liteethphygmiimiitx_converter_sink_first;
assign ethphy_liteethphygmiimiitx_converter_converter_sink_last = ethphy_liteethphygmiimiitx_converter_sink_last;
assign ethphy_liteethphygmiimiitx_converter_sink_ready = ethphy_liteethphygmiimiitx_converter_converter_sink_ready;
always @(*) begin
    ethphy_liteethphygmiimiitx_converter_converter_sink_payload_data <= 8'd0;
    ethphy_liteethphygmiimiitx_converter_converter_sink_payload_data[3:0] <= ethphy_liteethphygmiimiitx_converter_sink_payload_data[3:0];
    ethphy_liteethphygmiimiitx_converter_converter_sink_payload_data[7:4] <= ethphy_liteethphygmiimiitx_converter_sink_payload_data[7:4];
end
assign ethphy_liteethphygmiimiitx_converter_source_valid = ethphy_liteethphygmiimiitx_converter_source_source_valid;
assign ethphy_liteethphygmiimiitx_converter_source_first = ethphy_liteethphygmiimiitx_converter_source_source_first;
assign ethphy_liteethphygmiimiitx_converter_source_last = ethphy_liteethphygmiimiitx_converter_source_source_last;
assign ethphy_liteethphygmiimiitx_converter_source_source_ready = ethphy_liteethphygmiimiitx_converter_source_ready;
assign {ethphy_liteethphygmiimiitx_converter_source_payload_data} = ethphy_liteethphygmiimiitx_converter_source_source_payload_data;
assign ethphy_liteethphygmiimiitx_converter_source_source_valid = ethphy_liteethphygmiimiitx_converter_converter_source_valid;
assign ethphy_liteethphygmiimiitx_converter_converter_source_ready = ethphy_liteethphygmiimiitx_converter_source_source_ready;
assign ethphy_liteethphygmiimiitx_converter_source_source_first = ethphy_liteethphygmiimiitx_converter_converter_source_first;
assign ethphy_liteethphygmiimiitx_converter_source_source_last = ethphy_liteethphygmiimiitx_converter_converter_source_last;
assign ethphy_liteethphygmiimiitx_converter_source_source_payload_data = ethphy_liteethphygmiimiitx_converter_converter_source_payload_data;
assign ethphy_liteethphygmiimiitx_converter_converter_first = (ethphy_liteethphygmiimiitx_converter_converter_mux == 1'd0);
assign ethphy_liteethphygmiimiitx_converter_converter_last = (ethphy_liteethphygmiimiitx_converter_converter_mux == 1'd1);
assign ethphy_liteethphygmiimiitx_converter_converter_source_valid = ethphy_liteethphygmiimiitx_converter_converter_sink_valid;
assign ethphy_liteethphygmiimiitx_converter_converter_source_first = (ethphy_liteethphygmiimiitx_converter_converter_sink_first & ethphy_liteethphygmiimiitx_converter_converter_first);
assign ethphy_liteethphygmiimiitx_converter_converter_source_last = (ethphy_liteethphygmiimiitx_converter_converter_sink_last & ethphy_liteethphygmiimiitx_converter_converter_last);
assign ethphy_liteethphygmiimiitx_converter_converter_sink_ready = (ethphy_liteethphygmiimiitx_converter_converter_last & ethphy_liteethphygmiimiitx_converter_converter_source_ready);
always @(*) begin
    ethphy_liteethphygmiimiitx_converter_converter_source_payload_data <= 4'd0;
    case (ethphy_liteethphygmiimiitx_converter_converter_mux)
        1'd0: begin
            ethphy_liteethphygmiimiitx_converter_converter_source_payload_data <= ethphy_liteethphygmiimiitx_converter_converter_sink_payload_data[3:0];
        end
        default: begin
            ethphy_liteethphygmiimiitx_converter_converter_source_payload_data <= ethphy_liteethphygmiimiitx_converter_converter_sink_payload_data[7:4];
        end
    endcase
end
assign ethphy_liteethphygmiimiitx_converter_converter_source_payload_valid_token_count = ethphy_liteethphygmiimiitx_converter_converter_last;
always @(*) begin
    ethphy_liteethphygmiimiitx_demux_endpoint0_source_first <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint0_source_last <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_data <= 8'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_last_be <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_error <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint1_source_valid <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint1_source_first <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_sink_ready <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint1_source_last <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_data <= 8'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_last_be <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_error <= 1'd0;
    ethphy_liteethphygmiimiitx_demux_endpoint0_source_valid <= 1'd0;
    case (ethphy_liteethphygmiimiitx_demux_sel)
        1'd0: begin
            ethphy_liteethphygmiimiitx_demux_endpoint0_source_valid <= ethphy_liteethphygmiimiitx_demux_sink_valid;
            ethphy_liteethphygmiimiitx_demux_sink_ready <= ethphy_liteethphygmiimiitx_demux_endpoint0_source_ready;
            ethphy_liteethphygmiimiitx_demux_endpoint0_source_first <= ethphy_liteethphygmiimiitx_demux_sink_first;
            ethphy_liteethphygmiimiitx_demux_endpoint0_source_last <= ethphy_liteethphygmiimiitx_demux_sink_last;
            ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_data <= ethphy_liteethphygmiimiitx_demux_sink_payload_data;
            ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_last_be <= ethphy_liteethphygmiimiitx_demux_sink_payload_last_be;
            ethphy_liteethphygmiimiitx_demux_endpoint0_source_payload_error <= ethphy_liteethphygmiimiitx_demux_sink_payload_error;
        end
        1'd1: begin
            ethphy_liteethphygmiimiitx_demux_endpoint1_source_valid <= ethphy_liteethphygmiimiitx_demux_sink_valid;
            ethphy_liteethphygmiimiitx_demux_sink_ready <= ethphy_liteethphygmiimiitx_demux_endpoint1_source_ready;
            ethphy_liteethphygmiimiitx_demux_endpoint1_source_first <= ethphy_liteethphygmiimiitx_demux_sink_first;
            ethphy_liteethphygmiimiitx_demux_endpoint1_source_last <= ethphy_liteethphygmiimiitx_demux_sink_last;
            ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_data <= ethphy_liteethphygmiimiitx_demux_sink_payload_data;
            ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_last_be <= ethphy_liteethphygmiimiitx_demux_sink_payload_last_be;
            ethphy_liteethphygmiimiitx_demux_endpoint1_source_payload_error <= ethphy_liteethphygmiimiitx_demux_sink_payload_error;
        end
    endcase
end
assign ethphy_liteethphygmiimiirx_mux_sel = (ethphy_mode0 == 1'd1);
assign ethphy_liteethphygmiimiirx_mux_endpoint0_sink_valid = ethphy_liteethphygmiimiirx_gmii_rx_source_valid;
assign ethphy_liteethphygmiimiirx_gmii_rx_source_ready = ethphy_liteethphygmiimiirx_mux_endpoint0_sink_ready;
assign ethphy_liteethphygmiimiirx_mux_endpoint0_sink_first = ethphy_liteethphygmiimiirx_gmii_rx_source_first;
assign ethphy_liteethphygmiimiirx_mux_endpoint0_sink_last = ethphy_liteethphygmiimiirx_gmii_rx_source_last;
assign ethphy_liteethphygmiimiirx_mux_endpoint0_sink_payload_data = ethphy_liteethphygmiimiirx_gmii_rx_source_payload_data;
assign ethphy_liteethphygmiimiirx_mux_endpoint0_sink_payload_last_be = ethphy_liteethphygmiimiirx_gmii_rx_source_payload_last_be;
assign ethphy_liteethphygmiimiirx_mux_endpoint0_sink_payload_error = ethphy_liteethphygmiimiirx_gmii_rx_source_payload_error;
assign ethphy_liteethphygmiimiirx_mux_endpoint1_sink_valid = ethphy_liteethphygmiimiirx_source_source_valid1;
assign ethphy_liteethphygmiimiirx_source_source_ready1 = ethphy_liteethphygmiimiirx_mux_endpoint1_sink_ready;
assign ethphy_liteethphygmiimiirx_mux_endpoint1_sink_first = ethphy_liteethphygmiimiirx_source_source_first1;
assign ethphy_liteethphygmiimiirx_mux_endpoint1_sink_last = ethphy_liteethphygmiimiirx_source_source_last1;
assign ethphy_liteethphygmiimiirx_mux_endpoint1_sink_payload_data = ethphy_liteethphygmiimiirx_source_source_payload_data1;
assign ethphy_liteethphygmiimiirx_mux_endpoint1_sink_payload_last_be = ethphy_liteethphygmiimiirx_source_source_payload_last_be1;
assign ethphy_liteethphygmiimiirx_mux_endpoint1_sink_payload_error = ethphy_liteethphygmiimiirx_source_source_payload_error1;
assign ethphy_liteethphygmiimiirx_source_source_valid0 = ethphy_liteethphygmiimiirx_mux_source_valid;
assign ethphy_liteethphygmiimiirx_mux_source_ready = ethphy_liteethphygmiimiirx_source_source_ready0;
assign ethphy_liteethphygmiimiirx_source_source_first0 = ethphy_liteethphygmiimiirx_mux_source_first;
assign ethphy_liteethphygmiimiirx_source_source_last0 = ethphy_liteethphygmiimiirx_mux_source_last;
assign ethphy_liteethphygmiimiirx_source_source_payload_data0 = ethphy_liteethphygmiimiirx_mux_source_payload_data;
assign ethphy_liteethphygmiimiirx_source_source_payload_last_be0 = ethphy_liteethphygmiimiirx_mux_source_payload_last_be;
assign ethphy_liteethphygmiimiirx_source_source_payload_error0 = ethphy_liteethphygmiimiirx_mux_source_payload_error;
assign ethphy_liteethphygmiimiirx_gmii_rx_source_last = ((~ethphy_liteethphygmiimiirx_pads_d_rx_dv) & ethphy_liteethphygmiimiirx_gmii_rx_dv_d);
assign ethphy_liteethphygmiimiirx_converter_sink_last = (~ethphy_liteethphygmiimiirx_pads_d_rx_dv);
assign ethphy_liteethphygmiimiirx_source_source_valid1 = ethphy_liteethphygmiimiirx_converter_source_valid;
assign ethphy_liteethphygmiimiirx_converter_source_ready = ethphy_liteethphygmiimiirx_source_source_ready1;
assign ethphy_liteethphygmiimiirx_source_source_first1 = ethphy_liteethphygmiimiirx_converter_source_first;
assign ethphy_liteethphygmiimiirx_source_source_last1 = ethphy_liteethphygmiimiirx_converter_source_last;
assign ethphy_liteethphygmiimiirx_source_source_payload_data1 = ethphy_liteethphygmiimiirx_converter_source_payload_data;
assign ethphy_liteethphygmiimiirx_converter_converter_sink_valid = ethphy_liteethphygmiimiirx_converter_sink_valid;
assign ethphy_liteethphygmiimiirx_converter_converter_sink_first = ethphy_liteethphygmiimiirx_converter_sink_first;
assign ethphy_liteethphygmiimiirx_converter_converter_sink_last = ethphy_liteethphygmiimiirx_converter_sink_last;
assign ethphy_liteethphygmiimiirx_converter_sink_ready = ethphy_liteethphygmiimiirx_converter_converter_sink_ready;
assign ethphy_liteethphygmiimiirx_converter_converter_sink_payload_data = {ethphy_liteethphygmiimiirx_converter_sink_payload_data};
assign ethphy_liteethphygmiimiirx_converter_source_valid = ethphy_liteethphygmiimiirx_converter_source_source_valid;
assign ethphy_liteethphygmiimiirx_converter_source_first = ethphy_liteethphygmiimiirx_converter_source_source_first;
assign ethphy_liteethphygmiimiirx_converter_source_last = ethphy_liteethphygmiimiirx_converter_source_source_last;
assign ethphy_liteethphygmiimiirx_converter_source_source_ready = ethphy_liteethphygmiimiirx_converter_source_ready;
always @(*) begin
    ethphy_liteethphygmiimiirx_converter_source_payload_data <= 8'd0;
    ethphy_liteethphygmiimiirx_converter_source_payload_data[3:0] <= ethphy_liteethphygmiimiirx_converter_source_source_payload_data[3:0];
    ethphy_liteethphygmiimiirx_converter_source_payload_data[7:4] <= ethphy_liteethphygmiimiirx_converter_source_source_payload_data[7:4];
end
assign ethphy_liteethphygmiimiirx_converter_source_source_valid = ethphy_liteethphygmiimiirx_converter_converter_source_valid;
assign ethphy_liteethphygmiimiirx_converter_converter_source_ready = ethphy_liteethphygmiimiirx_converter_source_source_ready;
assign ethphy_liteethphygmiimiirx_converter_source_source_first = ethphy_liteethphygmiimiirx_converter_converter_source_first;
assign ethphy_liteethphygmiimiirx_converter_source_source_last = ethphy_liteethphygmiimiirx_converter_converter_source_last;
assign ethphy_liteethphygmiimiirx_converter_source_source_payload_data = ethphy_liteethphygmiimiirx_converter_converter_source_payload_data;
assign ethphy_liteethphygmiimiirx_converter_converter_sink_ready = ((~ethphy_liteethphygmiimiirx_converter_converter_strobe_all) | ethphy_liteethphygmiimiirx_converter_converter_source_ready);
assign ethphy_liteethphygmiimiirx_converter_converter_source_valid = ethphy_liteethphygmiimiirx_converter_converter_strobe_all;
assign ethphy_liteethphygmiimiirx_converter_converter_load_part = (ethphy_liteethphygmiimiirx_converter_converter_sink_valid & ethphy_liteethphygmiimiirx_converter_converter_sink_ready);
always @(*) begin
    ethphy_liteethphygmiimiirx_mux_source_payload_last_be <= 1'd0;
    ethphy_liteethphygmiimiirx_mux_source_payload_error <= 1'd0;
    ethphy_liteethphygmiimiirx_mux_endpoint0_sink_ready <= 1'd0;
    ethphy_liteethphygmiimiirx_mux_endpoint1_sink_ready <= 1'd0;
    ethphy_liteethphygmiimiirx_mux_source_valid <= 1'd0;
    ethphy_liteethphygmiimiirx_mux_source_first <= 1'd0;
    ethphy_liteethphygmiimiirx_mux_source_last <= 1'd0;
    ethphy_liteethphygmiimiirx_mux_source_payload_data <= 8'd0;
    case (ethphy_liteethphygmiimiirx_mux_sel)
        1'd0: begin
            ethphy_liteethphygmiimiirx_mux_source_valid <= ethphy_liteethphygmiimiirx_mux_endpoint0_sink_valid;
            ethphy_liteethphygmiimiirx_mux_endpoint0_sink_ready <= ethphy_liteethphygmiimiirx_mux_source_ready;
            ethphy_liteethphygmiimiirx_mux_source_first <= ethphy_liteethphygmiimiirx_mux_endpoint0_sink_first;
            ethphy_liteethphygmiimiirx_mux_source_last <= ethphy_liteethphygmiimiirx_mux_endpoint0_sink_last;
            ethphy_liteethphygmiimiirx_mux_source_payload_data <= ethphy_liteethphygmiimiirx_mux_endpoint0_sink_payload_data;
            ethphy_liteethphygmiimiirx_mux_source_payload_last_be <= ethphy_liteethphygmiimiirx_mux_endpoint0_sink_payload_last_be;
            ethphy_liteethphygmiimiirx_mux_source_payload_error <= ethphy_liteethphygmiimiirx_mux_endpoint0_sink_payload_error;
        end
        1'd1: begin
            ethphy_liteethphygmiimiirx_mux_source_valid <= ethphy_liteethphygmiimiirx_mux_endpoint1_sink_valid;
            ethphy_liteethphygmiimiirx_mux_endpoint1_sink_ready <= ethphy_liteethphygmiimiirx_mux_source_ready;
            ethphy_liteethphygmiimiirx_mux_source_first <= ethphy_liteethphygmiimiirx_mux_endpoint1_sink_first;
            ethphy_liteethphygmiimiirx_mux_source_last <= ethphy_liteethphygmiimiirx_mux_endpoint1_sink_last;
            ethphy_liteethphygmiimiirx_mux_source_payload_data <= ethphy_liteethphygmiimiirx_mux_endpoint1_sink_payload_data;
            ethphy_liteethphygmiimiirx_mux_source_payload_last_be <= ethphy_liteethphygmiimiirx_mux_endpoint1_sink_payload_last_be;
            ethphy_liteethphygmiimiirx_mux_source_payload_error <= ethphy_liteethphygmiimiirx_mux_endpoint1_sink_payload_error;
        end
    endcase
end
assign eth_mdc = ethphy__w_storage[0];
assign ethphy_data_oe = ethphy__w_storage[1];
assign ethphy_data_w = ethphy__w_storage[2];
assign soclinux_ethmac_sink_valid = soclinux_ethmac_source_source_valid;
assign soclinux_ethmac_source_source_ready = soclinux_ethmac_sink_ready;
assign soclinux_ethmac_sink_first = soclinux_ethmac_source_source_first;
assign soclinux_ethmac_sink_last = soclinux_ethmac_source_source_last;
assign soclinux_ethmac_sink_payload_data = soclinux_ethmac_source_source_payload_data;
assign soclinux_ethmac_sink_payload_last_be = soclinux_ethmac_source_source_payload_last_be;
assign soclinux_ethmac_sink_payload_error = soclinux_ethmac_source_source_payload_error;
assign soclinux_ethmac_sink_sink_valid = soclinux_ethmac_source_valid;
assign soclinux_ethmac_source_ready = soclinux_ethmac_sink_sink_ready;
assign soclinux_ethmac_sink_sink_first = soclinux_ethmac_source_first;
assign soclinux_ethmac_sink_sink_last = soclinux_ethmac_source_last;
assign soclinux_ethmac_sink_sink_payload_data = soclinux_ethmac_source_payload_data;
assign soclinux_ethmac_sink_sink_payload_last_be = soclinux_ethmac_source_payload_last_be;
assign soclinux_ethmac_sink_sink_payload_error = soclinux_ethmac_source_payload_error;
assign soclinux_ethmac_tx_cdc_cdc_sink_valid = soclinux_ethmac_tx_cdc_sink_sink_valid;
assign soclinux_ethmac_tx_cdc_sink_sink_ready = soclinux_ethmac_tx_cdc_cdc_sink_ready;
assign soclinux_ethmac_tx_cdc_cdc_sink_first = soclinux_ethmac_tx_cdc_sink_sink_first;
assign soclinux_ethmac_tx_cdc_cdc_sink_last = soclinux_ethmac_tx_cdc_sink_sink_last;
assign soclinux_ethmac_tx_cdc_cdc_sink_payload_data = soclinux_ethmac_tx_cdc_sink_sink_payload_data;
assign soclinux_ethmac_tx_cdc_cdc_sink_payload_last_be = soclinux_ethmac_tx_cdc_sink_sink_payload_last_be;
assign soclinux_ethmac_tx_cdc_cdc_sink_payload_error = soclinux_ethmac_tx_cdc_sink_sink_payload_error;
assign soclinux_ethmac_tx_cdc_source_source_valid = soclinux_ethmac_tx_cdc_cdc_source_valid;
assign soclinux_ethmac_tx_cdc_cdc_source_ready = soclinux_ethmac_tx_cdc_source_source_ready;
assign soclinux_ethmac_tx_cdc_source_source_first = soclinux_ethmac_tx_cdc_cdc_source_first;
assign soclinux_ethmac_tx_cdc_source_source_last = soclinux_ethmac_tx_cdc_cdc_source_last;
assign soclinux_ethmac_tx_cdc_source_source_payload_data = soclinux_ethmac_tx_cdc_cdc_source_payload_data;
assign soclinux_ethmac_tx_cdc_source_source_payload_last_be = soclinux_ethmac_tx_cdc_cdc_source_payload_last_be;
assign soclinux_ethmac_tx_cdc_source_source_payload_error = soclinux_ethmac_tx_cdc_cdc_source_payload_error;
assign soclinux_ethmac_tx_cdc_cdc_asyncfifo_din = {soclinux_ethmac_tx_cdc_cdc_fifo_in_last, soclinux_ethmac_tx_cdc_cdc_fifo_in_first, soclinux_ethmac_tx_cdc_cdc_fifo_in_payload_error, soclinux_ethmac_tx_cdc_cdc_fifo_in_payload_last_be, soclinux_ethmac_tx_cdc_cdc_fifo_in_payload_data};
assign {soclinux_ethmac_tx_cdc_cdc_fifo_out_last, soclinux_ethmac_tx_cdc_cdc_fifo_out_first, soclinux_ethmac_tx_cdc_cdc_fifo_out_payload_error, soclinux_ethmac_tx_cdc_cdc_fifo_out_payload_last_be, soclinux_ethmac_tx_cdc_cdc_fifo_out_payload_data} = soclinux_ethmac_tx_cdc_cdc_asyncfifo_dout;
assign soclinux_ethmac_tx_cdc_cdc_sink_ready = soclinux_ethmac_tx_cdc_cdc_asyncfifo_writable;
assign soclinux_ethmac_tx_cdc_cdc_asyncfifo_we = soclinux_ethmac_tx_cdc_cdc_sink_valid;
assign soclinux_ethmac_tx_cdc_cdc_fifo_in_first = soclinux_ethmac_tx_cdc_cdc_sink_first;
assign soclinux_ethmac_tx_cdc_cdc_fifo_in_last = soclinux_ethmac_tx_cdc_cdc_sink_last;
assign soclinux_ethmac_tx_cdc_cdc_fifo_in_payload_data = soclinux_ethmac_tx_cdc_cdc_sink_payload_data;
assign soclinux_ethmac_tx_cdc_cdc_fifo_in_payload_last_be = soclinux_ethmac_tx_cdc_cdc_sink_payload_last_be;
assign soclinux_ethmac_tx_cdc_cdc_fifo_in_payload_error = soclinux_ethmac_tx_cdc_cdc_sink_payload_error;
assign soclinux_ethmac_tx_cdc_cdc_source_valid = soclinux_ethmac_tx_cdc_cdc_asyncfifo_readable;
assign soclinux_ethmac_tx_cdc_cdc_source_first = soclinux_ethmac_tx_cdc_cdc_fifo_out_first;
assign soclinux_ethmac_tx_cdc_cdc_source_last = soclinux_ethmac_tx_cdc_cdc_fifo_out_last;
assign soclinux_ethmac_tx_cdc_cdc_source_payload_data = soclinux_ethmac_tx_cdc_cdc_fifo_out_payload_data;
assign soclinux_ethmac_tx_cdc_cdc_source_payload_last_be = soclinux_ethmac_tx_cdc_cdc_fifo_out_payload_last_be;
assign soclinux_ethmac_tx_cdc_cdc_source_payload_error = soclinux_ethmac_tx_cdc_cdc_fifo_out_payload_error;
assign soclinux_ethmac_tx_cdc_cdc_asyncfifo_re = soclinux_ethmac_tx_cdc_cdc_source_ready;
assign soclinux_ethmac_tx_cdc_cdc_graycounter0_ce = (soclinux_ethmac_tx_cdc_cdc_asyncfifo_writable & soclinux_ethmac_tx_cdc_cdc_asyncfifo_we);
assign soclinux_ethmac_tx_cdc_cdc_graycounter1_ce = (soclinux_ethmac_tx_cdc_cdc_asyncfifo_readable & soclinux_ethmac_tx_cdc_cdc_asyncfifo_re);
assign soclinux_ethmac_tx_cdc_cdc_asyncfifo_writable = (((soclinux_ethmac_tx_cdc_cdc_graycounter0_q[5] == soclinux_ethmac_tx_cdc_cdc_consume_wdomain[5]) | (soclinux_ethmac_tx_cdc_cdc_graycounter0_q[4] == soclinux_ethmac_tx_cdc_cdc_consume_wdomain[4])) | (soclinux_ethmac_tx_cdc_cdc_graycounter0_q[3:0] != soclinux_ethmac_tx_cdc_cdc_consume_wdomain[3:0]));
assign soclinux_ethmac_tx_cdc_cdc_asyncfifo_readable = (soclinux_ethmac_tx_cdc_cdc_graycounter1_q != soclinux_ethmac_tx_cdc_cdc_produce_rdomain);
assign soclinux_ethmac_tx_cdc_cdc_wrport_adr = soclinux_ethmac_tx_cdc_cdc_graycounter0_q_binary[4:0];
assign soclinux_ethmac_tx_cdc_cdc_wrport_dat_w = soclinux_ethmac_tx_cdc_cdc_asyncfifo_din;
assign soclinux_ethmac_tx_cdc_cdc_wrport_we = soclinux_ethmac_tx_cdc_cdc_graycounter0_ce;
assign soclinux_ethmac_tx_cdc_cdc_rdport_adr = soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next_binary[4:0];
assign soclinux_ethmac_tx_cdc_cdc_asyncfifo_dout = soclinux_ethmac_tx_cdc_cdc_rdport_dat_r;
always @(*) begin
    soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next_binary <= 6'd0;
    if (soclinux_ethmac_tx_cdc_cdc_graycounter0_ce) begin
        soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next_binary <= (soclinux_ethmac_tx_cdc_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next_binary <= soclinux_ethmac_tx_cdc_cdc_graycounter0_q_binary;
    end
end
assign soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next = (soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next_binary ^ soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
    soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next_binary <= 6'd0;
    if (soclinux_ethmac_tx_cdc_cdc_graycounter1_ce) begin
        soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next_binary <= (soclinux_ethmac_tx_cdc_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next_binary <= soclinux_ethmac_tx_cdc_cdc_graycounter1_q_binary;
    end
end
assign soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next = (soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next_binary ^ soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next_binary[5:1]);
assign soclinux_ethmac_tx_converter_converter_sink_valid = soclinux_ethmac_tx_converter_sink_valid;
assign soclinux_ethmac_tx_converter_converter_sink_first = soclinux_ethmac_tx_converter_sink_first;
assign soclinux_ethmac_tx_converter_converter_sink_last = soclinux_ethmac_tx_converter_sink_last;
assign soclinux_ethmac_tx_converter_sink_ready = soclinux_ethmac_tx_converter_converter_sink_ready;
always @(*) begin
    soclinux_ethmac_tx_converter_converter_sink_payload_data <= 40'd0;
    soclinux_ethmac_tx_converter_converter_sink_payload_data[7:0] <= soclinux_ethmac_tx_converter_sink_payload_data[7:0];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[8] <= soclinux_ethmac_tx_converter_sink_payload_last_be[0];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[9] <= soclinux_ethmac_tx_converter_sink_payload_error[0];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[17:10] <= soclinux_ethmac_tx_converter_sink_payload_data[15:8];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[18] <= soclinux_ethmac_tx_converter_sink_payload_last_be[1];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[19] <= soclinux_ethmac_tx_converter_sink_payload_error[1];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[27:20] <= soclinux_ethmac_tx_converter_sink_payload_data[23:16];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[28] <= soclinux_ethmac_tx_converter_sink_payload_last_be[2];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[29] <= soclinux_ethmac_tx_converter_sink_payload_error[2];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[37:30] <= soclinux_ethmac_tx_converter_sink_payload_data[31:24];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[38] <= soclinux_ethmac_tx_converter_sink_payload_last_be[3];
    soclinux_ethmac_tx_converter_converter_sink_payload_data[39] <= soclinux_ethmac_tx_converter_sink_payload_error[3];
end
assign soclinux_ethmac_tx_converter_source_valid = soclinux_ethmac_tx_converter_source_source_valid;
assign soclinux_ethmac_tx_converter_source_first = soclinux_ethmac_tx_converter_source_source_first;
assign soclinux_ethmac_tx_converter_source_last = soclinux_ethmac_tx_converter_source_source_last;
assign soclinux_ethmac_tx_converter_source_source_ready = soclinux_ethmac_tx_converter_source_ready;
assign {soclinux_ethmac_tx_converter_source_payload_error, soclinux_ethmac_tx_converter_source_payload_last_be, soclinux_ethmac_tx_converter_source_payload_data} = soclinux_ethmac_tx_converter_source_source_payload_data;
assign soclinux_ethmac_tx_converter_source_source_valid = soclinux_ethmac_tx_converter_converter_source_valid;
assign soclinux_ethmac_tx_converter_converter_source_ready = soclinux_ethmac_tx_converter_source_source_ready;
assign soclinux_ethmac_tx_converter_source_source_first = soclinux_ethmac_tx_converter_converter_source_first;
assign soclinux_ethmac_tx_converter_source_source_last = soclinux_ethmac_tx_converter_converter_source_last;
assign soclinux_ethmac_tx_converter_source_source_payload_data = soclinux_ethmac_tx_converter_converter_source_payload_data;
assign soclinux_ethmac_tx_converter_converter_first = (soclinux_ethmac_tx_converter_converter_mux == 1'd0);
assign soclinux_ethmac_tx_converter_converter_last = (soclinux_ethmac_tx_converter_converter_mux == 2'd3);
assign soclinux_ethmac_tx_converter_converter_source_valid = soclinux_ethmac_tx_converter_converter_sink_valid;
assign soclinux_ethmac_tx_converter_converter_source_first = (soclinux_ethmac_tx_converter_converter_sink_first & soclinux_ethmac_tx_converter_converter_first);
assign soclinux_ethmac_tx_converter_converter_source_last = (soclinux_ethmac_tx_converter_converter_sink_last & soclinux_ethmac_tx_converter_converter_last);
assign soclinux_ethmac_tx_converter_converter_sink_ready = (soclinux_ethmac_tx_converter_converter_last & soclinux_ethmac_tx_converter_converter_source_ready);
always @(*) begin
    soclinux_ethmac_tx_converter_converter_source_payload_data <= 10'd0;
    case (soclinux_ethmac_tx_converter_converter_mux)
        1'd0: begin
            soclinux_ethmac_tx_converter_converter_source_payload_data <= soclinux_ethmac_tx_converter_converter_sink_payload_data[9:0];
        end
        1'd1: begin
            soclinux_ethmac_tx_converter_converter_source_payload_data <= soclinux_ethmac_tx_converter_converter_sink_payload_data[19:10];
        end
        2'd2: begin
            soclinux_ethmac_tx_converter_converter_source_payload_data <= soclinux_ethmac_tx_converter_converter_sink_payload_data[29:20];
        end
        default: begin
            soclinux_ethmac_tx_converter_converter_source_payload_data <= soclinux_ethmac_tx_converter_converter_sink_payload_data[39:30];
        end
    endcase
end
assign soclinux_ethmac_tx_converter_converter_source_payload_valid_token_count = soclinux_ethmac_tx_converter_converter_last;
always @(*) begin
    soclinux_ethmac_tx_last_be_source_valid <= 1'd0;
    soclinux_ethmac_tx_last_be_source_first <= 1'd0;
    soclinux_ethmac_tx_last_be_source_last <= 1'd0;
    soclinux_ethmac_tx_last_be_source_payload_data <= 8'd0;
    soclinux_ethmac_tx_last_be_source_payload_last_be <= 1'd0;
    soclinux_txdatapath_liteethmactxlastbe_next_state <= 1'd0;
    soclinux_ethmac_tx_last_be_source_payload_error <= 1'd0;
    soclinux_ethmac_tx_last_be_sink_ready <= 1'd0;
    soclinux_txdatapath_liteethmactxlastbe_next_state <= soclinux_txdatapath_liteethmactxlastbe_state;
    case (soclinux_txdatapath_liteethmactxlastbe_state)
        1'd1: begin
            soclinux_ethmac_tx_last_be_sink_ready <= 1'd1;
            if ((soclinux_ethmac_tx_last_be_sink_valid & soclinux_ethmac_tx_last_be_sink_last)) begin
                soclinux_txdatapath_liteethmactxlastbe_next_state <= 1'd0;
            end
        end
        default: begin
            soclinux_ethmac_tx_last_be_source_valid <= soclinux_ethmac_tx_last_be_sink_valid;
            soclinux_ethmac_tx_last_be_sink_ready <= soclinux_ethmac_tx_last_be_source_ready;
            soclinux_ethmac_tx_last_be_source_first <= soclinux_ethmac_tx_last_be_sink_first;
            soclinux_ethmac_tx_last_be_source_last <= soclinux_ethmac_tx_last_be_sink_last;
            soclinux_ethmac_tx_last_be_source_payload_data <= soclinux_ethmac_tx_last_be_sink_payload_data;
            soclinux_ethmac_tx_last_be_source_payload_last_be <= soclinux_ethmac_tx_last_be_sink_payload_last_be;
            soclinux_ethmac_tx_last_be_source_payload_error <= soclinux_ethmac_tx_last_be_sink_payload_error;
            soclinux_ethmac_tx_last_be_source_last <= (soclinux_ethmac_tx_last_be_sink_payload_last_be != 1'd0);
            if ((soclinux_ethmac_tx_last_be_sink_valid & soclinux_ethmac_tx_last_be_sink_ready)) begin
                if ((soclinux_ethmac_tx_last_be_source_last & (~soclinux_ethmac_tx_last_be_sink_last))) begin
                    soclinux_txdatapath_liteethmactxlastbe_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign soclinux_ethmac_tx_padding_counter_done = (soclinux_ethmac_tx_padding_counter >= 6'd59);
always @(*) begin
    soclinux_txdatapath_liteethmacpaddinginserter_next_state <= 1'd0;
    soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= 16'd0;
    soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd0;
    soclinux_ethmac_tx_padding_source_valid <= 1'd0;
    soclinux_ethmac_tx_padding_source_first <= 1'd0;
    soclinux_ethmac_tx_padding_source_last <= 1'd0;
    soclinux_ethmac_tx_padding_source_payload_data <= 8'd0;
    soclinux_ethmac_tx_padding_source_payload_last_be <= 1'd0;
    soclinux_ethmac_tx_padding_source_payload_error <= 1'd0;
    soclinux_ethmac_tx_padding_sink_ready <= 1'd0;
    soclinux_txdatapath_liteethmacpaddinginserter_next_state <= soclinux_txdatapath_liteethmacpaddinginserter_state;
    case (soclinux_txdatapath_liteethmacpaddinginserter_state)
        1'd1: begin
            soclinux_ethmac_tx_padding_source_valid <= 1'd1;
            if (soclinux_ethmac_tx_padding_counter_done) begin
                soclinux_ethmac_tx_padding_source_payload_last_be <= 1'd1;
                soclinux_ethmac_tx_padding_source_last <= 1'd1;
            end
            soclinux_ethmac_tx_padding_source_payload_data <= 1'd0;
            if ((soclinux_ethmac_tx_padding_source_valid & soclinux_ethmac_tx_padding_source_ready)) begin
                soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= (soclinux_ethmac_tx_padding_counter + 1'd1);
                soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
                if (soclinux_ethmac_tx_padding_counter_done) begin
                    soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= 1'd0;
                    soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
                    soclinux_txdatapath_liteethmacpaddinginserter_next_state <= 1'd0;
                end
            end
        end
        default: begin
            soclinux_ethmac_tx_padding_source_valid <= soclinux_ethmac_tx_padding_sink_valid;
            soclinux_ethmac_tx_padding_sink_ready <= soclinux_ethmac_tx_padding_source_ready;
            soclinux_ethmac_tx_padding_source_first <= soclinux_ethmac_tx_padding_sink_first;
            soclinux_ethmac_tx_padding_source_last <= soclinux_ethmac_tx_padding_sink_last;
            soclinux_ethmac_tx_padding_source_payload_data <= soclinux_ethmac_tx_padding_sink_payload_data;
            soclinux_ethmac_tx_padding_source_payload_last_be <= soclinux_ethmac_tx_padding_sink_payload_last_be;
            soclinux_ethmac_tx_padding_source_payload_error <= soclinux_ethmac_tx_padding_sink_payload_error;
            if ((soclinux_ethmac_tx_padding_source_valid & soclinux_ethmac_tx_padding_source_ready)) begin
                soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= (soclinux_ethmac_tx_padding_counter + 1'd1);
                soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
                if (soclinux_ethmac_tx_padding_sink_last) begin
                    if ((~soclinux_ethmac_tx_padding_counter_done)) begin
                        soclinux_ethmac_tx_padding_source_last <= 1'd0;
                        soclinux_ethmac_tx_padding_source_payload_last_be <= 1'd0;
                        soclinux_txdatapath_liteethmacpaddinginserter_next_state <= 1'd1;
                    end else begin
                        if (((soclinux_ethmac_tx_padding_counter == 6'd59) & (soclinux_ethmac_tx_padding_sink_payload_last_be < 1'd1))) begin
                            soclinux_ethmac_tx_padding_source_payload_last_be <= 1'd1;
                        end else begin
                            soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= 1'd0;
                            soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
                        end
                    end
                end
            end
        end
    endcase
end
assign soclinux_ethmac_tx_crc_cnt_done = (soclinux_ethmac_tx_crc_cnt == 1'd0);
assign soclinux_ethmac_tx_crc_sink_valid = soclinux_ethmac_tx_crc_source_source_valid;
assign soclinux_ethmac_tx_crc_source_source_ready = soclinux_ethmac_tx_crc_sink_ready;
assign soclinux_ethmac_tx_crc_sink_first = soclinux_ethmac_tx_crc_source_source_first;
assign soclinux_ethmac_tx_crc_sink_last = soclinux_ethmac_tx_crc_source_source_last;
assign soclinux_ethmac_tx_crc_sink_payload_data = soclinux_ethmac_tx_crc_source_source_payload_data;
assign soclinux_ethmac_tx_crc_sink_payload_last_be = soclinux_ethmac_tx_crc_source_source_payload_last_be;
assign soclinux_ethmac_tx_crc_sink_payload_error = soclinux_ethmac_tx_crc_source_source_payload_error;
always @(*) begin
    soclinux_ethmac_tx_crc_last_be1 <= 1'd0;
    if ((soclinux_ethmac_tx_crc_last_be0 != 1'd0)) begin
        soclinux_ethmac_tx_crc_last_be1 <= soclinux_ethmac_tx_crc_last_be0;
    end else begin
        soclinux_ethmac_tx_crc_last_be1 <= 1'd1;
    end
end
assign soclinux_ethmac_tx_crc_data1 = soclinux_ethmac_tx_crc_data0[7:0];
assign soclinux_ethmac_tx_crc_last = soclinux_ethmac_tx_crc_reg;
always @(*) begin
    soclinux_ethmac_tx_crc_value <= 32'd0;
    soclinux_ethmac_tx_crc_error <= 1'd0;
    if (soclinux_ethmac_tx_crc_last_be1) begin
        soclinux_ethmac_tx_crc_value <= {t_slice_proxy31[0], t_slice_proxy30[1], t_slice_proxy29[2], t_slice_proxy28[3], t_slice_proxy27[4], t_slice_proxy26[5], t_slice_proxy25[6], t_slice_proxy24[7], t_slice_proxy23[8], t_slice_proxy22[9], t_slice_proxy21[10], t_slice_proxy20[11], t_slice_proxy19[12], t_slice_proxy18[13], t_slice_proxy17[14], t_slice_proxy16[15], t_slice_proxy15[16], t_slice_proxy14[17], t_slice_proxy13[18], t_slice_proxy12[19], t_slice_proxy11[20], t_slice_proxy10[21], t_slice_proxy9[22], t_slice_proxy8[23], t_slice_proxy7[24], t_slice_proxy6[25], t_slice_proxy5[26], t_slice_proxy4[27], t_slice_proxy3[28], t_slice_proxy2[29], t_slice_proxy1[30], t_slice_proxy0[31]};
        soclinux_ethmac_tx_crc_error <= (soclinux_ethmac_tx_crc_next != 32'd3338984827);
    end
end
always @(*) begin
    soclinux_ethmac_tx_crc_next <= 32'd0;
    soclinux_ethmac_tx_crc_next[0] <= (((soclinux_ethmac_tx_crc_last[24] ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[1] <= (((((((soclinux_ethmac_tx_crc_last[25] ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_data1[6]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[2] <= (((((((((soclinux_ethmac_tx_crc_last[26] ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_data1[6]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[3] <= (((((((soclinux_ethmac_tx_crc_last[27] ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_data1[6]);
    soclinux_ethmac_tx_crc_next[4] <= (((((((((soclinux_ethmac_tx_crc_last[28] ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[5] <= (((((((((((((soclinux_ethmac_tx_crc_last[29] ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_data1[6]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[6] <= (((((((((((soclinux_ethmac_tx_crc_last[30] ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_data1[6]);
    soclinux_ethmac_tx_crc_next[7] <= (((((((((soclinux_ethmac_tx_crc_last[31] ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[8] <= ((((((((soclinux_ethmac_tx_crc_last[0] ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_data1[6]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[9] <= ((((((((soclinux_ethmac_tx_crc_last[1] ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_data1[6]);
    soclinux_ethmac_tx_crc_next[10] <= ((((((((soclinux_ethmac_tx_crc_last[2] ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[11] <= ((((((((soclinux_ethmac_tx_crc_last[3] ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_data1[6]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[12] <= ((((((((((((soclinux_ethmac_tx_crc_last[4] ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_data1[6]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[13] <= ((((((((((((soclinux_ethmac_tx_crc_last[5] ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_data1[6]);
    soclinux_ethmac_tx_crc_next[14] <= ((((((((((soclinux_ethmac_tx_crc_last[6] ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]);
    soclinux_ethmac_tx_crc_next[15] <= ((((((((soclinux_ethmac_tx_crc_last[7] ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]);
    soclinux_ethmac_tx_crc_next[16] <= ((((((soclinux_ethmac_tx_crc_last[8] ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[17] <= ((((((soclinux_ethmac_tx_crc_last[9] ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_data1[6]);
    soclinux_ethmac_tx_crc_next[18] <= ((((((soclinux_ethmac_tx_crc_last[10] ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]);
    soclinux_ethmac_tx_crc_next[19] <= ((((soclinux_ethmac_tx_crc_last[11] ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]);
    soclinux_ethmac_tx_crc_next[20] <= ((soclinux_ethmac_tx_crc_last[12] ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]);
    soclinux_ethmac_tx_crc_next[21] <= ((soclinux_ethmac_tx_crc_last[13] ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]);
    soclinux_ethmac_tx_crc_next[22] <= ((soclinux_ethmac_tx_crc_last[14] ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[23] <= ((((((soclinux_ethmac_tx_crc_last[15] ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_data1[6]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[24] <= ((((((soclinux_ethmac_tx_crc_last[16] ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_data1[6]);
    soclinux_ethmac_tx_crc_next[25] <= ((((soclinux_ethmac_tx_crc_last[17] ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]);
    soclinux_ethmac_tx_crc_next[26] <= ((((((((soclinux_ethmac_tx_crc_last[18] ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]) ^ soclinux_ethmac_tx_crc_last[24]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_data1[7]);
    soclinux_ethmac_tx_crc_next[27] <= ((((((((soclinux_ethmac_tx_crc_last[19] ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]) ^ soclinux_ethmac_tx_crc_last[25]) ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_data1[6]);
    soclinux_ethmac_tx_crc_next[28] <= ((((((soclinux_ethmac_tx_crc_last[20] ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]) ^ soclinux_ethmac_tx_crc_last[26]) ^ soclinux_ethmac_tx_crc_data1[5]);
    soclinux_ethmac_tx_crc_next[29] <= ((((((soclinux_ethmac_tx_crc_last[21] ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_last[30]) ^ soclinux_ethmac_tx_crc_data1[1]) ^ soclinux_ethmac_tx_crc_last[27]) ^ soclinux_ethmac_tx_crc_data1[4]);
    soclinux_ethmac_tx_crc_next[30] <= ((((soclinux_ethmac_tx_crc_last[22] ^ soclinux_ethmac_tx_crc_last[31]) ^ soclinux_ethmac_tx_crc_data1[0]) ^ soclinux_ethmac_tx_crc_last[28]) ^ soclinux_ethmac_tx_crc_data1[3]);
    soclinux_ethmac_tx_crc_next[31] <= ((soclinux_ethmac_tx_crc_last[23] ^ soclinux_ethmac_tx_crc_last[29]) ^ soclinux_ethmac_tx_crc_data1[2]);
end
always @(*) begin
    soclinux_ethmac_tx_crc_source_valid <= 1'd0;
    soclinux_ethmac_tx_crc_ce <= 1'd0;
    soclinux_ethmac_tx_crc_reset <= 1'd0;
    soclinux_ethmac_tx_crc_source_first <= 1'd0;
    soclinux_ethmac_tx_crc_source_last <= 1'd0;
    soclinux_ethmac_tx_crc_source_payload_data <= 8'd0;
    soclinux_ethmac_tx_crc_source_payload_last_be <= 1'd0;
    soclinux_ethmac_tx_crc_source_payload_error <= 1'd0;
    soclinux_ethmac_tx_crc_data0 <= 8'd0;
    soclinux_ethmac_tx_crc_last_be0 <= 1'd0;
    soclinux_txdatapath_bufferizeendpoints_next_state <= 2'd0;
    soclinux_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0 <= 32'd0;
    soclinux_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0 <= 1'd0;
    soclinux_ethmac_tx_crc_sink_ready <= 1'd0;
    soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 <= 1'd0;
    soclinux_ethmac_tx_crc_is_ongoing0 <= 1'd0;
    soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 <= 1'd0;
    soclinux_ethmac_tx_crc_is_ongoing1 <= 1'd0;
    soclinux_txdatapath_bufferizeendpoints_next_state <= soclinux_txdatapath_bufferizeendpoints_state;
    case (soclinux_txdatapath_bufferizeendpoints_state)
        1'd1: begin
            soclinux_ethmac_tx_crc_ce <= (soclinux_ethmac_tx_crc_sink_valid & soclinux_ethmac_tx_crc_source_ready);
            soclinux_ethmac_tx_crc_data0 <= soclinux_ethmac_tx_crc_sink_payload_data;
            soclinux_ethmac_tx_crc_last_be0 <= soclinux_ethmac_tx_crc_sink_payload_last_be;
            soclinux_ethmac_tx_crc_source_valid <= soclinux_ethmac_tx_crc_sink_valid;
            soclinux_ethmac_tx_crc_sink_ready <= soclinux_ethmac_tx_crc_source_ready;
            soclinux_ethmac_tx_crc_source_first <= soclinux_ethmac_tx_crc_sink_first;
            soclinux_ethmac_tx_crc_source_last <= soclinux_ethmac_tx_crc_sink_last;
            soclinux_ethmac_tx_crc_source_payload_data <= soclinux_ethmac_tx_crc_sink_payload_data;
            soclinux_ethmac_tx_crc_source_payload_last_be <= soclinux_ethmac_tx_crc_sink_payload_last_be;
            soclinux_ethmac_tx_crc_source_payload_error <= soclinux_ethmac_tx_crc_sink_payload_error;
            soclinux_ethmac_tx_crc_source_last <= 1'd0;
            soclinux_ethmac_tx_crc_source_payload_last_be <= 1'd0;
            if (soclinux_ethmac_tx_crc_sink_last) begin
                if (soclinux_ethmac_tx_crc_sink_payload_last_be) begin
                    soclinux_ethmac_tx_crc_source_payload_data <= cases_slice_proxy[7:0];
                end
                if ((1'd0 & (soclinux_ethmac_tx_crc_sink_payload_last_be <= 4'd15))) begin
                    soclinux_ethmac_tx_crc_source_last <= 1'd1;
                    soclinux_ethmac_tx_crc_source_payload_last_be <= (soclinux_ethmac_tx_crc_sink_payload_last_be <<< -3'd3);
                end
            end else begin
                soclinux_ethmac_tx_crc_ce <= (soclinux_ethmac_tx_crc_sink_valid & soclinux_ethmac_tx_crc_source_ready);
            end
            if (((soclinux_ethmac_tx_crc_sink_valid & soclinux_ethmac_tx_crc_sink_last) & soclinux_ethmac_tx_crc_source_ready)) begin
                if ((1'd0 & (soclinux_ethmac_tx_crc_sink_payload_last_be <= 4'd15))) begin
                    soclinux_txdatapath_bufferizeendpoints_next_state <= 1'd0;
                end else begin
                    soclinux_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0 <= soclinux_ethmac_tx_crc_value;
                    soclinux_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0 <= 1'd1;
                    if (1'd0) begin
                        soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 <= (soclinux_ethmac_tx_crc_sink_payload_last_be >>> 3'd4);
                        soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 <= 1'd1;
                    end else begin
                        soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 <= soclinux_ethmac_tx_crc_sink_payload_last_be;
                        soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 <= 1'd1;
                    end
                    soclinux_txdatapath_bufferizeendpoints_next_state <= 2'd2;
                end
            end
        end
        2'd2: begin
            soclinux_ethmac_tx_crc_source_valid <= 1'd1;
            case (soclinux_ethmac_tx_crc_cnt)
                1'd0: begin
                    soclinux_ethmac_tx_crc_source_payload_data <= soclinux_ethmac_tx_crc_crc_packet[31:24];
                end
                1'd1: begin
                    soclinux_ethmac_tx_crc_source_payload_data <= soclinux_ethmac_tx_crc_crc_packet[23:16];
                end
                2'd2: begin
                    soclinux_ethmac_tx_crc_source_payload_data <= soclinux_ethmac_tx_crc_crc_packet[15:8];
                end
                default: begin
                    soclinux_ethmac_tx_crc_source_payload_data <= soclinux_ethmac_tx_crc_crc_packet[7:0];
                end
            endcase
            if (soclinux_ethmac_tx_crc_cnt_done) begin
                soclinux_ethmac_tx_crc_source_last <= 1'd1;
                if (soclinux_ethmac_tx_crc_source_ready) begin
                    soclinux_txdatapath_bufferizeendpoints_next_state <= 1'd0;
                end
            end
            soclinux_ethmac_tx_crc_is_ongoing1 <= 1'd1;
        end
        default: begin
            soclinux_ethmac_tx_crc_reset <= 1'd1;
            soclinux_ethmac_tx_crc_sink_ready <= 1'd1;
            if (soclinux_ethmac_tx_crc_sink_valid) begin
                soclinux_ethmac_tx_crc_sink_ready <= 1'd0;
                soclinux_txdatapath_bufferizeendpoints_next_state <= 1'd1;
            end
            soclinux_ethmac_tx_crc_is_ongoing0 <= 1'd1;
        end
    endcase
end
assign soclinux_ethmac_tx_crc_pipe_valid_sink_ready = ((~soclinux_ethmac_tx_crc_pipe_valid_source_valid) | soclinux_ethmac_tx_crc_pipe_valid_source_ready);
assign soclinux_ethmac_tx_crc_pipe_valid_sink_valid = soclinux_ethmac_tx_crc_sink_sink_valid;
assign soclinux_ethmac_tx_crc_sink_sink_ready = soclinux_ethmac_tx_crc_pipe_valid_sink_ready;
assign soclinux_ethmac_tx_crc_pipe_valid_sink_first = soclinux_ethmac_tx_crc_sink_sink_first;
assign soclinux_ethmac_tx_crc_pipe_valid_sink_last = soclinux_ethmac_tx_crc_sink_sink_last;
assign soclinux_ethmac_tx_crc_pipe_valid_sink_payload_data = soclinux_ethmac_tx_crc_sink_sink_payload_data;
assign soclinux_ethmac_tx_crc_pipe_valid_sink_payload_last_be = soclinux_ethmac_tx_crc_sink_sink_payload_last_be;
assign soclinux_ethmac_tx_crc_pipe_valid_sink_payload_error = soclinux_ethmac_tx_crc_sink_sink_payload_error;
assign soclinux_ethmac_tx_crc_source_source_valid = soclinux_ethmac_tx_crc_pipe_valid_source_valid;
assign soclinux_ethmac_tx_crc_pipe_valid_source_ready = soclinux_ethmac_tx_crc_source_source_ready;
assign soclinux_ethmac_tx_crc_source_source_first = soclinux_ethmac_tx_crc_pipe_valid_source_first;
assign soclinux_ethmac_tx_crc_source_source_last = soclinux_ethmac_tx_crc_pipe_valid_source_last;
assign soclinux_ethmac_tx_crc_source_source_payload_data = soclinux_ethmac_tx_crc_pipe_valid_source_payload_data;
assign soclinux_ethmac_tx_crc_source_source_payload_last_be = soclinux_ethmac_tx_crc_pipe_valid_source_payload_last_be;
assign soclinux_ethmac_tx_crc_source_source_payload_error = soclinux_ethmac_tx_crc_pipe_valid_source_payload_error;
assign soclinux_ethmac_tx_preamble_source_payload_last_be = soclinux_ethmac_tx_preamble_sink_payload_last_be;
always @(*) begin
    soclinux_txdatapath_liteethmacpreambleinserter_next_state <= 2'd0;
    soclinux_ethmac_tx_preamble_source_valid <= 1'd0;
    soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value <= 3'd0;
    soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce <= 1'd0;
    soclinux_ethmac_tx_preamble_source_first <= 1'd0;
    soclinux_ethmac_tx_preamble_source_last <= 1'd0;
    soclinux_ethmac_tx_preamble_source_payload_data <= 8'd0;
    soclinux_ethmac_tx_preamble_source_payload_error <= 1'd0;
    soclinux_ethmac_tx_preamble_sink_ready <= 1'd0;
    soclinux_ethmac_tx_preamble_source_payload_data <= soclinux_ethmac_tx_preamble_sink_payload_data;
    soclinux_txdatapath_liteethmacpreambleinserter_next_state <= soclinux_txdatapath_liteethmacpreambleinserter_state;
    case (soclinux_txdatapath_liteethmacpreambleinserter_state)
        1'd1: begin
            soclinux_ethmac_tx_preamble_source_valid <= 1'd1;
            case (soclinux_ethmac_tx_preamble_count)
                1'd0: begin
                    soclinux_ethmac_tx_preamble_source_payload_data <= soclinux_ethmac_tx_preamble_preamble[7:0];
                end
                1'd1: begin
                    soclinux_ethmac_tx_preamble_source_payload_data <= soclinux_ethmac_tx_preamble_preamble[15:8];
                end
                2'd2: begin
                    soclinux_ethmac_tx_preamble_source_payload_data <= soclinux_ethmac_tx_preamble_preamble[23:16];
                end
                2'd3: begin
                    soclinux_ethmac_tx_preamble_source_payload_data <= soclinux_ethmac_tx_preamble_preamble[31:24];
                end
                3'd4: begin
                    soclinux_ethmac_tx_preamble_source_payload_data <= soclinux_ethmac_tx_preamble_preamble[39:32];
                end
                3'd5: begin
                    soclinux_ethmac_tx_preamble_source_payload_data <= soclinux_ethmac_tx_preamble_preamble[47:40];
                end
                3'd6: begin
                    soclinux_ethmac_tx_preamble_source_payload_data <= soclinux_ethmac_tx_preamble_preamble[55:48];
                end
                default: begin
                    soclinux_ethmac_tx_preamble_source_payload_data <= soclinux_ethmac_tx_preamble_preamble[63:56];
                end
            endcase
            if (soclinux_ethmac_tx_preamble_source_ready) begin
                if ((soclinux_ethmac_tx_preamble_count == 3'd7)) begin
                    soclinux_txdatapath_liteethmacpreambleinserter_next_state <= 2'd2;
                end else begin
                    soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value <= (soclinux_ethmac_tx_preamble_count + 1'd1);
                    soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce <= 1'd1;
                end
            end
        end
        2'd2: begin
            soclinux_ethmac_tx_preamble_source_valid <= soclinux_ethmac_tx_preamble_sink_valid;
            soclinux_ethmac_tx_preamble_sink_ready <= soclinux_ethmac_tx_preamble_source_ready;
            soclinux_ethmac_tx_preamble_source_first <= soclinux_ethmac_tx_preamble_sink_first;
            soclinux_ethmac_tx_preamble_source_last <= soclinux_ethmac_tx_preamble_sink_last;
            soclinux_ethmac_tx_preamble_source_payload_error <= soclinux_ethmac_tx_preamble_sink_payload_error;
            if (((soclinux_ethmac_tx_preamble_sink_valid & soclinux_ethmac_tx_preamble_sink_last) & soclinux_ethmac_tx_preamble_source_ready)) begin
                soclinux_txdatapath_liteethmacpreambleinserter_next_state <= 1'd0;
            end
        end
        default: begin
            soclinux_ethmac_tx_preamble_sink_ready <= 1'd1;
            soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value <= 1'd0;
            soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce <= 1'd1;
            if (soclinux_ethmac_tx_preamble_sink_valid) begin
                soclinux_ethmac_tx_preamble_sink_ready <= 1'd0;
                soclinux_txdatapath_liteethmacpreambleinserter_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    soclinux_ethmac_tx_gap_source_valid <= 1'd0;
    soclinux_ethmac_tx_gap_source_first <= 1'd0;
    soclinux_txdatapath_liteethmacgap_next_state <= 1'd0;
    soclinux_ethmac_tx_gap_source_last <= 1'd0;
    soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value <= 4'd0;
    soclinux_ethmac_tx_gap_source_payload_data <= 8'd0;
    soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce <= 1'd0;
    soclinux_ethmac_tx_gap_source_payload_last_be <= 1'd0;
    soclinux_ethmac_tx_gap_source_payload_error <= 1'd0;
    soclinux_ethmac_tx_gap_sink_ready <= 1'd0;
    soclinux_txdatapath_liteethmacgap_next_state <= soclinux_txdatapath_liteethmacgap_state;
    case (soclinux_txdatapath_liteethmacgap_state)
        1'd1: begin
            soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value <= (soclinux_ethmac_tx_gap_counter + 1'd1);
            soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce <= 1'd1;
            if ((soclinux_ethmac_tx_gap_counter == 4'd11)) begin
                soclinux_txdatapath_liteethmacgap_next_state <= 1'd0;
            end
        end
        default: begin
            soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value <= 1'd0;
            soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce <= 1'd1;
            soclinux_ethmac_tx_gap_source_valid <= soclinux_ethmac_tx_gap_sink_valid;
            soclinux_ethmac_tx_gap_sink_ready <= soclinux_ethmac_tx_gap_source_ready;
            soclinux_ethmac_tx_gap_source_first <= soclinux_ethmac_tx_gap_sink_first;
            soclinux_ethmac_tx_gap_source_last <= soclinux_ethmac_tx_gap_sink_last;
            soclinux_ethmac_tx_gap_source_payload_data <= soclinux_ethmac_tx_gap_sink_payload_data;
            soclinux_ethmac_tx_gap_source_payload_last_be <= soclinux_ethmac_tx_gap_sink_payload_last_be;
            soclinux_ethmac_tx_gap_source_payload_error <= soclinux_ethmac_tx_gap_sink_payload_error;
            if (((soclinux_ethmac_tx_gap_sink_valid & soclinux_ethmac_tx_gap_sink_last) & soclinux_ethmac_tx_gap_sink_ready)) begin
                soclinux_txdatapath_liteethmacgap_next_state <= 1'd1;
            end
        end
    endcase
end
assign soclinux_ethmac_tx_cdc_sink_sink_valid = soclinux_ethmac_sink_valid;
assign soclinux_ethmac_sink_ready = soclinux_ethmac_tx_cdc_sink_sink_ready;
assign soclinux_ethmac_tx_cdc_sink_sink_first = soclinux_ethmac_sink_first;
assign soclinux_ethmac_tx_cdc_sink_sink_last = soclinux_ethmac_sink_last;
assign soclinux_ethmac_tx_cdc_sink_sink_payload_data = soclinux_ethmac_sink_payload_data;
assign soclinux_ethmac_tx_cdc_sink_sink_payload_last_be = soclinux_ethmac_sink_payload_last_be;
assign soclinux_ethmac_tx_cdc_sink_sink_payload_error = soclinux_ethmac_sink_payload_error;
assign soclinux_ethmac_tx_converter_sink_valid = soclinux_ethmac_tx_cdc_source_source_valid;
assign soclinux_ethmac_tx_cdc_source_source_ready = soclinux_ethmac_tx_converter_sink_ready;
assign soclinux_ethmac_tx_converter_sink_first = soclinux_ethmac_tx_cdc_source_source_first;
assign soclinux_ethmac_tx_converter_sink_last = soclinux_ethmac_tx_cdc_source_source_last;
assign soclinux_ethmac_tx_converter_sink_payload_data = soclinux_ethmac_tx_cdc_source_source_payload_data;
assign soclinux_ethmac_tx_converter_sink_payload_last_be = soclinux_ethmac_tx_cdc_source_source_payload_last_be;
assign soclinux_ethmac_tx_converter_sink_payload_error = soclinux_ethmac_tx_cdc_source_source_payload_error;
assign soclinux_ethmac_tx_last_be_sink_valid = soclinux_ethmac_tx_converter_source_valid;
assign soclinux_ethmac_tx_converter_source_ready = soclinux_ethmac_tx_last_be_sink_ready;
assign soclinux_ethmac_tx_last_be_sink_first = soclinux_ethmac_tx_converter_source_first;
assign soclinux_ethmac_tx_last_be_sink_last = soclinux_ethmac_tx_converter_source_last;
assign soclinux_ethmac_tx_last_be_sink_payload_data = soclinux_ethmac_tx_converter_source_payload_data;
assign soclinux_ethmac_tx_last_be_sink_payload_last_be = soclinux_ethmac_tx_converter_source_payload_last_be;
assign soclinux_ethmac_tx_last_be_sink_payload_error = soclinux_ethmac_tx_converter_source_payload_error;
assign soclinux_ethmac_tx_padding_sink_valid = soclinux_ethmac_tx_last_be_source_valid;
assign soclinux_ethmac_tx_last_be_source_ready = soclinux_ethmac_tx_padding_sink_ready;
assign soclinux_ethmac_tx_padding_sink_first = soclinux_ethmac_tx_last_be_source_first;
assign soclinux_ethmac_tx_padding_sink_last = soclinux_ethmac_tx_last_be_source_last;
assign soclinux_ethmac_tx_padding_sink_payload_data = soclinux_ethmac_tx_last_be_source_payload_data;
assign soclinux_ethmac_tx_padding_sink_payload_last_be = soclinux_ethmac_tx_last_be_source_payload_last_be;
assign soclinux_ethmac_tx_padding_sink_payload_error = soclinux_ethmac_tx_last_be_source_payload_error;
assign soclinux_ethmac_tx_crc_sink_sink_valid = soclinux_ethmac_tx_padding_source_valid;
assign soclinux_ethmac_tx_padding_source_ready = soclinux_ethmac_tx_crc_sink_sink_ready;
assign soclinux_ethmac_tx_crc_sink_sink_first = soclinux_ethmac_tx_padding_source_first;
assign soclinux_ethmac_tx_crc_sink_sink_last = soclinux_ethmac_tx_padding_source_last;
assign soclinux_ethmac_tx_crc_sink_sink_payload_data = soclinux_ethmac_tx_padding_source_payload_data;
assign soclinux_ethmac_tx_crc_sink_sink_payload_last_be = soclinux_ethmac_tx_padding_source_payload_last_be;
assign soclinux_ethmac_tx_crc_sink_sink_payload_error = soclinux_ethmac_tx_padding_source_payload_error;
assign soclinux_ethmac_tx_preamble_sink_valid = soclinux_ethmac_tx_crc_source_valid;
assign soclinux_ethmac_tx_crc_source_ready = soclinux_ethmac_tx_preamble_sink_ready;
assign soclinux_ethmac_tx_preamble_sink_first = soclinux_ethmac_tx_crc_source_first;
assign soclinux_ethmac_tx_preamble_sink_last = soclinux_ethmac_tx_crc_source_last;
assign soclinux_ethmac_tx_preamble_sink_payload_data = soclinux_ethmac_tx_crc_source_payload_data;
assign soclinux_ethmac_tx_preamble_sink_payload_last_be = soclinux_ethmac_tx_crc_source_payload_last_be;
assign soclinux_ethmac_tx_preamble_sink_payload_error = soclinux_ethmac_tx_crc_source_payload_error;
assign soclinux_ethmac_tx_gap_sink_valid = soclinux_ethmac_tx_preamble_source_valid;
assign soclinux_ethmac_tx_preamble_source_ready = soclinux_ethmac_tx_gap_sink_ready;
assign soclinux_ethmac_tx_gap_sink_first = soclinux_ethmac_tx_preamble_source_first;
assign soclinux_ethmac_tx_gap_sink_last = soclinux_ethmac_tx_preamble_source_last;
assign soclinux_ethmac_tx_gap_sink_payload_data = soclinux_ethmac_tx_preamble_source_payload_data;
assign soclinux_ethmac_tx_gap_sink_payload_last_be = soclinux_ethmac_tx_preamble_source_payload_last_be;
assign soclinux_ethmac_tx_gap_sink_payload_error = soclinux_ethmac_tx_preamble_source_payload_error;
assign ethphy_liteethphygmiimiitx_sink_sink_valid0 = soclinux_ethmac_tx_gap_source_valid;
assign soclinux_ethmac_tx_gap_source_ready = ethphy_liteethphygmiimiitx_sink_sink_ready0;
assign ethphy_liteethphygmiimiitx_sink_sink_first0 = soclinux_ethmac_tx_gap_source_first;
assign ethphy_liteethphygmiimiitx_sink_sink_last0 = soclinux_ethmac_tx_gap_source_last;
assign ethphy_liteethphygmiimiitx_sink_sink_payload_data0 = soclinux_ethmac_tx_gap_source_payload_data;
assign ethphy_liteethphygmiimiitx_sink_sink_payload_last_be0 = soclinux_ethmac_tx_gap_source_payload_last_be;
assign ethphy_liteethphygmiimiitx_sink_sink_payload_error0 = soclinux_ethmac_tx_gap_source_payload_error;
assign soclinux_ethmac_pulsesynchronizer0_i = soclinux_ethmac_rx_preamble_error;
assign soclinux_ethmac_pulsesynchronizer1_i = soclinux_ethmac_liteethmaccrc32checker_error;
assign soclinux_ethmac_rx_preamble_source_payload_data = soclinux_ethmac_rx_preamble_sink_payload_data;
assign soclinux_ethmac_rx_preamble_source_payload_last_be = soclinux_ethmac_rx_preamble_sink_payload_last_be;
always @(*) begin
    soclinux_ethmac_rx_preamble_source_payload_error <= 1'd0;
    soclinux_ethmac_rx_preamble_error <= 1'd0;
    soclinux_ethmac_rx_preamble_source_valid <= 1'd0;
    soclinux_ethmac_rx_preamble_sink_ready <= 1'd0;
    soclinux_ethmac_rx_preamble_source_last <= 1'd0;
    soclinux_rxdatapath_liteethmacpreamblechecker_next_state <= 1'd0;
    soclinux_ethmac_rx_preamble_source_first <= 1'd0;
    soclinux_rxdatapath_liteethmacpreamblechecker_next_state <= soclinux_rxdatapath_liteethmacpreamblechecker_state;
    case (soclinux_rxdatapath_liteethmacpreamblechecker_state)
        1'd1: begin
            soclinux_ethmac_rx_preamble_source_valid <= soclinux_ethmac_rx_preamble_sink_valid;
            soclinux_ethmac_rx_preamble_sink_ready <= soclinux_ethmac_rx_preamble_source_ready;
            soclinux_ethmac_rx_preamble_source_first <= soclinux_ethmac_rx_preamble_sink_first;
            soclinux_ethmac_rx_preamble_source_last <= soclinux_ethmac_rx_preamble_sink_last;
            soclinux_ethmac_rx_preamble_source_payload_error <= soclinux_ethmac_rx_preamble_sink_payload_error;
            if (((soclinux_ethmac_rx_preamble_source_valid & soclinux_ethmac_rx_preamble_source_last) & soclinux_ethmac_rx_preamble_source_ready)) begin
                soclinux_rxdatapath_liteethmacpreamblechecker_next_state <= 1'd0;
            end
        end
        default: begin
            soclinux_ethmac_rx_preamble_sink_ready <= 1'd1;
            if (((soclinux_ethmac_rx_preamble_sink_valid & (~soclinux_ethmac_rx_preamble_sink_last)) & (soclinux_ethmac_rx_preamble_sink_payload_data == soclinux_ethmac_rx_preamble_preamble[63:56]))) begin
                soclinux_rxdatapath_liteethmacpreamblechecker_next_state <= 1'd1;
            end
            if ((soclinux_ethmac_rx_preamble_sink_valid & soclinux_ethmac_rx_preamble_sink_last)) begin
                soclinux_ethmac_rx_preamble_error <= 1'd1;
            end
        end
    endcase
end
assign soclinux_ethmac_pulsesynchronizer0_o = (soclinux_ethmac_pulsesynchronizer0_toggle_o ^ soclinux_ethmac_pulsesynchronizer0_toggle_o_r);
assign soclinux_ethmac_liteethmaccrc32checker_fifo_full = (soclinux_ethmac_liteethmaccrc32checker_syncfifo_level == 3'd4);
assign soclinux_ethmac_liteethmaccrc32checker_fifo_in = (soclinux_ethmac_liteethmaccrc32checker_sink_sink_valid & ((~soclinux_ethmac_liteethmaccrc32checker_fifo_full) | soclinux_ethmac_liteethmaccrc32checker_fifo_out));
assign soclinux_ethmac_liteethmaccrc32checker_fifo_out = (soclinux_ethmac_liteethmaccrc32checker_source_source_valid & soclinux_ethmac_liteethmaccrc32checker_source_source_ready);
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_first = soclinux_ethmac_liteethmaccrc32checker_sink_sink_first;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_last = soclinux_ethmac_liteethmaccrc32checker_sink_sink_last;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_data = soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_data;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_last_be = soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_error = soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_error;
always @(*) begin
    soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_valid <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_valid <= soclinux_ethmac_liteethmaccrc32checker_sink_sink_valid;
    soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_valid <= soclinux_ethmac_liteethmaccrc32checker_fifo_in;
end
always @(*) begin
    soclinux_ethmac_liteethmaccrc32checker_sink_sink_ready <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_sink_sink_ready <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_ready;
    soclinux_ethmac_liteethmaccrc32checker_sink_sink_ready <= soclinux_ethmac_liteethmaccrc32checker_fifo_in;
end
assign soclinux_ethmac_liteethmaccrc32checker_crc_data0 = soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_data;
assign soclinux_ethmac_liteethmaccrc32checker_crc_last_be0 = soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be;
assign soclinux_ethmac_liteethmaccrc32checker_sink_sink_valid = soclinux_ethmac_bufferizeendpoints_source_source_valid;
assign soclinux_ethmac_bufferizeendpoints_source_source_ready = soclinux_ethmac_liteethmaccrc32checker_sink_sink_ready;
assign soclinux_ethmac_liteethmaccrc32checker_sink_sink_first = soclinux_ethmac_bufferizeendpoints_source_source_first;
assign soclinux_ethmac_liteethmaccrc32checker_sink_sink_last = soclinux_ethmac_bufferizeendpoints_source_source_last;
assign soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_data = soclinux_ethmac_bufferizeendpoints_source_source_payload_data;
assign soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be = soclinux_ethmac_bufferizeendpoints_source_source_payload_last_be;
assign soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_error = soclinux_ethmac_bufferizeendpoints_source_source_payload_error;
always @(*) begin
    soclinux_ethmac_liteethmaccrc32checker_crc_last_be1 <= 1'd0;
    if ((soclinux_ethmac_liteethmaccrc32checker_crc_last_be0 != 1'd0)) begin
        soclinux_ethmac_liteethmaccrc32checker_crc_last_be1 <= soclinux_ethmac_liteethmaccrc32checker_crc_last_be0;
    end else begin
        soclinux_ethmac_liteethmaccrc32checker_crc_last_be1 <= 1'd1;
    end
end
assign soclinux_ethmac_liteethmaccrc32checker_crc_data1 = soclinux_ethmac_liteethmaccrc32checker_crc_data0[7:0];
assign soclinux_ethmac_liteethmaccrc32checker_crc_last = soclinux_ethmac_liteethmaccrc32checker_crc_reg;
always @(*) begin
    soclinux_ethmac_liteethmaccrc32checker_crc_value <= 32'd0;
    soclinux_ethmac_liteethmaccrc32checker_crc_error0 <= 1'd0;
    if (soclinux_ethmac_liteethmaccrc32checker_crc_last_be1) begin
        soclinux_ethmac_liteethmaccrc32checker_crc_value <= {t_slice_proxy63[0], t_slice_proxy62[1], t_slice_proxy61[2], t_slice_proxy60[3], t_slice_proxy59[4], t_slice_proxy58[5], t_slice_proxy57[6], t_slice_proxy56[7], t_slice_proxy55[8], t_slice_proxy54[9], t_slice_proxy53[10], t_slice_proxy52[11], t_slice_proxy51[12], t_slice_proxy50[13], t_slice_proxy49[14], t_slice_proxy48[15], t_slice_proxy47[16], t_slice_proxy46[17], t_slice_proxy45[18], t_slice_proxy44[19], t_slice_proxy43[20], t_slice_proxy42[21], t_slice_proxy41[22], t_slice_proxy40[23], t_slice_proxy39[24], t_slice_proxy38[25], t_slice_proxy37[26], t_slice_proxy36[27], t_slice_proxy35[28], t_slice_proxy34[29], t_slice_proxy33[30], t_slice_proxy32[31]};
        soclinux_ethmac_liteethmaccrc32checker_crc_error0 <= (soclinux_ethmac_liteethmaccrc32checker_crc_next != 32'd3338984827);
    end
end
always @(*) begin
    soclinux_ethmac_liteethmaccrc32checker_crc_next <= 32'd0;
    soclinux_ethmac_liteethmaccrc32checker_crc_next[0] <= (((soclinux_ethmac_liteethmaccrc32checker_crc_last[24] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[1] <= (((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[25] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[2] <= (((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[26] ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[3] <= (((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[27] ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[4] <= (((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[28] ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[5] <= (((((((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[29] ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[6] <= (((((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[30] ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[7] <= (((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[31] ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[8] <= ((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[0] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[9] <= ((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[1] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[10] <= ((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[2] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[11] <= ((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[3] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[12] <= ((((((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[4] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[13] <= ((((((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[5] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[14] <= ((((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[6] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[15] <= ((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[7] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[16] <= ((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[8] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[17] <= ((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[9] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[18] <= ((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[10] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[19] <= ((((soclinux_ethmac_liteethmaccrc32checker_crc_last[11] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[20] <= ((soclinux_ethmac_liteethmaccrc32checker_crc_last[12] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[21] <= ((soclinux_ethmac_liteethmaccrc32checker_crc_last[13] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[22] <= ((soclinux_ethmac_liteethmaccrc32checker_crc_last[14] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[23] <= ((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[15] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[24] <= ((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[16] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[25] <= ((((soclinux_ethmac_liteethmaccrc32checker_crc_last[17] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[26] <= ((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[18] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[24]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[7]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[27] <= ((((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[19] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[25]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[6]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[28] <= ((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[20] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[26]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[5]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[29] <= ((((((soclinux_ethmac_liteethmaccrc32checker_crc_last[21] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[30]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[27]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[4]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[30] <= ((((soclinux_ethmac_liteethmaccrc32checker_crc_last[22] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[31]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[28]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[3]);
    soclinux_ethmac_liteethmaccrc32checker_crc_next[31] <= ((soclinux_ethmac_liteethmaccrc32checker_crc_last[23] ^ soclinux_ethmac_liteethmaccrc32checker_crc_last[29]) ^ soclinux_ethmac_liteethmaccrc32checker_crc_data1[2]);
end
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_din = {soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_last, soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_first, soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_error, soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_last_be, soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_data};
assign {soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_last, soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_first, soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_error, soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_last_be, soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_data} = soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_dout;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_ready = soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we = soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_valid;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_first = soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_first;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_last = soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_last;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_data = soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_data;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_last_be = soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_last_be;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_error = soclinux_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_error;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_valid = soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_readable;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_first = soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_first;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_last = soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_last;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_data = soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_data;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_last_be = soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_last_be;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error = soclinux_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_error;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_re = soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_ready;
always @(*) begin
    soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr <= 3'd0;
    if (soclinux_ethmac_liteethmaccrc32checker_syncfifo_replace) begin
        soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr <= (soclinux_ethmac_liteethmaccrc32checker_syncfifo_produce - 1'd1);
    end else begin
        soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_produce;
    end
end
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_w = soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_din;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_we = (soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we & (soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable | soclinux_ethmac_liteethmaccrc32checker_syncfifo_replace));
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_do_read = (soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_readable & soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_re);
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_rdport_adr = soclinux_ethmac_liteethmaccrc32checker_syncfifo_consume;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_dout = soclinux_ethmac_liteethmaccrc32checker_syncfifo_rdport_dat_r;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable = (soclinux_ethmac_liteethmaccrc32checker_syncfifo_level != 3'd5);
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_readable = (soclinux_ethmac_liteethmaccrc32checker_syncfifo_level != 1'd0);
always @(*) begin
    soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_ready <= 1'd0;
    soclinux_rxdatapath_bufferizeendpoints_next_state <= 2'd0;
    soclinux_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value0 <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value_ce0 <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value1 <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value_ce1 <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_fifo_reset <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_source_source_valid <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_crc_ce <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_source_source_first <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_crc_reset <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_source_source_last <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_source_source_payload_data <= 8'd0;
    soclinux_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_source_source_payload_error <= 1'd0;
    soclinux_ethmac_liteethmaccrc32checker_error <= 1'd0;
    soclinux_rxdatapath_bufferizeendpoints_next_state <= soclinux_rxdatapath_bufferizeendpoints_state;
    case (soclinux_rxdatapath_bufferizeendpoints_state)
        1'd1: begin
            if ((soclinux_ethmac_liteethmaccrc32checker_sink_sink_valid & soclinux_ethmac_liteethmaccrc32checker_sink_sink_ready)) begin
                soclinux_ethmac_liteethmaccrc32checker_crc_ce <= 1'd1;
                soclinux_rxdatapath_bufferizeendpoints_next_state <= 2'd2;
            end
        end
        2'd2: begin
            soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_ready <= soclinux_ethmac_liteethmaccrc32checker_fifo_out;
            soclinux_ethmac_liteethmaccrc32checker_source_source_valid <= (soclinux_ethmac_liteethmaccrc32checker_sink_sink_valid & soclinux_ethmac_liteethmaccrc32checker_fifo_full);
            soclinux_ethmac_liteethmaccrc32checker_source_source_payload_data <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_data;
            soclinux_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_last_be;
            soclinux_ethmac_liteethmaccrc32checker_source_source_payload_error <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error;
            if (1'd1) begin
                soclinux_ethmac_liteethmaccrc32checker_source_source_last <= soclinux_ethmac_liteethmaccrc32checker_sink_sink_last;
                soclinux_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be;
            end else begin
                if ((soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be & 4'd15)) begin
                    soclinux_ethmac_liteethmaccrc32checker_source_source_last <= soclinux_ethmac_liteethmaccrc32checker_sink_sink_last;
                    soclinux_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= (soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be <<< -3'd3);
                end else begin
                    soclinux_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value0 <= (soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be >>> 3'd4);
                    soclinux_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value_ce0 <= 1'd1;
                    soclinux_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value1 <= soclinux_ethmac_liteethmaccrc32checker_crc_error0;
                    soclinux_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value_ce1 <= 1'd1;
                end
            end
            soclinux_ethmac_liteethmaccrc32checker_source_source_payload_error <= (soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_error | {1{(soclinux_ethmac_liteethmaccrc32checker_crc_error0 & soclinux_ethmac_liteethmaccrc32checker_sink_sink_last)}});
            soclinux_ethmac_liteethmaccrc32checker_error <= ((soclinux_ethmac_liteethmaccrc32checker_sink_sink_valid & soclinux_ethmac_liteethmaccrc32checker_sink_sink_last) & soclinux_ethmac_liteethmaccrc32checker_crc_error0);
            if ((soclinux_ethmac_liteethmaccrc32checker_sink_sink_valid & soclinux_ethmac_liteethmaccrc32checker_sink_sink_ready)) begin
                soclinux_ethmac_liteethmaccrc32checker_crc_ce <= 1'd1;
                if ((soclinux_ethmac_liteethmaccrc32checker_sink_sink_last & (soclinux_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be > 4'd15))) begin
                    soclinux_rxdatapath_bufferizeendpoints_next_state <= 2'd3;
                end else begin
                    if (soclinux_ethmac_liteethmaccrc32checker_sink_sink_last) begin
                        soclinux_rxdatapath_bufferizeendpoints_next_state <= 1'd0;
                    end
                end
            end
        end
        2'd3: begin
            soclinux_ethmac_liteethmaccrc32checker_source_source_valid <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_valid;
            soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_ready <= soclinux_ethmac_liteethmaccrc32checker_source_source_ready;
            soclinux_ethmac_liteethmaccrc32checker_source_source_first <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_first;
            soclinux_ethmac_liteethmaccrc32checker_source_source_last <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_last;
            soclinux_ethmac_liteethmaccrc32checker_source_source_payload_data <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_data;
            soclinux_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_last_be;
            soclinux_ethmac_liteethmaccrc32checker_source_source_payload_error <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error;
            soclinux_ethmac_liteethmaccrc32checker_source_source_payload_error <= (soclinux_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error | {1{soclinux_ethmac_liteethmaccrc32checker_crc_error1}});
            soclinux_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= soclinux_ethmac_liteethmaccrc32checker_last_be;
            if ((soclinux_ethmac_liteethmaccrc32checker_source_source_valid & soclinux_ethmac_liteethmaccrc32checker_source_source_ready)) begin
                soclinux_rxdatapath_bufferizeendpoints_next_state <= 1'd0;
            end
        end
        default: begin
            soclinux_ethmac_liteethmaccrc32checker_crc_reset <= 1'd1;
            soclinux_ethmac_liteethmaccrc32checker_fifo_reset <= 1'd1;
            soclinux_rxdatapath_bufferizeendpoints_next_state <= 1'd1;
        end
    endcase
end
assign soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_ready = ((~soclinux_ethmac_bufferizeendpoints_pipe_valid_source_valid) | soclinux_ethmac_bufferizeendpoints_pipe_valid_source_ready);
assign soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_valid = soclinux_ethmac_bufferizeendpoints_sink_sink_valid;
assign soclinux_ethmac_bufferizeendpoints_sink_sink_ready = soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_ready;
assign soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_first = soclinux_ethmac_bufferizeendpoints_sink_sink_first;
assign soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_last = soclinux_ethmac_bufferizeendpoints_sink_sink_last;
assign soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_payload_data = soclinux_ethmac_bufferizeendpoints_sink_sink_payload_data;
assign soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_payload_last_be = soclinux_ethmac_bufferizeendpoints_sink_sink_payload_last_be;
assign soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_payload_error = soclinux_ethmac_bufferizeendpoints_sink_sink_payload_error;
assign soclinux_ethmac_bufferizeendpoints_source_source_valid = soclinux_ethmac_bufferizeendpoints_pipe_valid_source_valid;
assign soclinux_ethmac_bufferizeendpoints_pipe_valid_source_ready = soclinux_ethmac_bufferizeendpoints_source_source_ready;
assign soclinux_ethmac_bufferizeendpoints_source_source_first = soclinux_ethmac_bufferizeendpoints_pipe_valid_source_first;
assign soclinux_ethmac_bufferizeendpoints_source_source_last = soclinux_ethmac_bufferizeendpoints_pipe_valid_source_last;
assign soclinux_ethmac_bufferizeendpoints_source_source_payload_data = soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_data;
assign soclinux_ethmac_bufferizeendpoints_source_source_payload_last_be = soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_last_be;
assign soclinux_ethmac_bufferizeendpoints_source_source_payload_error = soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_error;
assign soclinux_ethmac_pulsesynchronizer1_o = (soclinux_ethmac_pulsesynchronizer1_toggle_o ^ soclinux_ethmac_pulsesynchronizer1_toggle_o_r);
assign soclinux_ethmac_rx_padding_source_valid = soclinux_ethmac_rx_padding_sink_valid;
assign soclinux_ethmac_rx_padding_sink_ready = soclinux_ethmac_rx_padding_source_ready;
assign soclinux_ethmac_rx_padding_source_first = soclinux_ethmac_rx_padding_sink_first;
assign soclinux_ethmac_rx_padding_source_last = soclinux_ethmac_rx_padding_sink_last;
assign soclinux_ethmac_rx_padding_source_payload_data = soclinux_ethmac_rx_padding_sink_payload_data;
assign soclinux_ethmac_rx_padding_source_payload_last_be = soclinux_ethmac_rx_padding_sink_payload_last_be;
assign soclinux_ethmac_rx_padding_source_payload_error = soclinux_ethmac_rx_padding_sink_payload_error;
assign soclinux_ethmac_rx_last_be_source_valid = soclinux_ethmac_rx_last_be_sink_valid;
assign soclinux_ethmac_rx_last_be_sink_ready = soclinux_ethmac_rx_last_be_source_ready;
assign soclinux_ethmac_rx_last_be_source_first = soclinux_ethmac_rx_last_be_sink_first;
assign soclinux_ethmac_rx_last_be_source_last = soclinux_ethmac_rx_last_be_sink_last;
assign soclinux_ethmac_rx_last_be_source_payload_data = soclinux_ethmac_rx_last_be_sink_payload_data;
assign soclinux_ethmac_rx_last_be_source_payload_error = soclinux_ethmac_rx_last_be_sink_payload_error;
always @(*) begin
    soclinux_ethmac_rx_last_be_source_payload_last_be <= 1'd0;
    soclinux_ethmac_rx_last_be_source_payload_last_be <= soclinux_ethmac_rx_last_be_sink_payload_last_be;
    if (1'd1) begin
        soclinux_ethmac_rx_last_be_source_payload_last_be <= soclinux_ethmac_rx_last_be_sink_last;
    end
end
assign soclinux_ethmac_rx_converter_converter_sink_valid = soclinux_ethmac_rx_converter_sink_valid;
assign soclinux_ethmac_rx_converter_converter_sink_first = soclinux_ethmac_rx_converter_sink_first;
assign soclinux_ethmac_rx_converter_converter_sink_last = soclinux_ethmac_rx_converter_sink_last;
assign soclinux_ethmac_rx_converter_sink_ready = soclinux_ethmac_rx_converter_converter_sink_ready;
assign soclinux_ethmac_rx_converter_converter_sink_payload_data = {soclinux_ethmac_rx_converter_sink_payload_error, soclinux_ethmac_rx_converter_sink_payload_last_be, soclinux_ethmac_rx_converter_sink_payload_data};
assign soclinux_ethmac_rx_converter_source_valid = soclinux_ethmac_rx_converter_source_source_valid;
assign soclinux_ethmac_rx_converter_source_first = soclinux_ethmac_rx_converter_source_source_first;
assign soclinux_ethmac_rx_converter_source_last = soclinux_ethmac_rx_converter_source_source_last;
assign soclinux_ethmac_rx_converter_source_source_ready = soclinux_ethmac_rx_converter_source_ready;
always @(*) begin
    soclinux_ethmac_rx_converter_source_payload_data <= 32'd0;
    soclinux_ethmac_rx_converter_source_payload_data[7:0] <= soclinux_ethmac_rx_converter_source_source_payload_data[7:0];
    soclinux_ethmac_rx_converter_source_payload_data[15:8] <= soclinux_ethmac_rx_converter_source_source_payload_data[17:10];
    soclinux_ethmac_rx_converter_source_payload_data[23:16] <= soclinux_ethmac_rx_converter_source_source_payload_data[27:20];
    soclinux_ethmac_rx_converter_source_payload_data[31:24] <= soclinux_ethmac_rx_converter_source_source_payload_data[37:30];
end
always @(*) begin
    soclinux_ethmac_rx_converter_source_payload_last_be <= 4'd0;
    soclinux_ethmac_rx_converter_source_payload_last_be[0] <= soclinux_ethmac_rx_converter_source_source_payload_data[8];
    soclinux_ethmac_rx_converter_source_payload_last_be[1] <= soclinux_ethmac_rx_converter_source_source_payload_data[18];
    soclinux_ethmac_rx_converter_source_payload_last_be[2] <= soclinux_ethmac_rx_converter_source_source_payload_data[28];
    soclinux_ethmac_rx_converter_source_payload_last_be[3] <= soclinux_ethmac_rx_converter_source_source_payload_data[38];
end
always @(*) begin
    soclinux_ethmac_rx_converter_source_payload_error <= 4'd0;
    soclinux_ethmac_rx_converter_source_payload_error[0] <= soclinux_ethmac_rx_converter_source_source_payload_data[9];
    soclinux_ethmac_rx_converter_source_payload_error[1] <= soclinux_ethmac_rx_converter_source_source_payload_data[19];
    soclinux_ethmac_rx_converter_source_payload_error[2] <= soclinux_ethmac_rx_converter_source_source_payload_data[29];
    soclinux_ethmac_rx_converter_source_payload_error[3] <= soclinux_ethmac_rx_converter_source_source_payload_data[39];
end
assign soclinux_ethmac_rx_converter_source_source_valid = soclinux_ethmac_rx_converter_converter_source_valid;
assign soclinux_ethmac_rx_converter_converter_source_ready = soclinux_ethmac_rx_converter_source_source_ready;
assign soclinux_ethmac_rx_converter_source_source_first = soclinux_ethmac_rx_converter_converter_source_first;
assign soclinux_ethmac_rx_converter_source_source_last = soclinux_ethmac_rx_converter_converter_source_last;
assign soclinux_ethmac_rx_converter_source_source_payload_data = soclinux_ethmac_rx_converter_converter_source_payload_data;
assign soclinux_ethmac_rx_converter_converter_sink_ready = ((~soclinux_ethmac_rx_converter_converter_strobe_all) | soclinux_ethmac_rx_converter_converter_source_ready);
assign soclinux_ethmac_rx_converter_converter_source_valid = soclinux_ethmac_rx_converter_converter_strobe_all;
assign soclinux_ethmac_rx_converter_converter_load_part = (soclinux_ethmac_rx_converter_converter_sink_valid & soclinux_ethmac_rx_converter_converter_sink_ready);
assign soclinux_ethmac_rx_cdc_cdc_sink_valid = soclinux_ethmac_rx_cdc_sink_sink_valid;
assign soclinux_ethmac_rx_cdc_sink_sink_ready = soclinux_ethmac_rx_cdc_cdc_sink_ready;
assign soclinux_ethmac_rx_cdc_cdc_sink_first = soclinux_ethmac_rx_cdc_sink_sink_first;
assign soclinux_ethmac_rx_cdc_cdc_sink_last = soclinux_ethmac_rx_cdc_sink_sink_last;
assign soclinux_ethmac_rx_cdc_cdc_sink_payload_data = soclinux_ethmac_rx_cdc_sink_sink_payload_data;
assign soclinux_ethmac_rx_cdc_cdc_sink_payload_last_be = soclinux_ethmac_rx_cdc_sink_sink_payload_last_be;
assign soclinux_ethmac_rx_cdc_cdc_sink_payload_error = soclinux_ethmac_rx_cdc_sink_sink_payload_error;
assign soclinux_ethmac_rx_cdc_source_source_valid = soclinux_ethmac_rx_cdc_cdc_source_valid;
assign soclinux_ethmac_rx_cdc_cdc_source_ready = soclinux_ethmac_rx_cdc_source_source_ready;
assign soclinux_ethmac_rx_cdc_source_source_first = soclinux_ethmac_rx_cdc_cdc_source_first;
assign soclinux_ethmac_rx_cdc_source_source_last = soclinux_ethmac_rx_cdc_cdc_source_last;
assign soclinux_ethmac_rx_cdc_source_source_payload_data = soclinux_ethmac_rx_cdc_cdc_source_payload_data;
assign soclinux_ethmac_rx_cdc_source_source_payload_last_be = soclinux_ethmac_rx_cdc_cdc_source_payload_last_be;
assign soclinux_ethmac_rx_cdc_source_source_payload_error = soclinux_ethmac_rx_cdc_cdc_source_payload_error;
assign soclinux_ethmac_rx_cdc_cdc_asyncfifo_din = {soclinux_ethmac_rx_cdc_cdc_fifo_in_last, soclinux_ethmac_rx_cdc_cdc_fifo_in_first, soclinux_ethmac_rx_cdc_cdc_fifo_in_payload_error, soclinux_ethmac_rx_cdc_cdc_fifo_in_payload_last_be, soclinux_ethmac_rx_cdc_cdc_fifo_in_payload_data};
assign {soclinux_ethmac_rx_cdc_cdc_fifo_out_last, soclinux_ethmac_rx_cdc_cdc_fifo_out_first, soclinux_ethmac_rx_cdc_cdc_fifo_out_payload_error, soclinux_ethmac_rx_cdc_cdc_fifo_out_payload_last_be, soclinux_ethmac_rx_cdc_cdc_fifo_out_payload_data} = soclinux_ethmac_rx_cdc_cdc_asyncfifo_dout;
assign soclinux_ethmac_rx_cdc_cdc_sink_ready = soclinux_ethmac_rx_cdc_cdc_asyncfifo_writable;
assign soclinux_ethmac_rx_cdc_cdc_asyncfifo_we = soclinux_ethmac_rx_cdc_cdc_sink_valid;
assign soclinux_ethmac_rx_cdc_cdc_fifo_in_first = soclinux_ethmac_rx_cdc_cdc_sink_first;
assign soclinux_ethmac_rx_cdc_cdc_fifo_in_last = soclinux_ethmac_rx_cdc_cdc_sink_last;
assign soclinux_ethmac_rx_cdc_cdc_fifo_in_payload_data = soclinux_ethmac_rx_cdc_cdc_sink_payload_data;
assign soclinux_ethmac_rx_cdc_cdc_fifo_in_payload_last_be = soclinux_ethmac_rx_cdc_cdc_sink_payload_last_be;
assign soclinux_ethmac_rx_cdc_cdc_fifo_in_payload_error = soclinux_ethmac_rx_cdc_cdc_sink_payload_error;
assign soclinux_ethmac_rx_cdc_cdc_source_valid = soclinux_ethmac_rx_cdc_cdc_asyncfifo_readable;
assign soclinux_ethmac_rx_cdc_cdc_source_first = soclinux_ethmac_rx_cdc_cdc_fifo_out_first;
assign soclinux_ethmac_rx_cdc_cdc_source_last = soclinux_ethmac_rx_cdc_cdc_fifo_out_last;
assign soclinux_ethmac_rx_cdc_cdc_source_payload_data = soclinux_ethmac_rx_cdc_cdc_fifo_out_payload_data;
assign soclinux_ethmac_rx_cdc_cdc_source_payload_last_be = soclinux_ethmac_rx_cdc_cdc_fifo_out_payload_last_be;
assign soclinux_ethmac_rx_cdc_cdc_source_payload_error = soclinux_ethmac_rx_cdc_cdc_fifo_out_payload_error;
assign soclinux_ethmac_rx_cdc_cdc_asyncfifo_re = soclinux_ethmac_rx_cdc_cdc_source_ready;
assign soclinux_ethmac_rx_cdc_cdc_graycounter0_ce = (soclinux_ethmac_rx_cdc_cdc_asyncfifo_writable & soclinux_ethmac_rx_cdc_cdc_asyncfifo_we);
assign soclinux_ethmac_rx_cdc_cdc_graycounter1_ce = (soclinux_ethmac_rx_cdc_cdc_asyncfifo_readable & soclinux_ethmac_rx_cdc_cdc_asyncfifo_re);
assign soclinux_ethmac_rx_cdc_cdc_asyncfifo_writable = (((soclinux_ethmac_rx_cdc_cdc_graycounter0_q[5] == soclinux_ethmac_rx_cdc_cdc_consume_wdomain[5]) | (soclinux_ethmac_rx_cdc_cdc_graycounter0_q[4] == soclinux_ethmac_rx_cdc_cdc_consume_wdomain[4])) | (soclinux_ethmac_rx_cdc_cdc_graycounter0_q[3:0] != soclinux_ethmac_rx_cdc_cdc_consume_wdomain[3:0]));
assign soclinux_ethmac_rx_cdc_cdc_asyncfifo_readable = (soclinux_ethmac_rx_cdc_cdc_graycounter1_q != soclinux_ethmac_rx_cdc_cdc_produce_rdomain);
assign soclinux_ethmac_rx_cdc_cdc_wrport_adr = soclinux_ethmac_rx_cdc_cdc_graycounter0_q_binary[4:0];
assign soclinux_ethmac_rx_cdc_cdc_wrport_dat_w = soclinux_ethmac_rx_cdc_cdc_asyncfifo_din;
assign soclinux_ethmac_rx_cdc_cdc_wrport_we = soclinux_ethmac_rx_cdc_cdc_graycounter0_ce;
assign soclinux_ethmac_rx_cdc_cdc_rdport_adr = soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next_binary[4:0];
assign soclinux_ethmac_rx_cdc_cdc_asyncfifo_dout = soclinux_ethmac_rx_cdc_cdc_rdport_dat_r;
always @(*) begin
    soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next_binary <= 6'd0;
    if (soclinux_ethmac_rx_cdc_cdc_graycounter0_ce) begin
        soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next_binary <= (soclinux_ethmac_rx_cdc_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next_binary <= soclinux_ethmac_rx_cdc_cdc_graycounter0_q_binary;
    end
end
assign soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next = (soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next_binary ^ soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
    soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next_binary <= 6'd0;
    if (soclinux_ethmac_rx_cdc_cdc_graycounter1_ce) begin
        soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next_binary <= (soclinux_ethmac_rx_cdc_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next_binary <= soclinux_ethmac_rx_cdc_cdc_graycounter1_q_binary;
    end
end
assign soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next = (soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next_binary ^ soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next_binary[5:1]);
assign soclinux_ethmac_rx_preamble_sink_valid = ethphy_liteethphygmiimiirx_source_source_valid0;
assign ethphy_liteethphygmiimiirx_source_source_ready0 = soclinux_ethmac_rx_preamble_sink_ready;
assign soclinux_ethmac_rx_preamble_sink_first = ethphy_liteethphygmiimiirx_source_source_first0;
assign soclinux_ethmac_rx_preamble_sink_last = ethphy_liteethphygmiimiirx_source_source_last0;
assign soclinux_ethmac_rx_preamble_sink_payload_data = ethphy_liteethphygmiimiirx_source_source_payload_data0;
assign soclinux_ethmac_rx_preamble_sink_payload_last_be = ethphy_liteethphygmiimiirx_source_source_payload_last_be0;
assign soclinux_ethmac_rx_preamble_sink_payload_error = ethphy_liteethphygmiimiirx_source_source_payload_error0;
assign soclinux_ethmac_bufferizeendpoints_sink_sink_valid = soclinux_ethmac_rx_preamble_source_valid;
assign soclinux_ethmac_rx_preamble_source_ready = soclinux_ethmac_bufferizeendpoints_sink_sink_ready;
assign soclinux_ethmac_bufferizeendpoints_sink_sink_first = soclinux_ethmac_rx_preamble_source_first;
assign soclinux_ethmac_bufferizeendpoints_sink_sink_last = soclinux_ethmac_rx_preamble_source_last;
assign soclinux_ethmac_bufferizeendpoints_sink_sink_payload_data = soclinux_ethmac_rx_preamble_source_payload_data;
assign soclinux_ethmac_bufferizeendpoints_sink_sink_payload_last_be = soclinux_ethmac_rx_preamble_source_payload_last_be;
assign soclinux_ethmac_bufferizeendpoints_sink_sink_payload_error = soclinux_ethmac_rx_preamble_source_payload_error;
assign soclinux_ethmac_rx_padding_sink_valid = soclinux_ethmac_liteethmaccrc32checker_source_source_valid;
assign soclinux_ethmac_liteethmaccrc32checker_source_source_ready = soclinux_ethmac_rx_padding_sink_ready;
assign soclinux_ethmac_rx_padding_sink_first = soclinux_ethmac_liteethmaccrc32checker_source_source_first;
assign soclinux_ethmac_rx_padding_sink_last = soclinux_ethmac_liteethmaccrc32checker_source_source_last;
assign soclinux_ethmac_rx_padding_sink_payload_data = soclinux_ethmac_liteethmaccrc32checker_source_source_payload_data;
assign soclinux_ethmac_rx_padding_sink_payload_last_be = soclinux_ethmac_liteethmaccrc32checker_source_source_payload_last_be;
assign soclinux_ethmac_rx_padding_sink_payload_error = soclinux_ethmac_liteethmaccrc32checker_source_source_payload_error;
assign soclinux_ethmac_rx_last_be_sink_valid = soclinux_ethmac_rx_padding_source_valid;
assign soclinux_ethmac_rx_padding_source_ready = soclinux_ethmac_rx_last_be_sink_ready;
assign soclinux_ethmac_rx_last_be_sink_first = soclinux_ethmac_rx_padding_source_first;
assign soclinux_ethmac_rx_last_be_sink_last = soclinux_ethmac_rx_padding_source_last;
assign soclinux_ethmac_rx_last_be_sink_payload_data = soclinux_ethmac_rx_padding_source_payload_data;
assign soclinux_ethmac_rx_last_be_sink_payload_last_be = soclinux_ethmac_rx_padding_source_payload_last_be;
assign soclinux_ethmac_rx_last_be_sink_payload_error = soclinux_ethmac_rx_padding_source_payload_error;
assign soclinux_ethmac_rx_converter_sink_valid = soclinux_ethmac_rx_last_be_source_valid;
assign soclinux_ethmac_rx_last_be_source_ready = soclinux_ethmac_rx_converter_sink_ready;
assign soclinux_ethmac_rx_converter_sink_first = soclinux_ethmac_rx_last_be_source_first;
assign soclinux_ethmac_rx_converter_sink_last = soclinux_ethmac_rx_last_be_source_last;
assign soclinux_ethmac_rx_converter_sink_payload_data = soclinux_ethmac_rx_last_be_source_payload_data;
assign soclinux_ethmac_rx_converter_sink_payload_last_be = soclinux_ethmac_rx_last_be_source_payload_last_be;
assign soclinux_ethmac_rx_converter_sink_payload_error = soclinux_ethmac_rx_last_be_source_payload_error;
assign soclinux_ethmac_rx_cdc_sink_sink_valid = soclinux_ethmac_rx_converter_source_valid;
assign soclinux_ethmac_rx_converter_source_ready = soclinux_ethmac_rx_cdc_sink_sink_ready;
assign soclinux_ethmac_rx_cdc_sink_sink_first = soclinux_ethmac_rx_converter_source_first;
assign soclinux_ethmac_rx_cdc_sink_sink_last = soclinux_ethmac_rx_converter_source_last;
assign soclinux_ethmac_rx_cdc_sink_sink_payload_data = soclinux_ethmac_rx_converter_source_payload_data;
assign soclinux_ethmac_rx_cdc_sink_sink_payload_last_be = soclinux_ethmac_rx_converter_source_payload_last_be;
assign soclinux_ethmac_rx_cdc_sink_sink_payload_error = soclinux_ethmac_rx_converter_source_payload_error;
assign soclinux_ethmac_source_valid = soclinux_ethmac_rx_cdc_source_source_valid;
assign soclinux_ethmac_rx_cdc_source_source_ready = soclinux_ethmac_source_ready;
assign soclinux_ethmac_source_first = soclinux_ethmac_rx_cdc_source_source_first;
assign soclinux_ethmac_source_last = soclinux_ethmac_rx_cdc_source_source_last;
assign soclinux_ethmac_source_payload_data = soclinux_ethmac_rx_cdc_source_source_payload_data;
assign soclinux_ethmac_source_payload_last_be = soclinux_ethmac_rx_cdc_source_source_payload_last_be;
assign soclinux_ethmac_source_payload_error = soclinux_ethmac_rx_cdc_source_source_payload_error;
assign soclinux_ethmac_sram0_sink_valid = soclinux_ethmac_sink_sink_valid;
assign soclinux_ethmac_sink_sink_ready = soclinux_ethmac_sram1_sink_ready;
assign soclinux_ethmac_sram2_sink_first = soclinux_ethmac_sink_sink_first;
assign soclinux_ethmac_sram3_sink_last = soclinux_ethmac_sink_sink_last;
assign soclinux_ethmac_sram4_sink_payload_data = soclinux_ethmac_sink_sink_payload_data;
assign soclinux_ethmac_sram5_sink_payload_last_be = soclinux_ethmac_sink_sink_payload_last_be;
assign soclinux_ethmac_sram6_sink_payload_error = soclinux_ethmac_sink_sink_payload_error;
assign soclinux_ethmac_source_source_valid = soclinux_ethmac_sram83_source_valid;
assign soclinux_ethmac_sram84_source_ready = soclinux_ethmac_source_source_ready;
assign soclinux_ethmac_source_source_first = soclinux_ethmac_sram85_source_first;
assign soclinux_ethmac_source_source_last = soclinux_ethmac_sram86_source_last;
assign soclinux_ethmac_source_source_payload_data = soclinux_ethmac_sram87_source_payload_data;
assign soclinux_ethmac_source_source_payload_last_be = soclinux_ethmac_sram88_source_payload_last_be;
assign soclinux_ethmac_source_source_payload_error = soclinux_ethmac_sram89_source_payload_error;
always @(*) begin
    soclinux_ethmac_length_inc <= 4'd0;
    case (soclinux_ethmac_sram5_sink_payload_last_be)
        1'd1: begin
            soclinux_ethmac_length_inc <= 1'd1;
        end
        2'd2: begin
            soclinux_ethmac_length_inc <= 2'd2;
        end
        3'd4: begin
            soclinux_ethmac_length_inc <= 2'd3;
        end
        4'd8: begin
            soclinux_ethmac_length_inc <= 3'd4;
        end
        5'd16: begin
            soclinux_ethmac_length_inc <= 3'd5;
        end
        6'd32: begin
            soclinux_ethmac_length_inc <= 3'd6;
        end
        7'd64: begin
            soclinux_ethmac_length_inc <= 3'd7;
        end
        default: begin
            soclinux_ethmac_length_inc <= 3'd4;
        end
    endcase
end
assign soclinux_ethmac_sram44_source_ready = soclinux_ethmac_sram20_clear;
assign soclinux_ethmac_sram19_trigger = soclinux_ethmac_sram43_source_valid;
assign soclinux_ethmac_sram7_status = soclinux_ethmac_sram47_source_payload_slot;
assign soclinux_ethmac_sram10_status = soclinux_ethmac_sram48_source_payload_length;
assign soclinux_ethmac_wr_data = soclinux_ethmac_sram4_sink_payload_data;
always @(*) begin
    soclinux_ethmac_sram81_we <= 1'd0;
    soclinux_ethmac_sram75_adr <= 9'd0;
    soclinux_ethmac_sram82_dat_w <= 32'd0;
    soclinux_ethmac_sram77_we <= 1'd0;
    soclinux_ethmac_sram78_dat_w <= 32'd0;
    soclinux_ethmac_sram79_adr <= 9'd0;
    case (soclinux_ethmac_slot)
        1'd0: begin
            soclinux_ethmac_sram75_adr <= soclinux_ethmac_sram35_length[10:2];
            soclinux_ethmac_sram78_dat_w <= soclinux_ethmac_wr_data;
            if ((soclinux_ethmac_sram0_sink_valid & soclinux_ethmac_write)) begin
                soclinux_ethmac_sram77_we <= 1'd1;
            end
        end
        1'd1: begin
            soclinux_ethmac_sram79_adr <= soclinux_ethmac_sram35_length[10:2];
            soclinux_ethmac_sram82_dat_w <= soclinux_ethmac_wr_data;
            if ((soclinux_ethmac_sram0_sink_valid & soclinux_ethmac_write)) begin
                soclinux_ethmac_sram81_we <= 1'd1;
            end
        end
    endcase
end
assign soclinux_ethmac_sram21_available = soclinux_ethmac_sram17_status;
assign soclinux_ethmac_sram25_available = soclinux_ethmac_sram18_pending;
always @(*) begin
    soclinux_ethmac_sram20_clear <= 1'd0;
    if ((soclinux_ethmac_sram28_re & soclinux_ethmac_sram29_r)) begin
        soclinux_ethmac_sram20_clear <= 1'd1;
    end
end
assign soclinux_ethmac_sram16_irq = (soclinux_ethmac_sram26_status & soclinux_ethmac_sram31_storage);
assign soclinux_ethmac_sram17_status = soclinux_ethmac_sram19_trigger;
assign soclinux_ethmac_sram18_pending = soclinux_ethmac_sram19_trigger;
assign soclinux_ethmac_sram53_din = {soclinux_ethmac_sram69_fifo_in_last, soclinux_ethmac_sram68_fifo_in_first, soclinux_ethmac_sram67_fifo_in_payload_length, soclinux_ethmac_sram66_fifo_in_payload_slot};
assign {soclinux_ethmac_sram73_fifo_out_last, soclinux_ethmac_sram72_fifo_out_first, soclinux_ethmac_sram71_fifo_out_payload_length, soclinux_ethmac_sram70_fifo_out_payload_slot} = soclinux_ethmac_sram54_dout;
assign soclinux_ethmac_sram38_sink_ready = soclinux_ethmac_sram50_writable;
assign soclinux_ethmac_sram49_we = soclinux_ethmac_sram37_sink_valid;
assign soclinux_ethmac_sram68_fifo_in_first = soclinux_ethmac_sram39_sink_first;
assign soclinux_ethmac_sram69_fifo_in_last = soclinux_ethmac_sram40_sink_last;
assign soclinux_ethmac_sram66_fifo_in_payload_slot = soclinux_ethmac_sram41_sink_payload_slot;
assign soclinux_ethmac_sram67_fifo_in_payload_length = soclinux_ethmac_sram42_sink_payload_length;
assign soclinux_ethmac_sram43_source_valid = soclinux_ethmac_sram52_readable;
assign soclinux_ethmac_sram45_source_first = soclinux_ethmac_sram72_fifo_out_first;
assign soclinux_ethmac_sram46_source_last = soclinux_ethmac_sram73_fifo_out_last;
assign soclinux_ethmac_sram47_source_payload_slot = soclinux_ethmac_sram70_fifo_out_payload_slot;
assign soclinux_ethmac_sram48_source_payload_length = soclinux_ethmac_sram71_fifo_out_payload_length;
assign soclinux_ethmac_sram51_re = soclinux_ethmac_sram44_source_ready;
always @(*) begin
    soclinux_ethmac_sram59_adr <= 1'd0;
    if (soclinux_ethmac_sram56_replace) begin
        soclinux_ethmac_sram59_adr <= (soclinux_ethmac_sram57_produce - 1'd1);
    end else begin
        soclinux_ethmac_sram59_adr <= soclinux_ethmac_sram57_produce;
    end
end
assign soclinux_ethmac_sram62_dat_w = soclinux_ethmac_sram53_din;
assign soclinux_ethmac_sram61_we = (soclinux_ethmac_sram49_we & (soclinux_ethmac_sram50_writable | soclinux_ethmac_sram56_replace));
assign soclinux_ethmac_sram63_do_read = (soclinux_ethmac_sram52_readable & soclinux_ethmac_sram51_re);
assign soclinux_ethmac_sram64_adr = soclinux_ethmac_sram58_consume;
assign soclinux_ethmac_sram54_dout = soclinux_ethmac_sram65_dat_r;
assign soclinux_ethmac_sram50_writable = (soclinux_ethmac_sram55_level != 2'd2);
assign soclinux_ethmac_sram52_readable = (soclinux_ethmac_sram55_level != 1'd0);
always @(*) begin
    soclinux_ethmac_sram42_sink_payload_length <= 11'd0;
    soclinux_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value <= 32'd0;
    soclinux_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce <= 1'd0;
    soclinux_ethmac_sram41_sink_payload_slot <= 1'd0;
    soclinux_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value <= 1'd0;
    soclinux_ethmac_sram37_sink_valid <= 1'd0;
    soclinux_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce <= 1'd0;
    soclinux_liteethmacsramwriter_next_state <= 2'd0;
    soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 11'd0;
    soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd0;
    soclinux_ethmac_write <= 1'd0;
    soclinux_liteethmacsramwriter_next_state <= soclinux_liteethmacsramwriter_state;
    case (soclinux_liteethmacsramwriter_state)
        1'd1: begin
            if ((soclinux_ethmac_sram0_sink_valid & soclinux_ethmac_sram3_sink_last)) begin
                if (((soclinux_ethmac_sram6_sink_payload_error & soclinux_ethmac_sram5_sink_payload_last_be) != 1'd0)) begin
                    soclinux_liteethmacsramwriter_next_state <= 2'd2;
                end else begin
                    soclinux_liteethmacsramwriter_next_state <= 2'd3;
                end
            end
        end
        2'd2: begin
            soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 1'd0;
            soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
            soclinux_liteethmacsramwriter_next_state <= 1'd0;
        end
        2'd3: begin
            soclinux_ethmac_sram37_sink_valid <= 1'd1;
            soclinux_ethmac_sram41_sink_payload_slot <= soclinux_ethmac_slot;
            soclinux_ethmac_sram42_sink_payload_length <= soclinux_ethmac_sram35_length;
            soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 1'd0;
            soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
            soclinux_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value <= (soclinux_ethmac_slot + 1'd1);
            soclinux_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce <= 1'd1;
            soclinux_liteethmacsramwriter_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_ethmac_sram0_sink_valid) begin
                if (soclinux_ethmac_sram38_sink_ready) begin
                    soclinux_ethmac_write <= 1'd1;
                    soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= (soclinux_ethmac_sram35_length + soclinux_ethmac_length_inc);
                    soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
                    if ((soclinux_ethmac_sram35_length >= 11'd1530)) begin
                        soclinux_liteethmacsramwriter_next_state <= 1'd1;
                    end
                    if (soclinux_ethmac_sram3_sink_last) begin
                        if (((soclinux_ethmac_sram6_sink_payload_error & soclinux_ethmac_sram5_sink_payload_last_be) != 1'd0)) begin
                            soclinux_liteethmacsramwriter_next_state <= 2'd2;
                        end else begin
                            soclinux_liteethmacsramwriter_next_state <= 2'd3;
                        end
                    end
                end else begin
                    soclinux_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value <= (soclinux_ethmac_sram13_status + 1'd1);
                    soclinux_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce <= 1'd1;
                    soclinux_liteethmacsramwriter_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign soclinux_ethmac_sram123_sink_valid = soclinux_ethmac_start_re;
assign soclinux_ethmac_sram127_sink_payload_slot = soclinux_ethmac_sram100_storage;
assign soclinux_ethmac_sram128_sink_payload_length = soclinux_ethmac_sram102_storage;
assign soclinux_ethmac_sram94_status = soclinux_ethmac_sram124_sink_ready;
assign soclinux_ethmac_sram97_status = soclinux_ethmac_sram141_level;
always @(*) begin
    soclinux_ethmac_sram88_source_payload_last_be <= 4'd0;
    if (soclinux_ethmac_sram86_source_last) begin
        case (soclinux_ethmac_sram134_source_payload_length[1:0])
            1'd1: begin
                soclinux_ethmac_sram88_source_payload_last_be <= 1'd1;
            end
            2'd2: begin
                soclinux_ethmac_sram88_source_payload_last_be <= 2'd2;
            end
            2'd3: begin
                soclinux_ethmac_sram88_source_payload_last_be <= 3'd4;
            end
            3'd4: begin
                soclinux_ethmac_sram88_source_payload_last_be <= 4'd8;
            end
            3'd5: begin
                soclinux_ethmac_sram88_source_payload_last_be <= 5'd16;
            end
            3'd6: begin
                soclinux_ethmac_sram88_source_payload_last_be <= 6'd32;
            end
            3'd7: begin
                soclinux_ethmac_sram88_source_payload_last_be <= 7'd64;
            end
            default: begin
                soclinux_ethmac_sram88_source_payload_last_be <= 4'd8;
            end
        endcase
    end
end
assign soclinux_ethmac_sram163_re = soclinux_ethmac_read;
assign soclinux_ethmac_sram161_adr = soclinux_ethmac_sram122_length[10:2];
assign soclinux_ethmac_sram166_re = soclinux_ethmac_read;
assign soclinux_ethmac_sram164_adr = soclinux_ethmac_sram122_length[10:2];
always @(*) begin
    soclinux_ethmac_rd_data <= 32'd0;
    case (soclinux_ethmac_sram133_source_payload_slot)
        1'd0: begin
            soclinux_ethmac_rd_data <= soclinux_ethmac_sram162_dat_r;
        end
        1'd1: begin
            soclinux_ethmac_rd_data <= soclinux_ethmac_sram165_dat_r;
        end
    endcase
end
assign soclinux_ethmac_sram87_source_payload_data = soclinux_ethmac_rd_data;
assign soclinux_ethmac_sram109_event0 = soclinux_ethmac_sram105_status;
assign soclinux_ethmac_sram113_event0 = soclinux_ethmac_sram106_pending;
always @(*) begin
    soclinux_ethmac_sram108_clear <= 1'd0;
    if ((soclinux_ethmac_sram116_re & soclinux_ethmac_sram117_r)) begin
        soclinux_ethmac_sram108_clear <= 1'd1;
    end
end
assign soclinux_ethmac_sram104_irq = (soclinux_ethmac_sram114_status & soclinux_ethmac_sram119_storage);
assign soclinux_ethmac_sram105_status = 1'd0;
assign soclinux_ethmac_sram139_din = {soclinux_ethmac_sram155_fifo_in_last, soclinux_ethmac_sram154_fifo_in_first, soclinux_ethmac_sram153_fifo_in_payload_length, soclinux_ethmac_sram152_fifo_in_payload_slot};
assign {soclinux_ethmac_sram159_fifo_out_last, soclinux_ethmac_sram158_fifo_out_first, soclinux_ethmac_sram157_fifo_out_payload_length, soclinux_ethmac_sram156_fifo_out_payload_slot} = soclinux_ethmac_sram140_dout;
assign soclinux_ethmac_sram124_sink_ready = soclinux_ethmac_sram136_writable;
assign soclinux_ethmac_sram135_we = soclinux_ethmac_sram123_sink_valid;
assign soclinux_ethmac_sram154_fifo_in_first = soclinux_ethmac_sram125_sink_first;
assign soclinux_ethmac_sram155_fifo_in_last = soclinux_ethmac_sram126_sink_last;
assign soclinux_ethmac_sram152_fifo_in_payload_slot = soclinux_ethmac_sram127_sink_payload_slot;
assign soclinux_ethmac_sram153_fifo_in_payload_length = soclinux_ethmac_sram128_sink_payload_length;
assign soclinux_ethmac_sram129_source_valid = soclinux_ethmac_sram138_readable;
assign soclinux_ethmac_sram131_source_first = soclinux_ethmac_sram158_fifo_out_first;
assign soclinux_ethmac_sram132_source_last = soclinux_ethmac_sram159_fifo_out_last;
assign soclinux_ethmac_sram133_source_payload_slot = soclinux_ethmac_sram156_fifo_out_payload_slot;
assign soclinux_ethmac_sram134_source_payload_length = soclinux_ethmac_sram157_fifo_out_payload_length;
assign soclinux_ethmac_sram137_re = soclinux_ethmac_sram130_source_ready;
always @(*) begin
    soclinux_ethmac_sram145_adr <= 1'd0;
    if (soclinux_ethmac_sram142_replace) begin
        soclinux_ethmac_sram145_adr <= (soclinux_ethmac_sram143_produce - 1'd1);
    end else begin
        soclinux_ethmac_sram145_adr <= soclinux_ethmac_sram143_produce;
    end
end
assign soclinux_ethmac_sram148_dat_w = soclinux_ethmac_sram139_din;
assign soclinux_ethmac_sram147_we = (soclinux_ethmac_sram135_we & (soclinux_ethmac_sram136_writable | soclinux_ethmac_sram142_replace));
assign soclinux_ethmac_sram149_do_read = (soclinux_ethmac_sram138_readable & soclinux_ethmac_sram137_re);
assign soclinux_ethmac_sram150_adr = soclinux_ethmac_sram144_consume;
assign soclinux_ethmac_sram140_dout = soclinux_ethmac_sram151_dat_r;
assign soclinux_ethmac_sram136_writable = (soclinux_ethmac_sram141_level != 2'd2);
assign soclinux_ethmac_sram138_readable = (soclinux_ethmac_sram141_level != 1'd0);
always @(*) begin
    soclinux_liteethmacsramreader_next_state <= 2'd0;
    soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= 11'd0;
    soclinux_ethmac_sram130_source_ready <= 1'd0;
    soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd0;
    soclinux_ethmac_sram107_trigger <= 1'd0;
    soclinux_ethmac_sram83_source_valid <= 1'd0;
    soclinux_ethmac_read <= 1'd0;
    soclinux_ethmac_sram86_source_last <= 1'd0;
    soclinux_liteethmacsramreader_next_state <= soclinux_liteethmacsramreader_state;
    case (soclinux_liteethmacsramreader_state)
        1'd1: begin
            soclinux_ethmac_sram83_source_valid <= 1'd1;
            soclinux_ethmac_sram86_source_last <= (soclinux_ethmac_sram122_length >= soclinux_ethmac_sram134_source_payload_length);
            if (soclinux_ethmac_sram84_source_ready) begin
                soclinux_ethmac_read <= 1'd1;
                soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= (soclinux_ethmac_sram122_length + 3'd4);
                soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd1;
                if (soclinux_ethmac_sram86_source_last) begin
                    soclinux_liteethmacsramreader_next_state <= 2'd2;
                end
            end
        end
        2'd2: begin
            soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= 1'd0;
            soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd1;
            soclinux_ethmac_sram107_trigger <= 1'd1;
            soclinux_ethmac_sram130_source_ready <= 1'd1;
            soclinux_liteethmacsramreader_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_ethmac_sram129_source_valid) begin
                soclinux_ethmac_read <= 1'd1;
                soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= 3'd4;
                soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd1;
                soclinux_liteethmacsramreader_next_state <= 1'd1;
            end
        end
    endcase
end
assign soclinux_ethmac_sram167_irq = (soclinux_ethmac_sram16_irq | soclinux_ethmac_sram104_irq);
assign soclinux_ethmac_sram2_adr = soclinux_ethmac_interface0_adr[8:0];
assign soclinux_ethmac_interface0_dat_r = soclinux_ethmac_sram2_dat_r;
assign soclinux_ethmac_sram3_adr = soclinux_ethmac_interface1_adr[8:0];
assign soclinux_ethmac_interface1_dat_r = soclinux_ethmac_sram3_dat_r;
always @(*) begin
    soclinux_ethmac_sram4_we <= 4'd0;
    soclinux_ethmac_sram4_we[0] <= (((soclinux_ethmac_interface2_cyc & soclinux_ethmac_interface2_stb) & soclinux_ethmac_interface2_we) & soclinux_ethmac_interface2_sel[0]);
    soclinux_ethmac_sram4_we[1] <= (((soclinux_ethmac_interface2_cyc & soclinux_ethmac_interface2_stb) & soclinux_ethmac_interface2_we) & soclinux_ethmac_interface2_sel[1]);
    soclinux_ethmac_sram4_we[2] <= (((soclinux_ethmac_interface2_cyc & soclinux_ethmac_interface2_stb) & soclinux_ethmac_interface2_we) & soclinux_ethmac_interface2_sel[2]);
    soclinux_ethmac_sram4_we[3] <= (((soclinux_ethmac_interface2_cyc & soclinux_ethmac_interface2_stb) & soclinux_ethmac_interface2_we) & soclinux_ethmac_interface2_sel[3]);
end
assign soclinux_ethmac_sram4_adr = soclinux_ethmac_interface2_adr[8:0];
assign soclinux_ethmac_interface2_dat_r = soclinux_ethmac_sram4_dat_r;
assign soclinux_ethmac_sram4_dat_w = soclinux_ethmac_interface2_dat_w;
always @(*) begin
    soclinux_ethmac_sram5_we <= 4'd0;
    soclinux_ethmac_sram5_we[0] <= (((soclinux_ethmac_interface3_cyc & soclinux_ethmac_interface3_stb) & soclinux_ethmac_interface3_we) & soclinux_ethmac_interface3_sel[0]);
    soclinux_ethmac_sram5_we[1] <= (((soclinux_ethmac_interface3_cyc & soclinux_ethmac_interface3_stb) & soclinux_ethmac_interface3_we) & soclinux_ethmac_interface3_sel[1]);
    soclinux_ethmac_sram5_we[2] <= (((soclinux_ethmac_interface3_cyc & soclinux_ethmac_interface3_stb) & soclinux_ethmac_interface3_we) & soclinux_ethmac_interface3_sel[2]);
    soclinux_ethmac_sram5_we[3] <= (((soclinux_ethmac_interface3_cyc & soclinux_ethmac_interface3_stb) & soclinux_ethmac_interface3_we) & soclinux_ethmac_interface3_sel[3]);
end
assign soclinux_ethmac_sram5_adr = soclinux_ethmac_interface3_adr[8:0];
assign soclinux_ethmac_interface3_dat_r = soclinux_ethmac_sram5_dat_r;
assign soclinux_ethmac_sram5_dat_w = soclinux_ethmac_interface3_dat_w;
always @(*) begin
    soclinux_ethmac_slave_sel <= 4'd0;
    soclinux_ethmac_slave_sel[0] <= (soclinux_ethmac_bus_adr[10:9] == 1'd0);
    soclinux_ethmac_slave_sel[1] <= (soclinux_ethmac_bus_adr[10:9] == 1'd1);
    soclinux_ethmac_slave_sel[2] <= (soclinux_ethmac_bus_adr[10:9] == 2'd2);
    soclinux_ethmac_slave_sel[3] <= (soclinux_ethmac_bus_adr[10:9] == 2'd3);
end
assign soclinux_ethmac_interface0_adr = soclinux_ethmac_bus_adr;
assign soclinux_ethmac_interface0_dat_w = soclinux_ethmac_bus_dat_w;
assign soclinux_ethmac_interface0_sel = soclinux_ethmac_bus_sel;
assign soclinux_ethmac_interface0_stb = soclinux_ethmac_bus_stb;
assign soclinux_ethmac_interface0_we = soclinux_ethmac_bus_we;
assign soclinux_ethmac_interface0_cti = soclinux_ethmac_bus_cti;
assign soclinux_ethmac_interface0_bte = soclinux_ethmac_bus_bte;
assign soclinux_ethmac_interface1_adr = soclinux_ethmac_bus_adr;
assign soclinux_ethmac_interface1_dat_w = soclinux_ethmac_bus_dat_w;
assign soclinux_ethmac_interface1_sel = soclinux_ethmac_bus_sel;
assign soclinux_ethmac_interface1_stb = soclinux_ethmac_bus_stb;
assign soclinux_ethmac_interface1_we = soclinux_ethmac_bus_we;
assign soclinux_ethmac_interface1_cti = soclinux_ethmac_bus_cti;
assign soclinux_ethmac_interface1_bte = soclinux_ethmac_bus_bte;
assign soclinux_ethmac_interface2_adr = soclinux_ethmac_bus_adr;
assign soclinux_ethmac_interface2_dat_w = soclinux_ethmac_bus_dat_w;
assign soclinux_ethmac_interface2_sel = soclinux_ethmac_bus_sel;
assign soclinux_ethmac_interface2_stb = soclinux_ethmac_bus_stb;
assign soclinux_ethmac_interface2_we = soclinux_ethmac_bus_we;
assign soclinux_ethmac_interface2_cti = soclinux_ethmac_bus_cti;
assign soclinux_ethmac_interface2_bte = soclinux_ethmac_bus_bte;
assign soclinux_ethmac_interface3_adr = soclinux_ethmac_bus_adr;
assign soclinux_ethmac_interface3_dat_w = soclinux_ethmac_bus_dat_w;
assign soclinux_ethmac_interface3_sel = soclinux_ethmac_bus_sel;
assign soclinux_ethmac_interface3_stb = soclinux_ethmac_bus_stb;
assign soclinux_ethmac_interface3_we = soclinux_ethmac_bus_we;
assign soclinux_ethmac_interface3_cti = soclinux_ethmac_bus_cti;
assign soclinux_ethmac_interface3_bte = soclinux_ethmac_bus_bte;
assign soclinux_ethmac_interface0_cyc = (soclinux_ethmac_bus_cyc & soclinux_ethmac_slave_sel[0]);
assign soclinux_ethmac_interface1_cyc = (soclinux_ethmac_bus_cyc & soclinux_ethmac_slave_sel[1]);
assign soclinux_ethmac_interface2_cyc = (soclinux_ethmac_bus_cyc & soclinux_ethmac_slave_sel[2]);
assign soclinux_ethmac_interface3_cyc = (soclinux_ethmac_bus_cyc & soclinux_ethmac_slave_sel[3]);
assign soclinux_ethmac_bus_ack = (((soclinux_ethmac_interface0_ack | soclinux_ethmac_interface1_ack) | soclinux_ethmac_interface2_ack) | soclinux_ethmac_interface3_ack);
assign soclinux_ethmac_bus_err = (((soclinux_ethmac_interface0_err | soclinux_ethmac_interface1_err) | soclinux_ethmac_interface2_err) | soclinux_ethmac_interface3_err);
assign soclinux_ethmac_bus_dat_r = (((({32{soclinux_ethmac_slave_sel_r[0]}} & soclinux_ethmac_interface0_dat_r) | ({32{soclinux_ethmac_slave_sel_r[1]}} & soclinux_ethmac_interface1_dat_r)) | ({32{soclinux_ethmac_slave_sel_r[2]}} & soclinux_ethmac_interface2_dat_r)) | ({32{soclinux_ethmac_slave_sel_r[3]}} & soclinux_ethmac_interface3_dat_r));
assign leds_wait = (~leds_done);
always @(*) begin
    leds_leds <= 8'd0;
    if ((leds_mode == 1'd1)) begin
        leds_leds <= leds_storage;
    end else begin
        leds_leds <= leds_chaser;
    end
end
assign {user_led7, user_led6, user_led5, user_led4, user_led3, user_led2, user_led1, user_led0} = (leds_leds ^ 1'd0);
assign leds_done = (leds_count == 1'd0);
assign card_detect_status0 = 1'd0;
assign sdpads_clk = ((((init_pads_out_payload_clk | cmdw_pads_out_payload_clk) | cmdr_pads_out_payload_clk) | dataw_pads_out_payload_clk) | datar_pads_out_payload_clk);
assign sdpads_cmd_oe = ((((init_pads_out_payload_cmd_oe | cmdw_pads_out_payload_cmd_oe) | cmdr_pads_out_payload_cmd_oe) | dataw_pads_out_payload_cmd_oe) | datar_pads_out_payload_cmd_oe);
assign sdpads_cmd_o = ((((init_pads_out_payload_cmd_o | cmdw_pads_out_payload_cmd_o) | cmdr_pads_out_payload_cmd_o) | dataw_pads_out_payload_cmd_o) | datar_pads_out_payload_cmd_o);
assign sdpads_data_oe = ((((init_pads_out_payload_data_oe | cmdw_pads_out_payload_data_oe) | cmdr_pads_out_payload_data_oe) | dataw_pads_out_payload_data_oe) | datar_pads_out_payload_data_oe);
assign sdpads_data_o = ((((init_pads_out_payload_data_o | cmdw_pads_out_payload_data_o) | cmdr_pads_out_payload_data_o) | dataw_pads_out_payload_data_o) | datar_pads_out_payload_data_o);
assign init_pads_out_ready = clocker_ce;
assign cmdw_pads_out_ready = clocker_ce;
assign cmdr_pads_out_ready = clocker_ce;
assign dataw_pads_out_ready = clocker_ce;
assign datar_pads_out_ready = clocker_ce;
assign clocker_clk_en = sdpads_clk;
assign init_pads_in_valid = sdpads_data_i_ce;
assign init_pads_in_payload_cmd_i = sdpads_cmd_i;
assign init_pads_in_payload_data_i = sdpads_data_i;
assign cmdw_pads_in_valid = sdpads_data_i_ce;
assign cmdw_pads_in_payload_cmd_i = sdpads_cmd_i;
assign cmdw_pads_in_payload_data_i = sdpads_data_i;
assign cmdr_pads_in_pads_in_valid = sdpads_data_i_ce;
assign cmdr_pads_in_pads_in_payload_cmd_i = sdpads_cmd_i;
assign cmdr_pads_in_pads_in_payload_data_i = sdpads_data_i;
assign dataw_pads_in_pads_in_valid = sdpads_data_i_ce;
assign dataw_pads_in_pads_in_payload_cmd_i = sdpads_cmd_i;
assign dataw_pads_in_pads_in_payload_data_i = sdpads_data_i;
assign datar_pads_in_pads_in_valid = sdpads_data_i_ce;
assign datar_pads_in_pads_in_payload_cmd_i = sdpads_cmd_i;
assign datar_pads_in_pads_in_payload_data_i = sdpads_data_i;
assign clocker_stop = (dataw_stop | datar_stop);
always @(*) begin
    clocker_clk1 <= 1'd0;
    case (clocker_storage)
        3'd4: begin
            clocker_clk1 <= clocker_clks[1];
        end
        4'd8: begin
            clocker_clk1 <= clocker_clks[2];
        end
        5'd16: begin
            clocker_clk1 <= clocker_clks[3];
        end
        6'd32: begin
            clocker_clk1 <= clocker_clks[4];
        end
        7'd64: begin
            clocker_clk1 <= clocker_clks[5];
        end
        8'd128: begin
            clocker_clk1 <= clocker_clks[6];
        end
        9'd256: begin
            clocker_clk1 <= clocker_clks[7];
        end
        default: begin
            clocker_clk1 <= clocker_clks[0];
        end
    endcase
end
assign clocker_ce = (clocker_clk1 & (~clocker_clk_d));
always @(*) begin
    clocker_ce_latched <= 1'd0;
    if (clocker_clk_d) begin
        clocker_ce_latched <= clocker_clk_en;
    end else begin
        clocker_ce_latched <= clocker_ce_delayed;
    end
end
assign clocker_clk0 = ((~clocker_clk1) & clocker_ce_latched);
always @(*) begin
    init_pads_out_payload_clk <= 1'd0;
    init_pads_out_payload_cmd_o <= 1'd0;
    init_pads_out_payload_cmd_oe <= 1'd0;
    init_pads_out_payload_data_o <= 4'd0;
    init_pads_out_payload_data_oe <= 1'd0;
    soclinux_sdphyinit_next_state <= 1'd0;
    init_count_sdphyinit_next_value <= 8'd0;
    init_count_sdphyinit_next_value_ce <= 1'd0;
    soclinux_sdphyinit_next_state <= soclinux_sdphyinit_state;
    case (soclinux_sdphyinit_state)
        1'd1: begin
            init_pads_out_payload_clk <= 1'd1;
            init_pads_out_payload_cmd_oe <= 1'd1;
            init_pads_out_payload_cmd_o <= 1'd1;
            init_pads_out_payload_data_oe <= 1'd1;
            init_pads_out_payload_data_o <= 4'd15;
            if (init_pads_out_ready) begin
                init_count_sdphyinit_next_value <= (init_count + 1'd1);
                init_count_sdphyinit_next_value_ce <= 1'd1;
                if ((init_count == 7'd79)) begin
                    soclinux_sdphyinit_next_state <= 1'd0;
                end
            end
        end
        default: begin
            init_count_sdphyinit_next_value <= 1'd0;
            init_count_sdphyinit_next_value_ce <= 1'd1;
            if (init_initialize_re) begin
                soclinux_sdphyinit_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    cmdw_pads_out_payload_cmd_o <= 1'd0;
    cmdw_pads_out_payload_cmd_oe <= 1'd0;
    soclinux_sdphycmdw_next_state <= 2'd0;
    cmdw_count_sdphycmdw_next_value <= 8'd0;
    cmdw_sink_ready <= 1'd0;
    cmdw_count_sdphycmdw_next_value_ce <= 1'd0;
    cmdw_done <= 1'd0;
    cmdw_pads_out_payload_clk <= 1'd0;
    soclinux_sdphycmdw_next_state <= soclinux_sdphycmdw_state;
    case (soclinux_sdphycmdw_state)
        1'd1: begin
            cmdw_pads_out_payload_clk <= 1'd1;
            cmdw_pads_out_payload_cmd_oe <= 1'd1;
            case (cmdw_count)
                1'd0: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[7];
                end
                1'd1: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[6];
                end
                2'd2: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[5];
                end
                2'd3: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[4];
                end
                3'd4: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[3];
                end
                3'd5: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[2];
                end
                3'd6: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[1];
                end
                3'd7: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[0];
                end
            endcase
            if (cmdw_pads_out_ready) begin
                cmdw_count_sdphycmdw_next_value <= (cmdw_count + 1'd1);
                cmdw_count_sdphycmdw_next_value_ce <= 1'd1;
                if ((cmdw_count == 3'd7)) begin
                    if ((cmdw_sink_last & (cmdw_sink_payload_cmd_type == 1'd0))) begin
                        soclinux_sdphycmdw_next_state <= 2'd2;
                    end else begin
                        cmdw_sink_ready <= 1'd1;
                        soclinux_sdphycmdw_next_state <= 1'd0;
                    end
                end
            end
        end
        2'd2: begin
            cmdw_pads_out_payload_clk <= 1'd1;
            cmdw_pads_out_payload_cmd_oe <= 1'd1;
            cmdw_pads_out_payload_cmd_o <= 1'd1;
            if (cmdw_pads_out_ready) begin
                cmdw_count_sdphycmdw_next_value <= (cmdw_count + 1'd1);
                cmdw_count_sdphycmdw_next_value_ce <= 1'd1;
                if ((cmdw_count == 3'd7)) begin
                    cmdw_sink_ready <= 1'd1;
                    soclinux_sdphycmdw_next_state <= 1'd0;
                end
            end
        end
        default: begin
            cmdw_count_sdphycmdw_next_value <= 1'd0;
            cmdw_count_sdphycmdw_next_value_ce <= 1'd1;
            if ((cmdw_sink_valid & cmdw_pads_out_ready)) begin
                soclinux_sdphycmdw_next_state <= 1'd1;
            end else begin
                cmdw_done <= 1'd1;
            end
        end
    endcase
end
assign cmdr_cmdr_pads_in_valid = cmdr_pads_in_pads_in_valid;
assign cmdr_pads_in_pads_in_ready = cmdr_cmdr_pads_in_ready;
assign cmdr_cmdr_pads_in_first = cmdr_pads_in_pads_in_first;
assign cmdr_cmdr_pads_in_last = cmdr_pads_in_pads_in_last;
assign cmdr_cmdr_pads_in_payload_clk = cmdr_pads_in_pads_in_payload_clk;
assign cmdr_cmdr_pads_in_payload_cmd_i = cmdr_pads_in_pads_in_payload_cmd_i;
assign cmdr_cmdr_pads_in_payload_cmd_o = cmdr_pads_in_pads_in_payload_cmd_o;
assign cmdr_cmdr_pads_in_payload_cmd_oe = cmdr_pads_in_pads_in_payload_cmd_oe;
assign cmdr_cmdr_pads_in_payload_data_i = cmdr_pads_in_pads_in_payload_data_i;
assign cmdr_cmdr_pads_in_payload_data_o = cmdr_pads_in_pads_in_payload_data_o;
assign cmdr_cmdr_pads_in_payload_data_oe = cmdr_pads_in_pads_in_payload_data_oe;
assign cmdr_cmdr_pads_in_payload_data_i_ce = cmdr_pads_in_pads_in_payload_data_i_ce;
assign cmdr_cmdr_start = (cmdr_cmdr_pads_in_payload_cmd_i == 1'd0);
assign cmdr_cmdr_converter_converter_sink_valid = (cmdr_cmdr_pads_in_valid & (cmdr_cmdr_start | cmdr_cmdr_run));
assign cmdr_cmdr_converter_converter_sink_payload_data = cmdr_cmdr_pads_in_payload_cmd_i;
assign cmdr_cmdr_buf_sink_sink_valid = cmdr_cmdr_converter_source_source_valid;
assign cmdr_cmdr_converter_source_source_ready = cmdr_cmdr_buf_sink_sink_ready;
assign cmdr_cmdr_buf_sink_sink_first = cmdr_cmdr_converter_source_source_first;
assign cmdr_cmdr_buf_sink_sink_last = cmdr_cmdr_converter_source_source_last;
assign cmdr_cmdr_buf_sink_sink_payload_data = cmdr_cmdr_converter_source_source_payload_data;
assign cmdr_cmdr_source_valid = cmdr_cmdr_buf_source_source_valid;
assign cmdr_cmdr_buf_source_source_ready = cmdr_cmdr_source_ready;
assign cmdr_cmdr_source_first = cmdr_cmdr_buf_source_source_first;
assign cmdr_cmdr_source_last = cmdr_cmdr_buf_source_source_last;
assign cmdr_cmdr_source_payload_data = cmdr_cmdr_buf_source_source_payload_data;
assign cmdr_cmdr_converter_source_source_valid = cmdr_cmdr_converter_converter_source_valid;
assign cmdr_cmdr_converter_converter_source_ready = cmdr_cmdr_converter_source_source_ready;
assign cmdr_cmdr_converter_source_source_first = cmdr_cmdr_converter_converter_source_first;
assign cmdr_cmdr_converter_source_source_last = cmdr_cmdr_converter_converter_source_last;
assign cmdr_cmdr_converter_source_source_payload_data = cmdr_cmdr_converter_converter_source_payload_data;
assign cmdr_cmdr_converter_converter_sink_ready = ((~cmdr_cmdr_converter_converter_strobe_all) | cmdr_cmdr_converter_converter_source_ready);
assign cmdr_cmdr_converter_converter_source_valid = cmdr_cmdr_converter_converter_strobe_all;
assign cmdr_cmdr_converter_converter_load_part = (cmdr_cmdr_converter_converter_sink_valid & cmdr_cmdr_converter_converter_sink_ready);
assign cmdr_cmdr_buf_pipe_valid_sink_ready = ((~cmdr_cmdr_buf_pipe_valid_source_valid) | cmdr_cmdr_buf_pipe_valid_source_ready);
assign cmdr_cmdr_buf_pipe_valid_sink_valid = cmdr_cmdr_buf_sink_sink_valid;
assign cmdr_cmdr_buf_sink_sink_ready = cmdr_cmdr_buf_pipe_valid_sink_ready;
assign cmdr_cmdr_buf_pipe_valid_sink_first = cmdr_cmdr_buf_sink_sink_first;
assign cmdr_cmdr_buf_pipe_valid_sink_last = cmdr_cmdr_buf_sink_sink_last;
assign cmdr_cmdr_buf_pipe_valid_sink_payload_data = cmdr_cmdr_buf_sink_sink_payload_data;
assign cmdr_cmdr_buf_source_source_valid = cmdr_cmdr_buf_pipe_valid_source_valid;
assign cmdr_cmdr_buf_pipe_valid_source_ready = cmdr_cmdr_buf_source_source_ready;
assign cmdr_cmdr_buf_source_source_first = cmdr_cmdr_buf_pipe_valid_source_first;
assign cmdr_cmdr_buf_source_source_last = cmdr_cmdr_buf_pipe_valid_source_last;
assign cmdr_cmdr_buf_source_source_payload_data = cmdr_cmdr_buf_pipe_valid_source_payload_data;
always @(*) begin
    cmdr_busy_sdphycmdr_next_value_ce2 <= 1'd0;
    cmdr_source_source_valid <= 1'd0;
    cmdr_cmdr_reset_sdphycmdr_next_value3 <= 1'd0;
    cmdr_source_source_last <= 1'd0;
    cmdr_cmdr_reset_sdphycmdr_next_value_ce3 <= 1'd0;
    cmdr_source_source_payload_data <= 8'd0;
    cmdr_source_source_payload_status <= 3'd0;
    cmdr_pads_out_payload_clk <= 1'd0;
    cmdr_pads_out_payload_cmd_o <= 1'd0;
    cmdr_pads_out_payload_cmd_oe <= 1'd0;
    cmdr_cmdr_source_ready <= 1'd0;
    soclinux_sdphycmdr_next_state <= 3'd0;
    cmdr_timeout_sdphycmdr_next_value0 <= 32'd0;
    cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd0;
    cmdr_sink_ready <= 1'd0;
    cmdr_count_sdphycmdr_next_value1 <= 8'd0;
    cmdr_count_sdphycmdr_next_value_ce1 <= 1'd0;
    cmdr_busy_sdphycmdr_next_value2 <= 1'd0;
    soclinux_sdphycmdr_next_state <= soclinux_sdphycmdr_state;
    case (soclinux_sdphycmdr_state)
        1'd1: begin
            cmdr_pads_out_payload_clk <= 1'd1;
            cmdr_cmdr_reset_sdphycmdr_next_value3 <= 1'd0;
            cmdr_cmdr_reset_sdphycmdr_next_value_ce3 <= 1'd1;
            if (cmdr_cmdr_source_valid) begin
                soclinux_sdphycmdr_next_state <= 2'd2;
            end
            cmdr_timeout_sdphycmdr_next_value0 <= (cmdr_timeout - 1'd1);
            cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
            if ((cmdr_timeout == 1'd0)) begin
                soclinux_sdphycmdr_next_state <= 3'd5;
            end
        end
        2'd2: begin
            cmdr_pads_out_payload_clk <= 1'd1;
            cmdr_source_source_valid <= cmdr_cmdr_source_valid;
            cmdr_source_source_payload_status <= 1'd0;
            cmdr_source_source_last <= (cmdr_count == (cmdr_sink_payload_length - 1'd1));
            cmdr_source_source_payload_data <= cmdr_cmdr_source_payload_data;
            if ((cmdr_cmdr_source_valid & cmdr_source_source_ready)) begin
                cmdr_cmdr_source_ready <= 1'd1;
                cmdr_count_sdphycmdr_next_value1 <= (cmdr_count + 1'd1);
                cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
                if (cmdr_source_source_last) begin
                    cmdr_sink_ready <= 1'd1;
                    if ((cmdr_sink_payload_cmd_type == 2'd3)) begin
                        cmdr_source_source_valid <= 1'd0;
                        cmdr_timeout_sdphycmdr_next_value0 <= 27'd125000000;
                        cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
                        soclinux_sdphycmdr_next_state <= 2'd3;
                    end else begin
                        if ((cmdr_sink_payload_data_type == 1'd0)) begin
                            cmdr_count_sdphycmdr_next_value1 <= 1'd0;
                            cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
                            soclinux_sdphycmdr_next_state <= 3'd4;
                        end else begin
                            soclinux_sdphycmdr_next_state <= 1'd0;
                        end
                    end
                end
            end
            cmdr_timeout_sdphycmdr_next_value0 <= (cmdr_timeout - 1'd1);
            cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
            if ((cmdr_timeout == 1'd0)) begin
                soclinux_sdphycmdr_next_state <= 3'd5;
            end
        end
        2'd3: begin
            cmdr_pads_out_payload_clk <= 1'd1;
            if ((cmdr_pads_in_pads_in_valid & cmdr_pads_in_pads_in_payload_data_i[0])) begin
                cmdr_busy_sdphycmdr_next_value2 <= 1'd0;
                cmdr_busy_sdphycmdr_next_value_ce2 <= 1'd1;
            end
            if ((~cmdr_busy)) begin
                cmdr_source_source_valid <= 1'd1;
                cmdr_source_source_last <= 1'd1;
                cmdr_source_source_payload_status <= 1'd0;
                if (cmdr_source_source_ready) begin
                    cmdr_count_sdphycmdr_next_value1 <= 1'd0;
                    cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
                    soclinux_sdphycmdr_next_state <= 3'd4;
                end
            end
            cmdr_timeout_sdphycmdr_next_value0 <= (cmdr_timeout - 1'd1);
            cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
            if ((cmdr_timeout == 1'd0)) begin
                soclinux_sdphycmdr_next_state <= 3'd5;
            end
        end
        3'd4: begin
            cmdr_pads_out_payload_clk <= 1'd1;
            cmdr_pads_out_payload_cmd_oe <= 1'd1;
            cmdr_pads_out_payload_cmd_o <= 1'd1;
            if (cmdr_pads_out_ready) begin
                cmdr_count_sdphycmdr_next_value1 <= (cmdr_count + 1'd1);
                cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
                if ((cmdr_count == 3'd7)) begin
                    soclinux_sdphycmdr_next_state <= 1'd0;
                end
            end
        end
        3'd5: begin
            cmdr_sink_ready <= 1'd1;
            cmdr_source_source_valid <= 1'd1;
            cmdr_source_source_last <= 1'd1;
            cmdr_source_source_payload_status <= 1'd1;
            if (cmdr_source_source_ready) begin
                soclinux_sdphycmdr_next_state <= 1'd0;
            end
        end
        default: begin
            cmdr_timeout_sdphycmdr_next_value0 <= 27'd125000000;
            cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
            cmdr_count_sdphycmdr_next_value1 <= 1'd0;
            cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
            cmdr_busy_sdphycmdr_next_value2 <= 1'd1;
            cmdr_busy_sdphycmdr_next_value_ce2 <= 1'd1;
            if (((cmdr_sink_valid & cmdr_pads_out_ready) & cmdw_done)) begin
                cmdr_cmdr_reset_sdphycmdr_next_value3 <= 1'd1;
                cmdr_cmdr_reset_sdphycmdr_next_value_ce3 <= 1'd1;
                soclinux_sdphycmdr_next_state <= 1'd1;
            end
        end
    endcase
end
assign dataw_accepted0 = dataw_accepted1;
assign dataw_crc_error0 = dataw_crc_error1;
assign dataw_write_error0 = dataw_write_error1;
assign dataw_crc_pads_in_valid = dataw_pads_in_pads_in_valid;
assign dataw_crc_pads_in_ready = dataw_pads_in_pads_in_ready;
assign dataw_crc_pads_in_first = dataw_pads_in_pads_in_first;
assign dataw_crc_pads_in_last = dataw_pads_in_pads_in_last;
assign dataw_crc_pads_in_payload_clk = dataw_pads_in_pads_in_payload_clk;
assign dataw_crc_pads_in_payload_cmd_i = dataw_pads_in_pads_in_payload_cmd_i;
assign dataw_crc_pads_in_payload_cmd_o = dataw_pads_in_pads_in_payload_cmd_o;
assign dataw_crc_pads_in_payload_cmd_oe = dataw_pads_in_pads_in_payload_cmd_oe;
assign dataw_crc_pads_in_payload_data_i = dataw_pads_in_pads_in_payload_data_i;
assign dataw_crc_pads_in_payload_data_o = dataw_pads_in_pads_in_payload_data_o;
assign dataw_crc_pads_in_payload_data_oe = dataw_pads_in_pads_in_payload_data_oe;
assign dataw_crc_pads_in_payload_data_i_ce = dataw_pads_in_pads_in_payload_data_i_ce;
assign dataw_crc_start = (dataw_crc_pads_in_payload_data_i[0] == 1'd0);
assign dataw_crc_converter_converter_sink_valid = (dataw_crc_pads_in_valid & dataw_crc_run);
assign dataw_crc_converter_converter_sink_payload_data = dataw_crc_pads_in_payload_data_i[0];
assign dataw_crc_buf_sink_sink_valid = dataw_crc_converter_source_source_valid;
assign dataw_crc_converter_source_source_ready = dataw_crc_buf_sink_sink_ready;
assign dataw_crc_buf_sink_sink_first = dataw_crc_converter_source_source_first;
assign dataw_crc_buf_sink_sink_last = dataw_crc_converter_source_source_last;
assign dataw_crc_buf_sink_sink_payload_data = dataw_crc_converter_source_source_payload_data;
assign dataw_crc_source_valid = dataw_crc_buf_source_source_valid;
assign dataw_crc_buf_source_source_ready = dataw_crc_source_ready;
assign dataw_crc_source_first = dataw_crc_buf_source_source_first;
assign dataw_crc_source_last = dataw_crc_buf_source_source_last;
assign dataw_crc_source_payload_data = dataw_crc_buf_source_source_payload_data;
assign dataw_crc_converter_source_source_valid = dataw_crc_converter_converter_source_valid;
assign dataw_crc_converter_converter_source_ready = dataw_crc_converter_source_source_ready;
assign dataw_crc_converter_source_source_first = dataw_crc_converter_converter_source_first;
assign dataw_crc_converter_source_source_last = dataw_crc_converter_converter_source_last;
assign dataw_crc_converter_source_source_payload_data = dataw_crc_converter_converter_source_payload_data;
assign dataw_crc_converter_converter_sink_ready = ((~dataw_crc_converter_converter_strobe_all) | dataw_crc_converter_converter_source_ready);
assign dataw_crc_converter_converter_source_valid = dataw_crc_converter_converter_strobe_all;
assign dataw_crc_converter_converter_load_part = (dataw_crc_converter_converter_sink_valid & dataw_crc_converter_converter_sink_ready);
assign dataw_crc_buf_pipe_valid_sink_ready = ((~dataw_crc_buf_pipe_valid_source_valid) | dataw_crc_buf_pipe_valid_source_ready);
assign dataw_crc_buf_pipe_valid_sink_valid = dataw_crc_buf_sink_sink_valid;
assign dataw_crc_buf_sink_sink_ready = dataw_crc_buf_pipe_valid_sink_ready;
assign dataw_crc_buf_pipe_valid_sink_first = dataw_crc_buf_sink_sink_first;
assign dataw_crc_buf_pipe_valid_sink_last = dataw_crc_buf_sink_sink_last;
assign dataw_crc_buf_pipe_valid_sink_payload_data = dataw_crc_buf_sink_sink_payload_data;
assign dataw_crc_buf_source_source_valid = dataw_crc_buf_pipe_valid_source_valid;
assign dataw_crc_buf_pipe_valid_source_ready = dataw_crc_buf_source_source_ready;
assign dataw_crc_buf_source_source_first = dataw_crc_buf_pipe_valid_source_first;
assign dataw_crc_buf_source_source_last = dataw_crc_buf_pipe_valid_source_last;
assign dataw_crc_buf_source_source_payload_data = dataw_crc_buf_pipe_valid_source_payload_data;
always @(*) begin
    dataw_accepted1_sdphydataw_next_value0 <= 1'd0;
    dataw_accepted1_sdphydataw_next_value_ce0 <= 1'd0;
    dataw_crc_error1_sdphydataw_next_value1 <= 1'd0;
    dataw_pads_out_payload_clk <= 1'd0;
    dataw_crc_error1_sdphydataw_next_value_ce1 <= 1'd0;
    dataw_pads_out_payload_cmd_o <= 1'd0;
    dataw_write_error1_sdphydataw_next_value2 <= 1'd0;
    dataw_pads_out_payload_cmd_oe <= 1'd0;
    dataw_write_error1_sdphydataw_next_value_ce2 <= 1'd0;
    dataw_pads_out_payload_data_o <= 4'd0;
    dataw_count_sdphydataw_next_value3 <= 8'd0;
    dataw_pads_out_payload_data_oe <= 1'd0;
    dataw_count_sdphydataw_next_value_ce3 <= 1'd0;
    dataw_sink_ready <= 1'd0;
    dataw_crc_reset <= 1'd0;
    dataw_stop <= 1'd0;
    soclinux_sdphydataw_next_state <= 3'd0;
    soclinux_sdphydataw_next_state <= soclinux_sdphydataw_state;
    case (soclinux_sdphydataw_state)
        1'd1: begin
            dataw_pads_out_payload_clk <= 1'd1;
            dataw_pads_out_payload_cmd_oe <= 1'd1;
            dataw_pads_out_payload_cmd_o <= 1'd1;
            if (dataw_pads_out_ready) begin
                dataw_count_sdphydataw_next_value3 <= (dataw_count + 1'd1);
                dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
                if ((dataw_count == 3'd7)) begin
                    dataw_count_sdphydataw_next_value3 <= 1'd0;
                    dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
                    soclinux_sdphydataw_next_state <= 2'd2;
                end
            end
        end
        2'd2: begin
            dataw_pads_out_payload_clk <= 1'd1;
            dataw_pads_out_payload_data_oe <= 1'd1;
            dataw_pads_out_payload_data_o <= 1'd0;
            if (dataw_pads_out_ready) begin
                soclinux_sdphydataw_next_state <= 2'd3;
            end
        end
        2'd3: begin
            dataw_stop <= (~dataw_sink_valid);
            dataw_pads_out_payload_clk <= 1'd1;
            dataw_pads_out_payload_data_oe <= 1'd1;
            case (dataw_count)
                1'd0: begin
                    dataw_pads_out_payload_data_o <= dataw_sink_payload_data[7:4];
                end
                1'd1: begin
                    dataw_pads_out_payload_data_o <= dataw_sink_payload_data[3:0];
                end
            endcase
            if (dataw_pads_out_ready) begin
                dataw_count_sdphydataw_next_value3 <= (dataw_count + 1'd1);
                dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
                if ((dataw_count == 1'd1)) begin
                    dataw_count_sdphydataw_next_value3 <= 1'd0;
                    dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
                    if (dataw_sink_last) begin
                        soclinux_sdphydataw_next_state <= 3'd4;
                    end else begin
                        dataw_sink_ready <= 1'd1;
                    end
                end
            end
        end
        3'd4: begin
            dataw_pads_out_payload_clk <= 1'd1;
            dataw_pads_out_payload_data_oe <= 1'd1;
            dataw_pads_out_payload_data_o <= 4'd15;
            if (dataw_pads_out_ready) begin
                dataw_crc_reset <= 1'd1;
                soclinux_sdphydataw_next_state <= 3'd5;
            end
        end
        3'd5: begin
            dataw_pads_out_payload_clk <= 1'd1;
            if (dataw_crc_source_valid) begin
                dataw_accepted1_sdphydataw_next_value0 <= (dataw_crc_source_payload_data[7:5] == 2'd2);
                dataw_accepted1_sdphydataw_next_value_ce0 <= 1'd1;
                dataw_crc_error1_sdphydataw_next_value1 <= (dataw_crc_source_payload_data[7:5] == 3'd5);
                dataw_crc_error1_sdphydataw_next_value_ce1 <= 1'd1;
                dataw_write_error1_sdphydataw_next_value2 <= (dataw_crc_source_payload_data[7:5] == 3'd6);
                dataw_write_error1_sdphydataw_next_value_ce2 <= 1'd1;
                soclinux_sdphydataw_next_state <= 3'd6;
            end
        end
        3'd6: begin
            dataw_pads_out_payload_clk <= 1'd1;
            if ((dataw_pads_in_pads_in_valid & dataw_pads_in_pads_in_payload_data_i[0])) begin
                dataw_sink_ready <= 1'd1;
                soclinux_sdphydataw_next_state <= 1'd0;
            end
        end
        default: begin
            dataw_accepted1_sdphydataw_next_value0 <= 1'd0;
            dataw_accepted1_sdphydataw_next_value_ce0 <= 1'd1;
            dataw_crc_error1_sdphydataw_next_value1 <= 1'd0;
            dataw_crc_error1_sdphydataw_next_value_ce1 <= 1'd1;
            dataw_write_error1_sdphydataw_next_value2 <= 1'd0;
            dataw_write_error1_sdphydataw_next_value_ce2 <= 1'd1;
            dataw_count_sdphydataw_next_value3 <= 1'd0;
            dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
            if ((dataw_sink_valid & dataw_pads_out_ready)) begin
                soclinux_sdphydataw_next_state <= 1'd1;
            end
        end
    endcase
end
assign datar_datar_pads_in_valid = datar_pads_in_pads_in_valid;
assign datar_pads_in_pads_in_ready = datar_datar_pads_in_ready;
assign datar_datar_pads_in_first = datar_pads_in_pads_in_first;
assign datar_datar_pads_in_last = datar_pads_in_pads_in_last;
assign datar_datar_pads_in_payload_clk = datar_pads_in_pads_in_payload_clk;
assign datar_datar_pads_in_payload_cmd_i = datar_pads_in_pads_in_payload_cmd_i;
assign datar_datar_pads_in_payload_cmd_o = datar_pads_in_pads_in_payload_cmd_o;
assign datar_datar_pads_in_payload_cmd_oe = datar_pads_in_pads_in_payload_cmd_oe;
assign datar_datar_pads_in_payload_data_i = datar_pads_in_pads_in_payload_data_i;
assign datar_datar_pads_in_payload_data_o = datar_pads_in_pads_in_payload_data_o;
assign datar_datar_pads_in_payload_data_oe = datar_pads_in_pads_in_payload_data_oe;
assign datar_datar_pads_in_payload_data_i_ce = datar_pads_in_pads_in_payload_data_i_ce;
assign datar_datar_start = (datar_datar_pads_in_payload_data_i[3:0] == 1'd0);
assign datar_datar_converter_converter_sink_valid = (datar_datar_pads_in_valid & datar_datar_run);
assign datar_datar_converter_converter_sink_payload_data = datar_datar_pads_in_payload_data_i[3:0];
assign datar_datar_buf_sink_sink_valid = datar_datar_converter_source_source_valid;
assign datar_datar_converter_source_source_ready = datar_datar_buf_sink_sink_ready;
assign datar_datar_buf_sink_sink_first = datar_datar_converter_source_source_first;
assign datar_datar_buf_sink_sink_last = datar_datar_converter_source_source_last;
assign datar_datar_buf_sink_sink_payload_data = datar_datar_converter_source_source_payload_data;
assign datar_datar_source_valid = datar_datar_buf_source_source_valid;
assign datar_datar_buf_source_source_ready = datar_datar_source_ready;
assign datar_datar_source_first = datar_datar_buf_source_source_first;
assign datar_datar_source_last = datar_datar_buf_source_source_last;
assign datar_datar_source_payload_data = datar_datar_buf_source_source_payload_data;
assign datar_datar_converter_source_source_valid = datar_datar_converter_converter_source_valid;
assign datar_datar_converter_converter_source_ready = datar_datar_converter_source_source_ready;
assign datar_datar_converter_source_source_first = datar_datar_converter_converter_source_first;
assign datar_datar_converter_source_source_last = datar_datar_converter_converter_source_last;
assign datar_datar_converter_source_source_payload_data = datar_datar_converter_converter_source_payload_data;
assign datar_datar_converter_converter_sink_ready = ((~datar_datar_converter_converter_strobe_all) | datar_datar_converter_converter_source_ready);
assign datar_datar_converter_converter_source_valid = datar_datar_converter_converter_strobe_all;
assign datar_datar_converter_converter_load_part = (datar_datar_converter_converter_sink_valid & datar_datar_converter_converter_sink_ready);
assign datar_datar_buf_pipe_valid_sink_ready = ((~datar_datar_buf_pipe_valid_source_valid) | datar_datar_buf_pipe_valid_source_ready);
assign datar_datar_buf_pipe_valid_sink_valid = datar_datar_buf_sink_sink_valid;
assign datar_datar_buf_sink_sink_ready = datar_datar_buf_pipe_valid_sink_ready;
assign datar_datar_buf_pipe_valid_sink_first = datar_datar_buf_sink_sink_first;
assign datar_datar_buf_pipe_valid_sink_last = datar_datar_buf_sink_sink_last;
assign datar_datar_buf_pipe_valid_sink_payload_data = datar_datar_buf_sink_sink_payload_data;
assign datar_datar_buf_source_source_valid = datar_datar_buf_pipe_valid_source_valid;
assign datar_datar_buf_pipe_valid_source_ready = datar_datar_buf_source_source_ready;
assign datar_datar_buf_source_source_first = datar_datar_buf_pipe_valid_source_first;
assign datar_datar_buf_source_source_last = datar_datar_buf_pipe_valid_source_last;
assign datar_datar_buf_source_source_payload_data = datar_datar_buf_pipe_valid_source_payload_data;
always @(*) begin
    datar_count_sdphydatar_next_value_ce0 <= 1'd0;
    datar_source_source_valid <= 1'd0;
    datar_timeout_sdphydatar_next_value1 <= 32'd0;
    datar_source_source_first <= 1'd0;
    datar_timeout_sdphydatar_next_value_ce1 <= 1'd0;
    datar_source_source_last <= 1'd0;
    datar_source_source_payload_data <= 8'd0;
    datar_source_source_payload_status <= 3'd0;
    datar_datar_reset_sdphydatar_next_value2 <= 1'd0;
    datar_stop <= 1'd0;
    datar_datar_reset_sdphydatar_next_value_ce2 <= 1'd0;
    datar_pads_out_payload_clk <= 1'd0;
    datar_datar_source_ready <= 1'd0;
    datar_sink_ready <= 1'd0;
    soclinux_sdphydatar_next_state <= 3'd0;
    datar_count_sdphydatar_next_value0 <= 10'd0;
    soclinux_sdphydatar_next_state <= soclinux_sdphydatar_state;
    case (soclinux_sdphydatar_state)
        1'd1: begin
            datar_pads_out_payload_clk <= 1'd1;
            datar_datar_reset_sdphydatar_next_value2 <= 1'd0;
            datar_datar_reset_sdphydatar_next_value_ce2 <= 1'd1;
            datar_timeout_sdphydatar_next_value1 <= (datar_timeout - 1'd1);
            datar_timeout_sdphydatar_next_value_ce1 <= 1'd1;
            if (datar_datar_source_valid) begin
                soclinux_sdphydatar_next_state <= 2'd2;
            end
            datar_timeout_sdphydatar_next_value1 <= (datar_timeout - 1'd1);
            datar_timeout_sdphydatar_next_value_ce1 <= 1'd1;
            if ((datar_timeout == 1'd0)) begin
                datar_sink_ready <= 1'd1;
                soclinux_sdphydatar_next_state <= 3'd4;
            end
        end
        2'd2: begin
            datar_pads_out_payload_clk <= 1'd1;
            datar_source_source_valid <= datar_datar_source_valid;
            datar_source_source_payload_status <= 1'd0;
            datar_source_source_first <= (datar_count == 1'd0);
            datar_source_source_last <= (datar_count == ((datar_sink_payload_block_length + 4'd8) - 1'd1));
            datar_source_source_payload_data <= datar_datar_source_payload_data;
            if (datar_source_source_valid) begin
                if (datar_source_source_ready) begin
                    datar_datar_source_ready <= 1'd1;
                    datar_count_sdphydatar_next_value0 <= (datar_count + 1'd1);
                    datar_count_sdphydatar_next_value_ce0 <= 1'd1;
                    if (datar_source_source_last) begin
                        datar_sink_ready <= 1'd1;
                        if (datar_sink_last) begin
                            datar_count_sdphydatar_next_value0 <= 1'd0;
                            datar_count_sdphydatar_next_value_ce0 <= 1'd1;
                            soclinux_sdphydatar_next_state <= 2'd3;
                        end else begin
                            soclinux_sdphydatar_next_state <= 1'd0;
                        end
                    end
                end else begin
                    datar_stop <= 1'd1;
                end
            end
            datar_timeout_sdphydatar_next_value1 <= (datar_timeout - 1'd1);
            datar_timeout_sdphydatar_next_value_ce1 <= 1'd1;
            if ((datar_timeout == 1'd0)) begin
                datar_sink_ready <= 1'd1;
                soclinux_sdphydatar_next_state <= 3'd4;
            end
        end
        2'd3: begin
            datar_pads_out_payload_clk <= 1'd1;
            if (datar_pads_out_ready) begin
                datar_count_sdphydatar_next_value0 <= (datar_count + 1'd1);
                datar_count_sdphydatar_next_value_ce0 <= 1'd1;
                if ((datar_count == 6'd39)) begin
                    soclinux_sdphydatar_next_state <= 1'd0;
                end
            end
        end
        3'd4: begin
            datar_source_source_valid <= 1'd1;
            datar_source_source_payload_status <= 1'd1;
            datar_source_source_last <= 1'd1;
            if (datar_source_source_ready) begin
                soclinux_sdphydatar_next_state <= 1'd0;
            end
        end
        default: begin
            datar_count_sdphydatar_next_value0 <= 1'd0;
            datar_count_sdphydatar_next_value_ce0 <= 1'd1;
            if ((datar_sink_valid & datar_pads_out_ready)) begin
                datar_pads_out_payload_clk <= 1'd1;
                datar_timeout_sdphydatar_next_value1 <= 32'd125000000;
                datar_timeout_sdphydatar_next_value_ce1 <= 1'd1;
                datar_count_sdphydatar_next_value0 <= 1'd0;
                datar_count_sdphydatar_next_value_ce0 <= 1'd1;
                datar_datar_reset_sdphydatar_next_value2 <= 1'd1;
                datar_datar_reset_sdphydatar_next_value_ce2 <= 1'd1;
                soclinux_sdphydatar_next_state <= 1'd1;
            end
        end
    endcase
end
assign sdcore_crc16_inserter_sink_valid = sdcore_sink_sink_valid0;
assign sdcore_sink_sink_ready0 = sdcore_crc16_inserter_sink_ready;
assign sdcore_crc16_inserter_sink_first = sdcore_sink_sink_first0;
assign sdcore_crc16_inserter_sink_last = sdcore_sink_sink_last0;
assign sdcore_crc16_inserter_sink_payload_data = sdcore_sink_sink_payload_data0;
assign sdcore_source_source_valid0 = sdcore_source_source_valid1;
assign sdcore_source_source_ready1 = sdcore_source_source_ready0;
assign sdcore_source_source_first0 = sdcore_source_source_first1;
assign sdcore_source_source_last0 = sdcore_source_source_last1;
assign sdcore_source_source_payload_data0 = sdcore_source_source_payload_data1;
assign sdcore_cmd_type = sdcore_csrfield_cmd_type;
assign sdcore_data_type = sdcore_csrfield_data_type;
assign sdcore_cmd = sdcore_csrfield_cmd;
assign sdcore_csrfield_done0 = sdcore_cmd_done;
assign sdcore_csrfield_error0 = sdcore_cmd_error;
assign sdcore_csrfield_timeout0 = sdcore_cmd_timeout;
assign sdcore_csrfield_crc0 = 1'd0;
assign sdcore_csrfield_done1 = sdcore_data_done;
assign sdcore_csrfield_error1 = sdcore_data_error;
assign sdcore_csrfield_timeout1 = sdcore_data_timeout;
assign sdcore_csrfield_crc1 = 1'd0;
assign sdcore_crc7_inserter_din = {1'd0, 1'd1, sdcore_cmd, sdcore_cmd_argument_storage};
assign sdcore_crc7_inserter_reset = 1'd1;
assign sdcore_crc7_inserter_enable = 1'd1;
assign sdcore_crc7_inserter_reg1 = {sdcore_crc7_inserter_reg0[5], sdcore_crc7_inserter_reg0[4], sdcore_crc7_inserter_reg0[3], (sdcore_crc7_inserter_reg0[2] ^ (sdcore_crc7_inserter_din[39] ^ sdcore_crc7_inserter_reg0[6])), sdcore_crc7_inserter_reg0[1], sdcore_crc7_inserter_reg0[0], (sdcore_crc7_inserter_din[39] ^ sdcore_crc7_inserter_reg0[6])};
assign sdcore_crc7_inserter_reg2 = {sdcore_crc7_inserter_reg1[5], sdcore_crc7_inserter_reg1[4], sdcore_crc7_inserter_reg1[3], (sdcore_crc7_inserter_reg1[2] ^ (sdcore_crc7_inserter_din[38] ^ sdcore_crc7_inserter_reg1[6])), sdcore_crc7_inserter_reg1[1], sdcore_crc7_inserter_reg1[0], (sdcore_crc7_inserter_din[38] ^ sdcore_crc7_inserter_reg1[6])};
assign sdcore_crc7_inserter_reg3 = {sdcore_crc7_inserter_reg2[5], sdcore_crc7_inserter_reg2[4], sdcore_crc7_inserter_reg2[3], (sdcore_crc7_inserter_reg2[2] ^ (sdcore_crc7_inserter_din[37] ^ sdcore_crc7_inserter_reg2[6])), sdcore_crc7_inserter_reg2[1], sdcore_crc7_inserter_reg2[0], (sdcore_crc7_inserter_din[37] ^ sdcore_crc7_inserter_reg2[6])};
assign sdcore_crc7_inserter_reg4 = {sdcore_crc7_inserter_reg3[5], sdcore_crc7_inserter_reg3[4], sdcore_crc7_inserter_reg3[3], (sdcore_crc7_inserter_reg3[2] ^ (sdcore_crc7_inserter_din[36] ^ sdcore_crc7_inserter_reg3[6])), sdcore_crc7_inserter_reg3[1], sdcore_crc7_inserter_reg3[0], (sdcore_crc7_inserter_din[36] ^ sdcore_crc7_inserter_reg3[6])};
assign sdcore_crc7_inserter_reg5 = {sdcore_crc7_inserter_reg4[5], sdcore_crc7_inserter_reg4[4], sdcore_crc7_inserter_reg4[3], (sdcore_crc7_inserter_reg4[2] ^ (sdcore_crc7_inserter_din[35] ^ sdcore_crc7_inserter_reg4[6])), sdcore_crc7_inserter_reg4[1], sdcore_crc7_inserter_reg4[0], (sdcore_crc7_inserter_din[35] ^ sdcore_crc7_inserter_reg4[6])};
assign sdcore_crc7_inserter_reg6 = {sdcore_crc7_inserter_reg5[5], sdcore_crc7_inserter_reg5[4], sdcore_crc7_inserter_reg5[3], (sdcore_crc7_inserter_reg5[2] ^ (sdcore_crc7_inserter_din[34] ^ sdcore_crc7_inserter_reg5[6])), sdcore_crc7_inserter_reg5[1], sdcore_crc7_inserter_reg5[0], (sdcore_crc7_inserter_din[34] ^ sdcore_crc7_inserter_reg5[6])};
assign sdcore_crc7_inserter_reg7 = {sdcore_crc7_inserter_reg6[5], sdcore_crc7_inserter_reg6[4], sdcore_crc7_inserter_reg6[3], (sdcore_crc7_inserter_reg6[2] ^ (sdcore_crc7_inserter_din[33] ^ sdcore_crc7_inserter_reg6[6])), sdcore_crc7_inserter_reg6[1], sdcore_crc7_inserter_reg6[0], (sdcore_crc7_inserter_din[33] ^ sdcore_crc7_inserter_reg6[6])};
assign sdcore_crc7_inserter_reg8 = {sdcore_crc7_inserter_reg7[5], sdcore_crc7_inserter_reg7[4], sdcore_crc7_inserter_reg7[3], (sdcore_crc7_inserter_reg7[2] ^ (sdcore_crc7_inserter_din[32] ^ sdcore_crc7_inserter_reg7[6])), sdcore_crc7_inserter_reg7[1], sdcore_crc7_inserter_reg7[0], (sdcore_crc7_inserter_din[32] ^ sdcore_crc7_inserter_reg7[6])};
assign sdcore_crc7_inserter_reg9 = {sdcore_crc7_inserter_reg8[5], sdcore_crc7_inserter_reg8[4], sdcore_crc7_inserter_reg8[3], (sdcore_crc7_inserter_reg8[2] ^ (sdcore_crc7_inserter_din[31] ^ sdcore_crc7_inserter_reg8[6])), sdcore_crc7_inserter_reg8[1], sdcore_crc7_inserter_reg8[0], (sdcore_crc7_inserter_din[31] ^ sdcore_crc7_inserter_reg8[6])};
assign sdcore_crc7_inserter_reg10 = {sdcore_crc7_inserter_reg9[5], sdcore_crc7_inserter_reg9[4], sdcore_crc7_inserter_reg9[3], (sdcore_crc7_inserter_reg9[2] ^ (sdcore_crc7_inserter_din[30] ^ sdcore_crc7_inserter_reg9[6])), sdcore_crc7_inserter_reg9[1], sdcore_crc7_inserter_reg9[0], (sdcore_crc7_inserter_din[30] ^ sdcore_crc7_inserter_reg9[6])};
assign sdcore_crc7_inserter_reg11 = {sdcore_crc7_inserter_reg10[5], sdcore_crc7_inserter_reg10[4], sdcore_crc7_inserter_reg10[3], (sdcore_crc7_inserter_reg10[2] ^ (sdcore_crc7_inserter_din[29] ^ sdcore_crc7_inserter_reg10[6])), sdcore_crc7_inserter_reg10[1], sdcore_crc7_inserter_reg10[0], (sdcore_crc7_inserter_din[29] ^ sdcore_crc7_inserter_reg10[6])};
assign sdcore_crc7_inserter_reg12 = {sdcore_crc7_inserter_reg11[5], sdcore_crc7_inserter_reg11[4], sdcore_crc7_inserter_reg11[3], (sdcore_crc7_inserter_reg11[2] ^ (sdcore_crc7_inserter_din[28] ^ sdcore_crc7_inserter_reg11[6])), sdcore_crc7_inserter_reg11[1], sdcore_crc7_inserter_reg11[0], (sdcore_crc7_inserter_din[28] ^ sdcore_crc7_inserter_reg11[6])};
assign sdcore_crc7_inserter_reg13 = {sdcore_crc7_inserter_reg12[5], sdcore_crc7_inserter_reg12[4], sdcore_crc7_inserter_reg12[3], (sdcore_crc7_inserter_reg12[2] ^ (sdcore_crc7_inserter_din[27] ^ sdcore_crc7_inserter_reg12[6])), sdcore_crc7_inserter_reg12[1], sdcore_crc7_inserter_reg12[0], (sdcore_crc7_inserter_din[27] ^ sdcore_crc7_inserter_reg12[6])};
assign sdcore_crc7_inserter_reg14 = {sdcore_crc7_inserter_reg13[5], sdcore_crc7_inserter_reg13[4], sdcore_crc7_inserter_reg13[3], (sdcore_crc7_inserter_reg13[2] ^ (sdcore_crc7_inserter_din[26] ^ sdcore_crc7_inserter_reg13[6])), sdcore_crc7_inserter_reg13[1], sdcore_crc7_inserter_reg13[0], (sdcore_crc7_inserter_din[26] ^ sdcore_crc7_inserter_reg13[6])};
assign sdcore_crc7_inserter_reg15 = {sdcore_crc7_inserter_reg14[5], sdcore_crc7_inserter_reg14[4], sdcore_crc7_inserter_reg14[3], (sdcore_crc7_inserter_reg14[2] ^ (sdcore_crc7_inserter_din[25] ^ sdcore_crc7_inserter_reg14[6])), sdcore_crc7_inserter_reg14[1], sdcore_crc7_inserter_reg14[0], (sdcore_crc7_inserter_din[25] ^ sdcore_crc7_inserter_reg14[6])};
assign sdcore_crc7_inserter_reg16 = {sdcore_crc7_inserter_reg15[5], sdcore_crc7_inserter_reg15[4], sdcore_crc7_inserter_reg15[3], (sdcore_crc7_inserter_reg15[2] ^ (sdcore_crc7_inserter_din[24] ^ sdcore_crc7_inserter_reg15[6])), sdcore_crc7_inserter_reg15[1], sdcore_crc7_inserter_reg15[0], (sdcore_crc7_inserter_din[24] ^ sdcore_crc7_inserter_reg15[6])};
assign sdcore_crc7_inserter_reg17 = {sdcore_crc7_inserter_reg16[5], sdcore_crc7_inserter_reg16[4], sdcore_crc7_inserter_reg16[3], (sdcore_crc7_inserter_reg16[2] ^ (sdcore_crc7_inserter_din[23] ^ sdcore_crc7_inserter_reg16[6])), sdcore_crc7_inserter_reg16[1], sdcore_crc7_inserter_reg16[0], (sdcore_crc7_inserter_din[23] ^ sdcore_crc7_inserter_reg16[6])};
assign sdcore_crc7_inserter_reg18 = {sdcore_crc7_inserter_reg17[5], sdcore_crc7_inserter_reg17[4], sdcore_crc7_inserter_reg17[3], (sdcore_crc7_inserter_reg17[2] ^ (sdcore_crc7_inserter_din[22] ^ sdcore_crc7_inserter_reg17[6])), sdcore_crc7_inserter_reg17[1], sdcore_crc7_inserter_reg17[0], (sdcore_crc7_inserter_din[22] ^ sdcore_crc7_inserter_reg17[6])};
assign sdcore_crc7_inserter_reg19 = {sdcore_crc7_inserter_reg18[5], sdcore_crc7_inserter_reg18[4], sdcore_crc7_inserter_reg18[3], (sdcore_crc7_inserter_reg18[2] ^ (sdcore_crc7_inserter_din[21] ^ sdcore_crc7_inserter_reg18[6])), sdcore_crc7_inserter_reg18[1], sdcore_crc7_inserter_reg18[0], (sdcore_crc7_inserter_din[21] ^ sdcore_crc7_inserter_reg18[6])};
assign sdcore_crc7_inserter_reg20 = {sdcore_crc7_inserter_reg19[5], sdcore_crc7_inserter_reg19[4], sdcore_crc7_inserter_reg19[3], (sdcore_crc7_inserter_reg19[2] ^ (sdcore_crc7_inserter_din[20] ^ sdcore_crc7_inserter_reg19[6])), sdcore_crc7_inserter_reg19[1], sdcore_crc7_inserter_reg19[0], (sdcore_crc7_inserter_din[20] ^ sdcore_crc7_inserter_reg19[6])};
assign sdcore_crc7_inserter_reg21 = {sdcore_crc7_inserter_reg20[5], sdcore_crc7_inserter_reg20[4], sdcore_crc7_inserter_reg20[3], (sdcore_crc7_inserter_reg20[2] ^ (sdcore_crc7_inserter_din[19] ^ sdcore_crc7_inserter_reg20[6])), sdcore_crc7_inserter_reg20[1], sdcore_crc7_inserter_reg20[0], (sdcore_crc7_inserter_din[19] ^ sdcore_crc7_inserter_reg20[6])};
assign sdcore_crc7_inserter_reg22 = {sdcore_crc7_inserter_reg21[5], sdcore_crc7_inserter_reg21[4], sdcore_crc7_inserter_reg21[3], (sdcore_crc7_inserter_reg21[2] ^ (sdcore_crc7_inserter_din[18] ^ sdcore_crc7_inserter_reg21[6])), sdcore_crc7_inserter_reg21[1], sdcore_crc7_inserter_reg21[0], (sdcore_crc7_inserter_din[18] ^ sdcore_crc7_inserter_reg21[6])};
assign sdcore_crc7_inserter_reg23 = {sdcore_crc7_inserter_reg22[5], sdcore_crc7_inserter_reg22[4], sdcore_crc7_inserter_reg22[3], (sdcore_crc7_inserter_reg22[2] ^ (sdcore_crc7_inserter_din[17] ^ sdcore_crc7_inserter_reg22[6])), sdcore_crc7_inserter_reg22[1], sdcore_crc7_inserter_reg22[0], (sdcore_crc7_inserter_din[17] ^ sdcore_crc7_inserter_reg22[6])};
assign sdcore_crc7_inserter_reg24 = {sdcore_crc7_inserter_reg23[5], sdcore_crc7_inserter_reg23[4], sdcore_crc7_inserter_reg23[3], (sdcore_crc7_inserter_reg23[2] ^ (sdcore_crc7_inserter_din[16] ^ sdcore_crc7_inserter_reg23[6])), sdcore_crc7_inserter_reg23[1], sdcore_crc7_inserter_reg23[0], (sdcore_crc7_inserter_din[16] ^ sdcore_crc7_inserter_reg23[6])};
assign sdcore_crc7_inserter_reg25 = {sdcore_crc7_inserter_reg24[5], sdcore_crc7_inserter_reg24[4], sdcore_crc7_inserter_reg24[3], (sdcore_crc7_inserter_reg24[2] ^ (sdcore_crc7_inserter_din[15] ^ sdcore_crc7_inserter_reg24[6])), sdcore_crc7_inserter_reg24[1], sdcore_crc7_inserter_reg24[0], (sdcore_crc7_inserter_din[15] ^ sdcore_crc7_inserter_reg24[6])};
assign sdcore_crc7_inserter_reg26 = {sdcore_crc7_inserter_reg25[5], sdcore_crc7_inserter_reg25[4], sdcore_crc7_inserter_reg25[3], (sdcore_crc7_inserter_reg25[2] ^ (sdcore_crc7_inserter_din[14] ^ sdcore_crc7_inserter_reg25[6])), sdcore_crc7_inserter_reg25[1], sdcore_crc7_inserter_reg25[0], (sdcore_crc7_inserter_din[14] ^ sdcore_crc7_inserter_reg25[6])};
assign sdcore_crc7_inserter_reg27 = {sdcore_crc7_inserter_reg26[5], sdcore_crc7_inserter_reg26[4], sdcore_crc7_inserter_reg26[3], (sdcore_crc7_inserter_reg26[2] ^ (sdcore_crc7_inserter_din[13] ^ sdcore_crc7_inserter_reg26[6])), sdcore_crc7_inserter_reg26[1], sdcore_crc7_inserter_reg26[0], (sdcore_crc7_inserter_din[13] ^ sdcore_crc7_inserter_reg26[6])};
assign sdcore_crc7_inserter_reg28 = {sdcore_crc7_inserter_reg27[5], sdcore_crc7_inserter_reg27[4], sdcore_crc7_inserter_reg27[3], (sdcore_crc7_inserter_reg27[2] ^ (sdcore_crc7_inserter_din[12] ^ sdcore_crc7_inserter_reg27[6])), sdcore_crc7_inserter_reg27[1], sdcore_crc7_inserter_reg27[0], (sdcore_crc7_inserter_din[12] ^ sdcore_crc7_inserter_reg27[6])};
assign sdcore_crc7_inserter_reg29 = {sdcore_crc7_inserter_reg28[5], sdcore_crc7_inserter_reg28[4], sdcore_crc7_inserter_reg28[3], (sdcore_crc7_inserter_reg28[2] ^ (sdcore_crc7_inserter_din[11] ^ sdcore_crc7_inserter_reg28[6])), sdcore_crc7_inserter_reg28[1], sdcore_crc7_inserter_reg28[0], (sdcore_crc7_inserter_din[11] ^ sdcore_crc7_inserter_reg28[6])};
assign sdcore_crc7_inserter_reg30 = {sdcore_crc7_inserter_reg29[5], sdcore_crc7_inserter_reg29[4], sdcore_crc7_inserter_reg29[3], (sdcore_crc7_inserter_reg29[2] ^ (sdcore_crc7_inserter_din[10] ^ sdcore_crc7_inserter_reg29[6])), sdcore_crc7_inserter_reg29[1], sdcore_crc7_inserter_reg29[0], (sdcore_crc7_inserter_din[10] ^ sdcore_crc7_inserter_reg29[6])};
assign sdcore_crc7_inserter_reg31 = {sdcore_crc7_inserter_reg30[5], sdcore_crc7_inserter_reg30[4], sdcore_crc7_inserter_reg30[3], (sdcore_crc7_inserter_reg30[2] ^ (sdcore_crc7_inserter_din[9] ^ sdcore_crc7_inserter_reg30[6])), sdcore_crc7_inserter_reg30[1], sdcore_crc7_inserter_reg30[0], (sdcore_crc7_inserter_din[9] ^ sdcore_crc7_inserter_reg30[6])};
assign sdcore_crc7_inserter_reg32 = {sdcore_crc7_inserter_reg31[5], sdcore_crc7_inserter_reg31[4], sdcore_crc7_inserter_reg31[3], (sdcore_crc7_inserter_reg31[2] ^ (sdcore_crc7_inserter_din[8] ^ sdcore_crc7_inserter_reg31[6])), sdcore_crc7_inserter_reg31[1], sdcore_crc7_inserter_reg31[0], (sdcore_crc7_inserter_din[8] ^ sdcore_crc7_inserter_reg31[6])};
assign sdcore_crc7_inserter_reg33 = {sdcore_crc7_inserter_reg32[5], sdcore_crc7_inserter_reg32[4], sdcore_crc7_inserter_reg32[3], (sdcore_crc7_inserter_reg32[2] ^ (sdcore_crc7_inserter_din[7] ^ sdcore_crc7_inserter_reg32[6])), sdcore_crc7_inserter_reg32[1], sdcore_crc7_inserter_reg32[0], (sdcore_crc7_inserter_din[7] ^ sdcore_crc7_inserter_reg32[6])};
assign sdcore_crc7_inserter_reg34 = {sdcore_crc7_inserter_reg33[5], sdcore_crc7_inserter_reg33[4], sdcore_crc7_inserter_reg33[3], (sdcore_crc7_inserter_reg33[2] ^ (sdcore_crc7_inserter_din[6] ^ sdcore_crc7_inserter_reg33[6])), sdcore_crc7_inserter_reg33[1], sdcore_crc7_inserter_reg33[0], (sdcore_crc7_inserter_din[6] ^ sdcore_crc7_inserter_reg33[6])};
assign sdcore_crc7_inserter_reg35 = {sdcore_crc7_inserter_reg34[5], sdcore_crc7_inserter_reg34[4], sdcore_crc7_inserter_reg34[3], (sdcore_crc7_inserter_reg34[2] ^ (sdcore_crc7_inserter_din[5] ^ sdcore_crc7_inserter_reg34[6])), sdcore_crc7_inserter_reg34[1], sdcore_crc7_inserter_reg34[0], (sdcore_crc7_inserter_din[5] ^ sdcore_crc7_inserter_reg34[6])};
assign sdcore_crc7_inserter_reg36 = {sdcore_crc7_inserter_reg35[5], sdcore_crc7_inserter_reg35[4], sdcore_crc7_inserter_reg35[3], (sdcore_crc7_inserter_reg35[2] ^ (sdcore_crc7_inserter_din[4] ^ sdcore_crc7_inserter_reg35[6])), sdcore_crc7_inserter_reg35[1], sdcore_crc7_inserter_reg35[0], (sdcore_crc7_inserter_din[4] ^ sdcore_crc7_inserter_reg35[6])};
assign sdcore_crc7_inserter_reg37 = {sdcore_crc7_inserter_reg36[5], sdcore_crc7_inserter_reg36[4], sdcore_crc7_inserter_reg36[3], (sdcore_crc7_inserter_reg36[2] ^ (sdcore_crc7_inserter_din[3] ^ sdcore_crc7_inserter_reg36[6])), sdcore_crc7_inserter_reg36[1], sdcore_crc7_inserter_reg36[0], (sdcore_crc7_inserter_din[3] ^ sdcore_crc7_inserter_reg36[6])};
assign sdcore_crc7_inserter_reg38 = {sdcore_crc7_inserter_reg37[5], sdcore_crc7_inserter_reg37[4], sdcore_crc7_inserter_reg37[3], (sdcore_crc7_inserter_reg37[2] ^ (sdcore_crc7_inserter_din[2] ^ sdcore_crc7_inserter_reg37[6])), sdcore_crc7_inserter_reg37[1], sdcore_crc7_inserter_reg37[0], (sdcore_crc7_inserter_din[2] ^ sdcore_crc7_inserter_reg37[6])};
assign sdcore_crc7_inserter_reg39 = {sdcore_crc7_inserter_reg38[5], sdcore_crc7_inserter_reg38[4], sdcore_crc7_inserter_reg38[3], (sdcore_crc7_inserter_reg38[2] ^ (sdcore_crc7_inserter_din[1] ^ sdcore_crc7_inserter_reg38[6])), sdcore_crc7_inserter_reg38[1], sdcore_crc7_inserter_reg38[0], (sdcore_crc7_inserter_din[1] ^ sdcore_crc7_inserter_reg38[6])};
assign sdcore_crc7_inserter_reg40 = {sdcore_crc7_inserter_reg39[5], sdcore_crc7_inserter_reg39[4], sdcore_crc7_inserter_reg39[3], (sdcore_crc7_inserter_reg39[2] ^ (sdcore_crc7_inserter_din[0] ^ sdcore_crc7_inserter_reg39[6])), sdcore_crc7_inserter_reg39[1], sdcore_crc7_inserter_reg39[0], (sdcore_crc7_inserter_din[0] ^ sdcore_crc7_inserter_reg39[6])};
always @(*) begin
    sdcore_crc7_inserter_crc <= 7'd0;
    if (sdcore_crc7_inserter_enable) begin
        sdcore_crc7_inserter_crc <= sdcore_crc7_inserter_reg40;
    end else begin
        sdcore_crc7_inserter_crc <= sdcore_crc7_inserter_reg0;
    end
end
assign sdcore_crc16_inserter_crc0_reset = ((sdcore_crc16_inserter_source_valid & sdcore_crc16_inserter_source_ready) & sdcore_crc16_inserter_source_last);
assign sdcore_crc16_inserter_crc0_enable = (sdcore_crc16_inserter_sink_valid & sdcore_crc16_inserter_sink_ready);
always @(*) begin
    sdcore_crc16_inserter_crc0_din <= 2'd0;
    sdcore_crc16_inserter_crc0_din[0] <= sdcore_crc16_inserter_sink_payload_data[0];
    sdcore_crc16_inserter_crc0_din[1] <= sdcore_crc16_inserter_sink_payload_data[4];
end
assign sdcore_crc16_inserter_crc1_reset = ((sdcore_crc16_inserter_source_valid & sdcore_crc16_inserter_source_ready) & sdcore_crc16_inserter_source_last);
assign sdcore_crc16_inserter_crc1_enable = (sdcore_crc16_inserter_sink_valid & sdcore_crc16_inserter_sink_ready);
always @(*) begin
    sdcore_crc16_inserter_crc1_din <= 2'd0;
    sdcore_crc16_inserter_crc1_din[0] <= sdcore_crc16_inserter_sink_payload_data[1];
    sdcore_crc16_inserter_crc1_din[1] <= sdcore_crc16_inserter_sink_payload_data[5];
end
assign sdcore_crc16_inserter_crc2_reset = ((sdcore_crc16_inserter_source_valid & sdcore_crc16_inserter_source_ready) & sdcore_crc16_inserter_source_last);
assign sdcore_crc16_inserter_crc2_enable = (sdcore_crc16_inserter_sink_valid & sdcore_crc16_inserter_sink_ready);
always @(*) begin
    sdcore_crc16_inserter_crc2_din <= 2'd0;
    sdcore_crc16_inserter_crc2_din[0] <= sdcore_crc16_inserter_sink_payload_data[2];
    sdcore_crc16_inserter_crc2_din[1] <= sdcore_crc16_inserter_sink_payload_data[6];
end
assign sdcore_crc16_inserter_crc3_reset = ((sdcore_crc16_inserter_source_valid & sdcore_crc16_inserter_source_ready) & sdcore_crc16_inserter_source_last);
assign sdcore_crc16_inserter_crc3_enable = (sdcore_crc16_inserter_sink_valid & sdcore_crc16_inserter_sink_ready);
always @(*) begin
    sdcore_crc16_inserter_crc3_din <= 2'd0;
    sdcore_crc16_inserter_crc3_din[0] <= sdcore_crc16_inserter_sink_payload_data[3];
    sdcore_crc16_inserter_crc3_din[1] <= sdcore_crc16_inserter_sink_payload_data[7];
end
assign sdcore_crc16_inserter_crc0_reg1 = {sdcore_crc16_inserter_crc0_reg0[14], sdcore_crc16_inserter_crc0_reg0[13], sdcore_crc16_inserter_crc0_reg0[12], (sdcore_crc16_inserter_crc0_reg0[11] ^ (sdcore_crc16_inserter_crc0_din[1] ^ sdcore_crc16_inserter_crc0_reg0[15])), sdcore_crc16_inserter_crc0_reg0[10], sdcore_crc16_inserter_crc0_reg0[9], sdcore_crc16_inserter_crc0_reg0[8], sdcore_crc16_inserter_crc0_reg0[7], sdcore_crc16_inserter_crc0_reg0[6], sdcore_crc16_inserter_crc0_reg0[5], (sdcore_crc16_inserter_crc0_reg0[4] ^ (sdcore_crc16_inserter_crc0_din[1] ^ sdcore_crc16_inserter_crc0_reg0[15])), sdcore_crc16_inserter_crc0_reg0[3], sdcore_crc16_inserter_crc0_reg0[2], sdcore_crc16_inserter_crc0_reg0[1], sdcore_crc16_inserter_crc0_reg0[0], (sdcore_crc16_inserter_crc0_din[1] ^ sdcore_crc16_inserter_crc0_reg0[15])};
assign sdcore_crc16_inserter_crc0_reg2 = {sdcore_crc16_inserter_crc0_reg1[14], sdcore_crc16_inserter_crc0_reg1[13], sdcore_crc16_inserter_crc0_reg1[12], (sdcore_crc16_inserter_crc0_reg1[11] ^ (sdcore_crc16_inserter_crc0_din[0] ^ sdcore_crc16_inserter_crc0_reg1[15])), sdcore_crc16_inserter_crc0_reg1[10], sdcore_crc16_inserter_crc0_reg1[9], sdcore_crc16_inserter_crc0_reg1[8], sdcore_crc16_inserter_crc0_reg1[7], sdcore_crc16_inserter_crc0_reg1[6], sdcore_crc16_inserter_crc0_reg1[5], (sdcore_crc16_inserter_crc0_reg1[4] ^ (sdcore_crc16_inserter_crc0_din[0] ^ sdcore_crc16_inserter_crc0_reg1[15])), sdcore_crc16_inserter_crc0_reg1[3], sdcore_crc16_inserter_crc0_reg1[2], sdcore_crc16_inserter_crc0_reg1[1], sdcore_crc16_inserter_crc0_reg1[0], (sdcore_crc16_inserter_crc0_din[0] ^ sdcore_crc16_inserter_crc0_reg1[15])};
always @(*) begin
    sdcore_crc16_inserter_crc0_crc <= 16'd0;
    if (sdcore_crc16_inserter_crc0_enable) begin
        sdcore_crc16_inserter_crc0_crc <= sdcore_crc16_inserter_crc0_reg2;
    end else begin
        sdcore_crc16_inserter_crc0_crc <= sdcore_crc16_inserter_crc0_reg0;
    end
end
assign sdcore_crc16_inserter_crc1_reg1 = {sdcore_crc16_inserter_crc1_reg0[14], sdcore_crc16_inserter_crc1_reg0[13], sdcore_crc16_inserter_crc1_reg0[12], (sdcore_crc16_inserter_crc1_reg0[11] ^ (sdcore_crc16_inserter_crc1_din[1] ^ sdcore_crc16_inserter_crc1_reg0[15])), sdcore_crc16_inserter_crc1_reg0[10], sdcore_crc16_inserter_crc1_reg0[9], sdcore_crc16_inserter_crc1_reg0[8], sdcore_crc16_inserter_crc1_reg0[7], sdcore_crc16_inserter_crc1_reg0[6], sdcore_crc16_inserter_crc1_reg0[5], (sdcore_crc16_inserter_crc1_reg0[4] ^ (sdcore_crc16_inserter_crc1_din[1] ^ sdcore_crc16_inserter_crc1_reg0[15])), sdcore_crc16_inserter_crc1_reg0[3], sdcore_crc16_inserter_crc1_reg0[2], sdcore_crc16_inserter_crc1_reg0[1], sdcore_crc16_inserter_crc1_reg0[0], (sdcore_crc16_inserter_crc1_din[1] ^ sdcore_crc16_inserter_crc1_reg0[15])};
assign sdcore_crc16_inserter_crc1_reg2 = {sdcore_crc16_inserter_crc1_reg1[14], sdcore_crc16_inserter_crc1_reg1[13], sdcore_crc16_inserter_crc1_reg1[12], (sdcore_crc16_inserter_crc1_reg1[11] ^ (sdcore_crc16_inserter_crc1_din[0] ^ sdcore_crc16_inserter_crc1_reg1[15])), sdcore_crc16_inserter_crc1_reg1[10], sdcore_crc16_inserter_crc1_reg1[9], sdcore_crc16_inserter_crc1_reg1[8], sdcore_crc16_inserter_crc1_reg1[7], sdcore_crc16_inserter_crc1_reg1[6], sdcore_crc16_inserter_crc1_reg1[5], (sdcore_crc16_inserter_crc1_reg1[4] ^ (sdcore_crc16_inserter_crc1_din[0] ^ sdcore_crc16_inserter_crc1_reg1[15])), sdcore_crc16_inserter_crc1_reg1[3], sdcore_crc16_inserter_crc1_reg1[2], sdcore_crc16_inserter_crc1_reg1[1], sdcore_crc16_inserter_crc1_reg1[0], (sdcore_crc16_inserter_crc1_din[0] ^ sdcore_crc16_inserter_crc1_reg1[15])};
always @(*) begin
    sdcore_crc16_inserter_crc1_crc <= 16'd0;
    if (sdcore_crc16_inserter_crc1_enable) begin
        sdcore_crc16_inserter_crc1_crc <= sdcore_crc16_inserter_crc1_reg2;
    end else begin
        sdcore_crc16_inserter_crc1_crc <= sdcore_crc16_inserter_crc1_reg0;
    end
end
assign sdcore_crc16_inserter_crc2_reg1 = {sdcore_crc16_inserter_crc2_reg0[14], sdcore_crc16_inserter_crc2_reg0[13], sdcore_crc16_inserter_crc2_reg0[12], (sdcore_crc16_inserter_crc2_reg0[11] ^ (sdcore_crc16_inserter_crc2_din[1] ^ sdcore_crc16_inserter_crc2_reg0[15])), sdcore_crc16_inserter_crc2_reg0[10], sdcore_crc16_inserter_crc2_reg0[9], sdcore_crc16_inserter_crc2_reg0[8], sdcore_crc16_inserter_crc2_reg0[7], sdcore_crc16_inserter_crc2_reg0[6], sdcore_crc16_inserter_crc2_reg0[5], (sdcore_crc16_inserter_crc2_reg0[4] ^ (sdcore_crc16_inserter_crc2_din[1] ^ sdcore_crc16_inserter_crc2_reg0[15])), sdcore_crc16_inserter_crc2_reg0[3], sdcore_crc16_inserter_crc2_reg0[2], sdcore_crc16_inserter_crc2_reg0[1], sdcore_crc16_inserter_crc2_reg0[0], (sdcore_crc16_inserter_crc2_din[1] ^ sdcore_crc16_inserter_crc2_reg0[15])};
assign sdcore_crc16_inserter_crc2_reg2 = {sdcore_crc16_inserter_crc2_reg1[14], sdcore_crc16_inserter_crc2_reg1[13], sdcore_crc16_inserter_crc2_reg1[12], (sdcore_crc16_inserter_crc2_reg1[11] ^ (sdcore_crc16_inserter_crc2_din[0] ^ sdcore_crc16_inserter_crc2_reg1[15])), sdcore_crc16_inserter_crc2_reg1[10], sdcore_crc16_inserter_crc2_reg1[9], sdcore_crc16_inserter_crc2_reg1[8], sdcore_crc16_inserter_crc2_reg1[7], sdcore_crc16_inserter_crc2_reg1[6], sdcore_crc16_inserter_crc2_reg1[5], (sdcore_crc16_inserter_crc2_reg1[4] ^ (sdcore_crc16_inserter_crc2_din[0] ^ sdcore_crc16_inserter_crc2_reg1[15])), sdcore_crc16_inserter_crc2_reg1[3], sdcore_crc16_inserter_crc2_reg1[2], sdcore_crc16_inserter_crc2_reg1[1], sdcore_crc16_inserter_crc2_reg1[0], (sdcore_crc16_inserter_crc2_din[0] ^ sdcore_crc16_inserter_crc2_reg1[15])};
always @(*) begin
    sdcore_crc16_inserter_crc2_crc <= 16'd0;
    if (sdcore_crc16_inserter_crc2_enable) begin
        sdcore_crc16_inserter_crc2_crc <= sdcore_crc16_inserter_crc2_reg2;
    end else begin
        sdcore_crc16_inserter_crc2_crc <= sdcore_crc16_inserter_crc2_reg0;
    end
end
assign sdcore_crc16_inserter_crc3_reg1 = {sdcore_crc16_inserter_crc3_reg0[14], sdcore_crc16_inserter_crc3_reg0[13], sdcore_crc16_inserter_crc3_reg0[12], (sdcore_crc16_inserter_crc3_reg0[11] ^ (sdcore_crc16_inserter_crc3_din[1] ^ sdcore_crc16_inserter_crc3_reg0[15])), sdcore_crc16_inserter_crc3_reg0[10], sdcore_crc16_inserter_crc3_reg0[9], sdcore_crc16_inserter_crc3_reg0[8], sdcore_crc16_inserter_crc3_reg0[7], sdcore_crc16_inserter_crc3_reg0[6], sdcore_crc16_inserter_crc3_reg0[5], (sdcore_crc16_inserter_crc3_reg0[4] ^ (sdcore_crc16_inserter_crc3_din[1] ^ sdcore_crc16_inserter_crc3_reg0[15])), sdcore_crc16_inserter_crc3_reg0[3], sdcore_crc16_inserter_crc3_reg0[2], sdcore_crc16_inserter_crc3_reg0[1], sdcore_crc16_inserter_crc3_reg0[0], (sdcore_crc16_inserter_crc3_din[1] ^ sdcore_crc16_inserter_crc3_reg0[15])};
assign sdcore_crc16_inserter_crc3_reg2 = {sdcore_crc16_inserter_crc3_reg1[14], sdcore_crc16_inserter_crc3_reg1[13], sdcore_crc16_inserter_crc3_reg1[12], (sdcore_crc16_inserter_crc3_reg1[11] ^ (sdcore_crc16_inserter_crc3_din[0] ^ sdcore_crc16_inserter_crc3_reg1[15])), sdcore_crc16_inserter_crc3_reg1[10], sdcore_crc16_inserter_crc3_reg1[9], sdcore_crc16_inserter_crc3_reg1[8], sdcore_crc16_inserter_crc3_reg1[7], sdcore_crc16_inserter_crc3_reg1[6], sdcore_crc16_inserter_crc3_reg1[5], (sdcore_crc16_inserter_crc3_reg1[4] ^ (sdcore_crc16_inserter_crc3_din[0] ^ sdcore_crc16_inserter_crc3_reg1[15])), sdcore_crc16_inserter_crc3_reg1[3], sdcore_crc16_inserter_crc3_reg1[2], sdcore_crc16_inserter_crc3_reg1[1], sdcore_crc16_inserter_crc3_reg1[0], (sdcore_crc16_inserter_crc3_din[0] ^ sdcore_crc16_inserter_crc3_reg1[15])};
always @(*) begin
    sdcore_crc16_inserter_crc3_crc <= 16'd0;
    if (sdcore_crc16_inserter_crc3_enable) begin
        sdcore_crc16_inserter_crc3_crc <= sdcore_crc16_inserter_crc3_reg2;
    end else begin
        sdcore_crc16_inserter_crc3_crc <= sdcore_crc16_inserter_crc3_reg0;
    end
end
always @(*) begin
    sdcore_crc16_inserter_source_payload_data <= 8'd0;
    sdcore_crc16_inserter_sink_ready <= 1'd0;
    soclinux_sdcore_crc16inserter_next_state <= 1'd0;
    sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value <= 3'd0;
    sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value_ce <= 1'd0;
    sdcore_crc16_inserter_source_valid <= 1'd0;
    sdcore_crc16_inserter_source_first <= 1'd0;
    sdcore_crc16_inserter_source_last <= 1'd0;
    soclinux_sdcore_crc16inserter_next_state <= soclinux_sdcore_crc16inserter_state;
    case (soclinux_sdcore_crc16inserter_state)
        1'd1: begin
            sdcore_crc16_inserter_source_valid <= 1'd1;
            sdcore_crc16_inserter_source_last <= (sdcore_crc16_inserter_count == 3'd7);
            case (sdcore_crc16_inserter_count)
                1'd0: begin
                    sdcore_crc16_inserter_source_payload_data[0] <= sdcore_crc16_inserter_crc0_crc[14];
                    sdcore_crc16_inserter_source_payload_data[1] <= sdcore_crc16_inserter_crc1_crc[14];
                    sdcore_crc16_inserter_source_payload_data[2] <= sdcore_crc16_inserter_crc2_crc[14];
                    sdcore_crc16_inserter_source_payload_data[3] <= sdcore_crc16_inserter_crc3_crc[14];
                    sdcore_crc16_inserter_source_payload_data[4] <= sdcore_crc16_inserter_crc0_crc[15];
                    sdcore_crc16_inserter_source_payload_data[5] <= sdcore_crc16_inserter_crc1_crc[15];
                    sdcore_crc16_inserter_source_payload_data[6] <= sdcore_crc16_inserter_crc2_crc[15];
                    sdcore_crc16_inserter_source_payload_data[7] <= sdcore_crc16_inserter_crc3_crc[15];
                end
                1'd1: begin
                    sdcore_crc16_inserter_source_payload_data[0] <= sdcore_crc16_inserter_crc0_crc[12];
                    sdcore_crc16_inserter_source_payload_data[1] <= sdcore_crc16_inserter_crc1_crc[12];
                    sdcore_crc16_inserter_source_payload_data[2] <= sdcore_crc16_inserter_crc2_crc[12];
                    sdcore_crc16_inserter_source_payload_data[3] <= sdcore_crc16_inserter_crc3_crc[12];
                    sdcore_crc16_inserter_source_payload_data[4] <= sdcore_crc16_inserter_crc0_crc[13];
                    sdcore_crc16_inserter_source_payload_data[5] <= sdcore_crc16_inserter_crc1_crc[13];
                    sdcore_crc16_inserter_source_payload_data[6] <= sdcore_crc16_inserter_crc2_crc[13];
                    sdcore_crc16_inserter_source_payload_data[7] <= sdcore_crc16_inserter_crc3_crc[13];
                end
                2'd2: begin
                    sdcore_crc16_inserter_source_payload_data[0] <= sdcore_crc16_inserter_crc0_crc[10];
                    sdcore_crc16_inserter_source_payload_data[1] <= sdcore_crc16_inserter_crc1_crc[10];
                    sdcore_crc16_inserter_source_payload_data[2] <= sdcore_crc16_inserter_crc2_crc[10];
                    sdcore_crc16_inserter_source_payload_data[3] <= sdcore_crc16_inserter_crc3_crc[10];
                    sdcore_crc16_inserter_source_payload_data[4] <= sdcore_crc16_inserter_crc0_crc[11];
                    sdcore_crc16_inserter_source_payload_data[5] <= sdcore_crc16_inserter_crc1_crc[11];
                    sdcore_crc16_inserter_source_payload_data[6] <= sdcore_crc16_inserter_crc2_crc[11];
                    sdcore_crc16_inserter_source_payload_data[7] <= sdcore_crc16_inserter_crc3_crc[11];
                end
                2'd3: begin
                    sdcore_crc16_inserter_source_payload_data[0] <= sdcore_crc16_inserter_crc0_crc[8];
                    sdcore_crc16_inserter_source_payload_data[1] <= sdcore_crc16_inserter_crc1_crc[8];
                    sdcore_crc16_inserter_source_payload_data[2] <= sdcore_crc16_inserter_crc2_crc[8];
                    sdcore_crc16_inserter_source_payload_data[3] <= sdcore_crc16_inserter_crc3_crc[8];
                    sdcore_crc16_inserter_source_payload_data[4] <= sdcore_crc16_inserter_crc0_crc[9];
                    sdcore_crc16_inserter_source_payload_data[5] <= sdcore_crc16_inserter_crc1_crc[9];
                    sdcore_crc16_inserter_source_payload_data[6] <= sdcore_crc16_inserter_crc2_crc[9];
                    sdcore_crc16_inserter_source_payload_data[7] <= sdcore_crc16_inserter_crc3_crc[9];
                end
                3'd4: begin
                    sdcore_crc16_inserter_source_payload_data[0] <= sdcore_crc16_inserter_crc0_crc[6];
                    sdcore_crc16_inserter_source_payload_data[1] <= sdcore_crc16_inserter_crc1_crc[6];
                    sdcore_crc16_inserter_source_payload_data[2] <= sdcore_crc16_inserter_crc2_crc[6];
                    sdcore_crc16_inserter_source_payload_data[3] <= sdcore_crc16_inserter_crc3_crc[6];
                    sdcore_crc16_inserter_source_payload_data[4] <= sdcore_crc16_inserter_crc0_crc[7];
                    sdcore_crc16_inserter_source_payload_data[5] <= sdcore_crc16_inserter_crc1_crc[7];
                    sdcore_crc16_inserter_source_payload_data[6] <= sdcore_crc16_inserter_crc2_crc[7];
                    sdcore_crc16_inserter_source_payload_data[7] <= sdcore_crc16_inserter_crc3_crc[7];
                end
                3'd5: begin
                    sdcore_crc16_inserter_source_payload_data[0] <= sdcore_crc16_inserter_crc0_crc[4];
                    sdcore_crc16_inserter_source_payload_data[1] <= sdcore_crc16_inserter_crc1_crc[4];
                    sdcore_crc16_inserter_source_payload_data[2] <= sdcore_crc16_inserter_crc2_crc[4];
                    sdcore_crc16_inserter_source_payload_data[3] <= sdcore_crc16_inserter_crc3_crc[4];
                    sdcore_crc16_inserter_source_payload_data[4] <= sdcore_crc16_inserter_crc0_crc[5];
                    sdcore_crc16_inserter_source_payload_data[5] <= sdcore_crc16_inserter_crc1_crc[5];
                    sdcore_crc16_inserter_source_payload_data[6] <= sdcore_crc16_inserter_crc2_crc[5];
                    sdcore_crc16_inserter_source_payload_data[7] <= sdcore_crc16_inserter_crc3_crc[5];
                end
                3'd6: begin
                    sdcore_crc16_inserter_source_payload_data[0] <= sdcore_crc16_inserter_crc0_crc[2];
                    sdcore_crc16_inserter_source_payload_data[1] <= sdcore_crc16_inserter_crc1_crc[2];
                    sdcore_crc16_inserter_source_payload_data[2] <= sdcore_crc16_inserter_crc2_crc[2];
                    sdcore_crc16_inserter_source_payload_data[3] <= sdcore_crc16_inserter_crc3_crc[2];
                    sdcore_crc16_inserter_source_payload_data[4] <= sdcore_crc16_inserter_crc0_crc[3];
                    sdcore_crc16_inserter_source_payload_data[5] <= sdcore_crc16_inserter_crc1_crc[3];
                    sdcore_crc16_inserter_source_payload_data[6] <= sdcore_crc16_inserter_crc2_crc[3];
                    sdcore_crc16_inserter_source_payload_data[7] <= sdcore_crc16_inserter_crc3_crc[3];
                end
                3'd7: begin
                    sdcore_crc16_inserter_source_payload_data[0] <= sdcore_crc16_inserter_crc0_crc[0];
                    sdcore_crc16_inserter_source_payload_data[1] <= sdcore_crc16_inserter_crc1_crc[0];
                    sdcore_crc16_inserter_source_payload_data[2] <= sdcore_crc16_inserter_crc2_crc[0];
                    sdcore_crc16_inserter_source_payload_data[3] <= sdcore_crc16_inserter_crc3_crc[0];
                    sdcore_crc16_inserter_source_payload_data[4] <= sdcore_crc16_inserter_crc0_crc[1];
                    sdcore_crc16_inserter_source_payload_data[5] <= sdcore_crc16_inserter_crc1_crc[1];
                    sdcore_crc16_inserter_source_payload_data[6] <= sdcore_crc16_inserter_crc2_crc[1];
                    sdcore_crc16_inserter_source_payload_data[7] <= sdcore_crc16_inserter_crc3_crc[1];
                end
            endcase
            if ((sdcore_crc16_inserter_source_valid & sdcore_crc16_inserter_source_ready)) begin
                sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value <= (sdcore_crc16_inserter_count + 1'd1);
                sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value_ce <= 1'd1;
                if (sdcore_crc16_inserter_source_last) begin
                    soclinux_sdcore_crc16inserter_next_state <= 1'd0;
                end
            end
        end
        default: begin
            sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value <= 1'd0;
            sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value_ce <= 1'd1;
            sdcore_crc16_inserter_source_valid <= sdcore_crc16_inserter_sink_valid;
            sdcore_crc16_inserter_sink_ready <= sdcore_crc16_inserter_source_ready;
            sdcore_crc16_inserter_source_first <= sdcore_crc16_inserter_sink_first;
            sdcore_crc16_inserter_source_payload_data <= sdcore_crc16_inserter_sink_payload_data;
            sdcore_crc16_inserter_source_last <= 1'd0;
            if ((sdcore_crc16_inserter_sink_valid & sdcore_crc16_inserter_sink_ready)) begin
                if (sdcore_crc16_inserter_sink_last) begin
                    soclinux_sdcore_crc16inserter_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign sdcore_fifo_sink_valid = sdcore_sink_sink_valid1;
assign sdcore_sink_sink_ready1 = sdcore_fifo_sink_ready;
assign sdcore_fifo_sink_first = sdcore_sink_sink_first1;
assign sdcore_fifo_sink_last = sdcore_sink_sink_last1;
assign sdcore_fifo_sink_payload_data = sdcore_sink_sink_payload_data1;
assign sdcore_source_source_first1 = sdcore_fifo_source_first;
assign sdcore_source_source_last1 = sdcore_fifo_source_last;
assign sdcore_source_source_payload_data1 = sdcore_fifo_source_payload_data;
assign sdcore_source_source_valid1 = (sdcore_fifo_level >= 4'd8);
assign sdcore_fifo_source_ready = (sdcore_source_source_valid1 & sdcore_source_source_ready1);
assign sdcore_fifo_reset = ((sdcore_sink_sink_valid1 & sdcore_sink_sink_ready1) & sdcore_sink_sink_last1);
assign sdcore_fifo_syncfifo_din = {sdcore_fifo_fifo_in_last, sdcore_fifo_fifo_in_first, sdcore_fifo_fifo_in_payload_data};
assign {sdcore_fifo_fifo_out_last, sdcore_fifo_fifo_out_first, sdcore_fifo_fifo_out_payload_data} = sdcore_fifo_syncfifo_dout;
assign sdcore_fifo_sink_ready = sdcore_fifo_syncfifo_writable;
assign sdcore_fifo_syncfifo_we = sdcore_fifo_sink_valid;
assign sdcore_fifo_fifo_in_first = sdcore_fifo_sink_first;
assign sdcore_fifo_fifo_in_last = sdcore_fifo_sink_last;
assign sdcore_fifo_fifo_in_payload_data = sdcore_fifo_sink_payload_data;
assign sdcore_fifo_source_valid = sdcore_fifo_syncfifo_readable;
assign sdcore_fifo_source_first = sdcore_fifo_fifo_out_first;
assign sdcore_fifo_source_last = sdcore_fifo_fifo_out_last;
assign sdcore_fifo_source_payload_data = sdcore_fifo_fifo_out_payload_data;
assign sdcore_fifo_syncfifo_re = sdcore_fifo_source_ready;
always @(*) begin
    sdcore_fifo_wrport_adr <= 3'd0;
    if (sdcore_fifo_replace) begin
        sdcore_fifo_wrport_adr <= (sdcore_fifo_produce - 1'd1);
    end else begin
        sdcore_fifo_wrport_adr <= sdcore_fifo_produce;
    end
end
assign sdcore_fifo_wrport_dat_w = sdcore_fifo_syncfifo_din;
assign sdcore_fifo_wrport_we = (sdcore_fifo_syncfifo_we & (sdcore_fifo_syncfifo_writable | sdcore_fifo_replace));
assign sdcore_fifo_do_read = (sdcore_fifo_syncfifo_readable & sdcore_fifo_syncfifo_re);
assign sdcore_fifo_rdport_adr = sdcore_fifo_consume;
assign sdcore_fifo_syncfifo_dout = sdcore_fifo_rdport_dat_r;
assign sdcore_fifo_syncfifo_writable = (sdcore_fifo_level != 4'd8);
assign sdcore_fifo_syncfifo_readable = (sdcore_fifo_level != 1'd0);
always @(*) begin
    cmdr_source_source_ready <= 1'd0;
    soclinux_sdcore_fsm_next_state <= 3'd0;
    sdcore_cmd_done_sdcore_fsm_next_value0 <= 1'd0;
    sdcore_cmd_done_sdcore_fsm_next_value_ce0 <= 1'd0;
    sdcore_sink_sink_payload_data1 <= 8'd0;
    cmdw_sink_valid <= 1'd0;
    sdcore_data_done_sdcore_fsm_next_value1 <= 1'd0;
    sdcore_data_done_sdcore_fsm_next_value_ce1 <= 1'd0;
    cmdw_sink_last <= 1'd0;
    sdcore_cmd_count_sdcore_fsm_next_value2 <= 3'd0;
    cmdw_sink_payload_data <= 8'd0;
    sdcore_cmd_count_sdcore_fsm_next_value_ce2 <= 1'd0;
    cmdw_sink_payload_cmd_type <= 2'd0;
    dataw_sink_valid <= 1'd0;
    dataw_sink_first <= 1'd0;
    sdcore_data_count_sdcore_fsm_next_value3 <= 32'd0;
    dataw_sink_last <= 1'd0;
    sdcore_data_count_sdcore_fsm_next_value_ce3 <= 1'd0;
    dataw_sink_payload_data <= 8'd0;
    sdcore_cmd_error_sdcore_fsm_next_value4 <= 1'd0;
    sdcore_cmd_error_sdcore_fsm_next_value_ce4 <= 1'd0;
    sdcore_cmd_timeout_sdcore_fsm_next_value5 <= 1'd0;
    sdcore_cmd_timeout_sdcore_fsm_next_value_ce5 <= 1'd0;
    sdcore_data_error_sdcore_fsm_next_value6 <= 1'd0;
    sdcore_data_error_sdcore_fsm_next_value_ce6 <= 1'd0;
    datar_sink_valid <= 1'd0;
    sdcore_data_timeout_sdcore_fsm_next_value7 <= 1'd0;
    sdcore_data_timeout_sdcore_fsm_next_value_ce7 <= 1'd0;
    datar_sink_last <= 1'd0;
    datar_sink_payload_block_length <= 10'd0;
    datar_source_source_ready <= 1'd0;
    sdcore_cmd_response_status_sdcore_fsm_next_value8 <= 128'd0;
    sdcore_cmd_response_status_sdcore_fsm_next_value_ce8 <= 1'd0;
    sdcore_crc16_inserter_source_ready <= 1'd0;
    cmdr_sink_valid <= 1'd0;
    sdcore_sink_sink_last1 <= 1'd0;
    sdcore_sink_sink_valid1 <= 1'd0;
    sdcore_sink_sink_first1 <= 1'd0;
    cmdr_sink_payload_cmd_type <= 2'd0;
    cmdr_sink_payload_data_type <= 2'd0;
    cmdr_sink_payload_length <= 8'd0;
    soclinux_sdcore_fsm_next_state <= soclinux_sdcore_fsm_state;
    case (soclinux_sdcore_fsm_state)
        1'd1: begin
            cmdw_sink_valid <= 1'd1;
            cmdw_sink_last <= (sdcore_cmd_count == 3'd5);
            cmdw_sink_payload_cmd_type <= sdcore_cmd_type;
            case (sdcore_cmd_count)
                1'd0: begin
                    cmdw_sink_payload_data <= {1'd0, 1'd1, sdcore_cmd};
                end
                1'd1: begin
                    cmdw_sink_payload_data <= sdcore_cmd_argument_storage[31:24];
                end
                2'd2: begin
                    cmdw_sink_payload_data <= sdcore_cmd_argument_storage[23:16];
                end
                2'd3: begin
                    cmdw_sink_payload_data <= sdcore_cmd_argument_storage[15:8];
                end
                3'd4: begin
                    cmdw_sink_payload_data <= sdcore_cmd_argument_storage[7:0];
                end
                3'd5: begin
                    cmdw_sink_payload_data <= {sdcore_crc7_inserter_crc, 1'd1};
                end
            endcase
            if (cmdw_sink_ready) begin
                sdcore_cmd_count_sdcore_fsm_next_value2 <= (sdcore_cmd_count + 1'd1);
                sdcore_cmd_count_sdcore_fsm_next_value_ce2 <= 1'd1;
                if (cmdw_sink_last) begin
                    if ((sdcore_cmd_type == 1'd0)) begin
                        soclinux_sdcore_fsm_next_state <= 1'd0;
                    end else begin
                        soclinux_sdcore_fsm_next_state <= 2'd2;
                    end
                end
            end
        end
        2'd2: begin
            cmdr_sink_valid <= 1'd1;
            cmdr_sink_payload_cmd_type <= sdcore_cmd_type;
            cmdr_sink_payload_data_type <= sdcore_data_type;
            if ((sdcore_cmd_type == 2'd2)) begin
                cmdr_sink_payload_length <= 5'd18;
            end else begin
                cmdr_sink_payload_length <= 3'd6;
            end
            cmdr_source_source_ready <= 1'd1;
            if (cmdr_source_source_valid) begin
                if ((cmdr_source_source_payload_status == 1'd1)) begin
                    sdcore_cmd_timeout_sdcore_fsm_next_value5 <= 1'd1;
                    sdcore_cmd_timeout_sdcore_fsm_next_value_ce5 <= 1'd1;
                    soclinux_sdcore_fsm_next_state <= 1'd0;
                end else begin
                    if (cmdr_source_source_last) begin
                        if ((sdcore_data_type == 2'd2)) begin
                            soclinux_sdcore_fsm_next_state <= 2'd3;
                        end else begin
                            if ((sdcore_data_type == 1'd1)) begin
                                soclinux_sdcore_fsm_next_state <= 3'd4;
                            end else begin
                                soclinux_sdcore_fsm_next_state <= 1'd0;
                            end
                        end
                    end else begin
                        sdcore_cmd_response_status_sdcore_fsm_next_value8 <= {sdcore_cmd_response_status, cmdr_source_source_payload_data};
                        sdcore_cmd_response_status_sdcore_fsm_next_value_ce8 <= 1'd1;
                    end
                end
            end
        end
        2'd3: begin
            dataw_sink_valid <= sdcore_crc16_inserter_source_valid;
            sdcore_crc16_inserter_source_ready <= dataw_sink_ready;
            dataw_sink_first <= sdcore_crc16_inserter_source_first;
            dataw_sink_last <= sdcore_crc16_inserter_source_last;
            dataw_sink_payload_data <= sdcore_crc16_inserter_source_payload_data;
            if (((dataw_sink_valid & dataw_sink_ready) & dataw_sink_last)) begin
                sdcore_data_count_sdcore_fsm_next_value3 <= (sdcore_data_count + 1'd1);
                sdcore_data_count_sdcore_fsm_next_value_ce3 <= 1'd1;
                if ((sdcore_data_count == (sdcore_block_count_storage - 1'd1))) begin
                    soclinux_sdcore_fsm_next_state <= 1'd0;
                end
            end
            datar_source_source_ready <= 1'd1;
            if (datar_source_source_valid) begin
                if ((datar_source_source_payload_status != 2'd2)) begin
                    sdcore_data_error_sdcore_fsm_next_value6 <= 1'd1;
                    sdcore_data_error_sdcore_fsm_next_value_ce6 <= 1'd1;
                end
            end
        end
        3'd4: begin
            datar_sink_valid <= 1'd1;
            datar_sink_payload_block_length <= sdcore_block_length_storage;
            datar_sink_last <= (sdcore_data_count == (sdcore_block_count_storage - 1'd1));
            if (datar_source_source_valid) begin
                if ((datar_source_source_payload_status == 1'd0)) begin
                    sdcore_sink_sink_valid1 <= datar_source_source_valid;
                    datar_source_source_ready <= sdcore_sink_sink_ready1;
                    sdcore_sink_sink_first1 <= datar_source_source_first;
                    sdcore_sink_sink_last1 <= datar_source_source_last;
                    sdcore_sink_sink_payload_data1 <= datar_source_source_payload_data;
                    if ((datar_source_source_last & datar_source_source_ready)) begin
                        sdcore_data_count_sdcore_fsm_next_value3 <= (sdcore_data_count + 1'd1);
                        sdcore_data_count_sdcore_fsm_next_value_ce3 <= 1'd1;
                        if ((sdcore_data_count == (sdcore_block_count_storage - 1'd1))) begin
                            soclinux_sdcore_fsm_next_state <= 1'd0;
                        end
                    end
                end else begin
                    if ((datar_source_source_payload_status == 1'd1)) begin
                        sdcore_data_timeout_sdcore_fsm_next_value7 <= 1'd1;
                        sdcore_data_timeout_sdcore_fsm_next_value_ce7 <= 1'd1;
                        datar_source_source_ready <= 1'd1;
                        soclinux_sdcore_fsm_next_state <= 1'd0;
                    end
                end
            end
        end
        default: begin
            sdcore_cmd_done_sdcore_fsm_next_value0 <= 1'd1;
            sdcore_cmd_done_sdcore_fsm_next_value_ce0 <= 1'd1;
            sdcore_data_done_sdcore_fsm_next_value1 <= 1'd1;
            sdcore_data_done_sdcore_fsm_next_value_ce1 <= 1'd1;
            sdcore_cmd_count_sdcore_fsm_next_value2 <= 1'd0;
            sdcore_cmd_count_sdcore_fsm_next_value_ce2 <= 1'd1;
            sdcore_data_count_sdcore_fsm_next_value3 <= 1'd0;
            sdcore_data_count_sdcore_fsm_next_value_ce3 <= 1'd1;
            if (sdcore_cmd_send_re) begin
                sdcore_cmd_done_sdcore_fsm_next_value0 <= 1'd0;
                sdcore_cmd_done_sdcore_fsm_next_value_ce0 <= 1'd1;
                sdcore_cmd_error_sdcore_fsm_next_value4 <= 1'd0;
                sdcore_cmd_error_sdcore_fsm_next_value_ce4 <= 1'd1;
                sdcore_cmd_timeout_sdcore_fsm_next_value5 <= 1'd0;
                sdcore_cmd_timeout_sdcore_fsm_next_value_ce5 <= 1'd1;
                sdcore_data_done_sdcore_fsm_next_value1 <= 1'd0;
                sdcore_data_done_sdcore_fsm_next_value_ce1 <= 1'd1;
                sdcore_data_error_sdcore_fsm_next_value6 <= 1'd0;
                sdcore_data_error_sdcore_fsm_next_value_ce6 <= 1'd1;
                sdcore_data_timeout_sdcore_fsm_next_value7 <= 1'd0;
                sdcore_data_timeout_sdcore_fsm_next_value_ce7 <= 1'd1;
                soclinux_sdcore_fsm_next_state <= 1'd1;
            end
        end
    endcase
end
assign sdblock2mem_start = (sdblock2mem_sink_sink_valid0 & sdblock2mem_sink_sink_first);
always @(*) begin
    sdblock2mem_fifo_sink_first <= 1'd0;
    sdblock2mem_sink_sink_ready0 <= 1'd0;
    sdblock2mem_fifo_sink_last <= 1'd0;
    sdblock2mem_fifo_sink_payload_data <= 8'd0;
    sdblock2mem_fifo_sink_valid <= 1'd0;
    if ((sdblock2mem_wishbonedmawriter_enable_storage & (sdblock2mem_start | sdblock2mem_connect))) begin
        sdblock2mem_fifo_sink_valid <= sdblock2mem_sink_sink_valid0;
        sdblock2mem_sink_sink_ready0 <= sdblock2mem_fifo_sink_ready;
        sdblock2mem_fifo_sink_first <= sdblock2mem_sink_sink_first;
        sdblock2mem_fifo_sink_last <= sdblock2mem_sink_sink_last0;
        sdblock2mem_fifo_sink_payload_data <= sdblock2mem_sink_sink_payload_data0;
    end else begin
        sdblock2mem_sink_sink_ready0 <= 1'd1;
    end
end
assign sdblock2mem_converter_sink_valid = sdblock2mem_fifo_source_valid;
assign sdblock2mem_fifo_source_ready = sdblock2mem_converter_sink_ready;
assign sdblock2mem_converter_sink_first = sdblock2mem_fifo_source_first;
assign sdblock2mem_converter_sink_last = sdblock2mem_fifo_source_last;
assign sdblock2mem_converter_sink_payload_data = sdblock2mem_fifo_source_payload_data;
assign sdblock2mem_wishbonedmawriter_sink_valid = sdblock2mem_source_source_valid;
assign sdblock2mem_source_source_ready = sdblock2mem_wishbonedmawriter_sink_ready;
assign sdblock2mem_wishbonedmawriter_sink_first = sdblock2mem_source_source_first;
assign sdblock2mem_wishbonedmawriter_sink_last = sdblock2mem_source_source_last;
assign sdblock2mem_wishbonedmawriter_sink_payload_data = sdblock2mem_source_source_payload_data;
assign sdblock2mem_fifo_syncfifo_din = {sdblock2mem_fifo_fifo_in_last, sdblock2mem_fifo_fifo_in_first, sdblock2mem_fifo_fifo_in_payload_data};
assign {sdblock2mem_fifo_fifo_out_last, sdblock2mem_fifo_fifo_out_first, sdblock2mem_fifo_fifo_out_payload_data} = sdblock2mem_fifo_syncfifo_dout;
assign sdblock2mem_fifo_sink_ready = sdblock2mem_fifo_syncfifo_writable;
assign sdblock2mem_fifo_syncfifo_we = sdblock2mem_fifo_sink_valid;
assign sdblock2mem_fifo_fifo_in_first = sdblock2mem_fifo_sink_first;
assign sdblock2mem_fifo_fifo_in_last = sdblock2mem_fifo_sink_last;
assign sdblock2mem_fifo_fifo_in_payload_data = sdblock2mem_fifo_sink_payload_data;
assign sdblock2mem_fifo_source_valid = sdblock2mem_fifo_readable;
assign sdblock2mem_fifo_source_first = sdblock2mem_fifo_fifo_out_first;
assign sdblock2mem_fifo_source_last = sdblock2mem_fifo_fifo_out_last;
assign sdblock2mem_fifo_source_payload_data = sdblock2mem_fifo_fifo_out_payload_data;
assign sdblock2mem_fifo_re = sdblock2mem_fifo_source_ready;
assign sdblock2mem_fifo_syncfifo_re = (sdblock2mem_fifo_syncfifo_readable & ((~sdblock2mem_fifo_readable) | sdblock2mem_fifo_re));
assign sdblock2mem_fifo_level1 = (sdblock2mem_fifo_level0 + sdblock2mem_fifo_readable);
always @(*) begin
    sdblock2mem_fifo_wrport_adr <= 9'd0;
    if (sdblock2mem_fifo_replace) begin
        sdblock2mem_fifo_wrport_adr <= (sdblock2mem_fifo_produce - 1'd1);
    end else begin
        sdblock2mem_fifo_wrport_adr <= sdblock2mem_fifo_produce;
    end
end
assign sdblock2mem_fifo_wrport_dat_w = sdblock2mem_fifo_syncfifo_din;
assign sdblock2mem_fifo_wrport_we = (sdblock2mem_fifo_syncfifo_we & (sdblock2mem_fifo_syncfifo_writable | sdblock2mem_fifo_replace));
assign sdblock2mem_fifo_do_read = (sdblock2mem_fifo_syncfifo_readable & sdblock2mem_fifo_syncfifo_re);
assign sdblock2mem_fifo_rdport_adr = sdblock2mem_fifo_consume;
assign sdblock2mem_fifo_syncfifo_dout = sdblock2mem_fifo_rdport_dat_r;
assign sdblock2mem_fifo_rdport_re = sdblock2mem_fifo_do_read;
assign sdblock2mem_fifo_syncfifo_writable = (sdblock2mem_fifo_level0 != 10'd512);
assign sdblock2mem_fifo_syncfifo_readable = (sdblock2mem_fifo_level0 != 1'd0);
assign sdblock2mem_source_source_valid = sdblock2mem_converter_source_valid;
assign sdblock2mem_converter_source_ready = sdblock2mem_source_source_ready;
assign sdblock2mem_source_source_first = sdblock2mem_converter_source_first;
assign sdblock2mem_source_source_last = sdblock2mem_converter_source_last;
assign sdblock2mem_source_source_payload_data = sdblock2mem_converter_source_payload_data;
assign sdblock2mem_converter_sink_ready = ((~sdblock2mem_converter_strobe_all) | sdblock2mem_converter_source_ready);
assign sdblock2mem_converter_source_valid = sdblock2mem_converter_strobe_all;
assign sdblock2mem_converter_load_part = (sdblock2mem_converter_sink_valid & sdblock2mem_converter_sink_ready);
assign interface0_bus_stb = sdblock2mem_sink_sink_valid1;
assign interface0_bus_cyc = sdblock2mem_sink_sink_valid1;
assign interface0_bus_we = 1'd1;
assign interface0_bus_sel = 4'd15;
assign interface0_bus_adr = sdblock2mem_sink_sink_payload_address;
assign interface0_bus_dat_w = {sdblock2mem_sink_sink_payload_data1[7:0], sdblock2mem_sink_sink_payload_data1[15:8], sdblock2mem_sink_sink_payload_data1[23:16], sdblock2mem_sink_sink_payload_data1[31:24]};
assign sdblock2mem_sink_sink_ready1 = interface0_bus_ack;
assign sdblock2mem_wishbonedmawriter_base = sdblock2mem_wishbonedmawriter_base_storage[63:2];
assign sdblock2mem_wishbonedmawriter_length = sdblock2mem_wishbonedmawriter_length_storage[31:2];
assign sdblock2mem_wishbonedmawriter_offset_status = sdblock2mem_wishbonedmawriter_offset;
assign sdblock2mem_wishbonedmawriter_reset = (~sdblock2mem_wishbonedmawriter_enable_storage);
always @(*) begin
    sdblock2mem_sink_sink_valid1 <= 1'd0;
    sdblock2mem_sink_sink_last1 <= 1'd0;
    sdblock2mem_sink_sink_payload_address <= 32'd0;
    sdblock2mem_sink_sink_payload_data1 <= 32'd0;
    sdblock2mem_wishbonedmawriter_done_status <= 1'd0;
    soclinux_sdblock2memdma_next_state <= 2'd0;
    sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value <= 32'd0;
    sdblock2mem_wishbonedmawriter_sink_ready <= 1'd0;
    sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value_ce <= 1'd0;
    soclinux_sdblock2memdma_next_state <= soclinux_sdblock2memdma_state;
    case (soclinux_sdblock2memdma_state)
        1'd1: begin
            sdblock2mem_sink_sink_valid1 <= sdblock2mem_wishbonedmawriter_sink_valid;
            sdblock2mem_sink_sink_last1 <= (sdblock2mem_wishbonedmawriter_sink_last | ((sdblock2mem_wishbonedmawriter_offset + 1'd1) == sdblock2mem_wishbonedmawriter_length));
            sdblock2mem_sink_sink_payload_address <= (sdblock2mem_wishbonedmawriter_base + sdblock2mem_wishbonedmawriter_offset);
            sdblock2mem_sink_sink_payload_data1 <= sdblock2mem_wishbonedmawriter_sink_payload_data;
            sdblock2mem_wishbonedmawriter_sink_ready <= sdblock2mem_sink_sink_ready1;
            if ((sdblock2mem_wishbonedmawriter_sink_valid & sdblock2mem_wishbonedmawriter_sink_ready)) begin
                sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value <= (sdblock2mem_wishbonedmawriter_offset + 1'd1);
                sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value_ce <= 1'd1;
                if (sdblock2mem_sink_sink_last1) begin
                    if (sdblock2mem_wishbonedmawriter_loop_storage) begin
                        sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value <= 1'd0;
                        sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value_ce <= 1'd1;
                    end else begin
                        soclinux_sdblock2memdma_next_state <= 2'd2;
                    end
                end
            end
        end
        2'd2: begin
            sdblock2mem_wishbonedmawriter_done_status <= 1'd1;
        end
        default: begin
            sdblock2mem_wishbonedmawriter_sink_ready <= 1'd1;
            sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value <= 1'd0;
            sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value_ce <= 1'd1;
            soclinux_sdblock2memdma_next_state <= 1'd1;
        end
    endcase
end
assign sdmem2block_converter_sink_valid = sdmem2block_dma_source_valid;
assign sdmem2block_dma_source_ready = sdmem2block_converter_sink_ready;
assign sdmem2block_converter_sink_first = sdmem2block_dma_source_first;
assign sdmem2block_converter_sink_last = sdmem2block_dma_source_last;
assign sdmem2block_converter_sink_payload_data = sdmem2block_dma_source_payload_data;
assign sdmem2block_fifo_sink_valid = sdmem2block_source_source_valid1;
assign sdmem2block_source_source_ready1 = sdmem2block_fifo_sink_ready;
assign sdmem2block_fifo_sink_first = sdmem2block_source_source_first1;
assign sdmem2block_fifo_sink_last = sdmem2block_source_source_last1;
assign sdmem2block_fifo_sink_payload_data = sdmem2block_source_source_payload_data1;
assign sdmem2block_source_source_valid0 = sdmem2block_fifo_source_valid;
assign sdmem2block_fifo_source_ready = sdmem2block_source_source_ready0;
assign sdmem2block_source_source_first0 = sdmem2block_fifo_source_first;
assign sdmem2block_source_source_payload_data0 = sdmem2block_fifo_source_payload_data;
always @(*) begin
    sdmem2block_source_source_last0 <= 1'd0;
    sdmem2block_source_source_last0 <= sdmem2block_fifo_source_last;
    if ((sdmem2block_count == 9'd511)) begin
        sdmem2block_source_source_last0 <= 1'd1;
    end
end
assign sdmem2block_dma_base = sdmem2block_dma_base_storage[63:2];
assign sdmem2block_dma_length = sdmem2block_dma_length_storage[31:2];
assign sdmem2block_dma_offset_status = sdmem2block_dma_offset;
assign sdmem2block_dma_reset = (~sdmem2block_dma_enable_storage);
always @(*) begin
    sdmem2block_dma_data_sdmem2blockdma_fsm_next_value_ce <= 1'd0;
    interface1_bus_adr <= 32'd0;
    sdmem2block_dma_sink_ready <= 1'd0;
    interface1_bus_sel <= 4'd0;
    interface1_bus_cyc <= 1'd0;
    soclinux_sdmem2blockdma_fsm_next_state <= 1'd0;
    interface1_bus_stb <= 1'd0;
    sdmem2block_dma_data_sdmem2blockdma_fsm_next_value <= 32'd0;
    sdmem2block_dma_source_valid <= 1'd0;
    interface1_bus_we <= 1'd0;
    sdmem2block_dma_source_last <= 1'd0;
    sdmem2block_dma_source_payload_data <= 32'd0;
    soclinux_sdmem2blockdma_fsm_next_state <= soclinux_sdmem2blockdma_fsm_state;
    case (soclinux_sdmem2blockdma_fsm_state)
        1'd1: begin
            sdmem2block_dma_source_valid <= 1'd1;
            sdmem2block_dma_source_last <= sdmem2block_dma_sink_last;
            sdmem2block_dma_source_payload_data <= sdmem2block_dma_data;
            if (sdmem2block_dma_source_ready) begin
                sdmem2block_dma_sink_ready <= 1'd1;
                soclinux_sdmem2blockdma_fsm_next_state <= 1'd0;
            end
        end
        default: begin
            interface1_bus_stb <= sdmem2block_dma_sink_valid;
            interface1_bus_cyc <= sdmem2block_dma_sink_valid;
            interface1_bus_we <= 1'd0;
            interface1_bus_sel <= 4'd15;
            interface1_bus_adr <= sdmem2block_dma_sink_payload_address;
            if ((interface1_bus_stb & interface1_bus_ack)) begin
                sdmem2block_dma_data_sdmem2blockdma_fsm_next_value <= {interface1_bus_dat_r[7:0], interface1_bus_dat_r[15:8], interface1_bus_dat_r[23:16], interface1_bus_dat_r[31:24]};
                sdmem2block_dma_data_sdmem2blockdma_fsm_next_value_ce <= 1'd1;
                soclinux_sdmem2blockdma_fsm_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    sdmem2block_dma_sink_last <= 1'd0;
    soclinux_sdmem2blockdma_resetinserter_next_state <= 2'd0;
    sdmem2block_dma_sink_payload_address <= 32'd0;
    sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value <= 32'd0;
    sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value_ce <= 1'd0;
    sdmem2block_dma_done_status <= 1'd0;
    sdmem2block_dma_sink_valid <= 1'd0;
    soclinux_sdmem2blockdma_resetinserter_next_state <= soclinux_sdmem2blockdma_resetinserter_state;
    case (soclinux_sdmem2blockdma_resetinserter_state)
        1'd1: begin
            sdmem2block_dma_sink_valid <= 1'd1;
            sdmem2block_dma_sink_last <= (sdmem2block_dma_offset == (sdmem2block_dma_length - 1'd1));
            sdmem2block_dma_sink_payload_address <= (sdmem2block_dma_base + sdmem2block_dma_offset);
            if (sdmem2block_dma_sink_ready) begin
                sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value <= (sdmem2block_dma_offset + 1'd1);
                sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value_ce <= 1'd1;
                if (sdmem2block_dma_sink_last) begin
                    if (sdmem2block_dma_loop_storage) begin
                        sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value <= 1'd0;
                        sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value_ce <= 1'd1;
                    end else begin
                        soclinux_sdmem2blockdma_resetinserter_next_state <= 2'd2;
                    end
                end
            end
        end
        2'd2: begin
            sdmem2block_dma_done_status <= 1'd1;
        end
        default: begin
            sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value <= 1'd0;
            sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value_ce <= 1'd1;
            soclinux_sdmem2blockdma_resetinserter_next_state <= 1'd1;
        end
    endcase
end
assign sdmem2block_source_source_valid1 = sdmem2block_converter_source_valid;
assign sdmem2block_converter_source_ready = sdmem2block_source_source_ready1;
assign sdmem2block_source_source_first1 = sdmem2block_converter_source_first;
assign sdmem2block_source_source_last1 = sdmem2block_converter_source_last;
assign sdmem2block_source_source_payload_data1 = sdmem2block_converter_source_payload_data;
assign sdmem2block_converter_first = (sdmem2block_converter_mux == 1'd0);
assign sdmem2block_converter_last = (sdmem2block_converter_mux == 2'd3);
assign sdmem2block_converter_source_valid = sdmem2block_converter_sink_valid;
assign sdmem2block_converter_source_first = (sdmem2block_converter_sink_first & sdmem2block_converter_first);
assign sdmem2block_converter_source_last = (sdmem2block_converter_sink_last & sdmem2block_converter_last);
assign sdmem2block_converter_sink_ready = (sdmem2block_converter_last & sdmem2block_converter_source_ready);
always @(*) begin
    sdmem2block_converter_source_payload_data <= 8'd0;
    case (sdmem2block_converter_mux)
        1'd0: begin
            sdmem2block_converter_source_payload_data <= sdmem2block_converter_sink_payload_data[31:24];
        end
        1'd1: begin
            sdmem2block_converter_source_payload_data <= sdmem2block_converter_sink_payload_data[23:16];
        end
        2'd2: begin
            sdmem2block_converter_source_payload_data <= sdmem2block_converter_sink_payload_data[15:8];
        end
        default: begin
            sdmem2block_converter_source_payload_data <= sdmem2block_converter_sink_payload_data[7:0];
        end
    endcase
end
assign sdmem2block_converter_source_payload_valid_token_count = sdmem2block_converter_last;
assign sdmem2block_fifo_syncfifo_din = {sdmem2block_fifo_fifo_in_last, sdmem2block_fifo_fifo_in_first, sdmem2block_fifo_fifo_in_payload_data};
assign {sdmem2block_fifo_fifo_out_last, sdmem2block_fifo_fifo_out_first, sdmem2block_fifo_fifo_out_payload_data} = sdmem2block_fifo_syncfifo_dout;
assign sdmem2block_fifo_sink_ready = sdmem2block_fifo_syncfifo_writable;
assign sdmem2block_fifo_syncfifo_we = sdmem2block_fifo_sink_valid;
assign sdmem2block_fifo_fifo_in_first = sdmem2block_fifo_sink_first;
assign sdmem2block_fifo_fifo_in_last = sdmem2block_fifo_sink_last;
assign sdmem2block_fifo_fifo_in_payload_data = sdmem2block_fifo_sink_payload_data;
assign sdmem2block_fifo_source_valid = sdmem2block_fifo_readable;
assign sdmem2block_fifo_source_first = sdmem2block_fifo_fifo_out_first;
assign sdmem2block_fifo_source_last = sdmem2block_fifo_fifo_out_last;
assign sdmem2block_fifo_source_payload_data = sdmem2block_fifo_fifo_out_payload_data;
assign sdmem2block_fifo_re = sdmem2block_fifo_source_ready;
assign sdmem2block_fifo_syncfifo_re = (sdmem2block_fifo_syncfifo_readable & ((~sdmem2block_fifo_readable) | sdmem2block_fifo_re));
assign sdmem2block_fifo_level1 = (sdmem2block_fifo_level0 + sdmem2block_fifo_readable);
always @(*) begin
    sdmem2block_fifo_wrport_adr <= 9'd0;
    if (sdmem2block_fifo_replace) begin
        sdmem2block_fifo_wrport_adr <= (sdmem2block_fifo_produce - 1'd1);
    end else begin
        sdmem2block_fifo_wrport_adr <= sdmem2block_fifo_produce;
    end
end
assign sdmem2block_fifo_wrport_dat_w = sdmem2block_fifo_syncfifo_din;
assign sdmem2block_fifo_wrport_we = (sdmem2block_fifo_syncfifo_we & (sdmem2block_fifo_syncfifo_writable | sdmem2block_fifo_replace));
assign sdmem2block_fifo_do_read = (sdmem2block_fifo_syncfifo_readable & sdmem2block_fifo_syncfifo_re);
assign sdmem2block_fifo_rdport_adr = sdmem2block_fifo_consume;
assign sdmem2block_fifo_syncfifo_dout = sdmem2block_fifo_rdport_dat_r;
assign sdmem2block_fifo_rdport_re = sdmem2block_fifo_do_read;
assign sdmem2block_fifo_syncfifo_writable = (sdmem2block_fifo_level0 != 10'd512);
assign sdmem2block_fifo_syncfifo_readable = (sdmem2block_fifo_level0 != 1'd0);
assign eventmanager_card_detect0 = card_detect_status1;
assign eventmanager_card_detect1 = card_detect_pending;
always @(*) begin
    card_detect_clear <= 1'd0;
    if ((eventmanager_pending_re & eventmanager_pending_r[0])) begin
        card_detect_clear <= 1'd1;
    end
end
assign eventmanager_block2mem_dma0 = block2mem_dma_status;
assign eventmanager_block2mem_dma1 = block2mem_dma_pending;
always @(*) begin
    block2mem_dma_clear <= 1'd0;
    if ((eventmanager_pending_re & eventmanager_pending_r[1])) begin
        block2mem_dma_clear <= 1'd1;
    end
end
assign eventmanager_mem2block_dma0 = mem2block_dma_status;
assign eventmanager_mem2block_dma1 = mem2block_dma_pending;
always @(*) begin
    mem2block_dma_clear <= 1'd0;
    if ((eventmanager_pending_re & eventmanager_pending_r[2])) begin
        mem2block_dma_clear <= 1'd1;
    end
end
assign eventmanager_cmd_done0 = cmd_done_status;
assign eventmanager_cmd_done1 = cmd_done_pending;
always @(*) begin
    cmd_done_clear <= 1'd0;
    if ((eventmanager_pending_re & eventmanager_pending_r[3])) begin
        cmd_done_clear <= 1'd1;
    end
end
assign sdirq_irq = ((((eventmanager_pending_status[0] & eventmanager_enable_storage[0]) | (eventmanager_pending_status[1] & eventmanager_enable_storage[1])) | (eventmanager_pending_status[2] & eventmanager_enable_storage[2])) | (eventmanager_pending_status[3] & eventmanager_enable_storage[3]));
assign card_detect_status1 = 1'd0;
assign block2mem_dma_status = 1'd0;
assign mem2block_dma_status = 1'd0;
assign cmd_done_status = cmd_done_trigger;
assign cmd_done_pending = cmd_done_trigger;
always @(*) begin
    dadr <= 7'd0;
    den <= 1'd0;
    if ((~drp_en)) begin
        den <= eoc;
        dadr <= channel;
    end
end
assign snn_3x2_next_core_en_we = 1'd1;
assign snn_3x2_grid_state_we = 1'd1;
assign snn_3x2_tick_ready_we = 1'd1;
assign snn_3x2_complete_we = 1'd1;
assign snn_3x2_spike_out0_we = 1'd1;
assign snn_3x2_spike_out1_we = 1'd1;
assign snn_3x2_spike_out2_we = 1'd1;
assign snn_3x2_spike_out3_we = 1'd1;
assign snn_3x2_spike_out4_we = 1'd1;
assign snn_3x2_spike_out5_we = 1'd1;
assign snn_3x2_spike_out6_we = 1'd1;
assign snn_3x2_spike_out7_we = 1'd1;
assign snn_3x2_msb_param_snn_we = 1'd1;
assign snn_3x2_packet_out_we = 1'd1;
assign snn_3x2_param_wdata = {snn_3x2_param11_storage, snn_3x2_param10_storage, snn_3x2_param9_storage, snn_3x2_param8_storage, snn_3x2_param7_storage, snn_3x2_param6_storage, snn_3x2_param5_storage, snn_3x2_param4_storage, snn_3x2_param3_storage, snn_3x2_param2_storage, snn_3x2_param1_storage, snn_3x2_param0_storage};
assign {snn_3x2_spike_out7_dat_w, snn_3x2_spike_out6_dat_w, snn_3x2_spike_out5_dat_w, snn_3x2_spike_out4_dat_w, snn_3x2_spike_out3_dat_w, snn_3x2_spike_out2_dat_w, snn_3x2_spike_out1_dat_w, snn_3x2_spike_out0_dat_w} = snn_3x2_spike_out;
always @(*) begin
    soclinux_dat_w_wishbone2csr_next_value_ce0 <= 1'd0;
    soclinux_wishbone_dat_r <= 32'd0;
    soclinux_adr_wishbone2csr_next_value1 <= 14'd0;
    soclinux_adr_wishbone2csr_next_value_ce1 <= 1'd0;
    soclinux_we_wishbone2csr_next_value2 <= 1'd0;
    soclinux_we_wishbone2csr_next_value_ce2 <= 1'd0;
    soclinux_wishbone_ack <= 1'd0;
    soclinux_wishbone2csr_next_state <= 2'd0;
    soclinux_dat_w_wishbone2csr_next_value0 <= 32'd0;
    soclinux_wishbone2csr_next_state <= soclinux_wishbone2csr_state;
    case (soclinux_wishbone2csr_state)
        1'd1: begin
            soclinux_adr_wishbone2csr_next_value1 <= 1'd0;
            soclinux_adr_wishbone2csr_next_value_ce1 <= 1'd1;
            soclinux_we_wishbone2csr_next_value2 <= 1'd0;
            soclinux_we_wishbone2csr_next_value_ce2 <= 1'd1;
            soclinux_wishbone2csr_next_state <= 2'd2;
        end
        2'd2: begin
            soclinux_wishbone_ack <= 1'd1;
            soclinux_wishbone_dat_r <= soclinux_dat_r;
            soclinux_wishbone2csr_next_state <= 1'd0;
        end
        default: begin
            soclinux_dat_w_wishbone2csr_next_value0 <= soclinux_wishbone_dat_w;
            soclinux_dat_w_wishbone2csr_next_value_ce0 <= 1'd1;
            if ((soclinux_wishbone_cyc & soclinux_wishbone_stb)) begin
                soclinux_adr_wishbone2csr_next_value1 <= soclinux_wishbone_adr;
                soclinux_adr_wishbone2csr_next_value_ce1 <= 1'd1;
                soclinux_we_wishbone2csr_next_value2 <= (soclinux_wishbone_we & (soclinux_wishbone_sel != 1'd0));
                soclinux_we_wishbone2csr_next_value_ce2 <= 1'd1;
                soclinux_wishbone2csr_next_state <= 1'd1;
            end
        end
    endcase
end
assign csr_bankarray_csrbank0_sel = (csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd1);
assign csr_bankarray_csrbank0_reset0_r = csr_bankarray_interface0_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank0_reset0_we <= 1'd0;
    csr_bankarray_csrbank0_reset0_re <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank0_reset0_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_reset0_we <= (~csr_bankarray_interface0_bank_bus_we);
    end
end
assign csr_bankarray_csrbank0_scratch0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank0_scratch0_we <= 1'd0;
    csr_bankarray_csrbank0_scratch0_re <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank0_scratch0_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_scratch0_we <= (~csr_bankarray_interface0_bank_bus_we);
    end
end
assign csr_bankarray_csrbank0_bus_errors_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank0_bus_errors_re <= 1'd0;
    csr_bankarray_csrbank0_bus_errors_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank0_bus_errors_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_bus_errors_we <= (~csr_bankarray_interface0_bank_bus_we);
    end
end
assign csr_bankarray_csrbank1_sel = (csr_bankarray_interface1_bank_bus_adr[13:9] == 3'd4);
assign csr_bankarray_csrbank1_rst0_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank1_rst0_re <= 1'd0;
    csr_bankarray_csrbank1_rst0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank1_rst0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_rst0_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign csr_bankarray_csrbank1_dly_sel0_r = csr_bankarray_interface1_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank1_dly_sel0_re <= 1'd0;
    csr_bankarray_csrbank1_dly_sel0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank1_dly_sel0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_dly_sel0_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign csr_bankarray_csrbank1_half_sys8x_taps0_r = csr_bankarray_interface1_bank_bus_dat_w[4:0];
always @(*) begin
    csr_bankarray_csrbank1_half_sys8x_taps0_we <= 1'd0;
    csr_bankarray_csrbank1_half_sys8x_taps0_re <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank1_half_sys8x_taps0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_half_sys8x_taps0_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign csr_bankarray_csrbank1_wlevel_en0_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank1_wlevel_en0_re <= 1'd0;
    csr_bankarray_csrbank1_wlevel_en0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank1_wlevel_en0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_wlevel_en0_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_wlevel_strobe_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_wlevel_strobe_we <= 1'd0;
    k7ddrphy_wlevel_strobe_re <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd4))) begin
        k7ddrphy_wlevel_strobe_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_wlevel_strobe_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_cdly_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_cdly_rst_re <= 1'd0;
    k7ddrphy_cdly_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd5))) begin
        k7ddrphy_cdly_rst_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_cdly_rst_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_cdly_inc_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_cdly_inc_re <= 1'd0;
    k7ddrphy_cdly_inc_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd6))) begin
        k7ddrphy_cdly_inc_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_cdly_inc_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_rdly_dq_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_rdly_dq_rst_re <= 1'd0;
    k7ddrphy_rdly_dq_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd7))) begin
        k7ddrphy_rdly_dq_rst_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_rdly_dq_rst_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_rdly_dq_inc_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_rdly_dq_inc_re <= 1'd0;
    k7ddrphy_rdly_dq_inc_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd8))) begin
        k7ddrphy_rdly_dq_inc_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_rdly_dq_inc_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_rdly_dq_bitslip_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_rdly_dq_bitslip_rst_we <= 1'd0;
    k7ddrphy_rdly_dq_bitslip_rst_re <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd9))) begin
        k7ddrphy_rdly_dq_bitslip_rst_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_rdly_dq_bitslip_rst_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_rdly_dq_bitslip_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_rdly_dq_bitslip_we <= 1'd0;
    k7ddrphy_rdly_dq_bitslip_re <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd10))) begin
        k7ddrphy_rdly_dq_bitslip_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_rdly_dq_bitslip_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_wdly_dq_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_wdly_dq_rst_we <= 1'd0;
    k7ddrphy_wdly_dq_rst_re <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd11))) begin
        k7ddrphy_wdly_dq_rst_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_wdly_dq_rst_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_wdly_dq_inc_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_wdly_dq_inc_we <= 1'd0;
    k7ddrphy_wdly_dq_inc_re <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd12))) begin
        k7ddrphy_wdly_dq_inc_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_wdly_dq_inc_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_wdly_dqs_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_wdly_dqs_rst_re <= 1'd0;
    k7ddrphy_wdly_dqs_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd13))) begin
        k7ddrphy_wdly_dqs_rst_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_wdly_dqs_rst_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_wdly_dqs_inc_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_wdly_dqs_inc_re <= 1'd0;
    k7ddrphy_wdly_dqs_inc_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd14))) begin
        k7ddrphy_wdly_dqs_inc_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_wdly_dqs_inc_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_wdly_dq_bitslip_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_wdly_dq_bitslip_rst_re <= 1'd0;
    k7ddrphy_wdly_dq_bitslip_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd15))) begin
        k7ddrphy_wdly_dq_bitslip_rst_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_wdly_dq_bitslip_rst_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign k7ddrphy_wdly_dq_bitslip_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    k7ddrphy_wdly_dq_bitslip_re <= 1'd0;
    k7ddrphy_wdly_dq_bitslip_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 5'd16))) begin
        k7ddrphy_wdly_dq_bitslip_re <= csr_bankarray_interface1_bank_bus_we;
        k7ddrphy_wdly_dq_bitslip_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign csr_bankarray_csrbank1_rdphase0_r = csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank1_rdphase0_we <= 1'd0;
    csr_bankarray_csrbank1_rdphase0_re <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 5'd17))) begin
        csr_bankarray_csrbank1_rdphase0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_rdphase0_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign csr_bankarray_csrbank1_wrphase0_r = csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank1_wrphase0_we <= 1'd0;
    csr_bankarray_csrbank1_wrphase0_re <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 5'd18))) begin
        csr_bankarray_csrbank1_wrphase0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_wrphase0_we <= (~csr_bankarray_interface1_bank_bus_we);
    end
end
assign csr_bankarray_csrbank1_rst0_w = k7ddrphy_rst_storage;
assign csr_bankarray_csrbank1_dly_sel0_w = k7ddrphy_dly_sel_storage[7:0];
assign csr_bankarray_csrbank1_half_sys8x_taps0_w = k7ddrphy_half_sys8x_taps_storage[4:0];
assign csr_bankarray_csrbank1_wlevel_en0_w = k7ddrphy_wlevel_en_storage;
assign csr_bankarray_csrbank1_rdphase0_w = k7ddrphy_rdphase_storage[1:0];
assign csr_bankarray_csrbank1_wrphase0_w = k7ddrphy_wrphase_storage[1:0];
assign csr_bankarray_csrbank2_sel = (csr_bankarray_interface2_bank_bus_adr[13:9] == 3'd5);
assign csr_bankarray_csrbank2_sram_writer_slot_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_sram_writer_slot_we <= 1'd0;
    csr_bankarray_csrbank2_sram_writer_slot_re <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank2_sram_writer_slot_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_writer_slot_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_writer_length_r = csr_bankarray_interface2_bank_bus_dat_w[10:0];
always @(*) begin
    csr_bankarray_csrbank2_sram_writer_length_re <= 1'd0;
    csr_bankarray_csrbank2_sram_writer_length_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank2_sram_writer_length_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_writer_length_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_writer_errors_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_sram_writer_errors_re <= 1'd0;
    csr_bankarray_csrbank2_sram_writer_errors_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank2_sram_writer_errors_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_writer_errors_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_writer_ev_status_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_sram_writer_ev_status_we <= 1'd0;
    csr_bankarray_csrbank2_sram_writer_ev_status_re <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank2_sram_writer_ev_status_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_writer_ev_status_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_writer_ev_pending_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_sram_writer_ev_pending_we <= 1'd0;
    csr_bankarray_csrbank2_sram_writer_ev_pending_re <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank2_sram_writer_ev_pending_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_writer_ev_pending_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_writer_ev_enable0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_sram_writer_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank2_sram_writer_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank2_sram_writer_ev_enable0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_writer_ev_enable0_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign soclinux_ethmac_start_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    soclinux_ethmac_start_re <= 1'd0;
    soclinux_ethmac_start_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
        soclinux_ethmac_start_re <= csr_bankarray_interface2_bank_bus_we;
        soclinux_ethmac_start_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_reader_ready_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_sram_reader_ready_we <= 1'd0;
    csr_bankarray_csrbank2_sram_reader_ready_re <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank2_sram_reader_ready_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_reader_ready_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_reader_level_r = csr_bankarray_interface2_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank2_sram_reader_level_we <= 1'd0;
    csr_bankarray_csrbank2_sram_reader_level_re <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd8))) begin
        csr_bankarray_csrbank2_sram_reader_level_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_reader_level_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_reader_slot0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_sram_reader_slot0_re <= 1'd0;
    csr_bankarray_csrbank2_sram_reader_slot0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd9))) begin
        csr_bankarray_csrbank2_sram_reader_slot0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_reader_slot0_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_reader_length0_r = csr_bankarray_interface2_bank_bus_dat_w[10:0];
always @(*) begin
    csr_bankarray_csrbank2_sram_reader_length0_re <= 1'd0;
    csr_bankarray_csrbank2_sram_reader_length0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd10))) begin
        csr_bankarray_csrbank2_sram_reader_length0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_reader_length0_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_reader_ev_status_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_sram_reader_ev_status_we <= 1'd0;
    csr_bankarray_csrbank2_sram_reader_ev_status_re <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd11))) begin
        csr_bankarray_csrbank2_sram_reader_ev_status_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_reader_ev_status_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_reader_ev_pending_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_sram_reader_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank2_sram_reader_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd12))) begin
        csr_bankarray_csrbank2_sram_reader_ev_pending_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_reader_ev_pending_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_reader_ev_enable0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_sram_reader_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank2_sram_reader_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd13))) begin
        csr_bankarray_csrbank2_sram_reader_ev_enable0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_sram_reader_ev_enable0_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_preamble_crc_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_preamble_crc_we <= 1'd0;
    csr_bankarray_csrbank2_preamble_crc_re <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd14))) begin
        csr_bankarray_csrbank2_preamble_crc_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_preamble_crc_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_rx_datapath_preamble_errors_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_rx_datapath_preamble_errors_re <= 1'd0;
    csr_bankarray_csrbank2_rx_datapath_preamble_errors_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd15))) begin
        csr_bankarray_csrbank2_rx_datapath_preamble_errors_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_rx_datapath_preamble_errors_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_rx_datapath_crc_errors_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_rx_datapath_crc_errors_re <= 1'd0;
    csr_bankarray_csrbank2_rx_datapath_crc_errors_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd16))) begin
        csr_bankarray_csrbank2_rx_datapath_crc_errors_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_rx_datapath_crc_errors_we <= (~csr_bankarray_interface2_bank_bus_we);
    end
end
assign csr_bankarray_csrbank2_sram_writer_slot_w = soclinux_ethmac_sram7_status;
assign soclinux_ethmac_sram8_we = csr_bankarray_csrbank2_sram_writer_slot_we;
assign csr_bankarray_csrbank2_sram_writer_length_w = soclinux_ethmac_sram10_status[10:0];
assign soclinux_ethmac_sram11_we = csr_bankarray_csrbank2_sram_writer_length_we;
assign csr_bankarray_csrbank2_sram_writer_errors_w = soclinux_ethmac_sram13_status[31:0];
assign soclinux_ethmac_sram14_we = csr_bankarray_csrbank2_sram_writer_errors_we;
assign soclinux_ethmac_sram22_status = soclinux_ethmac_sram21_available;
assign csr_bankarray_csrbank2_sram_writer_ev_status_w = soclinux_ethmac_sram22_status;
assign soclinux_ethmac_sram23_we = csr_bankarray_csrbank2_sram_writer_ev_status_we;
assign soclinux_ethmac_sram26_status = soclinux_ethmac_sram25_available;
assign csr_bankarray_csrbank2_sram_writer_ev_pending_w = soclinux_ethmac_sram26_status;
assign soclinux_ethmac_sram27_we = csr_bankarray_csrbank2_sram_writer_ev_pending_we;
assign soclinux_ethmac_sram30_available = soclinux_ethmac_sram31_storage;
assign csr_bankarray_csrbank2_sram_writer_ev_enable0_w = soclinux_ethmac_sram31_storage;
assign csr_bankarray_csrbank2_sram_reader_ready_w = soclinux_ethmac_sram94_status;
assign soclinux_ethmac_sram95_we = csr_bankarray_csrbank2_sram_reader_ready_we;
assign csr_bankarray_csrbank2_sram_reader_level_w = soclinux_ethmac_sram97_status[1:0];
assign soclinux_ethmac_sram98_we = csr_bankarray_csrbank2_sram_reader_level_we;
assign csr_bankarray_csrbank2_sram_reader_slot0_w = soclinux_ethmac_sram100_storage;
assign csr_bankarray_csrbank2_sram_reader_length0_w = soclinux_ethmac_sram102_storage[10:0];
assign soclinux_ethmac_sram110_status = soclinux_ethmac_sram109_event0;
assign csr_bankarray_csrbank2_sram_reader_ev_status_w = soclinux_ethmac_sram110_status;
assign soclinux_ethmac_sram111_we = csr_bankarray_csrbank2_sram_reader_ev_status_we;
assign soclinux_ethmac_sram114_status = soclinux_ethmac_sram113_event0;
assign csr_bankarray_csrbank2_sram_reader_ev_pending_w = soclinux_ethmac_sram114_status;
assign soclinux_ethmac_sram115_we = csr_bankarray_csrbank2_sram_reader_ev_pending_we;
assign soclinux_ethmac_sram118_event0 = soclinux_ethmac_sram119_storage;
assign csr_bankarray_csrbank2_sram_reader_ev_enable0_w = soclinux_ethmac_sram119_storage;
assign csr_bankarray_csrbank2_preamble_crc_w = soclinux_ethmac_status;
assign soclinux_ethmac_we = csr_bankarray_csrbank2_preamble_crc_we;
assign csr_bankarray_csrbank2_rx_datapath_preamble_errors_w = soclinux_ethmac_preamble_errors_status[31:0];
assign soclinux_ethmac_preamble_errors_we = csr_bankarray_csrbank2_rx_datapath_preamble_errors_we;
assign csr_bankarray_csrbank2_rx_datapath_crc_errors_w = soclinux_ethmac_crc_errors_status[31:0];
assign soclinux_ethmac_crc_errors_we = csr_bankarray_csrbank2_rx_datapath_crc_errors_we;
assign csr_bankarray_csrbank3_sel = (csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd6);
assign csr_bankarray_csrbank3_mode_detection_mode_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_mode_detection_mode_re <= 1'd0;
    csr_bankarray_csrbank3_mode_detection_mode_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank3_mode_detection_mode_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_mode_detection_mode_we <= (~csr_bankarray_interface3_bank_bus_we);
    end
end
assign csr_bankarray_csrbank3_crg_reset0_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_crg_reset0_we <= 1'd0;
    csr_bankarray_csrbank3_crg_reset0_re <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank3_crg_reset0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_crg_reset0_we <= (~csr_bankarray_interface3_bank_bus_we);
    end
end
assign csr_bankarray_csrbank3_mdio_w0_r = csr_bankarray_interface3_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank3_mdio_w0_we <= 1'd0;
    csr_bankarray_csrbank3_mdio_w0_re <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank3_mdio_w0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_mdio_w0_we <= (~csr_bankarray_interface3_bank_bus_we);
    end
end
assign csr_bankarray_csrbank3_mdio_r_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_mdio_r_re <= 1'd0;
    csr_bankarray_csrbank3_mdio_r_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank3_mdio_r_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_mdio_r_we <= (~csr_bankarray_interface3_bank_bus_we);
    end
end
assign csr_bankarray_csrbank3_mode_detection_mode_w = ethphy_mode_status;
assign ethphy_mode_we = csr_bankarray_csrbank3_mode_detection_mode_we;
assign csr_bankarray_csrbank3_crg_reset0_w = ethphy_reset_storage;
assign ethphy_mdc = ethphy__w_storage[0];
assign ethphy_oe = ethphy__w_storage[1];
assign ethphy_w = ethphy__w_storage[2];
assign csr_bankarray_csrbank3_mdio_w0_w = ethphy__w_storage[2:0];
assign csr_bankarray_csrbank3_mdio_r_w = ethphy__r_status;
assign ethphy__r_we = csr_bankarray_csrbank3_mdio_r_we;
assign csr_bankarray_sel = (csr_bankarray_sram_bus_adr[13:9] == 3'd7);
always @(*) begin
    csr_bankarray_sram_bus_dat_r <= 32'd0;
    if (csr_bankarray_sel_r) begin
        csr_bankarray_sram_bus_dat_r <= csr_bankarray_dat_r;
    end
end
assign csr_bankarray_adr = csr_bankarray_sram_bus_adr[4:0];
assign csr_bankarray_csrbank4_sel = (csr_bankarray_interface4_bank_bus_adr[13:9] == 4'd8);
assign csr_bankarray_csrbank4_out0_r = csr_bankarray_interface4_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank4_out0_we <= 1'd0;
    csr_bankarray_csrbank4_out0_re <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank4_out0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_out0_we <= (~csr_bankarray_interface4_bank_bus_we);
    end
end
assign csr_bankarray_csrbank4_out0_w = leds_storage[7:0];
assign csr_bankarray_csrbank5_sel = (csr_bankarray_interface5_bank_bus_adr[13:9] == 4'd9);
assign csr_bankarray_csrbank5_dma_base1_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_dma_base1_we <= 1'd0;
    csr_bankarray_csrbank5_dma_base1_re <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank5_dma_base1_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_dma_base1_we <= (~csr_bankarray_interface5_bank_bus_we);
    end
end
assign csr_bankarray_csrbank5_dma_base0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_dma_base0_re <= 1'd0;
    csr_bankarray_csrbank5_dma_base0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank5_dma_base0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_dma_base0_we <= (~csr_bankarray_interface5_bank_bus_we);
    end
end
assign csr_bankarray_csrbank5_dma_length0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_dma_length0_we <= 1'd0;
    csr_bankarray_csrbank5_dma_length0_re <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank5_dma_length0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_dma_length0_we <= (~csr_bankarray_interface5_bank_bus_we);
    end
end
assign csr_bankarray_csrbank5_dma_enable0_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_dma_enable0_we <= 1'd0;
    csr_bankarray_csrbank5_dma_enable0_re <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank5_dma_enable0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_dma_enable0_we <= (~csr_bankarray_interface5_bank_bus_we);
    end
end
assign csr_bankarray_csrbank5_dma_done_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_dma_done_re <= 1'd0;
    csr_bankarray_csrbank5_dma_done_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank5_dma_done_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_dma_done_we <= (~csr_bankarray_interface5_bank_bus_we);
    end
end
assign csr_bankarray_csrbank5_dma_loop0_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_dma_loop0_we <= 1'd0;
    csr_bankarray_csrbank5_dma_loop0_re <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank5_dma_loop0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_dma_loop0_we <= (~csr_bankarray_interface5_bank_bus_we);
    end
end
assign csr_bankarray_csrbank5_dma_offset_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_dma_offset_we <= 1'd0;
    csr_bankarray_csrbank5_dma_offset_re <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank5_dma_offset_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_dma_offset_we <= (~csr_bankarray_interface5_bank_bus_we);
    end
end
assign csr_bankarray_csrbank5_dma_base1_w = sdblock2mem_wishbonedmawriter_base_storage[63:32];
assign csr_bankarray_csrbank5_dma_base0_w = sdblock2mem_wishbonedmawriter_base_storage[31:0];
assign csr_bankarray_csrbank5_dma_length0_w = sdblock2mem_wishbonedmawriter_length_storage[31:0];
assign csr_bankarray_csrbank5_dma_enable0_w = sdblock2mem_wishbonedmawriter_enable_storage;
assign csr_bankarray_csrbank5_dma_done_w = sdblock2mem_wishbonedmawriter_done_status;
assign sdblock2mem_wishbonedmawriter_done_we = csr_bankarray_csrbank5_dma_done_we;
assign csr_bankarray_csrbank5_dma_loop0_w = sdblock2mem_wishbonedmawriter_loop_storage;
assign csr_bankarray_csrbank5_dma_offset_w = sdblock2mem_wishbonedmawriter_offset_status[31:0];
assign sdblock2mem_wishbonedmawriter_offset_we = csr_bankarray_csrbank5_dma_offset_we;
assign csr_bankarray_csrbank6_sel = (csr_bankarray_interface6_bank_bus_adr[13:9] == 4'd10);
assign csr_bankarray_csrbank6_cmd_argument0_r = csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank6_cmd_argument0_re <= 1'd0;
    csr_bankarray_csrbank6_cmd_argument0_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank6_cmd_argument0_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_cmd_argument0_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_cmd_command0_r = csr_bankarray_interface6_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank6_cmd_command0_we <= 1'd0;
    csr_bankarray_csrbank6_cmd_command0_re <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank6_cmd_command0_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_cmd_command0_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_cmd_send0_r = csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank6_cmd_send0_we <= 1'd0;
    csr_bankarray_csrbank6_cmd_send0_re <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank6_cmd_send0_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_cmd_send0_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_cmd_response3_r = csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank6_cmd_response3_re <= 1'd0;
    csr_bankarray_csrbank6_cmd_response3_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank6_cmd_response3_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_cmd_response3_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_cmd_response2_r = csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank6_cmd_response2_we <= 1'd0;
    csr_bankarray_csrbank6_cmd_response2_re <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank6_cmd_response2_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_cmd_response2_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_cmd_response1_r = csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank6_cmd_response1_we <= 1'd0;
    csr_bankarray_csrbank6_cmd_response1_re <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank6_cmd_response1_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_cmd_response1_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_cmd_response0_r = csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank6_cmd_response0_re <= 1'd0;
    csr_bankarray_csrbank6_cmd_response0_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank6_cmd_response0_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_cmd_response0_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_cmd_event_r = csr_bankarray_interface6_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank6_cmd_event_re <= 1'd0;
    csr_bankarray_csrbank6_cmd_event_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank6_cmd_event_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_cmd_event_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_data_event_r = csr_bankarray_interface6_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank6_data_event_we <= 1'd0;
    csr_bankarray_csrbank6_data_event_re <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd8))) begin
        csr_bankarray_csrbank6_data_event_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_data_event_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_block_length0_r = csr_bankarray_interface6_bank_bus_dat_w[9:0];
always @(*) begin
    csr_bankarray_csrbank6_block_length0_we <= 1'd0;
    csr_bankarray_csrbank6_block_length0_re <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd9))) begin
        csr_bankarray_csrbank6_block_length0_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_block_length0_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_block_count0_r = csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank6_block_count0_re <= 1'd0;
    csr_bankarray_csrbank6_block_count0_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd10))) begin
        csr_bankarray_csrbank6_block_count0_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_block_count0_we <= (~csr_bankarray_interface6_bank_bus_we);
    end
end
assign csr_bankarray_csrbank6_cmd_argument0_w = sdcore_cmd_argument_storage[31:0];
assign sdcore_csrfield_cmd_type = sdcore_cmd_command_storage[1:0];
assign sdcore_csrfield_data_type = sdcore_cmd_command_storage[6:5];
assign sdcore_csrfield_cmd = sdcore_cmd_command_storage[13:8];
assign csr_bankarray_csrbank6_cmd_command0_w = sdcore_cmd_command_storage[13:0];
assign csr_bankarray_csrbank6_cmd_send0_w = sdcore_cmd_send_storage;
assign csr_bankarray_csrbank6_cmd_response3_w = sdcore_cmd_response_status[127:96];
assign csr_bankarray_csrbank6_cmd_response2_w = sdcore_cmd_response_status[95:64];
assign csr_bankarray_csrbank6_cmd_response1_w = sdcore_cmd_response_status[63:32];
assign csr_bankarray_csrbank6_cmd_response0_w = sdcore_cmd_response_status[31:0];
assign sdcore_cmd_response_we = csr_bankarray_csrbank6_cmd_response0_we;
always @(*) begin
    sdcore_cmd_event_status <= 4'd0;
    sdcore_cmd_event_status[0] <= sdcore_csrfield_done0;
    sdcore_cmd_event_status[1] <= sdcore_csrfield_error0;
    sdcore_cmd_event_status[2] <= sdcore_csrfield_timeout0;
    sdcore_cmd_event_status[3] <= sdcore_csrfield_crc0;
end
assign csr_bankarray_csrbank6_cmd_event_w = sdcore_cmd_event_status[3:0];
assign sdcore_cmd_event_we = csr_bankarray_csrbank6_cmd_event_we;
always @(*) begin
    sdcore_data_event_status <= 4'd0;
    sdcore_data_event_status[0] <= sdcore_csrfield_done1;
    sdcore_data_event_status[1] <= sdcore_csrfield_error1;
    sdcore_data_event_status[2] <= sdcore_csrfield_timeout1;
    sdcore_data_event_status[3] <= sdcore_csrfield_crc1;
end
assign csr_bankarray_csrbank6_data_event_w = sdcore_data_event_status[3:0];
assign sdcore_data_event_we = csr_bankarray_csrbank6_data_event_we;
assign csr_bankarray_csrbank6_block_length0_w = sdcore_block_length_storage[9:0];
assign csr_bankarray_csrbank6_block_count0_w = sdcore_block_count_storage[31:0];
assign csr_bankarray_csrbank7_sel = (csr_bankarray_interface7_bank_bus_adr[13:9] == 4'd11);
assign csr_bankarray_csrbank7_status_r = csr_bankarray_interface7_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank7_status_re <= 1'd0;
    csr_bankarray_csrbank7_status_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank7_status_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_status_we <= (~csr_bankarray_interface7_bank_bus_we);
    end
end
assign csr_bankarray_csrbank7_pending_r = csr_bankarray_interface7_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank7_pending_re <= 1'd0;
    csr_bankarray_csrbank7_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank7_pending_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_pending_we <= (~csr_bankarray_interface7_bank_bus_we);
    end
end
assign csr_bankarray_csrbank7_enable0_r = csr_bankarray_interface7_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank7_enable0_we <= 1'd0;
    csr_bankarray_csrbank7_enable0_re <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank7_enable0_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_enable0_we <= (~csr_bankarray_interface7_bank_bus_we);
    end
end
always @(*) begin
    eventmanager_status_status <= 4'd0;
    eventmanager_status_status[0] <= eventmanager_card_detect0;
    eventmanager_status_status[1] <= eventmanager_block2mem_dma0;
    eventmanager_status_status[2] <= eventmanager_mem2block_dma0;
    eventmanager_status_status[3] <= eventmanager_cmd_done0;
end
assign csr_bankarray_csrbank7_status_w = eventmanager_status_status[3:0];
assign eventmanager_status_we = csr_bankarray_csrbank7_status_we;
always @(*) begin
    eventmanager_pending_status <= 4'd0;
    eventmanager_pending_status[0] <= eventmanager_card_detect1;
    eventmanager_pending_status[1] <= eventmanager_block2mem_dma1;
    eventmanager_pending_status[2] <= eventmanager_mem2block_dma1;
    eventmanager_pending_status[3] <= eventmanager_cmd_done1;
end
assign csr_bankarray_csrbank7_pending_w = eventmanager_pending_status[3:0];
assign eventmanager_pending_we = csr_bankarray_csrbank7_pending_we;
assign eventmanager_card_detect2 = eventmanager_enable_storage[0];
assign eventmanager_block2mem_dma2 = eventmanager_enable_storage[1];
assign eventmanager_mem2block_dma2 = eventmanager_enable_storage[2];
assign eventmanager_cmd_done2 = eventmanager_enable_storage[3];
assign csr_bankarray_csrbank7_enable0_w = eventmanager_enable_storage[3:0];
assign csr_bankarray_csrbank8_sel = (csr_bankarray_interface8_bank_bus_adr[13:9] == 4'd12);
assign csr_bankarray_csrbank8_dma_base1_r = csr_bankarray_interface8_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank8_dma_base1_we <= 1'd0;
    csr_bankarray_csrbank8_dma_base1_re <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank8_dma_base1_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_dma_base1_we <= (~csr_bankarray_interface8_bank_bus_we);
    end
end
assign csr_bankarray_csrbank8_dma_base0_r = csr_bankarray_interface8_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank8_dma_base0_we <= 1'd0;
    csr_bankarray_csrbank8_dma_base0_re <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank8_dma_base0_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_dma_base0_we <= (~csr_bankarray_interface8_bank_bus_we);
    end
end
assign csr_bankarray_csrbank8_dma_length0_r = csr_bankarray_interface8_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank8_dma_length0_re <= 1'd0;
    csr_bankarray_csrbank8_dma_length0_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank8_dma_length0_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_dma_length0_we <= (~csr_bankarray_interface8_bank_bus_we);
    end
end
assign csr_bankarray_csrbank8_dma_enable0_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank8_dma_enable0_we <= 1'd0;
    csr_bankarray_csrbank8_dma_enable0_re <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank8_dma_enable0_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_dma_enable0_we <= (~csr_bankarray_interface8_bank_bus_we);
    end
end
assign csr_bankarray_csrbank8_dma_done_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank8_dma_done_re <= 1'd0;
    csr_bankarray_csrbank8_dma_done_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank8_dma_done_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_dma_done_we <= (~csr_bankarray_interface8_bank_bus_we);
    end
end
assign csr_bankarray_csrbank8_dma_loop0_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank8_dma_loop0_re <= 1'd0;
    csr_bankarray_csrbank8_dma_loop0_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank8_dma_loop0_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_dma_loop0_we <= (~csr_bankarray_interface8_bank_bus_we);
    end
end
assign csr_bankarray_csrbank8_dma_offset_r = csr_bankarray_interface8_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank8_dma_offset_we <= 1'd0;
    csr_bankarray_csrbank8_dma_offset_re <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank8_dma_offset_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_dma_offset_we <= (~csr_bankarray_interface8_bank_bus_we);
    end
end
assign csr_bankarray_csrbank8_dma_base1_w = sdmem2block_dma_base_storage[63:32];
assign csr_bankarray_csrbank8_dma_base0_w = sdmem2block_dma_base_storage[31:0];
assign csr_bankarray_csrbank8_dma_length0_w = sdmem2block_dma_length_storage[31:0];
assign csr_bankarray_csrbank8_dma_enable0_w = sdmem2block_dma_enable_storage;
assign csr_bankarray_csrbank8_dma_done_w = sdmem2block_dma_done_status;
assign sdmem2block_dma_done_we = csr_bankarray_csrbank8_dma_done_we;
assign csr_bankarray_csrbank8_dma_loop0_w = sdmem2block_dma_loop_storage;
assign csr_bankarray_csrbank8_dma_offset_w = sdmem2block_dma_offset_status[31:0];
assign sdmem2block_dma_offset_we = csr_bankarray_csrbank8_dma_offset_we;
assign csr_bankarray_csrbank9_sel = (csr_bankarray_interface9_bank_bus_adr[13:9] == 4'd13);
assign csr_bankarray_csrbank9_card_detect_r = csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank9_card_detect_we <= 1'd0;
    csr_bankarray_csrbank9_card_detect_re <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank9_card_detect_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_card_detect_we <= (~csr_bankarray_interface9_bank_bus_we);
    end
end
assign csr_bankarray_csrbank9_clocker_divider0_r = csr_bankarray_interface9_bank_bus_dat_w[8:0];
always @(*) begin
    csr_bankarray_csrbank9_clocker_divider0_re <= 1'd0;
    csr_bankarray_csrbank9_clocker_divider0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank9_clocker_divider0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_clocker_divider0_we <= (~csr_bankarray_interface9_bank_bus_we);
    end
end
assign init_initialize_r = csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
    init_initialize_we <= 1'd0;
    init_initialize_re <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 2'd2))) begin
        init_initialize_re <= csr_bankarray_interface9_bank_bus_we;
        init_initialize_we <= (~csr_bankarray_interface9_bank_bus_we);
    end
end
assign csr_bankarray_csrbank9_dataw_status_r = csr_bankarray_interface9_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank9_dataw_status_we <= 1'd0;
    csr_bankarray_csrbank9_dataw_status_re <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank9_dataw_status_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dataw_status_we <= (~csr_bankarray_interface9_bank_bus_we);
    end
end
assign csr_bankarray_csrbank9_card_detect_w = card_detect_status0;
assign card_detect_we = csr_bankarray_csrbank9_card_detect_we;
assign csr_bankarray_csrbank9_clocker_divider0_w = clocker_storage[8:0];
always @(*) begin
    dataw_status <= 3'd0;
    dataw_status[0] <= dataw_accepted0;
    dataw_status[1] <= dataw_crc_error0;
    dataw_status[2] <= dataw_write_error0;
end
assign csr_bankarray_csrbank9_dataw_status_w = dataw_status[2:0];
assign dataw_we = csr_bankarray_csrbank9_dataw_status_we;
assign csr_bankarray_csrbank10_sel = (csr_bankarray_interface10_bank_bus_adr[13:9] == 4'd14);
assign csr_bankarray_csrbank10_dfii_control0_r = csr_bankarray_interface10_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_control0_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_control0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank10_dfii_control0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_control0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_command0_r = csr_bankarray_interface10_bank_bus_dat_w[5:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_command0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_command0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank10_dfii_pi0_command0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_command0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign soclinux_sdram_phaseinjector0_command_issue_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    soclinux_sdram_phaseinjector0_command_issue_we <= 1'd0;
    soclinux_sdram_phaseinjector0_command_issue_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 2'd2))) begin
        soclinux_sdram_phaseinjector0_command_issue_re <= csr_bankarray_interface10_bank_bus_we;
        soclinux_sdram_phaseinjector0_command_issue_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_address0_r = csr_bankarray_interface10_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_address0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_address0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank10_dfii_pi0_address0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_address0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_baddress0_r = csr_bankarray_interface10_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_baddress0_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank10_dfii_pi0_baddress0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_baddress0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_wrdata3_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_wrdata3_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_wrdata3_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank10_dfii_pi0_wrdata3_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_wrdata3_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_wrdata2_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_wrdata2_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_wrdata2_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank10_dfii_pi0_wrdata2_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_wrdata2_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_wrdata1_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank10_dfii_pi0_wrdata1_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_wrdata1_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_wrdata0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_wrdata0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_wrdata0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 4'd8))) begin
        csr_bankarray_csrbank10_dfii_pi0_wrdata0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_wrdata0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_rddata3_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_rddata3_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_rddata3_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 4'd9))) begin
        csr_bankarray_csrbank10_dfii_pi0_rddata3_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_rddata3_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_rddata2_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_rddata2_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_rddata2_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 4'd10))) begin
        csr_bankarray_csrbank10_dfii_pi0_rddata2_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_rddata2_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_rddata1_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_rddata1_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_rddata1_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 4'd11))) begin
        csr_bankarray_csrbank10_dfii_pi0_rddata1_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_rddata1_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi0_rddata0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi0_rddata0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi0_rddata0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 4'd12))) begin
        csr_bankarray_csrbank10_dfii_pi0_rddata0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi0_rddata0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_command0_r = csr_bankarray_interface10_bank_bus_dat_w[5:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_command0_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 4'd13))) begin
        csr_bankarray_csrbank10_dfii_pi1_command0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_command0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign soclinux_sdram_phaseinjector1_command_issue_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    soclinux_sdram_phaseinjector1_command_issue_re <= 1'd0;
    soclinux_sdram_phaseinjector1_command_issue_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 4'd14))) begin
        soclinux_sdram_phaseinjector1_command_issue_re <= csr_bankarray_interface10_bank_bus_we;
        soclinux_sdram_phaseinjector1_command_issue_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_address0_r = csr_bankarray_interface10_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_address0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_address0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 4'd15))) begin
        csr_bankarray_csrbank10_dfii_pi1_address0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_address0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_baddress0_r = csr_bankarray_interface10_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_baddress0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_baddress0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd16))) begin
        csr_bankarray_csrbank10_dfii_pi1_baddress0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_baddress0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_wrdata3_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_wrdata3_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_wrdata3_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd17))) begin
        csr_bankarray_csrbank10_dfii_pi1_wrdata3_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_wrdata3_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_wrdata2_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_wrdata2_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_wrdata2_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd18))) begin
        csr_bankarray_csrbank10_dfii_pi1_wrdata2_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_wrdata2_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_wrdata1_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd19))) begin
        csr_bankarray_csrbank10_dfii_pi1_wrdata1_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_wrdata1_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_wrdata0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd20))) begin
        csr_bankarray_csrbank10_dfii_pi1_wrdata0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_wrdata0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_rddata3_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_rddata3_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_rddata3_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd21))) begin
        csr_bankarray_csrbank10_dfii_pi1_rddata3_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_rddata3_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_rddata2_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_rddata2_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_rddata2_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd22))) begin
        csr_bankarray_csrbank10_dfii_pi1_rddata2_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_rddata2_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_rddata1_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_rddata1_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_rddata1_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd23))) begin
        csr_bankarray_csrbank10_dfii_pi1_rddata1_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_rddata1_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi1_rddata0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi1_rddata0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi1_rddata0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd24))) begin
        csr_bankarray_csrbank10_dfii_pi1_rddata0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi1_rddata0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_command0_r = csr_bankarray_interface10_bank_bus_dat_w[5:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_command0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_command0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd25))) begin
        csr_bankarray_csrbank10_dfii_pi2_command0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_command0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign soclinux_sdram_phaseinjector2_command_issue_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    soclinux_sdram_phaseinjector2_command_issue_we <= 1'd0;
    soclinux_sdram_phaseinjector2_command_issue_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd26))) begin
        soclinux_sdram_phaseinjector2_command_issue_re <= csr_bankarray_interface10_bank_bus_we;
        soclinux_sdram_phaseinjector2_command_issue_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_address0_r = csr_bankarray_interface10_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_address0_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_address0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd27))) begin
        csr_bankarray_csrbank10_dfii_pi2_address0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_address0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_baddress0_r = csr_bankarray_interface10_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_baddress0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_baddress0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd28))) begin
        csr_bankarray_csrbank10_dfii_pi2_baddress0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_baddress0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_wrdata3_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_wrdata3_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_wrdata3_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd29))) begin
        csr_bankarray_csrbank10_dfii_pi2_wrdata3_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_wrdata3_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_wrdata2_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_wrdata2_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_wrdata2_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd30))) begin
        csr_bankarray_csrbank10_dfii_pi2_wrdata2_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_wrdata2_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_wrdata1_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_wrdata1_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_wrdata1_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 5'd31))) begin
        csr_bankarray_csrbank10_dfii_pi2_wrdata1_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_wrdata1_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_wrdata0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd32))) begin
        csr_bankarray_csrbank10_dfii_pi2_wrdata0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_wrdata0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_rddata3_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_rddata3_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_rddata3_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd33))) begin
        csr_bankarray_csrbank10_dfii_pi2_rddata3_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_rddata3_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_rddata2_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_rddata2_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_rddata2_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd34))) begin
        csr_bankarray_csrbank10_dfii_pi2_rddata2_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_rddata2_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_rddata1_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_rddata1_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_rddata1_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd35))) begin
        csr_bankarray_csrbank10_dfii_pi2_rddata1_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_rddata1_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi2_rddata0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi2_rddata0_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi2_rddata0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd36))) begin
        csr_bankarray_csrbank10_dfii_pi2_rddata0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi2_rddata0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_command0_r = csr_bankarray_interface10_bank_bus_dat_w[5:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_command0_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd37))) begin
        csr_bankarray_csrbank10_dfii_pi3_command0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_command0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign soclinux_sdram_phaseinjector3_command_issue_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    soclinux_sdram_phaseinjector3_command_issue_we <= 1'd0;
    soclinux_sdram_phaseinjector3_command_issue_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd38))) begin
        soclinux_sdram_phaseinjector3_command_issue_re <= csr_bankarray_interface10_bank_bus_we;
        soclinux_sdram_phaseinjector3_command_issue_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_address0_r = csr_bankarray_interface10_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_address0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_address0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd39))) begin
        csr_bankarray_csrbank10_dfii_pi3_address0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_address0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_baddress0_r = csr_bankarray_interface10_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_baddress0_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd40))) begin
        csr_bankarray_csrbank10_dfii_pi3_baddress0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_baddress0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_wrdata3_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_wrdata3_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_wrdata3_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd41))) begin
        csr_bankarray_csrbank10_dfii_pi3_wrdata3_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_wrdata3_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_wrdata2_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_wrdata2_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_wrdata2_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd42))) begin
        csr_bankarray_csrbank10_dfii_pi3_wrdata2_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_wrdata2_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_wrdata1_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd43))) begin
        csr_bankarray_csrbank10_dfii_pi3_wrdata1_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_wrdata1_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_wrdata0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_wrdata0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_wrdata0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd44))) begin
        csr_bankarray_csrbank10_dfii_pi3_wrdata0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_wrdata0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_rddata3_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_rddata3_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_rddata3_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd45))) begin
        csr_bankarray_csrbank10_dfii_pi3_rddata3_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_rddata3_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_rddata2_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_rddata2_re <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_rddata2_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd46))) begin
        csr_bankarray_csrbank10_dfii_pi3_rddata2_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_rddata2_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_rddata1_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_rddata1_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_rddata1_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd47))) begin
        csr_bankarray_csrbank10_dfii_pi3_rddata1_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_rddata1_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign csr_bankarray_csrbank10_dfii_pi3_rddata0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_dfii_pi3_rddata0_we <= 1'd0;
    csr_bankarray_csrbank10_dfii_pi3_rddata0_re <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 6'd48))) begin
        csr_bankarray_csrbank10_dfii_pi3_rddata0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_dfii_pi3_rddata0_we <= (~csr_bankarray_interface10_bank_bus_we);
    end
end
assign soclinux_sdram_sel = soclinux_sdram_storage[0];
assign soclinux_sdram_cke = soclinux_sdram_storage[1];
assign soclinux_sdram_odt = soclinux_sdram_storage[2];
assign soclinux_sdram_reset_n = soclinux_sdram_storage[3];
assign csr_bankarray_csrbank10_dfii_control0_w = soclinux_sdram_storage[3:0];
assign soclinux_sdram_phaseinjector0_csrfield_cs = soclinux_sdram_phaseinjector0_command_storage[0];
assign soclinux_sdram_phaseinjector0_csrfield_we = soclinux_sdram_phaseinjector0_command_storage[1];
assign soclinux_sdram_phaseinjector0_csrfield_cas = soclinux_sdram_phaseinjector0_command_storage[2];
assign soclinux_sdram_phaseinjector0_csrfield_ras = soclinux_sdram_phaseinjector0_command_storage[3];
assign soclinux_sdram_phaseinjector0_csrfield_wren = soclinux_sdram_phaseinjector0_command_storage[4];
assign soclinux_sdram_phaseinjector0_csrfield_rden = soclinux_sdram_phaseinjector0_command_storage[5];
assign csr_bankarray_csrbank10_dfii_pi0_command0_w = soclinux_sdram_phaseinjector0_command_storage[5:0];
assign csr_bankarray_csrbank10_dfii_pi0_address0_w = soclinux_sdram_phaseinjector0_address_storage[13:0];
assign csr_bankarray_csrbank10_dfii_pi0_baddress0_w = soclinux_sdram_phaseinjector0_baddress_storage[2:0];
assign csr_bankarray_csrbank10_dfii_pi0_wrdata3_w = soclinux_sdram_phaseinjector0_wrdata_storage[127:96];
assign csr_bankarray_csrbank10_dfii_pi0_wrdata2_w = soclinux_sdram_phaseinjector0_wrdata_storage[95:64];
assign csr_bankarray_csrbank10_dfii_pi0_wrdata1_w = soclinux_sdram_phaseinjector0_wrdata_storage[63:32];
assign csr_bankarray_csrbank10_dfii_pi0_wrdata0_w = soclinux_sdram_phaseinjector0_wrdata_storage[31:0];
assign csr_bankarray_csrbank10_dfii_pi0_rddata3_w = soclinux_sdram_phaseinjector0_rddata_status[127:96];
assign csr_bankarray_csrbank10_dfii_pi0_rddata2_w = soclinux_sdram_phaseinjector0_rddata_status[95:64];
assign csr_bankarray_csrbank10_dfii_pi0_rddata1_w = soclinux_sdram_phaseinjector0_rddata_status[63:32];
assign csr_bankarray_csrbank10_dfii_pi0_rddata0_w = soclinux_sdram_phaseinjector0_rddata_status[31:0];
assign soclinux_sdram_phaseinjector0_rddata_we = csr_bankarray_csrbank10_dfii_pi0_rddata0_we;
assign soclinux_sdram_phaseinjector1_csrfield_cs = soclinux_sdram_phaseinjector1_command_storage[0];
assign soclinux_sdram_phaseinjector1_csrfield_we = soclinux_sdram_phaseinjector1_command_storage[1];
assign soclinux_sdram_phaseinjector1_csrfield_cas = soclinux_sdram_phaseinjector1_command_storage[2];
assign soclinux_sdram_phaseinjector1_csrfield_ras = soclinux_sdram_phaseinjector1_command_storage[3];
assign soclinux_sdram_phaseinjector1_csrfield_wren = soclinux_sdram_phaseinjector1_command_storage[4];
assign soclinux_sdram_phaseinjector1_csrfield_rden = soclinux_sdram_phaseinjector1_command_storage[5];
assign csr_bankarray_csrbank10_dfii_pi1_command0_w = soclinux_sdram_phaseinjector1_command_storage[5:0];
assign csr_bankarray_csrbank10_dfii_pi1_address0_w = soclinux_sdram_phaseinjector1_address_storage[13:0];
assign csr_bankarray_csrbank10_dfii_pi1_baddress0_w = soclinux_sdram_phaseinjector1_baddress_storage[2:0];
assign csr_bankarray_csrbank10_dfii_pi1_wrdata3_w = soclinux_sdram_phaseinjector1_wrdata_storage[127:96];
assign csr_bankarray_csrbank10_dfii_pi1_wrdata2_w = soclinux_sdram_phaseinjector1_wrdata_storage[95:64];
assign csr_bankarray_csrbank10_dfii_pi1_wrdata1_w = soclinux_sdram_phaseinjector1_wrdata_storage[63:32];
assign csr_bankarray_csrbank10_dfii_pi1_wrdata0_w = soclinux_sdram_phaseinjector1_wrdata_storage[31:0];
assign csr_bankarray_csrbank10_dfii_pi1_rddata3_w = soclinux_sdram_phaseinjector1_rddata_status[127:96];
assign csr_bankarray_csrbank10_dfii_pi1_rddata2_w = soclinux_sdram_phaseinjector1_rddata_status[95:64];
assign csr_bankarray_csrbank10_dfii_pi1_rddata1_w = soclinux_sdram_phaseinjector1_rddata_status[63:32];
assign csr_bankarray_csrbank10_dfii_pi1_rddata0_w = soclinux_sdram_phaseinjector1_rddata_status[31:0];
assign soclinux_sdram_phaseinjector1_rddata_we = csr_bankarray_csrbank10_dfii_pi1_rddata0_we;
assign soclinux_sdram_phaseinjector2_csrfield_cs = soclinux_sdram_phaseinjector2_command_storage[0];
assign soclinux_sdram_phaseinjector2_csrfield_we = soclinux_sdram_phaseinjector2_command_storage[1];
assign soclinux_sdram_phaseinjector2_csrfield_cas = soclinux_sdram_phaseinjector2_command_storage[2];
assign soclinux_sdram_phaseinjector2_csrfield_ras = soclinux_sdram_phaseinjector2_command_storage[3];
assign soclinux_sdram_phaseinjector2_csrfield_wren = soclinux_sdram_phaseinjector2_command_storage[4];
assign soclinux_sdram_phaseinjector2_csrfield_rden = soclinux_sdram_phaseinjector2_command_storage[5];
assign csr_bankarray_csrbank10_dfii_pi2_command0_w = soclinux_sdram_phaseinjector2_command_storage[5:0];
assign csr_bankarray_csrbank10_dfii_pi2_address0_w = soclinux_sdram_phaseinjector2_address_storage[13:0];
assign csr_bankarray_csrbank10_dfii_pi2_baddress0_w = soclinux_sdram_phaseinjector2_baddress_storage[2:0];
assign csr_bankarray_csrbank10_dfii_pi2_wrdata3_w = soclinux_sdram_phaseinjector2_wrdata_storage[127:96];
assign csr_bankarray_csrbank10_dfii_pi2_wrdata2_w = soclinux_sdram_phaseinjector2_wrdata_storage[95:64];
assign csr_bankarray_csrbank10_dfii_pi2_wrdata1_w = soclinux_sdram_phaseinjector2_wrdata_storage[63:32];
assign csr_bankarray_csrbank10_dfii_pi2_wrdata0_w = soclinux_sdram_phaseinjector2_wrdata_storage[31:0];
assign csr_bankarray_csrbank10_dfii_pi2_rddata3_w = soclinux_sdram_phaseinjector2_rddata_status[127:96];
assign csr_bankarray_csrbank10_dfii_pi2_rddata2_w = soclinux_sdram_phaseinjector2_rddata_status[95:64];
assign csr_bankarray_csrbank10_dfii_pi2_rddata1_w = soclinux_sdram_phaseinjector2_rddata_status[63:32];
assign csr_bankarray_csrbank10_dfii_pi2_rddata0_w = soclinux_sdram_phaseinjector2_rddata_status[31:0];
assign soclinux_sdram_phaseinjector2_rddata_we = csr_bankarray_csrbank10_dfii_pi2_rddata0_we;
assign soclinux_sdram_phaseinjector3_csrfield_cs = soclinux_sdram_phaseinjector3_command_storage[0];
assign soclinux_sdram_phaseinjector3_csrfield_we = soclinux_sdram_phaseinjector3_command_storage[1];
assign soclinux_sdram_phaseinjector3_csrfield_cas = soclinux_sdram_phaseinjector3_command_storage[2];
assign soclinux_sdram_phaseinjector3_csrfield_ras = soclinux_sdram_phaseinjector3_command_storage[3];
assign soclinux_sdram_phaseinjector3_csrfield_wren = soclinux_sdram_phaseinjector3_command_storage[4];
assign soclinux_sdram_phaseinjector3_csrfield_rden = soclinux_sdram_phaseinjector3_command_storage[5];
assign csr_bankarray_csrbank10_dfii_pi3_command0_w = soclinux_sdram_phaseinjector3_command_storage[5:0];
assign csr_bankarray_csrbank10_dfii_pi3_address0_w = soclinux_sdram_phaseinjector3_address_storage[13:0];
assign csr_bankarray_csrbank10_dfii_pi3_baddress0_w = soclinux_sdram_phaseinjector3_baddress_storage[2:0];
assign csr_bankarray_csrbank10_dfii_pi3_wrdata3_w = soclinux_sdram_phaseinjector3_wrdata_storage[127:96];
assign csr_bankarray_csrbank10_dfii_pi3_wrdata2_w = soclinux_sdram_phaseinjector3_wrdata_storage[95:64];
assign csr_bankarray_csrbank10_dfii_pi3_wrdata1_w = soclinux_sdram_phaseinjector3_wrdata_storage[63:32];
assign csr_bankarray_csrbank10_dfii_pi3_wrdata0_w = soclinux_sdram_phaseinjector3_wrdata_storage[31:0];
assign csr_bankarray_csrbank10_dfii_pi3_rddata3_w = soclinux_sdram_phaseinjector3_rddata_status[127:96];
assign csr_bankarray_csrbank10_dfii_pi3_rddata2_w = soclinux_sdram_phaseinjector3_rddata_status[95:64];
assign csr_bankarray_csrbank10_dfii_pi3_rddata1_w = soclinux_sdram_phaseinjector3_rddata_status[63:32];
assign csr_bankarray_csrbank10_dfii_pi3_rddata0_w = soclinux_sdram_phaseinjector3_rddata_status[31:0];
assign soclinux_sdram_phaseinjector3_rddata_we = csr_bankarray_csrbank10_dfii_pi3_rddata0_we;
assign csr_bankarray_csrbank11_sel = (csr_bankarray_interface11_bank_bus_adr[13:9] == 1'd0);
assign csr_bankarray_csrbank11_next_core0_r = csr_bankarray_interface11_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank11_next_core0_we <= 1'd0;
    csr_bankarray_csrbank11_next_core0_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank11_next_core0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_next_core0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata00_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata00_re <= 1'd0;
    csr_bankarray_csrbank11_param_wdata00_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank11_param_wdata00_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata00_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata10_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata10_we <= 1'd0;
    csr_bankarray_csrbank11_param_wdata10_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank11_param_wdata10_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata10_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata20_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata20_we <= 1'd0;
    csr_bankarray_csrbank11_param_wdata20_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank11_param_wdata20_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata20_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata30_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata30_re <= 1'd0;
    csr_bankarray_csrbank11_param_wdata30_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank11_param_wdata30_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata30_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata40_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata40_we <= 1'd0;
    csr_bankarray_csrbank11_param_wdata40_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank11_param_wdata40_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata40_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata50_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata50_re <= 1'd0;
    csr_bankarray_csrbank11_param_wdata50_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank11_param_wdata50_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata50_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata60_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata60_re <= 1'd0;
    csr_bankarray_csrbank11_param_wdata60_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank11_param_wdata60_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata60_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata70_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata70_we <= 1'd0;
    csr_bankarray_csrbank11_param_wdata70_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd8))) begin
        csr_bankarray_csrbank11_param_wdata70_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata70_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata80_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata80_re <= 1'd0;
    csr_bankarray_csrbank11_param_wdata80_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd9))) begin
        csr_bankarray_csrbank11_param_wdata80_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata80_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata90_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata90_we <= 1'd0;
    csr_bankarray_csrbank11_param_wdata90_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd10))) begin
        csr_bankarray_csrbank11_param_wdata90_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata90_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata100_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata100_we <= 1'd0;
    csr_bankarray_csrbank11_param_wdata100_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd11))) begin
        csr_bankarray_csrbank11_param_wdata100_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata100_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_param_wdata110_r = csr_bankarray_interface11_bank_bus_dat_w[15:0];
always @(*) begin
    csr_bankarray_csrbank11_param_wdata110_re <= 1'd0;
    csr_bankarray_csrbank11_param_wdata110_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd12))) begin
        csr_bankarray_csrbank11_param_wdata110_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_param_wdata110_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_neuron_inst_wdata0_r = csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank11_neuron_inst_wdata0_we <= 1'd0;
    csr_bankarray_csrbank11_neuron_inst_wdata0_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd13))) begin
        csr_bankarray_csrbank11_neuron_inst_wdata0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_neuron_inst_wdata0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_packet_wdata0_r = csr_bankarray_interface11_bank_bus_dat_w[29:0];
always @(*) begin
    csr_bankarray_csrbank11_packet_wdata0_re <= 1'd0;
    csr_bankarray_csrbank11_packet_wdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd14))) begin
        csr_bankarray_csrbank11_packet_wdata0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_packet_wdata0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_en0_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_spike_en0_re <= 1'd0;
    csr_bankarray_csrbank11_spike_en0_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd15))) begin
        csr_bankarray_csrbank11_spike_en0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_en0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_load_end0_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_load_end0_we <= 1'd0;
    csr_bankarray_csrbank11_load_end0_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd16))) begin
        csr_bankarray_csrbank11_load_end0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_load_end0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_tick_ready0_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_tick_ready0_re <= 1'd0;
    csr_bankarray_csrbank11_tick_ready0_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd17))) begin
        csr_bankarray_csrbank11_tick_ready0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_tick_ready0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_complete0_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_complete0_we <= 1'd0;
    csr_bankarray_csrbank11_complete0_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd18))) begin
        csr_bankarray_csrbank11_complete0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_complete0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_next_core_en0_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_next_core_en0_we <= 1'd0;
    csr_bankarray_csrbank11_next_core_en0_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd19))) begin
        csr_bankarray_csrbank11_next_core_en0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_next_core_en0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_grid_state0_r = csr_bankarray_interface11_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank11_grid_state0_re <= 1'd0;
    csr_bankarray_csrbank11_grid_state0_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd20))) begin
        csr_bankarray_csrbank11_grid_state0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_grid_state0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_msb_param_snn0_r = csr_bankarray_interface11_bank_bus_dat_w[15:0];
always @(*) begin
    csr_bankarray_csrbank11_msb_param_snn0_we <= 1'd0;
    csr_bankarray_csrbank11_msb_param_snn0_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd21))) begin
        csr_bankarray_csrbank11_msb_param_snn0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_msb_param_snn0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_out00_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_spike_out00_re <= 1'd0;
    csr_bankarray_csrbank11_spike_out00_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd22))) begin
        csr_bankarray_csrbank11_spike_out00_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_out00_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_out10_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_spike_out10_re <= 1'd0;
    csr_bankarray_csrbank11_spike_out10_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd23))) begin
        csr_bankarray_csrbank11_spike_out10_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_out10_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_out20_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_spike_out20_we <= 1'd0;
    csr_bankarray_csrbank11_spike_out20_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd24))) begin
        csr_bankarray_csrbank11_spike_out20_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_out20_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_out30_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_spike_out30_re <= 1'd0;
    csr_bankarray_csrbank11_spike_out30_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd25))) begin
        csr_bankarray_csrbank11_spike_out30_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_out30_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_out40_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_spike_out40_we <= 1'd0;
    csr_bankarray_csrbank11_spike_out40_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd26))) begin
        csr_bankarray_csrbank11_spike_out40_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_out40_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_out50_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_spike_out50_we <= 1'd0;
    csr_bankarray_csrbank11_spike_out50_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd27))) begin
        csr_bankarray_csrbank11_spike_out50_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_out50_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_out60_r = csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank11_spike_out60_re <= 1'd0;
    csr_bankarray_csrbank11_spike_out60_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd28))) begin
        csr_bankarray_csrbank11_spike_out60_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_out60_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_out70_r = csr_bankarray_interface11_bank_bus_dat_w[25:0];
always @(*) begin
    csr_bankarray_csrbank11_spike_out70_we <= 1'd0;
    csr_bankarray_csrbank11_spike_out70_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd29))) begin
        csr_bankarray_csrbank11_spike_out70_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_out70_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_spike_out_rinc0_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_spike_out_rinc0_re <= 1'd0;
    csr_bankarray_csrbank11_spike_out_rinc0_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd30))) begin
        csr_bankarray_csrbank11_spike_out_rinc0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_spike_out_rinc0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_packet_out0_r = csr_bankarray_interface11_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank11_packet_out0_re <= 1'd0;
    csr_bankarray_csrbank11_packet_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 5'd31))) begin
        csr_bankarray_csrbank11_packet_out0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_packet_out0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_packet_out_rinc0_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_packet_out_rinc0_we <= 1'd0;
    csr_bankarray_csrbank11_packet_out_rinc0_re <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 6'd32))) begin
        csr_bankarray_csrbank11_packet_out_rinc0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_packet_out_rinc0_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_snn_status_r = csr_bankarray_interface11_bank_bus_dat_w[4:0];
always @(*) begin
    csr_bankarray_csrbank11_snn_status_re <= 1'd0;
    csr_bankarray_csrbank11_snn_status_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 6'd33))) begin
        csr_bankarray_csrbank11_snn_status_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_snn_status_we <= (~csr_bankarray_interface11_bank_bus_we);
    end
end
assign csr_bankarray_csrbank11_next_core0_w = snn_3x2_next_core_storage[2:0];
assign csr_bankarray_csrbank11_param_wdata00_w = snn_3x2_param0_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata10_w = snn_3x2_param1_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata20_w = snn_3x2_param2_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata30_w = snn_3x2_param3_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata40_w = snn_3x2_param4_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata50_w = snn_3x2_param5_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata60_w = snn_3x2_param6_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata70_w = snn_3x2_param7_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata80_w = snn_3x2_param8_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata90_w = snn_3x2_param9_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata100_w = snn_3x2_param10_storage[31:0];
assign csr_bankarray_csrbank11_param_wdata110_w = snn_3x2_param11_storage[15:0];
assign csr_bankarray_csrbank11_neuron_inst_wdata0_w = snn_3x2_neuron_inst_storage[1:0];
assign csr_bankarray_csrbank11_packet_wdata0_w = snn_3x2_packet_wdata_storage[29:0];
assign csr_bankarray_csrbank11_spike_en0_w = snn_3x2_spike_en_storage;
assign csr_bankarray_csrbank11_load_end0_w = snn_3x2_load_end_storage;
assign csr_bankarray_csrbank11_tick_ready0_w = snn_3x2_tick_ready_storage;
assign csr_bankarray_csrbank11_complete0_w = snn_3x2_complete_storage;
assign csr_bankarray_csrbank11_next_core_en0_w = snn_3x2_next_core_en_storage;
assign csr_bankarray_csrbank11_grid_state0_w = snn_3x2_grid_state_storage[2:0];
assign csr_bankarray_csrbank11_msb_param_snn0_w = snn_3x2_msb_param_snn_storage[15:0];
assign csr_bankarray_csrbank11_spike_out00_w = snn_3x2_spike_out0_storage[31:0];
assign csr_bankarray_csrbank11_spike_out10_w = snn_3x2_spike_out1_storage[31:0];
assign csr_bankarray_csrbank11_spike_out20_w = snn_3x2_spike_out2_storage[31:0];
assign csr_bankarray_csrbank11_spike_out30_w = snn_3x2_spike_out3_storage[31:0];
assign csr_bankarray_csrbank11_spike_out40_w = snn_3x2_spike_out4_storage[31:0];
assign csr_bankarray_csrbank11_spike_out50_w = snn_3x2_spike_out5_storage[31:0];
assign csr_bankarray_csrbank11_spike_out60_w = snn_3x2_spike_out6_storage[31:0];
assign csr_bankarray_csrbank11_spike_out70_w = snn_3x2_spike_out7_storage[25:0];
assign csr_bankarray_csrbank11_spike_out_rinc0_w = snn_3x2_spike_out_rinc_storage;
assign csr_bankarray_csrbank11_packet_out0_w = snn_3x2_packet_out_storage[7:0];
assign csr_bankarray_csrbank11_packet_out_rinc0_w = snn_3x2_packet_out_rinc_storage;
always @(*) begin
    snn_3x2_snn_status_status <= 5'd0;
    snn_3x2_snn_status_status[0] <= snn_3x2_packet_wfull;
    snn_3x2_snn_status_status[1] <= snn_3x2_param_wfull;
    snn_3x2_snn_status_status[2] <= snn_3x2_neuron_inst_wfull;
    snn_3x2_snn_status_status[3] <= snn_3x2_packet_out_rempty;
    snn_3x2_snn_status_status[4] <= snn_3x2_spike_out_rempty;
end
assign csr_bankarray_csrbank11_snn_status_w = snn_3x2_snn_status_status[4:0];
assign snn_3x2_snn_status_we = csr_bankarray_csrbank11_snn_status_we;
assign csr_bankarray_csrbank12_sel = (csr_bankarray_interface12_bank_bus_adr[13:9] == 2'd3);
assign csr_bankarray_csrbank12_load0_r = csr_bankarray_interface12_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank12_load0_re <= 1'd0;
    csr_bankarray_csrbank12_load0_we <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank12_load0_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_load0_we <= (~csr_bankarray_interface12_bank_bus_we);
    end
end
assign csr_bankarray_csrbank12_reload0_r = csr_bankarray_interface12_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank12_reload0_re <= 1'd0;
    csr_bankarray_csrbank12_reload0_we <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank12_reload0_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_reload0_we <= (~csr_bankarray_interface12_bank_bus_we);
    end
end
assign csr_bankarray_csrbank12_en0_r = csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank12_en0_we <= 1'd0;
    csr_bankarray_csrbank12_en0_re <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank12_en0_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_en0_we <= (~csr_bankarray_interface12_bank_bus_we);
    end
end
assign csr_bankarray_csrbank12_update_value0_r = csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank12_update_value0_re <= 1'd0;
    csr_bankarray_csrbank12_update_value0_we <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank12_update_value0_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_update_value0_we <= (~csr_bankarray_interface12_bank_bus_we);
    end
end
assign csr_bankarray_csrbank12_value_r = csr_bankarray_interface12_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank12_value_we <= 1'd0;
    csr_bankarray_csrbank12_value_re <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank12_value_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_value_we <= (~csr_bankarray_interface12_bank_bus_we);
    end
end
assign csr_bankarray_csrbank12_ev_status_r = csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank12_ev_status_we <= 1'd0;
    csr_bankarray_csrbank12_ev_status_re <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank12_ev_status_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_ev_status_we <= (~csr_bankarray_interface12_bank_bus_we);
    end
end
assign csr_bankarray_csrbank12_ev_pending_r = csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank12_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank12_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank12_ev_pending_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_ev_pending_we <= (~csr_bankarray_interface12_bank_bus_we);
    end
end
assign csr_bankarray_csrbank12_ev_enable0_r = csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank12_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank12_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank12_sel & (csr_bankarray_interface12_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank12_ev_enable0_re <= csr_bankarray_interface12_bank_bus_we;
        csr_bankarray_csrbank12_ev_enable0_we <= (~csr_bankarray_interface12_bank_bus_we);
    end
end
assign csr_bankarray_csrbank12_load0_w = soclinux_timer_load_storage[31:0];
assign csr_bankarray_csrbank12_reload0_w = soclinux_timer_reload_storage[31:0];
assign csr_bankarray_csrbank12_en0_w = soclinux_timer_en_storage;
assign csr_bankarray_csrbank12_update_value0_w = soclinux_timer_update_value_storage;
assign csr_bankarray_csrbank12_value_w = soclinux_timer_value_status[31:0];
assign soclinux_timer_value_we = csr_bankarray_csrbank12_value_we;
assign soclinux_timer_status_status = soclinux_timer_zero0;
assign csr_bankarray_csrbank12_ev_status_w = soclinux_timer_status_status;
assign soclinux_timer_status_we = csr_bankarray_csrbank12_ev_status_we;
assign soclinux_timer_pending_status = soclinux_timer_zero1;
assign csr_bankarray_csrbank12_ev_pending_w = soclinux_timer_pending_status;
assign soclinux_timer_pending_we = csr_bankarray_csrbank12_ev_pending_we;
assign soclinux_timer_zero2 = soclinux_timer_enable_storage;
assign csr_bankarray_csrbank12_ev_enable0_w = soclinux_timer_enable_storage;
assign csr_bankarray_csrbank13_sel = (csr_bankarray_interface13_bank_bus_adr[13:9] == 2'd2);
assign soclinux_uart_rxtx_r = csr_bankarray_interface13_bank_bus_dat_w[7:0];
always @(*) begin
    soclinux_uart_rxtx_we <= 1'd0;
    soclinux_uart_rxtx_re <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 1'd0))) begin
        soclinux_uart_rxtx_re <= csr_bankarray_interface13_bank_bus_we;
        soclinux_uart_rxtx_we <= (~csr_bankarray_interface13_bank_bus_we);
    end
end
assign csr_bankarray_csrbank13_txfull_r = csr_bankarray_interface13_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank13_txfull_we <= 1'd0;
    csr_bankarray_csrbank13_txfull_re <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank13_txfull_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_txfull_we <= (~csr_bankarray_interface13_bank_bus_we);
    end
end
assign csr_bankarray_csrbank13_rxempty_r = csr_bankarray_interface13_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank13_rxempty_we <= 1'd0;
    csr_bankarray_csrbank13_rxempty_re <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank13_rxempty_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_rxempty_we <= (~csr_bankarray_interface13_bank_bus_we);
    end
end
assign csr_bankarray_csrbank13_ev_status_r = csr_bankarray_interface13_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank13_ev_status_re <= 1'd0;
    csr_bankarray_csrbank13_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank13_ev_status_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_ev_status_we <= (~csr_bankarray_interface13_bank_bus_we);
    end
end
assign csr_bankarray_csrbank13_ev_pending_r = csr_bankarray_interface13_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank13_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank13_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank13_ev_pending_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_ev_pending_we <= (~csr_bankarray_interface13_bank_bus_we);
    end
end
assign csr_bankarray_csrbank13_ev_enable0_r = csr_bankarray_interface13_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank13_ev_enable0_we <= 1'd0;
    csr_bankarray_csrbank13_ev_enable0_re <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank13_ev_enable0_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_ev_enable0_we <= (~csr_bankarray_interface13_bank_bus_we);
    end
end
assign csr_bankarray_csrbank13_txempty_r = csr_bankarray_interface13_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank13_txempty_re <= 1'd0;
    csr_bankarray_csrbank13_txempty_we <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank13_txempty_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_txempty_we <= (~csr_bankarray_interface13_bank_bus_we);
    end
end
assign csr_bankarray_csrbank13_rxfull_r = csr_bankarray_interface13_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank13_rxfull_re <= 1'd0;
    csr_bankarray_csrbank13_rxfull_we <= 1'd0;
    if ((csr_bankarray_csrbank13_sel & (csr_bankarray_interface13_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank13_rxfull_re <= csr_bankarray_interface13_bank_bus_we;
        csr_bankarray_csrbank13_rxfull_we <= (~csr_bankarray_interface13_bank_bus_we);
    end
end
assign csr_bankarray_csrbank13_txfull_w = soclinux_uart_txfull_status;
assign soclinux_uart_txfull_we = csr_bankarray_csrbank13_txfull_we;
assign csr_bankarray_csrbank13_rxempty_w = soclinux_uart_rxempty_status;
assign soclinux_uart_rxempty_we = csr_bankarray_csrbank13_rxempty_we;
always @(*) begin
    soclinux_uart_status_status <= 2'd0;
    soclinux_uart_status_status[0] <= soclinux_uart_tx0;
    soclinux_uart_status_status[1] <= soclinux_uart_rx0;
end
assign csr_bankarray_csrbank13_ev_status_w = soclinux_uart_status_status[1:0];
assign soclinux_uart_status_we = csr_bankarray_csrbank13_ev_status_we;
always @(*) begin
    soclinux_uart_pending_status <= 2'd0;
    soclinux_uart_pending_status[0] <= soclinux_uart_tx1;
    soclinux_uart_pending_status[1] <= soclinux_uart_rx1;
end
assign csr_bankarray_csrbank13_ev_pending_w = soclinux_uart_pending_status[1:0];
assign soclinux_uart_pending_we = csr_bankarray_csrbank13_ev_pending_we;
assign soclinux_uart_tx2 = soclinux_uart_enable_storage[0];
assign soclinux_uart_rx2 = soclinux_uart_enable_storage[1];
assign csr_bankarray_csrbank13_ev_enable0_w = soclinux_uart_enable_storage[1:0];
assign csr_bankarray_csrbank13_txempty_w = soclinux_uart_txempty_status;
assign soclinux_uart_txempty_we = csr_bankarray_csrbank13_txempty_we;
assign csr_bankarray_csrbank13_rxfull_w = soclinux_uart_rxfull_status;
assign soclinux_uart_rxfull_we = csr_bankarray_csrbank13_rxfull_we;
assign csr_bankarray_csrbank14_sel = (csr_bankarray_interface14_bank_bus_adr[13:9] == 4'd15);
assign csr_bankarray_csrbank14_temperature_r = csr_bankarray_interface14_bank_bus_dat_w[11:0];
always @(*) begin
    csr_bankarray_csrbank14_temperature_we <= 1'd0;
    csr_bankarray_csrbank14_temperature_re <= 1'd0;
    if ((csr_bankarray_csrbank14_sel & (csr_bankarray_interface14_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank14_temperature_re <= csr_bankarray_interface14_bank_bus_we;
        csr_bankarray_csrbank14_temperature_we <= (~csr_bankarray_interface14_bank_bus_we);
    end
end
assign csr_bankarray_csrbank14_vccint_r = csr_bankarray_interface14_bank_bus_dat_w[11:0];
always @(*) begin
    csr_bankarray_csrbank14_vccint_we <= 1'd0;
    csr_bankarray_csrbank14_vccint_re <= 1'd0;
    if ((csr_bankarray_csrbank14_sel & (csr_bankarray_interface14_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank14_vccint_re <= csr_bankarray_interface14_bank_bus_we;
        csr_bankarray_csrbank14_vccint_we <= (~csr_bankarray_interface14_bank_bus_we);
    end
end
assign csr_bankarray_csrbank14_vccaux_r = csr_bankarray_interface14_bank_bus_dat_w[11:0];
always @(*) begin
    csr_bankarray_csrbank14_vccaux_re <= 1'd0;
    csr_bankarray_csrbank14_vccaux_we <= 1'd0;
    if ((csr_bankarray_csrbank14_sel & (csr_bankarray_interface14_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank14_vccaux_re <= csr_bankarray_interface14_bank_bus_we;
        csr_bankarray_csrbank14_vccaux_we <= (~csr_bankarray_interface14_bank_bus_we);
    end
end
assign csr_bankarray_csrbank14_vccbram_r = csr_bankarray_interface14_bank_bus_dat_w[11:0];
always @(*) begin
    csr_bankarray_csrbank14_vccbram_re <= 1'd0;
    csr_bankarray_csrbank14_vccbram_we <= 1'd0;
    if ((csr_bankarray_csrbank14_sel & (csr_bankarray_interface14_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank14_vccbram_re <= csr_bankarray_interface14_bank_bus_we;
        csr_bankarray_csrbank14_vccbram_we <= (~csr_bankarray_interface14_bank_bus_we);
    end
end
assign csr_bankarray_csrbank14_eoc_r = csr_bankarray_interface14_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank14_eoc_we <= 1'd0;
    csr_bankarray_csrbank14_eoc_re <= 1'd0;
    if ((csr_bankarray_csrbank14_sel & (csr_bankarray_interface14_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank14_eoc_re <= csr_bankarray_interface14_bank_bus_we;
        csr_bankarray_csrbank14_eoc_we <= (~csr_bankarray_interface14_bank_bus_we);
    end
end
assign csr_bankarray_csrbank14_eos_r = csr_bankarray_interface14_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank14_eos_we <= 1'd0;
    csr_bankarray_csrbank14_eos_re <= 1'd0;
    if ((csr_bankarray_csrbank14_sel & (csr_bankarray_interface14_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank14_eos_re <= csr_bankarray_interface14_bank_bus_we;
        csr_bankarray_csrbank14_eos_we <= (~csr_bankarray_interface14_bank_bus_we);
    end
end
assign csr_bankarray_csrbank14_temperature_w = temperature_status[11:0];
assign temperature_we = csr_bankarray_csrbank14_temperature_we;
assign csr_bankarray_csrbank14_vccint_w = vccint_status[11:0];
assign vccint_we = csr_bankarray_csrbank14_vccint_we;
assign csr_bankarray_csrbank14_vccaux_w = vccaux_status[11:0];
assign vccaux_we = csr_bankarray_csrbank14_vccaux_we;
assign csr_bankarray_csrbank14_vccbram_w = vccbram_status[11:0];
assign vccbram_we = csr_bankarray_csrbank14_vccbram_we;
assign csr_bankarray_csrbank14_eoc_w = eoc_status;
assign eoc_we = csr_bankarray_csrbank14_eoc_we;
assign csr_bankarray_csrbank14_eos_w = eos_status;
assign eos_we = csr_bankarray_csrbank14_eos_we;
assign csr_interconnect_adr = soclinux_adr;
assign csr_interconnect_we = soclinux_we;
assign csr_interconnect_dat_w = soclinux_dat_w;
assign soclinux_dat_r = csr_interconnect_dat_r;
assign csr_bankarray_interface0_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface1_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface2_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface3_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface4_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface5_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface6_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface7_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface8_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface9_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface10_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface11_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface12_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface13_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface14_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_sram_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface0_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface1_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface2_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface3_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface4_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface5_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface6_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface7_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface8_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface9_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface10_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface11_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface12_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface13_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface14_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_sram_bus_we = csr_interconnect_we;
assign csr_bankarray_interface0_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface1_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface2_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface3_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface4_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface5_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface6_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface7_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface8_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface9_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface10_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface11_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface12_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface13_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface14_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_sram_bus_dat_w = csr_interconnect_dat_w;
assign csr_interconnect_dat_r = (((((((((((((((csr_bankarray_interface0_bank_bus_dat_r | csr_bankarray_interface1_bank_bus_dat_r) | csr_bankarray_interface2_bank_bus_dat_r) | csr_bankarray_interface3_bank_bus_dat_r) | csr_bankarray_interface4_bank_bus_dat_r) | csr_bankarray_interface5_bank_bus_dat_r) | csr_bankarray_interface6_bank_bus_dat_r) | csr_bankarray_interface7_bank_bus_dat_r) | csr_bankarray_interface8_bank_bus_dat_r) | csr_bankarray_interface9_bank_bus_dat_r) | csr_bankarray_interface10_bank_bus_dat_r) | csr_bankarray_interface11_bank_bus_dat_r) | csr_bankarray_interface12_bank_bus_dat_r) | csr_bankarray_interface13_bank_bus_dat_r) | csr_bankarray_interface14_bank_bus_dat_r) | csr_bankarray_sram_bus_dat_r);
assign t_slice_proxy0 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy1 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy2 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy3 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy4 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy5 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy6 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy7 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy8 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy9 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy10 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy11 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy12 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy13 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy14 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy15 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy16 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy17 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy18 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy19 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy20 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy21 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy22 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy23 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy24 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy25 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy26 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy27 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy28 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy29 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy30 = (~soclinux_ethmac_tx_crc_next);
assign t_slice_proxy31 = (~soclinux_ethmac_tx_crc_next);
assign cases_slice_proxy = {soclinux_ethmac_tx_crc_value, soclinux_ethmac_tx_crc_sink_payload_data[7:0]};
assign t_slice_proxy32 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy33 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy34 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy35 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy36 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy37 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy38 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy39 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy40 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy41 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy42 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy43 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy44 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy45 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy46 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy47 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy48 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy49 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy50 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy51 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy52 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy53 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy54 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy55 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy56 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy57 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy58 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy59 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy60 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy61 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy62 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
assign t_slice_proxy63 = (~soclinux_ethmac_liteethmaccrc32checker_crc_next);
always @(*) begin
    rhs_array_muxed0 <= 30'd0;
    case (socbushandler0_grant)
        default: begin
            rhs_array_muxed0 <= soclinux_socbushandler_adapted_interface_adr;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed1 <= 32'd0;
    case (socbushandler0_grant)
        default: begin
            rhs_array_muxed1 <= soclinux_socbushandler_adapted_interface_dat_w;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed2 <= 4'd0;
    case (socbushandler0_grant)
        default: begin
            rhs_array_muxed2 <= soclinux_socbushandler_adapted_interface_sel;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed3 <= 1'd0;
    case (socbushandler0_grant)
        default: begin
            rhs_array_muxed3 <= soclinux_socbushandler_adapted_interface_cyc;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed4 <= 1'd0;
    case (socbushandler0_grant)
        default: begin
            rhs_array_muxed4 <= soclinux_socbushandler_adapted_interface_stb;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed5 <= 1'd0;
    case (socbushandler0_grant)
        default: begin
            rhs_array_muxed5 <= soclinux_socbushandler_adapted_interface_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed6 <= 3'd0;
    case (socbushandler0_grant)
        default: begin
            rhs_array_muxed6 <= soclinux_socbushandler_adapted_interface_cti;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed7 <= 2'd0;
    case (socbushandler0_grant)
        default: begin
            rhs_array_muxed7 <= soclinux_socbushandler_adapted_interface_bte;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed8 <= 32'd0;
    case (socbushandler1_grant)
        1'd0: begin
            rhs_array_muxed8 <= interface0_bus_adr;
        end
        default: begin
            rhs_array_muxed8 <= interface1_bus_adr;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed9 <= 32'd0;
    case (socbushandler1_grant)
        1'd0: begin
            rhs_array_muxed9 <= interface0_bus_dat_w;
        end
        default: begin
            rhs_array_muxed9 <= interface1_bus_dat_w;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed10 <= 4'd0;
    case (socbushandler1_grant)
        1'd0: begin
            rhs_array_muxed10 <= interface0_bus_sel;
        end
        default: begin
            rhs_array_muxed10 <= interface1_bus_sel;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed11 <= 1'd0;
    case (socbushandler1_grant)
        1'd0: begin
            rhs_array_muxed11 <= interface0_bus_cyc;
        end
        default: begin
            rhs_array_muxed11 <= interface1_bus_cyc;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed12 <= 1'd0;
    case (socbushandler1_grant)
        1'd0: begin
            rhs_array_muxed12 <= interface0_bus_stb;
        end
        default: begin
            rhs_array_muxed12 <= interface1_bus_stb;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed13 <= 1'd0;
    case (socbushandler1_grant)
        1'd0: begin
            rhs_array_muxed13 <= interface0_bus_we;
        end
        default: begin
            rhs_array_muxed13 <= interface1_bus_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed14 <= 3'd0;
    case (socbushandler1_grant)
        1'd0: begin
            rhs_array_muxed14 <= interface0_bus_cti;
        end
        default: begin
            rhs_array_muxed14 <= interface1_bus_cti;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed15 <= 2'd0;
    case (socbushandler1_grant)
        1'd0: begin
            rhs_array_muxed15 <= interface0_bus_bte;
        end
        default: begin
            rhs_array_muxed15 <= interface1_bus_bte;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed16 <= 1'd0;
    case (soclinux_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed16 <= soclinux_sdram_choose_cmd_valids[0];
        end
        1'd1: begin
            rhs_array_muxed16 <= soclinux_sdram_choose_cmd_valids[1];
        end
        2'd2: begin
            rhs_array_muxed16 <= soclinux_sdram_choose_cmd_valids[2];
        end
        2'd3: begin
            rhs_array_muxed16 <= soclinux_sdram_choose_cmd_valids[3];
        end
        3'd4: begin
            rhs_array_muxed16 <= soclinux_sdram_choose_cmd_valids[4];
        end
        3'd5: begin
            rhs_array_muxed16 <= soclinux_sdram_choose_cmd_valids[5];
        end
        3'd6: begin
            rhs_array_muxed16 <= soclinux_sdram_choose_cmd_valids[6];
        end
        default: begin
            rhs_array_muxed16 <= soclinux_sdram_choose_cmd_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_array_muxed17 <= 14'd0;
    case (soclinux_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed17 <= soclinux_sdram_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_array_muxed17 <= soclinux_sdram_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_array_muxed17 <= soclinux_sdram_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_array_muxed17 <= soclinux_sdram_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_array_muxed17 <= soclinux_sdram_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_array_muxed17 <= soclinux_sdram_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_array_muxed17 <= soclinux_sdram_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_array_muxed17 <= soclinux_sdram_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed18 <= 3'd0;
    case (soclinux_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed18 <= soclinux_sdram_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_array_muxed18 <= soclinux_sdram_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_array_muxed18 <= soclinux_sdram_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_array_muxed18 <= soclinux_sdram_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_array_muxed18 <= soclinux_sdram_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_array_muxed18 <= soclinux_sdram_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_array_muxed18 <= soclinux_sdram_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_array_muxed18 <= soclinux_sdram_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed19 <= 1'd0;
    case (soclinux_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed19 <= soclinux_sdram_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_array_muxed19 <= soclinux_sdram_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_array_muxed19 <= soclinux_sdram_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_array_muxed19 <= soclinux_sdram_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_array_muxed19 <= soclinux_sdram_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_array_muxed19 <= soclinux_sdram_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_array_muxed19 <= soclinux_sdram_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_array_muxed19 <= soclinux_sdram_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed20 <= 1'd0;
    case (soclinux_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed20 <= soclinux_sdram_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_array_muxed20 <= soclinux_sdram_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_array_muxed20 <= soclinux_sdram_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_array_muxed20 <= soclinux_sdram_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_array_muxed20 <= soclinux_sdram_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_array_muxed20 <= soclinux_sdram_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_array_muxed20 <= soclinux_sdram_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_array_muxed20 <= soclinux_sdram_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed21 <= 1'd0;
    case (soclinux_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed21 <= soclinux_sdram_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_array_muxed21 <= soclinux_sdram_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_array_muxed21 <= soclinux_sdram_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_array_muxed21 <= soclinux_sdram_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_array_muxed21 <= soclinux_sdram_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_array_muxed21 <= soclinux_sdram_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_array_muxed21 <= soclinux_sdram_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_array_muxed21 <= soclinux_sdram_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_array_muxed0 <= 1'd0;
    case (soclinux_sdram_choose_cmd_grant)
        1'd0: begin
            t_array_muxed0 <= soclinux_sdram_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_array_muxed0 <= soclinux_sdram_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_array_muxed0 <= soclinux_sdram_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_array_muxed0 <= soclinux_sdram_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_array_muxed0 <= soclinux_sdram_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_array_muxed0 <= soclinux_sdram_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_array_muxed0 <= soclinux_sdram_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_array_muxed0 <= soclinux_sdram_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_array_muxed1 <= 1'd0;
    case (soclinux_sdram_choose_cmd_grant)
        1'd0: begin
            t_array_muxed1 <= soclinux_sdram_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_array_muxed1 <= soclinux_sdram_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_array_muxed1 <= soclinux_sdram_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_array_muxed1 <= soclinux_sdram_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_array_muxed1 <= soclinux_sdram_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_array_muxed1 <= soclinux_sdram_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_array_muxed1 <= soclinux_sdram_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_array_muxed1 <= soclinux_sdram_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_array_muxed2 <= 1'd0;
    case (soclinux_sdram_choose_cmd_grant)
        1'd0: begin
            t_array_muxed2 <= soclinux_sdram_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_array_muxed2 <= soclinux_sdram_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_array_muxed2 <= soclinux_sdram_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_array_muxed2 <= soclinux_sdram_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_array_muxed2 <= soclinux_sdram_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_array_muxed2 <= soclinux_sdram_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_array_muxed2 <= soclinux_sdram_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_array_muxed2 <= soclinux_sdram_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed22 <= 1'd0;
    case (soclinux_sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed22 <= soclinux_sdram_choose_req_valids[0];
        end
        1'd1: begin
            rhs_array_muxed22 <= soclinux_sdram_choose_req_valids[1];
        end
        2'd2: begin
            rhs_array_muxed22 <= soclinux_sdram_choose_req_valids[2];
        end
        2'd3: begin
            rhs_array_muxed22 <= soclinux_sdram_choose_req_valids[3];
        end
        3'd4: begin
            rhs_array_muxed22 <= soclinux_sdram_choose_req_valids[4];
        end
        3'd5: begin
            rhs_array_muxed22 <= soclinux_sdram_choose_req_valids[5];
        end
        3'd6: begin
            rhs_array_muxed22 <= soclinux_sdram_choose_req_valids[6];
        end
        default: begin
            rhs_array_muxed22 <= soclinux_sdram_choose_req_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_array_muxed23 <= 14'd0;
    case (soclinux_sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed23 <= soclinux_sdram_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_array_muxed23 <= soclinux_sdram_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_array_muxed23 <= soclinux_sdram_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_array_muxed23 <= soclinux_sdram_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_array_muxed23 <= soclinux_sdram_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_array_muxed23 <= soclinux_sdram_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_array_muxed23 <= soclinux_sdram_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_array_muxed23 <= soclinux_sdram_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed24 <= 3'd0;
    case (soclinux_sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed24 <= soclinux_sdram_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_array_muxed24 <= soclinux_sdram_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_array_muxed24 <= soclinux_sdram_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_array_muxed24 <= soclinux_sdram_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_array_muxed24 <= soclinux_sdram_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_array_muxed24 <= soclinux_sdram_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_array_muxed24 <= soclinux_sdram_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_array_muxed24 <= soclinux_sdram_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed25 <= 1'd0;
    case (soclinux_sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed25 <= soclinux_sdram_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_array_muxed25 <= soclinux_sdram_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_array_muxed25 <= soclinux_sdram_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_array_muxed25 <= soclinux_sdram_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_array_muxed25 <= soclinux_sdram_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_array_muxed25 <= soclinux_sdram_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_array_muxed25 <= soclinux_sdram_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_array_muxed25 <= soclinux_sdram_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed26 <= 1'd0;
    case (soclinux_sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed26 <= soclinux_sdram_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_array_muxed26 <= soclinux_sdram_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_array_muxed26 <= soclinux_sdram_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_array_muxed26 <= soclinux_sdram_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_array_muxed26 <= soclinux_sdram_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_array_muxed26 <= soclinux_sdram_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_array_muxed26 <= soclinux_sdram_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_array_muxed26 <= soclinux_sdram_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed27 <= 1'd0;
    case (soclinux_sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed27 <= soclinux_sdram_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_array_muxed27 <= soclinux_sdram_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_array_muxed27 <= soclinux_sdram_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_array_muxed27 <= soclinux_sdram_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_array_muxed27 <= soclinux_sdram_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_array_muxed27 <= soclinux_sdram_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_array_muxed27 <= soclinux_sdram_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_array_muxed27 <= soclinux_sdram_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_array_muxed3 <= 1'd0;
    case (soclinux_sdram_choose_req_grant)
        1'd0: begin
            t_array_muxed3 <= soclinux_sdram_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_array_muxed3 <= soclinux_sdram_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_array_muxed3 <= soclinux_sdram_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_array_muxed3 <= soclinux_sdram_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_array_muxed3 <= soclinux_sdram_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_array_muxed3 <= soclinux_sdram_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_array_muxed3 <= soclinux_sdram_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_array_muxed3 <= soclinux_sdram_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_array_muxed4 <= 1'd0;
    case (soclinux_sdram_choose_req_grant)
        1'd0: begin
            t_array_muxed4 <= soclinux_sdram_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_array_muxed4 <= soclinux_sdram_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_array_muxed4 <= soclinux_sdram_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_array_muxed4 <= soclinux_sdram_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_array_muxed4 <= soclinux_sdram_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_array_muxed4 <= soclinux_sdram_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_array_muxed4 <= soclinux_sdram_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_array_muxed4 <= soclinux_sdram_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_array_muxed5 <= 1'd0;
    case (soclinux_sdram_choose_req_grant)
        1'd0: begin
            t_array_muxed5 <= soclinux_sdram_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_array_muxed5 <= soclinux_sdram_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_array_muxed5 <= soclinux_sdram_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_array_muxed5 <= soclinux_sdram_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_array_muxed5 <= soclinux_sdram_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_array_muxed5 <= soclinux_sdram_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_array_muxed5 <= soclinux_sdram_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_array_muxed5 <= soclinux_sdram_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed28 <= 21'd0;
    case (soclinux_roundrobin0_grant)
        default: begin
            rhs_array_muxed28 <= {soclinux_port_cmd_payload_addr[23:10], soclinux_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed29 <= 1'd0;
    case (soclinux_roundrobin0_grant)
        default: begin
            rhs_array_muxed29 <= soclinux_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed30 <= 1'd0;
    case (soclinux_roundrobin0_grant)
        default: begin
            rhs_array_muxed30 <= (((soclinux_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((soclinux_locked0 | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed31 <= 21'd0;
    case (soclinux_roundrobin1_grant)
        default: begin
            rhs_array_muxed31 <= {soclinux_port_cmd_payload_addr[23:10], soclinux_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed32 <= 1'd0;
    case (soclinux_roundrobin1_grant)
        default: begin
            rhs_array_muxed32 <= soclinux_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed33 <= 1'd0;
    case (soclinux_roundrobin1_grant)
        default: begin
            rhs_array_muxed33 <= (((soclinux_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((soclinux_locked1 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed34 <= 21'd0;
    case (soclinux_roundrobin2_grant)
        default: begin
            rhs_array_muxed34 <= {soclinux_port_cmd_payload_addr[23:10], soclinux_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed35 <= 1'd0;
    case (soclinux_roundrobin2_grant)
        default: begin
            rhs_array_muxed35 <= soclinux_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed36 <= 1'd0;
    case (soclinux_roundrobin2_grant)
        default: begin
            rhs_array_muxed36 <= (((soclinux_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((soclinux_locked2 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed37 <= 21'd0;
    case (soclinux_roundrobin3_grant)
        default: begin
            rhs_array_muxed37 <= {soclinux_port_cmd_payload_addr[23:10], soclinux_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed38 <= 1'd0;
    case (soclinux_roundrobin3_grant)
        default: begin
            rhs_array_muxed38 <= soclinux_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed39 <= 1'd0;
    case (soclinux_roundrobin3_grant)
        default: begin
            rhs_array_muxed39 <= (((soclinux_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((soclinux_locked3 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed40 <= 21'd0;
    case (soclinux_roundrobin4_grant)
        default: begin
            rhs_array_muxed40 <= {soclinux_port_cmd_payload_addr[23:10], soclinux_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed41 <= 1'd0;
    case (soclinux_roundrobin4_grant)
        default: begin
            rhs_array_muxed41 <= soclinux_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed42 <= 1'd0;
    case (soclinux_roundrobin4_grant)
        default: begin
            rhs_array_muxed42 <= (((soclinux_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((soclinux_locked4 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed43 <= 21'd0;
    case (soclinux_roundrobin5_grant)
        default: begin
            rhs_array_muxed43 <= {soclinux_port_cmd_payload_addr[23:10], soclinux_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed44 <= 1'd0;
    case (soclinux_roundrobin5_grant)
        default: begin
            rhs_array_muxed44 <= soclinux_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed45 <= 1'd0;
    case (soclinux_roundrobin5_grant)
        default: begin
            rhs_array_muxed45 <= (((soclinux_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((soclinux_locked5 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed46 <= 21'd0;
    case (soclinux_roundrobin6_grant)
        default: begin
            rhs_array_muxed46 <= {soclinux_port_cmd_payload_addr[23:10], soclinux_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed47 <= 1'd0;
    case (soclinux_roundrobin6_grant)
        default: begin
            rhs_array_muxed47 <= soclinux_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed48 <= 1'd0;
    case (soclinux_roundrobin6_grant)
        default: begin
            rhs_array_muxed48 <= (((soclinux_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((soclinux_locked6 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank7_lock & (soclinux_roundrobin7_grant == 1'd0))))) & soclinux_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed49 <= 21'd0;
    case (soclinux_roundrobin7_grant)
        default: begin
            rhs_array_muxed49 <= {soclinux_port_cmd_payload_addr[23:10], soclinux_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed50 <= 1'd0;
    case (soclinux_roundrobin7_grant)
        default: begin
            rhs_array_muxed50 <= soclinux_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed51 <= 1'd0;
    case (soclinux_roundrobin7_grant)
        default: begin
            rhs_array_muxed51 <= (((soclinux_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((soclinux_locked7 | (soclinux_sdram_interface_bank0_lock & (soclinux_roundrobin0_grant == 1'd0))) | (soclinux_sdram_interface_bank1_lock & (soclinux_roundrobin1_grant == 1'd0))) | (soclinux_sdram_interface_bank2_lock & (soclinux_roundrobin2_grant == 1'd0))) | (soclinux_sdram_interface_bank3_lock & (soclinux_roundrobin3_grant == 1'd0))) | (soclinux_sdram_interface_bank4_lock & (soclinux_roundrobin4_grant == 1'd0))) | (soclinux_sdram_interface_bank5_lock & (soclinux_roundrobin5_grant == 1'd0))) | (soclinux_sdram_interface_bank6_lock & (soclinux_roundrobin6_grant == 1'd0))))) & soclinux_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    array_muxed0 <= 3'd0;
    case (soclinux_sdram_steerer_sel0)
        1'd0: begin
            array_muxed0 <= soclinux_sdram_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed0 <= soclinux_sdram_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed0 <= soclinux_sdram_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed0 <= soclinux_sdram_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed1 <= 14'd0;
    case (soclinux_sdram_steerer_sel0)
        1'd0: begin
            array_muxed1 <= soclinux_sdram_nop_a;
        end
        1'd1: begin
            array_muxed1 <= soclinux_sdram_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed1 <= soclinux_sdram_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed1 <= soclinux_sdram_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed2 <= 1'd0;
    case (soclinux_sdram_steerer_sel0)
        1'd0: begin
            array_muxed2 <= 1'd0;
        end
        1'd1: begin
            array_muxed2 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed2 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed2 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed3 <= 1'd0;
    case (soclinux_sdram_steerer_sel0)
        1'd0: begin
            array_muxed3 <= 1'd0;
        end
        1'd1: begin
            array_muxed3 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed3 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed3 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed4 <= 1'd0;
    case (soclinux_sdram_steerer_sel0)
        1'd0: begin
            array_muxed4 <= 1'd0;
        end
        1'd1: begin
            array_muxed4 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed4 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed4 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed5 <= 1'd0;
    case (soclinux_sdram_steerer_sel0)
        1'd0: begin
            array_muxed5 <= 1'd0;
        end
        1'd1: begin
            array_muxed5 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed5 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed5 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed6 <= 1'd0;
    case (soclinux_sdram_steerer_sel0)
        1'd0: begin
            array_muxed6 <= 1'd0;
        end
        1'd1: begin
            array_muxed6 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed6 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed6 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    array_muxed7 <= 3'd0;
    case (soclinux_sdram_steerer_sel1)
        1'd0: begin
            array_muxed7 <= soclinux_sdram_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed7 <= soclinux_sdram_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed7 <= soclinux_sdram_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed7 <= soclinux_sdram_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed8 <= 14'd0;
    case (soclinux_sdram_steerer_sel1)
        1'd0: begin
            array_muxed8 <= soclinux_sdram_nop_a;
        end
        1'd1: begin
            array_muxed8 <= soclinux_sdram_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed8 <= soclinux_sdram_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed8 <= soclinux_sdram_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed9 <= 1'd0;
    case (soclinux_sdram_steerer_sel1)
        1'd0: begin
            array_muxed9 <= 1'd0;
        end
        1'd1: begin
            array_muxed9 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed9 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed9 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed10 <= 1'd0;
    case (soclinux_sdram_steerer_sel1)
        1'd0: begin
            array_muxed10 <= 1'd0;
        end
        1'd1: begin
            array_muxed10 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed10 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed10 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed11 <= 1'd0;
    case (soclinux_sdram_steerer_sel1)
        1'd0: begin
            array_muxed11 <= 1'd0;
        end
        1'd1: begin
            array_muxed11 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed11 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed11 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed12 <= 1'd0;
    case (soclinux_sdram_steerer_sel1)
        1'd0: begin
            array_muxed12 <= 1'd0;
        end
        1'd1: begin
            array_muxed12 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed12 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed12 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed13 <= 1'd0;
    case (soclinux_sdram_steerer_sel1)
        1'd0: begin
            array_muxed13 <= 1'd0;
        end
        1'd1: begin
            array_muxed13 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed13 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed13 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    array_muxed14 <= 3'd0;
    case (soclinux_sdram_steerer_sel2)
        1'd0: begin
            array_muxed14 <= soclinux_sdram_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed14 <= soclinux_sdram_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed14 <= soclinux_sdram_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed14 <= soclinux_sdram_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed15 <= 14'd0;
    case (soclinux_sdram_steerer_sel2)
        1'd0: begin
            array_muxed15 <= soclinux_sdram_nop_a;
        end
        1'd1: begin
            array_muxed15 <= soclinux_sdram_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed15 <= soclinux_sdram_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed15 <= soclinux_sdram_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed16 <= 1'd0;
    case (soclinux_sdram_steerer_sel2)
        1'd0: begin
            array_muxed16 <= 1'd0;
        end
        1'd1: begin
            array_muxed16 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed16 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed16 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed17 <= 1'd0;
    case (soclinux_sdram_steerer_sel2)
        1'd0: begin
            array_muxed17 <= 1'd0;
        end
        1'd1: begin
            array_muxed17 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed17 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed17 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed18 <= 1'd0;
    case (soclinux_sdram_steerer_sel2)
        1'd0: begin
            array_muxed18 <= 1'd0;
        end
        1'd1: begin
            array_muxed18 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed18 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed18 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed19 <= 1'd0;
    case (soclinux_sdram_steerer_sel2)
        1'd0: begin
            array_muxed19 <= 1'd0;
        end
        1'd1: begin
            array_muxed19 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed19 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed19 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed20 <= 1'd0;
    case (soclinux_sdram_steerer_sel2)
        1'd0: begin
            array_muxed20 <= 1'd0;
        end
        1'd1: begin
            array_muxed20 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed20 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed20 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    array_muxed21 <= 3'd0;
    case (soclinux_sdram_steerer_sel3)
        1'd0: begin
            array_muxed21 <= soclinux_sdram_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed21 <= soclinux_sdram_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed21 <= soclinux_sdram_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed21 <= soclinux_sdram_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed22 <= 14'd0;
    case (soclinux_sdram_steerer_sel3)
        1'd0: begin
            array_muxed22 <= soclinux_sdram_nop_a;
        end
        1'd1: begin
            array_muxed22 <= soclinux_sdram_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed22 <= soclinux_sdram_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed22 <= soclinux_sdram_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed23 <= 1'd0;
    case (soclinux_sdram_steerer_sel3)
        1'd0: begin
            array_muxed23 <= 1'd0;
        end
        1'd1: begin
            array_muxed23 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed23 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed23 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed24 <= 1'd0;
    case (soclinux_sdram_steerer_sel3)
        1'd0: begin
            array_muxed24 <= 1'd0;
        end
        1'd1: begin
            array_muxed24 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed24 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed24 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed25 <= 1'd0;
    case (soclinux_sdram_steerer_sel3)
        1'd0: begin
            array_muxed25 <= 1'd0;
        end
        1'd1: begin
            array_muxed25 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed25 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed25 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed26 <= 1'd0;
    case (soclinux_sdram_steerer_sel3)
        1'd0: begin
            array_muxed26 <= 1'd0;
        end
        1'd1: begin
            array_muxed26 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed26 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed26 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed27 <= 1'd0;
    case (soclinux_sdram_steerer_sel3)
        1'd0: begin
            array_muxed27 <= 1'd0;
        end
        1'd1: begin
            array_muxed27 <= ((soclinux_sdram_choose_cmd_cmd_valid & soclinux_sdram_choose_cmd_cmd_ready) & soclinux_sdram_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed27 <= ((soclinux_sdram_choose_req_cmd_valid & soclinux_sdram_choose_req_cmd_ready) & soclinux_sdram_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed27 <= ((soclinux_sdram_cmd_valid & soclinux_sdram_cmd_ready) & soclinux_sdram_cmd_payload_is_write);
        end
    endcase
end
assign impl_xilinxasyncresetsynchronizerimpl0 = (~crg_locked);
assign impl_xilinxasyncresetsynchronizerimpl1 = (~crg_locked);
assign impl_xilinxasyncresetsynchronizerimpl2 = (~crg_locked);
assign soclinux_rx_rx = impl_xilinxmultiregimpl0_regs1;
assign ethphy_toggle_o = impl_xilinxmultiregimpl1_regs1;
always @(*) begin
    ethphy__r_status <= 1'd0;
    ethphy__r_status <= ethphy_r;
    ethphy__r_status <= impl_xilinxmultiregimpl2_regs1;
end
assign soclinux_ethmac_tx_cdc_cdc_produce_rdomain = impl_xilinxmultiregimpl3_regs1;
assign soclinux_ethmac_tx_cdc_cdc_consume_wdomain = impl_xilinxmultiregimpl4_regs1;
assign soclinux_ethmac_pulsesynchronizer0_toggle_o = impl_xilinxmultiregimpl5_regs1;
assign soclinux_ethmac_pulsesynchronizer1_toggle_o = impl_xilinxmultiregimpl6_regs1;
assign soclinux_ethmac_rx_cdc_cdc_produce_rdomain = impl_xilinxmultiregimpl7_regs1;
assign soclinux_ethmac_rx_cdc_cdc_consume_wdomain = impl_xilinxmultiregimpl8_regs1;
assign impl_xilinxasyncresetsynchronizerimpl5 = (~crg_locked);


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge eth_rx_clk) begin
    ethphy_eth_counter <= (ethphy_eth_counter + 1'd1);
    if (ethphy_i) begin
        ethphy_toggle_i <= (~ethphy_toggle_i);
    end
    ethphy_liteethphygmiimiirx_pads_d_rx_dv <= eth_rx_dv;
    ethphy_liteethphygmiimiirx_pads_d_rx_data <= eth_rx_data;
    ethphy_liteethphygmiimiirx_gmii_rx_dv_d <= ethphy_liteethphygmiimiirx_pads_d_rx_dv;
    ethphy_liteethphygmiimiirx_gmii_rx_source_valid <= ethphy_liteethphygmiimiirx_pads_d_rx_dv;
    ethphy_liteethphygmiimiirx_gmii_rx_source_payload_data <= ethphy_liteethphygmiimiirx_pads_d_rx_data;
    ethphy_liteethphygmiimiirx_converter_reset <= (~ethphy_liteethphygmiimiirx_pads_d_rx_dv);
    ethphy_liteethphygmiimiirx_converter_sink_valid <= 1'd1;
    ethphy_liteethphygmiimiirx_converter_sink_payload_data <= ethphy_liteethphygmiimiirx_pads_d_rx_data;
    if (ethphy_liteethphygmiimiirx_converter_converter_source_ready) begin
        ethphy_liteethphygmiimiirx_converter_converter_strobe_all <= 1'd0;
    end
    if (ethphy_liteethphygmiimiirx_converter_converter_load_part) begin
        if (((ethphy_liteethphygmiimiirx_converter_converter_demux == 1'd1) | ethphy_liteethphygmiimiirx_converter_converter_sink_last)) begin
            ethphy_liteethphygmiimiirx_converter_converter_demux <= 1'd0;
            ethphy_liteethphygmiimiirx_converter_converter_strobe_all <= 1'd1;
        end else begin
            ethphy_liteethphygmiimiirx_converter_converter_demux <= (ethphy_liteethphygmiimiirx_converter_converter_demux + 1'd1);
        end
    end
    if ((ethphy_liteethphygmiimiirx_converter_converter_source_valid & ethphy_liteethphygmiimiirx_converter_converter_source_ready)) begin
        if ((ethphy_liteethphygmiimiirx_converter_converter_sink_valid & ethphy_liteethphygmiimiirx_converter_converter_sink_ready)) begin
            ethphy_liteethphygmiimiirx_converter_converter_source_first <= ethphy_liteethphygmiimiirx_converter_converter_sink_first;
            ethphy_liteethphygmiimiirx_converter_converter_source_last <= ethphy_liteethphygmiimiirx_converter_converter_sink_last;
        end else begin
            ethphy_liteethphygmiimiirx_converter_converter_source_first <= 1'd0;
            ethphy_liteethphygmiimiirx_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((ethphy_liteethphygmiimiirx_converter_converter_sink_valid & ethphy_liteethphygmiimiirx_converter_converter_sink_ready)) begin
            ethphy_liteethphygmiimiirx_converter_converter_source_first <= (ethphy_liteethphygmiimiirx_converter_converter_sink_first | ethphy_liteethphygmiimiirx_converter_converter_source_first);
            ethphy_liteethphygmiimiirx_converter_converter_source_last <= (ethphy_liteethphygmiimiirx_converter_converter_sink_last | ethphy_liteethphygmiimiirx_converter_converter_source_last);
        end
    end
    if (ethphy_liteethphygmiimiirx_converter_converter_load_part) begin
        case (ethphy_liteethphygmiimiirx_converter_converter_demux)
            1'd0: begin
                ethphy_liteethphygmiimiirx_converter_converter_source_payload_data[3:0] <= ethphy_liteethphygmiimiirx_converter_converter_sink_payload_data;
            end
            1'd1: begin
                ethphy_liteethphygmiimiirx_converter_converter_source_payload_data[7:4] <= ethphy_liteethphygmiimiirx_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (ethphy_liteethphygmiimiirx_converter_converter_load_part) begin
        ethphy_liteethphygmiimiirx_converter_converter_source_payload_valid_token_count <= (ethphy_liteethphygmiimiirx_converter_converter_demux + 1'd1);
    end
    if (ethphy_liteethphygmiimiirx_converter_reset) begin
        ethphy_liteethphygmiimiirx_converter_converter_source_payload_data <= 8'd0;
        ethphy_liteethphygmiimiirx_converter_converter_source_payload_valid_token_count <= 2'd0;
        ethphy_liteethphygmiimiirx_converter_converter_demux <= 1'd0;
        ethphy_liteethphygmiimiirx_converter_converter_strobe_all <= 1'd0;
    end
    soclinux_rxdatapath_liteethmacpreamblechecker_state <= soclinux_rxdatapath_liteethmacpreamblechecker_next_state;
    if (soclinux_ethmac_pulsesynchronizer0_i) begin
        soclinux_ethmac_pulsesynchronizer0_toggle_i <= (~soclinux_ethmac_pulsesynchronizer0_toggle_i);
    end
    if (soclinux_ethmac_liteethmaccrc32checker_crc_ce) begin
        soclinux_ethmac_liteethmaccrc32checker_crc_reg <= soclinux_ethmac_liteethmaccrc32checker_crc_next;
    end
    if (soclinux_ethmac_liteethmaccrc32checker_crc_reset) begin
        soclinux_ethmac_liteethmaccrc32checker_crc_reg <= 32'd4294967295;
    end
    if (((soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we & soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable) & (~soclinux_ethmac_liteethmaccrc32checker_syncfifo_replace))) begin
        if ((soclinux_ethmac_liteethmaccrc32checker_syncfifo_produce == 3'd4)) begin
            soclinux_ethmac_liteethmaccrc32checker_syncfifo_produce <= 1'd0;
        end else begin
            soclinux_ethmac_liteethmaccrc32checker_syncfifo_produce <= (soclinux_ethmac_liteethmaccrc32checker_syncfifo_produce + 1'd1);
        end
    end
    if (soclinux_ethmac_liteethmaccrc32checker_syncfifo_do_read) begin
        if ((soclinux_ethmac_liteethmaccrc32checker_syncfifo_consume == 3'd4)) begin
            soclinux_ethmac_liteethmaccrc32checker_syncfifo_consume <= 1'd0;
        end else begin
            soclinux_ethmac_liteethmaccrc32checker_syncfifo_consume <= (soclinux_ethmac_liteethmaccrc32checker_syncfifo_consume + 1'd1);
        end
    end
    if (((soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we & soclinux_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable) & (~soclinux_ethmac_liteethmaccrc32checker_syncfifo_replace))) begin
        if ((~soclinux_ethmac_liteethmaccrc32checker_syncfifo_do_read)) begin
            soclinux_ethmac_liteethmaccrc32checker_syncfifo_level <= (soclinux_ethmac_liteethmaccrc32checker_syncfifo_level + 1'd1);
        end
    end else begin
        if (soclinux_ethmac_liteethmaccrc32checker_syncfifo_do_read) begin
            soclinux_ethmac_liteethmaccrc32checker_syncfifo_level <= (soclinux_ethmac_liteethmaccrc32checker_syncfifo_level - 1'd1);
        end
    end
    if (soclinux_ethmac_liteethmaccrc32checker_fifo_reset) begin
        soclinux_ethmac_liteethmaccrc32checker_syncfifo_level <= 3'd0;
        soclinux_ethmac_liteethmaccrc32checker_syncfifo_produce <= 3'd0;
        soclinux_ethmac_liteethmaccrc32checker_syncfifo_consume <= 3'd0;
    end
    soclinux_rxdatapath_bufferizeendpoints_state <= soclinux_rxdatapath_bufferizeendpoints_next_state;
    if (soclinux_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value_ce0) begin
        soclinux_ethmac_liteethmaccrc32checker_last_be <= soclinux_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value0;
    end
    if (soclinux_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value_ce1) begin
        soclinux_ethmac_liteethmaccrc32checker_crc_error1 <= soclinux_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value1;
    end
    if (((~soclinux_ethmac_bufferizeendpoints_pipe_valid_source_valid) | soclinux_ethmac_bufferizeendpoints_pipe_valid_source_ready)) begin
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_valid <= soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_valid;
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_first <= soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_first;
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_last <= soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_last;
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_data <= soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_payload_data;
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_last_be <= soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_payload_last_be;
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_error <= soclinux_ethmac_bufferizeendpoints_pipe_valid_sink_payload_error;
    end
    if (soclinux_ethmac_pulsesynchronizer1_i) begin
        soclinux_ethmac_pulsesynchronizer1_toggle_i <= (~soclinux_ethmac_pulsesynchronizer1_toggle_i);
    end
    if (soclinux_ethmac_rx_converter_converter_source_ready) begin
        soclinux_ethmac_rx_converter_converter_strobe_all <= 1'd0;
    end
    if (soclinux_ethmac_rx_converter_converter_load_part) begin
        if (((soclinux_ethmac_rx_converter_converter_demux == 2'd3) | soclinux_ethmac_rx_converter_converter_sink_last)) begin
            soclinux_ethmac_rx_converter_converter_demux <= 1'd0;
            soclinux_ethmac_rx_converter_converter_strobe_all <= 1'd1;
        end else begin
            soclinux_ethmac_rx_converter_converter_demux <= (soclinux_ethmac_rx_converter_converter_demux + 1'd1);
        end
    end
    if ((soclinux_ethmac_rx_converter_converter_source_valid & soclinux_ethmac_rx_converter_converter_source_ready)) begin
        if ((soclinux_ethmac_rx_converter_converter_sink_valid & soclinux_ethmac_rx_converter_converter_sink_ready)) begin
            soclinux_ethmac_rx_converter_converter_source_first <= soclinux_ethmac_rx_converter_converter_sink_first;
            soclinux_ethmac_rx_converter_converter_source_last <= soclinux_ethmac_rx_converter_converter_sink_last;
        end else begin
            soclinux_ethmac_rx_converter_converter_source_first <= 1'd0;
            soclinux_ethmac_rx_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((soclinux_ethmac_rx_converter_converter_sink_valid & soclinux_ethmac_rx_converter_converter_sink_ready)) begin
            soclinux_ethmac_rx_converter_converter_source_first <= (soclinux_ethmac_rx_converter_converter_sink_first | soclinux_ethmac_rx_converter_converter_source_first);
            soclinux_ethmac_rx_converter_converter_source_last <= (soclinux_ethmac_rx_converter_converter_sink_last | soclinux_ethmac_rx_converter_converter_source_last);
        end
    end
    if (soclinux_ethmac_rx_converter_converter_load_part) begin
        case (soclinux_ethmac_rx_converter_converter_demux)
            1'd0: begin
                soclinux_ethmac_rx_converter_converter_source_payload_data[9:0] <= soclinux_ethmac_rx_converter_converter_sink_payload_data;
            end
            1'd1: begin
                soclinux_ethmac_rx_converter_converter_source_payload_data[19:10] <= soclinux_ethmac_rx_converter_converter_sink_payload_data;
            end
            2'd2: begin
                soclinux_ethmac_rx_converter_converter_source_payload_data[29:20] <= soclinux_ethmac_rx_converter_converter_sink_payload_data;
            end
            2'd3: begin
                soclinux_ethmac_rx_converter_converter_source_payload_data[39:30] <= soclinux_ethmac_rx_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (soclinux_ethmac_rx_converter_converter_load_part) begin
        soclinux_ethmac_rx_converter_converter_source_payload_valid_token_count <= (soclinux_ethmac_rx_converter_converter_demux + 1'd1);
    end
    soclinux_ethmac_rx_cdc_cdc_graycounter0_q_binary <= soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next_binary;
    soclinux_ethmac_rx_cdc_cdc_graycounter0_q <= soclinux_ethmac_rx_cdc_cdc_graycounter0_q_next;
    if (eth_rx_rst) begin
        ethphy_liteethphygmiimiirx_gmii_rx_source_valid <= 1'd0;
        ethphy_liteethphygmiimiirx_gmii_rx_source_payload_data <= 8'd0;
        ethphy_liteethphygmiimiirx_gmii_rx_dv_d <= 1'd0;
        ethphy_liteethphygmiimiirx_converter_sink_valid <= 1'd0;
        ethphy_liteethphygmiimiirx_converter_sink_payload_data <= 4'd0;
        ethphy_liteethphygmiimiirx_converter_converter_source_payload_data <= 8'd0;
        ethphy_liteethphygmiimiirx_converter_converter_source_payload_valid_token_count <= 2'd0;
        ethphy_liteethphygmiimiirx_converter_converter_demux <= 1'd0;
        ethphy_liteethphygmiimiirx_converter_converter_strobe_all <= 1'd0;
        ethphy_liteethphygmiimiirx_converter_reset <= 1'd0;
        soclinux_ethmac_liteethmaccrc32checker_crc_reg <= 32'd4294967295;
        soclinux_ethmac_liteethmaccrc32checker_syncfifo_level <= 3'd0;
        soclinux_ethmac_liteethmaccrc32checker_syncfifo_produce <= 3'd0;
        soclinux_ethmac_liteethmaccrc32checker_syncfifo_consume <= 3'd0;
        soclinux_ethmac_liteethmaccrc32checker_last_be <= 1'd0;
        soclinux_ethmac_liteethmaccrc32checker_crc_error1 <= 1'd0;
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_valid <= 1'd0;
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_data <= 8'd0;
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_last_be <= 1'd0;
        soclinux_ethmac_bufferizeendpoints_pipe_valid_source_payload_error <= 1'd0;
        soclinux_ethmac_rx_converter_converter_source_payload_data <= 40'd0;
        soclinux_ethmac_rx_converter_converter_source_payload_valid_token_count <= 3'd0;
        soclinux_ethmac_rx_converter_converter_demux <= 2'd0;
        soclinux_ethmac_rx_converter_converter_strobe_all <= 1'd0;
        soclinux_ethmac_rx_cdc_cdc_graycounter0_q <= 6'd0;
        soclinux_ethmac_rx_cdc_cdc_graycounter0_q_binary <= 6'd0;
        soclinux_rxdatapath_liteethmacpreamblechecker_state <= 1'd0;
        soclinux_rxdatapath_bufferizeendpoints_state <= 2'd0;
    end
    impl_xilinxmultiregimpl8_regs0 <= soclinux_ethmac_rx_cdc_cdc_graycounter1_q;
    impl_xilinxmultiregimpl8_regs1 <= impl_xilinxmultiregimpl8_regs0;
end

always @(posedge eth_tx_clk) begin
    if ((ethphy_mode0 == 1'd1)) begin
        eth_tx_en <= ethphy_liteethphygmiimiitx_mii_tx_pads_tx_en;
        eth_tx_data <= ethphy_liteethphygmiimiitx_mii_tx_pads_tx_data;
    end else begin
        eth_tx_en <= ethphy_liteethphygmiimiitx_gmii_tx_pads_tx_en;
        eth_tx_data <= ethphy_liteethphygmiimiitx_gmii_tx_pads_tx_data;
    end
    ethphy_liteethphygmiimiitx_gmii_tx_pads_tx_er <= 1'd0;
    ethphy_liteethphygmiimiitx_gmii_tx_pads_tx_en <= ethphy_liteethphygmiimiitx_gmii_tx_sink_valid;
    ethphy_liteethphygmiimiitx_gmii_tx_pads_tx_data <= ethphy_liteethphygmiimiitx_gmii_tx_sink_payload_data;
    ethphy_liteethphygmiimiitx_gmii_tx_sink_ready <= 1'd1;
    ethphy_liteethphygmiimiitx_mii_tx_pads_tx_er <= 1'd0;
    ethphy_liteethphygmiimiitx_mii_tx_pads_tx_en <= ethphy_liteethphygmiimiitx_converter_source_valid;
    ethphy_liteethphygmiimiitx_mii_tx_pads_tx_data <= ethphy_liteethphygmiimiitx_converter_source_payload_data;
    if ((ethphy_liteethphygmiimiitx_converter_converter_source_valid & ethphy_liteethphygmiimiitx_converter_converter_source_ready)) begin
        if (ethphy_liteethphygmiimiitx_converter_converter_last) begin
            ethphy_liteethphygmiimiitx_converter_converter_mux <= 1'd0;
        end else begin
            ethphy_liteethphygmiimiitx_converter_converter_mux <= (ethphy_liteethphygmiimiitx_converter_converter_mux + 1'd1);
        end
    end
    soclinux_ethmac_tx_cdc_cdc_graycounter1_q_binary <= soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next_binary;
    soclinux_ethmac_tx_cdc_cdc_graycounter1_q <= soclinux_ethmac_tx_cdc_cdc_graycounter1_q_next;
    if ((soclinux_ethmac_tx_converter_converter_source_valid & soclinux_ethmac_tx_converter_converter_source_ready)) begin
        if (soclinux_ethmac_tx_converter_converter_last) begin
            soclinux_ethmac_tx_converter_converter_mux <= 1'd0;
        end else begin
            soclinux_ethmac_tx_converter_converter_mux <= (soclinux_ethmac_tx_converter_converter_mux + 1'd1);
        end
    end
    soclinux_txdatapath_liteethmactxlastbe_state <= soclinux_txdatapath_liteethmactxlastbe_next_state;
    soclinux_txdatapath_liteethmacpaddinginserter_state <= soclinux_txdatapath_liteethmacpaddinginserter_next_state;
    if (soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce) begin
        soclinux_ethmac_tx_padding_counter <= soclinux_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value;
    end
    if (soclinux_ethmac_tx_crc_is_ongoing0) begin
        soclinux_ethmac_tx_crc_cnt <= 2'd3;
    end else begin
        if ((soclinux_ethmac_tx_crc_is_ongoing1 & (~soclinux_ethmac_tx_crc_cnt_done))) begin
            soclinux_ethmac_tx_crc_cnt <= (soclinux_ethmac_tx_crc_cnt - soclinux_ethmac_tx_crc_source_ready);
        end
    end
    if (soclinux_ethmac_tx_crc_ce) begin
        soclinux_ethmac_tx_crc_reg <= soclinux_ethmac_tx_crc_next;
    end
    if (soclinux_ethmac_tx_crc_reset) begin
        soclinux_ethmac_tx_crc_reg <= 32'd4294967295;
    end
    soclinux_txdatapath_bufferizeendpoints_state <= soclinux_txdatapath_bufferizeendpoints_next_state;
    if (soclinux_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0) begin
        soclinux_ethmac_tx_crc_crc_packet <= soclinux_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0;
    end
    if (soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1) begin
        soclinux_ethmac_tx_crc_last_be2 <= soclinux_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1;
    end
    if (((~soclinux_ethmac_tx_crc_pipe_valid_source_valid) | soclinux_ethmac_tx_crc_pipe_valid_source_ready)) begin
        soclinux_ethmac_tx_crc_pipe_valid_source_valid <= soclinux_ethmac_tx_crc_pipe_valid_sink_valid;
        soclinux_ethmac_tx_crc_pipe_valid_source_first <= soclinux_ethmac_tx_crc_pipe_valid_sink_first;
        soclinux_ethmac_tx_crc_pipe_valid_source_last <= soclinux_ethmac_tx_crc_pipe_valid_sink_last;
        soclinux_ethmac_tx_crc_pipe_valid_source_payload_data <= soclinux_ethmac_tx_crc_pipe_valid_sink_payload_data;
        soclinux_ethmac_tx_crc_pipe_valid_source_payload_last_be <= soclinux_ethmac_tx_crc_pipe_valid_sink_payload_last_be;
        soclinux_ethmac_tx_crc_pipe_valid_source_payload_error <= soclinux_ethmac_tx_crc_pipe_valid_sink_payload_error;
    end
    soclinux_txdatapath_liteethmacpreambleinserter_state <= soclinux_txdatapath_liteethmacpreambleinserter_next_state;
    if (soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce) begin
        soclinux_ethmac_tx_preamble_count <= soclinux_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value;
    end
    soclinux_txdatapath_liteethmacgap_state <= soclinux_txdatapath_liteethmacgap_next_state;
    if (soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce) begin
        soclinux_ethmac_tx_gap_counter <= soclinux_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value;
    end
    if (eth_tx_rst) begin
        ethphy_liteethphygmiimiitx_gmii_tx_sink_ready <= 1'd0;
        ethphy_liteethphygmiimiitx_converter_converter_mux <= 1'd0;
        soclinux_ethmac_tx_cdc_cdc_graycounter1_q <= 6'd0;
        soclinux_ethmac_tx_cdc_cdc_graycounter1_q_binary <= 6'd0;
        soclinux_ethmac_tx_converter_converter_mux <= 2'd0;
        soclinux_ethmac_tx_padding_counter <= 16'd0;
        soclinux_ethmac_tx_crc_reg <= 32'd4294967295;
        soclinux_ethmac_tx_crc_crc_packet <= 32'd0;
        soclinux_ethmac_tx_crc_last_be2 <= 1'd0;
        soclinux_ethmac_tx_crc_cnt <= 2'd3;
        soclinux_ethmac_tx_crc_pipe_valid_source_valid <= 1'd0;
        soclinux_ethmac_tx_crc_pipe_valid_source_payload_data <= 8'd0;
        soclinux_ethmac_tx_crc_pipe_valid_source_payload_last_be <= 1'd0;
        soclinux_ethmac_tx_crc_pipe_valid_source_payload_error <= 1'd0;
        soclinux_txdatapath_liteethmactxlastbe_state <= 1'd0;
        soclinux_txdatapath_liteethmacpaddinginserter_state <= 1'd0;
        soclinux_txdatapath_bufferizeendpoints_state <= 2'd0;
        soclinux_txdatapath_liteethmacpreambleinserter_state <= 2'd0;
        soclinux_txdatapath_liteethmacgap_state <= 1'd0;
    end
    impl_xilinxmultiregimpl3_regs0 <= soclinux_ethmac_tx_cdc_cdc_graycounter0_q;
    impl_xilinxmultiregimpl3_regs1 <= impl_xilinxmultiregimpl3_regs0;
end

always @(posedge idelay_clk) begin
    if ((crg_reset_counter != 1'd0)) begin
        crg_reset_counter <= (crg_reset_counter - 1'd1);
    end else begin
        crg_ic_reset <= 1'd0;
    end
    if (idelay_rst) begin
        crg_reset_counter <= 4'd15;
        crg_ic_reset <= 1'd1;
    end
end

always @(posedge sys_clk) begin
    if ((((soclinux_socbushandler_adapted_interface_stb & soclinux_socbushandler_adapted_interface_cyc) & soclinux_socbushandler_adapted_interface_ack) | soclinux_socbushandler_skip)) begin
        soclinux_socbushandler_count <= (soclinux_socbushandler_count + 1'd1);
    end
    if ((soclinux_cpu_pbus_ack | (~soclinux_cpu_pbus_cyc))) begin
        soclinux_socbushandler_count <= 1'd0;
    end
    if ((soclinux_socbushandler_adapted_interface_ack | soclinux_socbushandler_skip)) begin
        soclinux_socbushandler_dat_r <= soclinux_cpu_pbus_dat_r;
    end
    socbushandler0_slave_sel_r <= socbushandler0_slave_sel;
    if (socbushandler0_wait) begin
        if ((~socbushandler0_done)) begin
            socbushandler0_count <= (socbushandler0_count - 1'd1);
        end
    end else begin
        socbushandler0_count <= 20'd1000000;
    end
    if ((soclinux_bus_errors != 32'd4294967295)) begin
        if (soclinux_bus_error) begin
            soclinux_bus_errors <= (soclinux_bus_errors + 1'd1);
        end
    end
    if (csr_bankarray_csrbank0_reset0_re) begin
        soclinux_reset_storage[1:0] <= csr_bankarray_csrbank0_reset0_r;
    end
    soclinux_reset_re <= csr_bankarray_csrbank0_reset0_re;
    if (csr_bankarray_csrbank0_scratch0_re) begin
        soclinux_scratch_storage[31:0] <= csr_bankarray_csrbank0_scratch0_r;
    end
    soclinux_scratch_re <= csr_bankarray_csrbank0_scratch0_re;
    soclinux_bus_errors_re <= csr_bankarray_csrbank0_bus_errors_re;
    if (((soclinux_cpu_dma_bus_stb & soclinux_cpu_dma_bus_cyc) & (~soclinux_cpu_dma_bus_stall))) begin
        soclinux_cpu_dma_bus_inhibit <= 1'd1;
    end
    if (soclinux_cpu_dma_bus_ack) begin
        soclinux_cpu_dma_bus_inhibit <= 1'd0;
    end
    case (socbushandler1_grant)
        1'd0: begin
            if ((~socbushandler1_request[0])) begin
                if (socbushandler1_request[1]) begin
                    socbushandler1_grant <= 1'd1;
                end
            end
        end
        1'd1: begin
            if ((~socbushandler1_request[1])) begin
                if (socbushandler1_request[0]) begin
                    socbushandler1_grant <= 1'd0;
                end
            end
        end
    endcase
    socbushandler1_slave_sel_r <= socbushandler1_slave_sel;
    if (socbushandler1_wait) begin
        if ((~socbushandler1_done)) begin
            socbushandler1_count <= (socbushandler1_count - 1'd1);
        end
    end else begin
        socbushandler1_count <= 20'd1000000;
    end
    soclinux_soclinux_ram_bus_ack <= 1'd0;
    if (((soclinux_soclinux_ram_bus_cyc & soclinux_soclinux_ram_bus_stb) & ((~soclinux_soclinux_ram_bus_ack) | soclinux_soclinux_adr_burst))) begin
        soclinux_soclinux_ram_bus_ack <= 1'd1;
    end
    soclinux_ram_bus_ram_bus_ack <= 1'd0;
    if (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & ((~soclinux_ram_bus_ram_bus_ack) | soclinux_ram_adr_burst))) begin
        soclinux_ram_bus_ram_bus_ack <= 1'd1;
    end
    {soclinux_tx_tick, soclinux_tx_phase} <= 22'd3958241;
    if (soclinux_tx_enable) begin
        {soclinux_tx_tick, soclinux_tx_phase} <= (soclinux_tx_phase + 22'd3958241);
    end
    soclinux_rs232phytx_state <= soclinux_rs232phytx_next_state;
    if (soclinux_tx_count_rs232phytx_next_value_ce0) begin
        soclinux_tx_count <= soclinux_tx_count_rs232phytx_next_value0;
    end
    if (soclinux_serial_tx_rs232phytx_next_value_ce1) begin
        serial_tx <= soclinux_serial_tx_rs232phytx_next_value1;
    end
    if (soclinux_tx_data_rs232phytx_next_value_ce2) begin
        soclinux_tx_data <= soclinux_tx_data_rs232phytx_next_value2;
    end
    soclinux_rx_rx_d <= soclinux_rx_rx;
    {soclinux_rx_tick, soclinux_rx_phase} <= 32'd2147483648;
    if (soclinux_rx_enable) begin
        {soclinux_rx_tick, soclinux_rx_phase} <= (soclinux_rx_phase + 22'd3958241);
    end
    soclinux_rs232phyrx_state <= soclinux_rs232phyrx_next_state;
    if (soclinux_rx_count_rs232phyrx_next_value_ce0) begin
        soclinux_rx_count <= soclinux_rx_count_rs232phyrx_next_value0;
    end
    if (soclinux_rx_data_rs232phyrx_next_value_ce1) begin
        soclinux_rx_data <= soclinux_rx_data_rs232phyrx_next_value1;
    end
    if (soclinux_uart_tx_clear) begin
        soclinux_uart_tx_pending <= 1'd0;
    end
    soclinux_uart_tx_trigger_d <= soclinux_uart_tx_trigger;
    if ((soclinux_uart_tx_trigger & (~soclinux_uart_tx_trigger_d))) begin
        soclinux_uart_tx_pending <= 1'd1;
    end
    if (soclinux_uart_rx_clear) begin
        soclinux_uart_rx_pending <= 1'd0;
    end
    soclinux_uart_rx_trigger_d <= soclinux_uart_rx_trigger;
    if ((soclinux_uart_rx_trigger & (~soclinux_uart_rx_trigger_d))) begin
        soclinux_uart_rx_pending <= 1'd1;
    end
    if (soclinux_uart_tx_fifo_syncfifo_re) begin
        soclinux_uart_tx_fifo_readable <= 1'd1;
    end else begin
        if (soclinux_uart_tx_fifo_re) begin
            soclinux_uart_tx_fifo_readable <= 1'd0;
        end
    end
    if (((soclinux_uart_tx_fifo_syncfifo_we & soclinux_uart_tx_fifo_syncfifo_writable) & (~soclinux_uart_tx_fifo_replace))) begin
        soclinux_uart_tx_fifo_produce <= (soclinux_uart_tx_fifo_produce + 1'd1);
    end
    if (soclinux_uart_tx_fifo_do_read) begin
        soclinux_uart_tx_fifo_consume <= (soclinux_uart_tx_fifo_consume + 1'd1);
    end
    if (((soclinux_uart_tx_fifo_syncfifo_we & soclinux_uart_tx_fifo_syncfifo_writable) & (~soclinux_uart_tx_fifo_replace))) begin
        if ((~soclinux_uart_tx_fifo_do_read)) begin
            soclinux_uart_tx_fifo_level0 <= (soclinux_uart_tx_fifo_level0 + 1'd1);
        end
    end else begin
        if (soclinux_uart_tx_fifo_do_read) begin
            soclinux_uart_tx_fifo_level0 <= (soclinux_uart_tx_fifo_level0 - 1'd1);
        end
    end
    if (soclinux_uart_rx_fifo_syncfifo_re) begin
        soclinux_uart_rx_fifo_readable <= 1'd1;
    end else begin
        if (soclinux_uart_rx_fifo_re) begin
            soclinux_uart_rx_fifo_readable <= 1'd0;
        end
    end
    if (((soclinux_uart_rx_fifo_syncfifo_we & soclinux_uart_rx_fifo_syncfifo_writable) & (~soclinux_uart_rx_fifo_replace))) begin
        soclinux_uart_rx_fifo_produce <= (soclinux_uart_rx_fifo_produce + 1'd1);
    end
    if (soclinux_uart_rx_fifo_do_read) begin
        soclinux_uart_rx_fifo_consume <= (soclinux_uart_rx_fifo_consume + 1'd1);
    end
    if (((soclinux_uart_rx_fifo_syncfifo_we & soclinux_uart_rx_fifo_syncfifo_writable) & (~soclinux_uart_rx_fifo_replace))) begin
        if ((~soclinux_uart_rx_fifo_do_read)) begin
            soclinux_uart_rx_fifo_level0 <= (soclinux_uart_rx_fifo_level0 + 1'd1);
        end
    end else begin
        if (soclinux_uart_rx_fifo_do_read) begin
            soclinux_uart_rx_fifo_level0 <= (soclinux_uart_rx_fifo_level0 - 1'd1);
        end
    end
    if (soclinux_timer_en_storage) begin
        if ((soclinux_timer_value == 1'd0)) begin
            soclinux_timer_value <= soclinux_timer_reload_storage;
        end else begin
            soclinux_timer_value <= (soclinux_timer_value - 1'd1);
        end
    end else begin
        soclinux_timer_value <= soclinux_timer_load_storage;
    end
    if (soclinux_timer_update_value_re) begin
        soclinux_timer_value_status <= soclinux_timer_value;
    end
    if (soclinux_timer_zero_clear) begin
        soclinux_timer_zero_pending <= 1'd0;
    end
    soclinux_timer_zero_trigger_d <= soclinux_timer_zero_trigger;
    if ((soclinux_timer_zero_trigger & (~soclinux_timer_zero_trigger_d))) begin
        soclinux_timer_zero_pending <= 1'd1;
    end
    k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= k7ddrphy_dqs_oe_delay_tappeddelayline;
    k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0;
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip0_value0 <= (k7ddrphy_bitslip0_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip0_value0 <= 3'd7;
    end
    k7ddrphy_bitslip0_r0 <= {k7ddrphy_dqspattern_o, k7ddrphy_bitslip0_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip1_value0 <= (k7ddrphy_bitslip1_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip1_value0 <= 3'd7;
    end
    k7ddrphy_bitslip1_r0 <= {k7ddrphy_dqspattern_o, k7ddrphy_bitslip1_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip2_value0 <= (k7ddrphy_bitslip2_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip2_value0 <= 3'd7;
    end
    k7ddrphy_bitslip2_r0 <= {k7ddrphy_dqspattern_o, k7ddrphy_bitslip2_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip3_value0 <= (k7ddrphy_bitslip3_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip3_value0 <= 3'd7;
    end
    k7ddrphy_bitslip3_r0 <= {k7ddrphy_dqspattern_o, k7ddrphy_bitslip3_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip4_value0 <= (k7ddrphy_bitslip4_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip4_value0 <= 3'd7;
    end
    k7ddrphy_bitslip4_r0 <= {k7ddrphy_dqspattern_o, k7ddrphy_bitslip4_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip5_value0 <= (k7ddrphy_bitslip5_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip5_value0 <= 3'd7;
    end
    k7ddrphy_bitslip5_r0 <= {k7ddrphy_dqspattern_o, k7ddrphy_bitslip5_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip6_value0 <= (k7ddrphy_bitslip6_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip6_value0 <= 3'd7;
    end
    k7ddrphy_bitslip6_r0 <= {k7ddrphy_dqspattern_o, k7ddrphy_bitslip6_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip7_value0 <= (k7ddrphy_bitslip7_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip7_value0 <= 3'd7;
    end
    k7ddrphy_bitslip7_r0 <= {k7ddrphy_dqspattern_o, k7ddrphy_bitslip7_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip0_value1 <= (k7ddrphy_bitslip0_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip0_value1 <= 3'd7;
    end
    k7ddrphy_bitslip0_r1 <= {{k7ddrphy_dfi_p3_wrdata_mask[8], k7ddrphy_dfi_p3_wrdata_mask[0], k7ddrphy_dfi_p2_wrdata_mask[8], k7ddrphy_dfi_p2_wrdata_mask[0], k7ddrphy_dfi_p1_wrdata_mask[8], k7ddrphy_dfi_p1_wrdata_mask[0], k7ddrphy_dfi_p0_wrdata_mask[8], k7ddrphy_dfi_p0_wrdata_mask[0]}, k7ddrphy_bitslip0_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip1_value1 <= (k7ddrphy_bitslip1_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip1_value1 <= 3'd7;
    end
    k7ddrphy_bitslip1_r1 <= {{k7ddrphy_dfi_p3_wrdata_mask[9], k7ddrphy_dfi_p3_wrdata_mask[1], k7ddrphy_dfi_p2_wrdata_mask[9], k7ddrphy_dfi_p2_wrdata_mask[1], k7ddrphy_dfi_p1_wrdata_mask[9], k7ddrphy_dfi_p1_wrdata_mask[1], k7ddrphy_dfi_p0_wrdata_mask[9], k7ddrphy_dfi_p0_wrdata_mask[1]}, k7ddrphy_bitslip1_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip2_value1 <= (k7ddrphy_bitslip2_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip2_value1 <= 3'd7;
    end
    k7ddrphy_bitslip2_r1 <= {{k7ddrphy_dfi_p3_wrdata_mask[10], k7ddrphy_dfi_p3_wrdata_mask[2], k7ddrphy_dfi_p2_wrdata_mask[10], k7ddrphy_dfi_p2_wrdata_mask[2], k7ddrphy_dfi_p1_wrdata_mask[10], k7ddrphy_dfi_p1_wrdata_mask[2], k7ddrphy_dfi_p0_wrdata_mask[10], k7ddrphy_dfi_p0_wrdata_mask[2]}, k7ddrphy_bitslip2_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip3_value1 <= (k7ddrphy_bitslip3_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip3_value1 <= 3'd7;
    end
    k7ddrphy_bitslip3_r1 <= {{k7ddrphy_dfi_p3_wrdata_mask[11], k7ddrphy_dfi_p3_wrdata_mask[3], k7ddrphy_dfi_p2_wrdata_mask[11], k7ddrphy_dfi_p2_wrdata_mask[3], k7ddrphy_dfi_p1_wrdata_mask[11], k7ddrphy_dfi_p1_wrdata_mask[3], k7ddrphy_dfi_p0_wrdata_mask[11], k7ddrphy_dfi_p0_wrdata_mask[3]}, k7ddrphy_bitslip3_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip4_value1 <= (k7ddrphy_bitslip4_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip4_value1 <= 3'd7;
    end
    k7ddrphy_bitslip4_r1 <= {{k7ddrphy_dfi_p3_wrdata_mask[12], k7ddrphy_dfi_p3_wrdata_mask[4], k7ddrphy_dfi_p2_wrdata_mask[12], k7ddrphy_dfi_p2_wrdata_mask[4], k7ddrphy_dfi_p1_wrdata_mask[12], k7ddrphy_dfi_p1_wrdata_mask[4], k7ddrphy_dfi_p0_wrdata_mask[12], k7ddrphy_dfi_p0_wrdata_mask[4]}, k7ddrphy_bitslip4_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip5_value1 <= (k7ddrphy_bitslip5_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip5_value1 <= 3'd7;
    end
    k7ddrphy_bitslip5_r1 <= {{k7ddrphy_dfi_p3_wrdata_mask[13], k7ddrphy_dfi_p3_wrdata_mask[5], k7ddrphy_dfi_p2_wrdata_mask[13], k7ddrphy_dfi_p2_wrdata_mask[5], k7ddrphy_dfi_p1_wrdata_mask[13], k7ddrphy_dfi_p1_wrdata_mask[5], k7ddrphy_dfi_p0_wrdata_mask[13], k7ddrphy_dfi_p0_wrdata_mask[5]}, k7ddrphy_bitslip5_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip6_value1 <= (k7ddrphy_bitslip6_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip6_value1 <= 3'd7;
    end
    k7ddrphy_bitslip6_r1 <= {{k7ddrphy_dfi_p3_wrdata_mask[14], k7ddrphy_dfi_p3_wrdata_mask[6], k7ddrphy_dfi_p2_wrdata_mask[14], k7ddrphy_dfi_p2_wrdata_mask[6], k7ddrphy_dfi_p1_wrdata_mask[14], k7ddrphy_dfi_p1_wrdata_mask[6], k7ddrphy_dfi_p0_wrdata_mask[14], k7ddrphy_dfi_p0_wrdata_mask[6]}, k7ddrphy_bitslip6_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip7_value1 <= (k7ddrphy_bitslip7_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip7_value1 <= 3'd7;
    end
    k7ddrphy_bitslip7_r1 <= {{k7ddrphy_dfi_p3_wrdata_mask[15], k7ddrphy_dfi_p3_wrdata_mask[7], k7ddrphy_dfi_p2_wrdata_mask[15], k7ddrphy_dfi_p2_wrdata_mask[7], k7ddrphy_dfi_p1_wrdata_mask[15], k7ddrphy_dfi_p1_wrdata_mask[7], k7ddrphy_dfi_p0_wrdata_mask[15], k7ddrphy_dfi_p0_wrdata_mask[7]}, k7ddrphy_bitslip7_r1[15:8]};
    k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= k7ddrphy_dq_oe_delay_tappeddelayline;
    k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0;
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip0_value2 <= (k7ddrphy_bitslip0_value2 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip0_value2 <= 3'd7;
    end
    k7ddrphy_bitslip0_r2 <= {{k7ddrphy_dfi_p3_wrdata[64], k7ddrphy_dfi_p3_wrdata[0], k7ddrphy_dfi_p2_wrdata[64], k7ddrphy_dfi_p2_wrdata[0], k7ddrphy_dfi_p1_wrdata[64], k7ddrphy_dfi_p1_wrdata[0], k7ddrphy_dfi_p0_wrdata[64], k7ddrphy_dfi_p0_wrdata[0]}, k7ddrphy_bitslip0_r2[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip0_value3 <= (k7ddrphy_bitslip0_value3 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip0_value3 <= 3'd7;
    end
    k7ddrphy_bitslip0_r3 <= {k7ddrphy_bitslip03, k7ddrphy_bitslip0_r3[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip1_value2 <= (k7ddrphy_bitslip1_value2 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip1_value2 <= 3'd7;
    end
    k7ddrphy_bitslip1_r2 <= {{k7ddrphy_dfi_p3_wrdata[65], k7ddrphy_dfi_p3_wrdata[1], k7ddrphy_dfi_p2_wrdata[65], k7ddrphy_dfi_p2_wrdata[1], k7ddrphy_dfi_p1_wrdata[65], k7ddrphy_dfi_p1_wrdata[1], k7ddrphy_dfi_p0_wrdata[65], k7ddrphy_dfi_p0_wrdata[1]}, k7ddrphy_bitslip1_r2[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip1_value3 <= (k7ddrphy_bitslip1_value3 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip1_value3 <= 3'd7;
    end
    k7ddrphy_bitslip1_r3 <= {k7ddrphy_bitslip13, k7ddrphy_bitslip1_r3[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip2_value2 <= (k7ddrphy_bitslip2_value2 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip2_value2 <= 3'd7;
    end
    k7ddrphy_bitslip2_r2 <= {{k7ddrphy_dfi_p3_wrdata[66], k7ddrphy_dfi_p3_wrdata[2], k7ddrphy_dfi_p2_wrdata[66], k7ddrphy_dfi_p2_wrdata[2], k7ddrphy_dfi_p1_wrdata[66], k7ddrphy_dfi_p1_wrdata[2], k7ddrphy_dfi_p0_wrdata[66], k7ddrphy_dfi_p0_wrdata[2]}, k7ddrphy_bitslip2_r2[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip2_value3 <= (k7ddrphy_bitslip2_value3 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip2_value3 <= 3'd7;
    end
    k7ddrphy_bitslip2_r3 <= {k7ddrphy_bitslip23, k7ddrphy_bitslip2_r3[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip3_value2 <= (k7ddrphy_bitslip3_value2 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip3_value2 <= 3'd7;
    end
    k7ddrphy_bitslip3_r2 <= {{k7ddrphy_dfi_p3_wrdata[67], k7ddrphy_dfi_p3_wrdata[3], k7ddrphy_dfi_p2_wrdata[67], k7ddrphy_dfi_p2_wrdata[3], k7ddrphy_dfi_p1_wrdata[67], k7ddrphy_dfi_p1_wrdata[3], k7ddrphy_dfi_p0_wrdata[67], k7ddrphy_dfi_p0_wrdata[3]}, k7ddrphy_bitslip3_r2[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip3_value3 <= (k7ddrphy_bitslip3_value3 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip3_value3 <= 3'd7;
    end
    k7ddrphy_bitslip3_r3 <= {k7ddrphy_bitslip33, k7ddrphy_bitslip3_r3[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip4_value2 <= (k7ddrphy_bitslip4_value2 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip4_value2 <= 3'd7;
    end
    k7ddrphy_bitslip4_r2 <= {{k7ddrphy_dfi_p3_wrdata[68], k7ddrphy_dfi_p3_wrdata[4], k7ddrphy_dfi_p2_wrdata[68], k7ddrphy_dfi_p2_wrdata[4], k7ddrphy_dfi_p1_wrdata[68], k7ddrphy_dfi_p1_wrdata[4], k7ddrphy_dfi_p0_wrdata[68], k7ddrphy_dfi_p0_wrdata[4]}, k7ddrphy_bitslip4_r2[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip4_value3 <= (k7ddrphy_bitslip4_value3 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip4_value3 <= 3'd7;
    end
    k7ddrphy_bitslip4_r3 <= {k7ddrphy_bitslip43, k7ddrphy_bitslip4_r3[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip5_value2 <= (k7ddrphy_bitslip5_value2 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip5_value2 <= 3'd7;
    end
    k7ddrphy_bitslip5_r2 <= {{k7ddrphy_dfi_p3_wrdata[69], k7ddrphy_dfi_p3_wrdata[5], k7ddrphy_dfi_p2_wrdata[69], k7ddrphy_dfi_p2_wrdata[5], k7ddrphy_dfi_p1_wrdata[69], k7ddrphy_dfi_p1_wrdata[5], k7ddrphy_dfi_p0_wrdata[69], k7ddrphy_dfi_p0_wrdata[5]}, k7ddrphy_bitslip5_r2[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip5_value3 <= (k7ddrphy_bitslip5_value3 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip5_value3 <= 3'd7;
    end
    k7ddrphy_bitslip5_r3 <= {k7ddrphy_bitslip53, k7ddrphy_bitslip5_r3[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip6_value2 <= (k7ddrphy_bitslip6_value2 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip6_value2 <= 3'd7;
    end
    k7ddrphy_bitslip6_r2 <= {{k7ddrphy_dfi_p3_wrdata[70], k7ddrphy_dfi_p3_wrdata[6], k7ddrphy_dfi_p2_wrdata[70], k7ddrphy_dfi_p2_wrdata[6], k7ddrphy_dfi_p1_wrdata[70], k7ddrphy_dfi_p1_wrdata[6], k7ddrphy_dfi_p0_wrdata[70], k7ddrphy_dfi_p0_wrdata[6]}, k7ddrphy_bitslip6_r2[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip6_value3 <= (k7ddrphy_bitslip6_value3 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip6_value3 <= 3'd7;
    end
    k7ddrphy_bitslip6_r3 <= {k7ddrphy_bitslip63, k7ddrphy_bitslip6_r3[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip7_value2 <= (k7ddrphy_bitslip7_value2 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip7_value2 <= 3'd7;
    end
    k7ddrphy_bitslip7_r2 <= {{k7ddrphy_dfi_p3_wrdata[71], k7ddrphy_dfi_p3_wrdata[7], k7ddrphy_dfi_p2_wrdata[71], k7ddrphy_dfi_p2_wrdata[7], k7ddrphy_dfi_p1_wrdata[71], k7ddrphy_dfi_p1_wrdata[7], k7ddrphy_dfi_p0_wrdata[71], k7ddrphy_dfi_p0_wrdata[7]}, k7ddrphy_bitslip7_r2[15:8]};
    if ((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip7_value3 <= (k7ddrphy_bitslip7_value3 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip7_value3 <= 3'd7;
    end
    k7ddrphy_bitslip7_r3 <= {k7ddrphy_bitslip73, k7ddrphy_bitslip7_r3[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip8_value0 <= (k7ddrphy_bitslip8_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip8_value0 <= 3'd7;
    end
    k7ddrphy_bitslip8_r0 <= {{k7ddrphy_dfi_p3_wrdata[72], k7ddrphy_dfi_p3_wrdata[8], k7ddrphy_dfi_p2_wrdata[72], k7ddrphy_dfi_p2_wrdata[8], k7ddrphy_dfi_p1_wrdata[72], k7ddrphy_dfi_p1_wrdata[8], k7ddrphy_dfi_p0_wrdata[72], k7ddrphy_dfi_p0_wrdata[8]}, k7ddrphy_bitslip8_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip8_value1 <= (k7ddrphy_bitslip8_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip8_value1 <= 3'd7;
    end
    k7ddrphy_bitslip8_r1 <= {k7ddrphy_bitslip81, k7ddrphy_bitslip8_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip9_value0 <= (k7ddrphy_bitslip9_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip9_value0 <= 3'd7;
    end
    k7ddrphy_bitslip9_r0 <= {{k7ddrphy_dfi_p3_wrdata[73], k7ddrphy_dfi_p3_wrdata[9], k7ddrphy_dfi_p2_wrdata[73], k7ddrphy_dfi_p2_wrdata[9], k7ddrphy_dfi_p1_wrdata[73], k7ddrphy_dfi_p1_wrdata[9], k7ddrphy_dfi_p0_wrdata[73], k7ddrphy_dfi_p0_wrdata[9]}, k7ddrphy_bitslip9_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip9_value1 <= (k7ddrphy_bitslip9_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip9_value1 <= 3'd7;
    end
    k7ddrphy_bitslip9_r1 <= {k7ddrphy_bitslip91, k7ddrphy_bitslip9_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip10_value0 <= (k7ddrphy_bitslip10_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip10_value0 <= 3'd7;
    end
    k7ddrphy_bitslip10_r0 <= {{k7ddrphy_dfi_p3_wrdata[74], k7ddrphy_dfi_p3_wrdata[10], k7ddrphy_dfi_p2_wrdata[74], k7ddrphy_dfi_p2_wrdata[10], k7ddrphy_dfi_p1_wrdata[74], k7ddrphy_dfi_p1_wrdata[10], k7ddrphy_dfi_p0_wrdata[74], k7ddrphy_dfi_p0_wrdata[10]}, k7ddrphy_bitslip10_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip10_value1 <= (k7ddrphy_bitslip10_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip10_value1 <= 3'd7;
    end
    k7ddrphy_bitslip10_r1 <= {k7ddrphy_bitslip101, k7ddrphy_bitslip10_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip11_value0 <= (k7ddrphy_bitslip11_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip11_value0 <= 3'd7;
    end
    k7ddrphy_bitslip11_r0 <= {{k7ddrphy_dfi_p3_wrdata[75], k7ddrphy_dfi_p3_wrdata[11], k7ddrphy_dfi_p2_wrdata[75], k7ddrphy_dfi_p2_wrdata[11], k7ddrphy_dfi_p1_wrdata[75], k7ddrphy_dfi_p1_wrdata[11], k7ddrphy_dfi_p0_wrdata[75], k7ddrphy_dfi_p0_wrdata[11]}, k7ddrphy_bitslip11_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip11_value1 <= (k7ddrphy_bitslip11_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip11_value1 <= 3'd7;
    end
    k7ddrphy_bitslip11_r1 <= {k7ddrphy_bitslip111, k7ddrphy_bitslip11_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip12_value0 <= (k7ddrphy_bitslip12_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip12_value0 <= 3'd7;
    end
    k7ddrphy_bitslip12_r0 <= {{k7ddrphy_dfi_p3_wrdata[76], k7ddrphy_dfi_p3_wrdata[12], k7ddrphy_dfi_p2_wrdata[76], k7ddrphy_dfi_p2_wrdata[12], k7ddrphy_dfi_p1_wrdata[76], k7ddrphy_dfi_p1_wrdata[12], k7ddrphy_dfi_p0_wrdata[76], k7ddrphy_dfi_p0_wrdata[12]}, k7ddrphy_bitslip12_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip12_value1 <= (k7ddrphy_bitslip12_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip12_value1 <= 3'd7;
    end
    k7ddrphy_bitslip12_r1 <= {k7ddrphy_bitslip121, k7ddrphy_bitslip12_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip13_value0 <= (k7ddrphy_bitslip13_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip13_value0 <= 3'd7;
    end
    k7ddrphy_bitslip13_r0 <= {{k7ddrphy_dfi_p3_wrdata[77], k7ddrphy_dfi_p3_wrdata[13], k7ddrphy_dfi_p2_wrdata[77], k7ddrphy_dfi_p2_wrdata[13], k7ddrphy_dfi_p1_wrdata[77], k7ddrphy_dfi_p1_wrdata[13], k7ddrphy_dfi_p0_wrdata[77], k7ddrphy_dfi_p0_wrdata[13]}, k7ddrphy_bitslip13_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip13_value1 <= (k7ddrphy_bitslip13_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip13_value1 <= 3'd7;
    end
    k7ddrphy_bitslip13_r1 <= {k7ddrphy_bitslip131, k7ddrphy_bitslip13_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip14_value0 <= (k7ddrphy_bitslip14_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip14_value0 <= 3'd7;
    end
    k7ddrphy_bitslip14_r0 <= {{k7ddrphy_dfi_p3_wrdata[78], k7ddrphy_dfi_p3_wrdata[14], k7ddrphy_dfi_p2_wrdata[78], k7ddrphy_dfi_p2_wrdata[14], k7ddrphy_dfi_p1_wrdata[78], k7ddrphy_dfi_p1_wrdata[14], k7ddrphy_dfi_p0_wrdata[78], k7ddrphy_dfi_p0_wrdata[14]}, k7ddrphy_bitslip14_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip14_value1 <= (k7ddrphy_bitslip14_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip14_value1 <= 3'd7;
    end
    k7ddrphy_bitslip14_r1 <= {k7ddrphy_bitslip141, k7ddrphy_bitslip14_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip15_value0 <= (k7ddrphy_bitslip15_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip15_value0 <= 3'd7;
    end
    k7ddrphy_bitslip15_r0 <= {{k7ddrphy_dfi_p3_wrdata[79], k7ddrphy_dfi_p3_wrdata[15], k7ddrphy_dfi_p2_wrdata[79], k7ddrphy_dfi_p2_wrdata[15], k7ddrphy_dfi_p1_wrdata[79], k7ddrphy_dfi_p1_wrdata[15], k7ddrphy_dfi_p0_wrdata[79], k7ddrphy_dfi_p0_wrdata[15]}, k7ddrphy_bitslip15_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip15_value1 <= (k7ddrphy_bitslip15_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip15_value1 <= 3'd7;
    end
    k7ddrphy_bitslip15_r1 <= {k7ddrphy_bitslip151, k7ddrphy_bitslip15_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip16_value0 <= (k7ddrphy_bitslip16_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip16_value0 <= 3'd7;
    end
    k7ddrphy_bitslip16_r0 <= {{k7ddrphy_dfi_p3_wrdata[80], k7ddrphy_dfi_p3_wrdata[16], k7ddrphy_dfi_p2_wrdata[80], k7ddrphy_dfi_p2_wrdata[16], k7ddrphy_dfi_p1_wrdata[80], k7ddrphy_dfi_p1_wrdata[16], k7ddrphy_dfi_p0_wrdata[80], k7ddrphy_dfi_p0_wrdata[16]}, k7ddrphy_bitslip16_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip16_value1 <= (k7ddrphy_bitslip16_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip16_value1 <= 3'd7;
    end
    k7ddrphy_bitslip16_r1 <= {k7ddrphy_bitslip161, k7ddrphy_bitslip16_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip17_value0 <= (k7ddrphy_bitslip17_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip17_value0 <= 3'd7;
    end
    k7ddrphy_bitslip17_r0 <= {{k7ddrphy_dfi_p3_wrdata[81], k7ddrphy_dfi_p3_wrdata[17], k7ddrphy_dfi_p2_wrdata[81], k7ddrphy_dfi_p2_wrdata[17], k7ddrphy_dfi_p1_wrdata[81], k7ddrphy_dfi_p1_wrdata[17], k7ddrphy_dfi_p0_wrdata[81], k7ddrphy_dfi_p0_wrdata[17]}, k7ddrphy_bitslip17_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip17_value1 <= (k7ddrphy_bitslip17_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip17_value1 <= 3'd7;
    end
    k7ddrphy_bitslip17_r1 <= {k7ddrphy_bitslip171, k7ddrphy_bitslip17_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip18_value0 <= (k7ddrphy_bitslip18_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip18_value0 <= 3'd7;
    end
    k7ddrphy_bitslip18_r0 <= {{k7ddrphy_dfi_p3_wrdata[82], k7ddrphy_dfi_p3_wrdata[18], k7ddrphy_dfi_p2_wrdata[82], k7ddrphy_dfi_p2_wrdata[18], k7ddrphy_dfi_p1_wrdata[82], k7ddrphy_dfi_p1_wrdata[18], k7ddrphy_dfi_p0_wrdata[82], k7ddrphy_dfi_p0_wrdata[18]}, k7ddrphy_bitslip18_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip18_value1 <= (k7ddrphy_bitslip18_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip18_value1 <= 3'd7;
    end
    k7ddrphy_bitslip18_r1 <= {k7ddrphy_bitslip181, k7ddrphy_bitslip18_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip19_value0 <= (k7ddrphy_bitslip19_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip19_value0 <= 3'd7;
    end
    k7ddrphy_bitslip19_r0 <= {{k7ddrphy_dfi_p3_wrdata[83], k7ddrphy_dfi_p3_wrdata[19], k7ddrphy_dfi_p2_wrdata[83], k7ddrphy_dfi_p2_wrdata[19], k7ddrphy_dfi_p1_wrdata[83], k7ddrphy_dfi_p1_wrdata[19], k7ddrphy_dfi_p0_wrdata[83], k7ddrphy_dfi_p0_wrdata[19]}, k7ddrphy_bitslip19_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip19_value1 <= (k7ddrphy_bitslip19_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip19_value1 <= 3'd7;
    end
    k7ddrphy_bitslip19_r1 <= {k7ddrphy_bitslip191, k7ddrphy_bitslip19_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip20_value0 <= (k7ddrphy_bitslip20_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip20_value0 <= 3'd7;
    end
    k7ddrphy_bitslip20_r0 <= {{k7ddrphy_dfi_p3_wrdata[84], k7ddrphy_dfi_p3_wrdata[20], k7ddrphy_dfi_p2_wrdata[84], k7ddrphy_dfi_p2_wrdata[20], k7ddrphy_dfi_p1_wrdata[84], k7ddrphy_dfi_p1_wrdata[20], k7ddrphy_dfi_p0_wrdata[84], k7ddrphy_dfi_p0_wrdata[20]}, k7ddrphy_bitslip20_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip20_value1 <= (k7ddrphy_bitslip20_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip20_value1 <= 3'd7;
    end
    k7ddrphy_bitslip20_r1 <= {k7ddrphy_bitslip201, k7ddrphy_bitslip20_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip21_value0 <= (k7ddrphy_bitslip21_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip21_value0 <= 3'd7;
    end
    k7ddrphy_bitslip21_r0 <= {{k7ddrphy_dfi_p3_wrdata[85], k7ddrphy_dfi_p3_wrdata[21], k7ddrphy_dfi_p2_wrdata[85], k7ddrphy_dfi_p2_wrdata[21], k7ddrphy_dfi_p1_wrdata[85], k7ddrphy_dfi_p1_wrdata[21], k7ddrphy_dfi_p0_wrdata[85], k7ddrphy_dfi_p0_wrdata[21]}, k7ddrphy_bitslip21_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip21_value1 <= (k7ddrphy_bitslip21_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip21_value1 <= 3'd7;
    end
    k7ddrphy_bitslip21_r1 <= {k7ddrphy_bitslip211, k7ddrphy_bitslip21_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip22_value0 <= (k7ddrphy_bitslip22_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip22_value0 <= 3'd7;
    end
    k7ddrphy_bitslip22_r0 <= {{k7ddrphy_dfi_p3_wrdata[86], k7ddrphy_dfi_p3_wrdata[22], k7ddrphy_dfi_p2_wrdata[86], k7ddrphy_dfi_p2_wrdata[22], k7ddrphy_dfi_p1_wrdata[86], k7ddrphy_dfi_p1_wrdata[22], k7ddrphy_dfi_p0_wrdata[86], k7ddrphy_dfi_p0_wrdata[22]}, k7ddrphy_bitslip22_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip22_value1 <= (k7ddrphy_bitslip22_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip22_value1 <= 3'd7;
    end
    k7ddrphy_bitslip22_r1 <= {k7ddrphy_bitslip221, k7ddrphy_bitslip22_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip23_value0 <= (k7ddrphy_bitslip23_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip23_value0 <= 3'd7;
    end
    k7ddrphy_bitslip23_r0 <= {{k7ddrphy_dfi_p3_wrdata[87], k7ddrphy_dfi_p3_wrdata[23], k7ddrphy_dfi_p2_wrdata[87], k7ddrphy_dfi_p2_wrdata[23], k7ddrphy_dfi_p1_wrdata[87], k7ddrphy_dfi_p1_wrdata[23], k7ddrphy_dfi_p0_wrdata[87], k7ddrphy_dfi_p0_wrdata[23]}, k7ddrphy_bitslip23_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip23_value1 <= (k7ddrphy_bitslip23_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip23_value1 <= 3'd7;
    end
    k7ddrphy_bitslip23_r1 <= {k7ddrphy_bitslip231, k7ddrphy_bitslip23_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip24_value0 <= (k7ddrphy_bitslip24_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip24_value0 <= 3'd7;
    end
    k7ddrphy_bitslip24_r0 <= {{k7ddrphy_dfi_p3_wrdata[88], k7ddrphy_dfi_p3_wrdata[24], k7ddrphy_dfi_p2_wrdata[88], k7ddrphy_dfi_p2_wrdata[24], k7ddrphy_dfi_p1_wrdata[88], k7ddrphy_dfi_p1_wrdata[24], k7ddrphy_dfi_p0_wrdata[88], k7ddrphy_dfi_p0_wrdata[24]}, k7ddrphy_bitslip24_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip24_value1 <= (k7ddrphy_bitslip24_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip24_value1 <= 3'd7;
    end
    k7ddrphy_bitslip24_r1 <= {k7ddrphy_bitslip241, k7ddrphy_bitslip24_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip25_value0 <= (k7ddrphy_bitslip25_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip25_value0 <= 3'd7;
    end
    k7ddrphy_bitslip25_r0 <= {{k7ddrphy_dfi_p3_wrdata[89], k7ddrphy_dfi_p3_wrdata[25], k7ddrphy_dfi_p2_wrdata[89], k7ddrphy_dfi_p2_wrdata[25], k7ddrphy_dfi_p1_wrdata[89], k7ddrphy_dfi_p1_wrdata[25], k7ddrphy_dfi_p0_wrdata[89], k7ddrphy_dfi_p0_wrdata[25]}, k7ddrphy_bitslip25_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip25_value1 <= (k7ddrphy_bitslip25_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip25_value1 <= 3'd7;
    end
    k7ddrphy_bitslip25_r1 <= {k7ddrphy_bitslip251, k7ddrphy_bitslip25_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip26_value0 <= (k7ddrphy_bitslip26_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip26_value0 <= 3'd7;
    end
    k7ddrphy_bitslip26_r0 <= {{k7ddrphy_dfi_p3_wrdata[90], k7ddrphy_dfi_p3_wrdata[26], k7ddrphy_dfi_p2_wrdata[90], k7ddrphy_dfi_p2_wrdata[26], k7ddrphy_dfi_p1_wrdata[90], k7ddrphy_dfi_p1_wrdata[26], k7ddrphy_dfi_p0_wrdata[90], k7ddrphy_dfi_p0_wrdata[26]}, k7ddrphy_bitslip26_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip26_value1 <= (k7ddrphy_bitslip26_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip26_value1 <= 3'd7;
    end
    k7ddrphy_bitslip26_r1 <= {k7ddrphy_bitslip261, k7ddrphy_bitslip26_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip27_value0 <= (k7ddrphy_bitslip27_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip27_value0 <= 3'd7;
    end
    k7ddrphy_bitslip27_r0 <= {{k7ddrphy_dfi_p3_wrdata[91], k7ddrphy_dfi_p3_wrdata[27], k7ddrphy_dfi_p2_wrdata[91], k7ddrphy_dfi_p2_wrdata[27], k7ddrphy_dfi_p1_wrdata[91], k7ddrphy_dfi_p1_wrdata[27], k7ddrphy_dfi_p0_wrdata[91], k7ddrphy_dfi_p0_wrdata[27]}, k7ddrphy_bitslip27_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip27_value1 <= (k7ddrphy_bitslip27_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip27_value1 <= 3'd7;
    end
    k7ddrphy_bitslip27_r1 <= {k7ddrphy_bitslip271, k7ddrphy_bitslip27_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip28_value0 <= (k7ddrphy_bitslip28_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip28_value0 <= 3'd7;
    end
    k7ddrphy_bitslip28_r0 <= {{k7ddrphy_dfi_p3_wrdata[92], k7ddrphy_dfi_p3_wrdata[28], k7ddrphy_dfi_p2_wrdata[92], k7ddrphy_dfi_p2_wrdata[28], k7ddrphy_dfi_p1_wrdata[92], k7ddrphy_dfi_p1_wrdata[28], k7ddrphy_dfi_p0_wrdata[92], k7ddrphy_dfi_p0_wrdata[28]}, k7ddrphy_bitslip28_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip28_value1 <= (k7ddrphy_bitslip28_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip28_value1 <= 3'd7;
    end
    k7ddrphy_bitslip28_r1 <= {k7ddrphy_bitslip281, k7ddrphy_bitslip28_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip29_value0 <= (k7ddrphy_bitslip29_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip29_value0 <= 3'd7;
    end
    k7ddrphy_bitslip29_r0 <= {{k7ddrphy_dfi_p3_wrdata[93], k7ddrphy_dfi_p3_wrdata[29], k7ddrphy_dfi_p2_wrdata[93], k7ddrphy_dfi_p2_wrdata[29], k7ddrphy_dfi_p1_wrdata[93], k7ddrphy_dfi_p1_wrdata[29], k7ddrphy_dfi_p0_wrdata[93], k7ddrphy_dfi_p0_wrdata[29]}, k7ddrphy_bitslip29_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip29_value1 <= (k7ddrphy_bitslip29_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip29_value1 <= 3'd7;
    end
    k7ddrphy_bitslip29_r1 <= {k7ddrphy_bitslip291, k7ddrphy_bitslip29_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip30_value0 <= (k7ddrphy_bitslip30_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip30_value0 <= 3'd7;
    end
    k7ddrphy_bitslip30_r0 <= {{k7ddrphy_dfi_p3_wrdata[94], k7ddrphy_dfi_p3_wrdata[30], k7ddrphy_dfi_p2_wrdata[94], k7ddrphy_dfi_p2_wrdata[30], k7ddrphy_dfi_p1_wrdata[94], k7ddrphy_dfi_p1_wrdata[30], k7ddrphy_dfi_p0_wrdata[94], k7ddrphy_dfi_p0_wrdata[30]}, k7ddrphy_bitslip30_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip30_value1 <= (k7ddrphy_bitslip30_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip30_value1 <= 3'd7;
    end
    k7ddrphy_bitslip30_r1 <= {k7ddrphy_bitslip301, k7ddrphy_bitslip30_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip31_value0 <= (k7ddrphy_bitslip31_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip31_value0 <= 3'd7;
    end
    k7ddrphy_bitslip31_r0 <= {{k7ddrphy_dfi_p3_wrdata[95], k7ddrphy_dfi_p3_wrdata[31], k7ddrphy_dfi_p2_wrdata[95], k7ddrphy_dfi_p2_wrdata[31], k7ddrphy_dfi_p1_wrdata[95], k7ddrphy_dfi_p1_wrdata[31], k7ddrphy_dfi_p0_wrdata[95], k7ddrphy_dfi_p0_wrdata[31]}, k7ddrphy_bitslip31_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip31_value1 <= (k7ddrphy_bitslip31_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip31_value1 <= 3'd7;
    end
    k7ddrphy_bitslip31_r1 <= {k7ddrphy_bitslip311, k7ddrphy_bitslip31_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip32_value0 <= (k7ddrphy_bitslip32_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip32_value0 <= 3'd7;
    end
    k7ddrphy_bitslip32_r0 <= {{k7ddrphy_dfi_p3_wrdata[96], k7ddrphy_dfi_p3_wrdata[32], k7ddrphy_dfi_p2_wrdata[96], k7ddrphy_dfi_p2_wrdata[32], k7ddrphy_dfi_p1_wrdata[96], k7ddrphy_dfi_p1_wrdata[32], k7ddrphy_dfi_p0_wrdata[96], k7ddrphy_dfi_p0_wrdata[32]}, k7ddrphy_bitslip32_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip32_value1 <= (k7ddrphy_bitslip32_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip32_value1 <= 3'd7;
    end
    k7ddrphy_bitslip32_r1 <= {k7ddrphy_bitslip321, k7ddrphy_bitslip32_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip33_value0 <= (k7ddrphy_bitslip33_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip33_value0 <= 3'd7;
    end
    k7ddrphy_bitslip33_r0 <= {{k7ddrphy_dfi_p3_wrdata[97], k7ddrphy_dfi_p3_wrdata[33], k7ddrphy_dfi_p2_wrdata[97], k7ddrphy_dfi_p2_wrdata[33], k7ddrphy_dfi_p1_wrdata[97], k7ddrphy_dfi_p1_wrdata[33], k7ddrphy_dfi_p0_wrdata[97], k7ddrphy_dfi_p0_wrdata[33]}, k7ddrphy_bitslip33_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip33_value1 <= (k7ddrphy_bitslip33_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip33_value1 <= 3'd7;
    end
    k7ddrphy_bitslip33_r1 <= {k7ddrphy_bitslip331, k7ddrphy_bitslip33_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip34_value0 <= (k7ddrphy_bitslip34_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip34_value0 <= 3'd7;
    end
    k7ddrphy_bitslip34_r0 <= {{k7ddrphy_dfi_p3_wrdata[98], k7ddrphy_dfi_p3_wrdata[34], k7ddrphy_dfi_p2_wrdata[98], k7ddrphy_dfi_p2_wrdata[34], k7ddrphy_dfi_p1_wrdata[98], k7ddrphy_dfi_p1_wrdata[34], k7ddrphy_dfi_p0_wrdata[98], k7ddrphy_dfi_p0_wrdata[34]}, k7ddrphy_bitslip34_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip34_value1 <= (k7ddrphy_bitslip34_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip34_value1 <= 3'd7;
    end
    k7ddrphy_bitslip34_r1 <= {k7ddrphy_bitslip341, k7ddrphy_bitslip34_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip35_value0 <= (k7ddrphy_bitslip35_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip35_value0 <= 3'd7;
    end
    k7ddrphy_bitslip35_r0 <= {{k7ddrphy_dfi_p3_wrdata[99], k7ddrphy_dfi_p3_wrdata[35], k7ddrphy_dfi_p2_wrdata[99], k7ddrphy_dfi_p2_wrdata[35], k7ddrphy_dfi_p1_wrdata[99], k7ddrphy_dfi_p1_wrdata[35], k7ddrphy_dfi_p0_wrdata[99], k7ddrphy_dfi_p0_wrdata[35]}, k7ddrphy_bitslip35_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip35_value1 <= (k7ddrphy_bitslip35_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip35_value1 <= 3'd7;
    end
    k7ddrphy_bitslip35_r1 <= {k7ddrphy_bitslip351, k7ddrphy_bitslip35_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip36_value0 <= (k7ddrphy_bitslip36_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip36_value0 <= 3'd7;
    end
    k7ddrphy_bitslip36_r0 <= {{k7ddrphy_dfi_p3_wrdata[100], k7ddrphy_dfi_p3_wrdata[36], k7ddrphy_dfi_p2_wrdata[100], k7ddrphy_dfi_p2_wrdata[36], k7ddrphy_dfi_p1_wrdata[100], k7ddrphy_dfi_p1_wrdata[36], k7ddrphy_dfi_p0_wrdata[100], k7ddrphy_dfi_p0_wrdata[36]}, k7ddrphy_bitslip36_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip36_value1 <= (k7ddrphy_bitslip36_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip36_value1 <= 3'd7;
    end
    k7ddrphy_bitslip36_r1 <= {k7ddrphy_bitslip361, k7ddrphy_bitslip36_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip37_value0 <= (k7ddrphy_bitslip37_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip37_value0 <= 3'd7;
    end
    k7ddrphy_bitslip37_r0 <= {{k7ddrphy_dfi_p3_wrdata[101], k7ddrphy_dfi_p3_wrdata[37], k7ddrphy_dfi_p2_wrdata[101], k7ddrphy_dfi_p2_wrdata[37], k7ddrphy_dfi_p1_wrdata[101], k7ddrphy_dfi_p1_wrdata[37], k7ddrphy_dfi_p0_wrdata[101], k7ddrphy_dfi_p0_wrdata[37]}, k7ddrphy_bitslip37_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip37_value1 <= (k7ddrphy_bitslip37_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip37_value1 <= 3'd7;
    end
    k7ddrphy_bitslip37_r1 <= {k7ddrphy_bitslip371, k7ddrphy_bitslip37_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip38_value0 <= (k7ddrphy_bitslip38_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip38_value0 <= 3'd7;
    end
    k7ddrphy_bitslip38_r0 <= {{k7ddrphy_dfi_p3_wrdata[102], k7ddrphy_dfi_p3_wrdata[38], k7ddrphy_dfi_p2_wrdata[102], k7ddrphy_dfi_p2_wrdata[38], k7ddrphy_dfi_p1_wrdata[102], k7ddrphy_dfi_p1_wrdata[38], k7ddrphy_dfi_p0_wrdata[102], k7ddrphy_dfi_p0_wrdata[38]}, k7ddrphy_bitslip38_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip38_value1 <= (k7ddrphy_bitslip38_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip38_value1 <= 3'd7;
    end
    k7ddrphy_bitslip38_r1 <= {k7ddrphy_bitslip381, k7ddrphy_bitslip38_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip39_value0 <= (k7ddrphy_bitslip39_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip39_value0 <= 3'd7;
    end
    k7ddrphy_bitslip39_r0 <= {{k7ddrphy_dfi_p3_wrdata[103], k7ddrphy_dfi_p3_wrdata[39], k7ddrphy_dfi_p2_wrdata[103], k7ddrphy_dfi_p2_wrdata[39], k7ddrphy_dfi_p1_wrdata[103], k7ddrphy_dfi_p1_wrdata[39], k7ddrphy_dfi_p0_wrdata[103], k7ddrphy_dfi_p0_wrdata[39]}, k7ddrphy_bitslip39_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip39_value1 <= (k7ddrphy_bitslip39_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip39_value1 <= 3'd7;
    end
    k7ddrphy_bitslip39_r1 <= {k7ddrphy_bitslip391, k7ddrphy_bitslip39_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip40_value0 <= (k7ddrphy_bitslip40_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip40_value0 <= 3'd7;
    end
    k7ddrphy_bitslip40_r0 <= {{k7ddrphy_dfi_p3_wrdata[104], k7ddrphy_dfi_p3_wrdata[40], k7ddrphy_dfi_p2_wrdata[104], k7ddrphy_dfi_p2_wrdata[40], k7ddrphy_dfi_p1_wrdata[104], k7ddrphy_dfi_p1_wrdata[40], k7ddrphy_dfi_p0_wrdata[104], k7ddrphy_dfi_p0_wrdata[40]}, k7ddrphy_bitslip40_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip40_value1 <= (k7ddrphy_bitslip40_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip40_value1 <= 3'd7;
    end
    k7ddrphy_bitslip40_r1 <= {k7ddrphy_bitslip401, k7ddrphy_bitslip40_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip41_value0 <= (k7ddrphy_bitslip41_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip41_value0 <= 3'd7;
    end
    k7ddrphy_bitslip41_r0 <= {{k7ddrphy_dfi_p3_wrdata[105], k7ddrphy_dfi_p3_wrdata[41], k7ddrphy_dfi_p2_wrdata[105], k7ddrphy_dfi_p2_wrdata[41], k7ddrphy_dfi_p1_wrdata[105], k7ddrphy_dfi_p1_wrdata[41], k7ddrphy_dfi_p0_wrdata[105], k7ddrphy_dfi_p0_wrdata[41]}, k7ddrphy_bitslip41_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip41_value1 <= (k7ddrphy_bitslip41_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip41_value1 <= 3'd7;
    end
    k7ddrphy_bitslip41_r1 <= {k7ddrphy_bitslip411, k7ddrphy_bitslip41_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip42_value0 <= (k7ddrphy_bitslip42_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip42_value0 <= 3'd7;
    end
    k7ddrphy_bitslip42_r0 <= {{k7ddrphy_dfi_p3_wrdata[106], k7ddrphy_dfi_p3_wrdata[42], k7ddrphy_dfi_p2_wrdata[106], k7ddrphy_dfi_p2_wrdata[42], k7ddrphy_dfi_p1_wrdata[106], k7ddrphy_dfi_p1_wrdata[42], k7ddrphy_dfi_p0_wrdata[106], k7ddrphy_dfi_p0_wrdata[42]}, k7ddrphy_bitslip42_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip42_value1 <= (k7ddrphy_bitslip42_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip42_value1 <= 3'd7;
    end
    k7ddrphy_bitslip42_r1 <= {k7ddrphy_bitslip421, k7ddrphy_bitslip42_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip43_value0 <= (k7ddrphy_bitslip43_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip43_value0 <= 3'd7;
    end
    k7ddrphy_bitslip43_r0 <= {{k7ddrphy_dfi_p3_wrdata[107], k7ddrphy_dfi_p3_wrdata[43], k7ddrphy_dfi_p2_wrdata[107], k7ddrphy_dfi_p2_wrdata[43], k7ddrphy_dfi_p1_wrdata[107], k7ddrphy_dfi_p1_wrdata[43], k7ddrphy_dfi_p0_wrdata[107], k7ddrphy_dfi_p0_wrdata[43]}, k7ddrphy_bitslip43_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip43_value1 <= (k7ddrphy_bitslip43_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip43_value1 <= 3'd7;
    end
    k7ddrphy_bitslip43_r1 <= {k7ddrphy_bitslip431, k7ddrphy_bitslip43_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip44_value0 <= (k7ddrphy_bitslip44_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip44_value0 <= 3'd7;
    end
    k7ddrphy_bitslip44_r0 <= {{k7ddrphy_dfi_p3_wrdata[108], k7ddrphy_dfi_p3_wrdata[44], k7ddrphy_dfi_p2_wrdata[108], k7ddrphy_dfi_p2_wrdata[44], k7ddrphy_dfi_p1_wrdata[108], k7ddrphy_dfi_p1_wrdata[44], k7ddrphy_dfi_p0_wrdata[108], k7ddrphy_dfi_p0_wrdata[44]}, k7ddrphy_bitslip44_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip44_value1 <= (k7ddrphy_bitslip44_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip44_value1 <= 3'd7;
    end
    k7ddrphy_bitslip44_r1 <= {k7ddrphy_bitslip441, k7ddrphy_bitslip44_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip45_value0 <= (k7ddrphy_bitslip45_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip45_value0 <= 3'd7;
    end
    k7ddrphy_bitslip45_r0 <= {{k7ddrphy_dfi_p3_wrdata[109], k7ddrphy_dfi_p3_wrdata[45], k7ddrphy_dfi_p2_wrdata[109], k7ddrphy_dfi_p2_wrdata[45], k7ddrphy_dfi_p1_wrdata[109], k7ddrphy_dfi_p1_wrdata[45], k7ddrphy_dfi_p0_wrdata[109], k7ddrphy_dfi_p0_wrdata[45]}, k7ddrphy_bitslip45_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip45_value1 <= (k7ddrphy_bitslip45_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip45_value1 <= 3'd7;
    end
    k7ddrphy_bitslip45_r1 <= {k7ddrphy_bitslip451, k7ddrphy_bitslip45_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip46_value0 <= (k7ddrphy_bitslip46_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip46_value0 <= 3'd7;
    end
    k7ddrphy_bitslip46_r0 <= {{k7ddrphy_dfi_p3_wrdata[110], k7ddrphy_dfi_p3_wrdata[46], k7ddrphy_dfi_p2_wrdata[110], k7ddrphy_dfi_p2_wrdata[46], k7ddrphy_dfi_p1_wrdata[110], k7ddrphy_dfi_p1_wrdata[46], k7ddrphy_dfi_p0_wrdata[110], k7ddrphy_dfi_p0_wrdata[46]}, k7ddrphy_bitslip46_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip46_value1 <= (k7ddrphy_bitslip46_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip46_value1 <= 3'd7;
    end
    k7ddrphy_bitslip46_r1 <= {k7ddrphy_bitslip461, k7ddrphy_bitslip46_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip47_value0 <= (k7ddrphy_bitslip47_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip47_value0 <= 3'd7;
    end
    k7ddrphy_bitslip47_r0 <= {{k7ddrphy_dfi_p3_wrdata[111], k7ddrphy_dfi_p3_wrdata[47], k7ddrphy_dfi_p2_wrdata[111], k7ddrphy_dfi_p2_wrdata[47], k7ddrphy_dfi_p1_wrdata[111], k7ddrphy_dfi_p1_wrdata[47], k7ddrphy_dfi_p0_wrdata[111], k7ddrphy_dfi_p0_wrdata[47]}, k7ddrphy_bitslip47_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip47_value1 <= (k7ddrphy_bitslip47_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip47_value1 <= 3'd7;
    end
    k7ddrphy_bitslip47_r1 <= {k7ddrphy_bitslip471, k7ddrphy_bitslip47_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip48_value0 <= (k7ddrphy_bitslip48_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip48_value0 <= 3'd7;
    end
    k7ddrphy_bitslip48_r0 <= {{k7ddrphy_dfi_p3_wrdata[112], k7ddrphy_dfi_p3_wrdata[48], k7ddrphy_dfi_p2_wrdata[112], k7ddrphy_dfi_p2_wrdata[48], k7ddrphy_dfi_p1_wrdata[112], k7ddrphy_dfi_p1_wrdata[48], k7ddrphy_dfi_p0_wrdata[112], k7ddrphy_dfi_p0_wrdata[48]}, k7ddrphy_bitslip48_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip48_value1 <= (k7ddrphy_bitslip48_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip48_value1 <= 3'd7;
    end
    k7ddrphy_bitslip48_r1 <= {k7ddrphy_bitslip481, k7ddrphy_bitslip48_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip49_value0 <= (k7ddrphy_bitslip49_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip49_value0 <= 3'd7;
    end
    k7ddrphy_bitslip49_r0 <= {{k7ddrphy_dfi_p3_wrdata[113], k7ddrphy_dfi_p3_wrdata[49], k7ddrphy_dfi_p2_wrdata[113], k7ddrphy_dfi_p2_wrdata[49], k7ddrphy_dfi_p1_wrdata[113], k7ddrphy_dfi_p1_wrdata[49], k7ddrphy_dfi_p0_wrdata[113], k7ddrphy_dfi_p0_wrdata[49]}, k7ddrphy_bitslip49_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip49_value1 <= (k7ddrphy_bitslip49_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip49_value1 <= 3'd7;
    end
    k7ddrphy_bitslip49_r1 <= {k7ddrphy_bitslip491, k7ddrphy_bitslip49_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip50_value0 <= (k7ddrphy_bitslip50_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip50_value0 <= 3'd7;
    end
    k7ddrphy_bitslip50_r0 <= {{k7ddrphy_dfi_p3_wrdata[114], k7ddrphy_dfi_p3_wrdata[50], k7ddrphy_dfi_p2_wrdata[114], k7ddrphy_dfi_p2_wrdata[50], k7ddrphy_dfi_p1_wrdata[114], k7ddrphy_dfi_p1_wrdata[50], k7ddrphy_dfi_p0_wrdata[114], k7ddrphy_dfi_p0_wrdata[50]}, k7ddrphy_bitslip50_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip50_value1 <= (k7ddrphy_bitslip50_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip50_value1 <= 3'd7;
    end
    k7ddrphy_bitslip50_r1 <= {k7ddrphy_bitslip501, k7ddrphy_bitslip50_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip51_value0 <= (k7ddrphy_bitslip51_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip51_value0 <= 3'd7;
    end
    k7ddrphy_bitslip51_r0 <= {{k7ddrphy_dfi_p3_wrdata[115], k7ddrphy_dfi_p3_wrdata[51], k7ddrphy_dfi_p2_wrdata[115], k7ddrphy_dfi_p2_wrdata[51], k7ddrphy_dfi_p1_wrdata[115], k7ddrphy_dfi_p1_wrdata[51], k7ddrphy_dfi_p0_wrdata[115], k7ddrphy_dfi_p0_wrdata[51]}, k7ddrphy_bitslip51_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip51_value1 <= (k7ddrphy_bitslip51_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip51_value1 <= 3'd7;
    end
    k7ddrphy_bitslip51_r1 <= {k7ddrphy_bitslip511, k7ddrphy_bitslip51_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip52_value0 <= (k7ddrphy_bitslip52_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip52_value0 <= 3'd7;
    end
    k7ddrphy_bitslip52_r0 <= {{k7ddrphy_dfi_p3_wrdata[116], k7ddrphy_dfi_p3_wrdata[52], k7ddrphy_dfi_p2_wrdata[116], k7ddrphy_dfi_p2_wrdata[52], k7ddrphy_dfi_p1_wrdata[116], k7ddrphy_dfi_p1_wrdata[52], k7ddrphy_dfi_p0_wrdata[116], k7ddrphy_dfi_p0_wrdata[52]}, k7ddrphy_bitslip52_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip52_value1 <= (k7ddrphy_bitslip52_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip52_value1 <= 3'd7;
    end
    k7ddrphy_bitslip52_r1 <= {k7ddrphy_bitslip521, k7ddrphy_bitslip52_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip53_value0 <= (k7ddrphy_bitslip53_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip53_value0 <= 3'd7;
    end
    k7ddrphy_bitslip53_r0 <= {{k7ddrphy_dfi_p3_wrdata[117], k7ddrphy_dfi_p3_wrdata[53], k7ddrphy_dfi_p2_wrdata[117], k7ddrphy_dfi_p2_wrdata[53], k7ddrphy_dfi_p1_wrdata[117], k7ddrphy_dfi_p1_wrdata[53], k7ddrphy_dfi_p0_wrdata[117], k7ddrphy_dfi_p0_wrdata[53]}, k7ddrphy_bitslip53_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip53_value1 <= (k7ddrphy_bitslip53_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip53_value1 <= 3'd7;
    end
    k7ddrphy_bitslip53_r1 <= {k7ddrphy_bitslip531, k7ddrphy_bitslip53_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip54_value0 <= (k7ddrphy_bitslip54_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip54_value0 <= 3'd7;
    end
    k7ddrphy_bitslip54_r0 <= {{k7ddrphy_dfi_p3_wrdata[118], k7ddrphy_dfi_p3_wrdata[54], k7ddrphy_dfi_p2_wrdata[118], k7ddrphy_dfi_p2_wrdata[54], k7ddrphy_dfi_p1_wrdata[118], k7ddrphy_dfi_p1_wrdata[54], k7ddrphy_dfi_p0_wrdata[118], k7ddrphy_dfi_p0_wrdata[54]}, k7ddrphy_bitslip54_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip54_value1 <= (k7ddrphy_bitslip54_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip54_value1 <= 3'd7;
    end
    k7ddrphy_bitslip54_r1 <= {k7ddrphy_bitslip541, k7ddrphy_bitslip54_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip55_value0 <= (k7ddrphy_bitslip55_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip55_value0 <= 3'd7;
    end
    k7ddrphy_bitslip55_r0 <= {{k7ddrphy_dfi_p3_wrdata[119], k7ddrphy_dfi_p3_wrdata[55], k7ddrphy_dfi_p2_wrdata[119], k7ddrphy_dfi_p2_wrdata[55], k7ddrphy_dfi_p1_wrdata[119], k7ddrphy_dfi_p1_wrdata[55], k7ddrphy_dfi_p0_wrdata[119], k7ddrphy_dfi_p0_wrdata[55]}, k7ddrphy_bitslip55_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip55_value1 <= (k7ddrphy_bitslip55_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip55_value1 <= 3'd7;
    end
    k7ddrphy_bitslip55_r1 <= {k7ddrphy_bitslip551, k7ddrphy_bitslip55_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip56_value0 <= (k7ddrphy_bitslip56_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip56_value0 <= 3'd7;
    end
    k7ddrphy_bitslip56_r0 <= {{k7ddrphy_dfi_p3_wrdata[120], k7ddrphy_dfi_p3_wrdata[56], k7ddrphy_dfi_p2_wrdata[120], k7ddrphy_dfi_p2_wrdata[56], k7ddrphy_dfi_p1_wrdata[120], k7ddrphy_dfi_p1_wrdata[56], k7ddrphy_dfi_p0_wrdata[120], k7ddrphy_dfi_p0_wrdata[56]}, k7ddrphy_bitslip56_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip56_value1 <= (k7ddrphy_bitslip56_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip56_value1 <= 3'd7;
    end
    k7ddrphy_bitslip56_r1 <= {k7ddrphy_bitslip561, k7ddrphy_bitslip56_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip57_value0 <= (k7ddrphy_bitslip57_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip57_value0 <= 3'd7;
    end
    k7ddrphy_bitslip57_r0 <= {{k7ddrphy_dfi_p3_wrdata[121], k7ddrphy_dfi_p3_wrdata[57], k7ddrphy_dfi_p2_wrdata[121], k7ddrphy_dfi_p2_wrdata[57], k7ddrphy_dfi_p1_wrdata[121], k7ddrphy_dfi_p1_wrdata[57], k7ddrphy_dfi_p0_wrdata[121], k7ddrphy_dfi_p0_wrdata[57]}, k7ddrphy_bitslip57_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip57_value1 <= (k7ddrphy_bitslip57_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip57_value1 <= 3'd7;
    end
    k7ddrphy_bitslip57_r1 <= {k7ddrphy_bitslip571, k7ddrphy_bitslip57_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip58_value0 <= (k7ddrphy_bitslip58_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip58_value0 <= 3'd7;
    end
    k7ddrphy_bitslip58_r0 <= {{k7ddrphy_dfi_p3_wrdata[122], k7ddrphy_dfi_p3_wrdata[58], k7ddrphy_dfi_p2_wrdata[122], k7ddrphy_dfi_p2_wrdata[58], k7ddrphy_dfi_p1_wrdata[122], k7ddrphy_dfi_p1_wrdata[58], k7ddrphy_dfi_p0_wrdata[122], k7ddrphy_dfi_p0_wrdata[58]}, k7ddrphy_bitslip58_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip58_value1 <= (k7ddrphy_bitslip58_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip58_value1 <= 3'd7;
    end
    k7ddrphy_bitslip58_r1 <= {k7ddrphy_bitslip581, k7ddrphy_bitslip58_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip59_value0 <= (k7ddrphy_bitslip59_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip59_value0 <= 3'd7;
    end
    k7ddrphy_bitslip59_r0 <= {{k7ddrphy_dfi_p3_wrdata[123], k7ddrphy_dfi_p3_wrdata[59], k7ddrphy_dfi_p2_wrdata[123], k7ddrphy_dfi_p2_wrdata[59], k7ddrphy_dfi_p1_wrdata[123], k7ddrphy_dfi_p1_wrdata[59], k7ddrphy_dfi_p0_wrdata[123], k7ddrphy_dfi_p0_wrdata[59]}, k7ddrphy_bitslip59_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip59_value1 <= (k7ddrphy_bitslip59_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip59_value1 <= 3'd7;
    end
    k7ddrphy_bitslip59_r1 <= {k7ddrphy_bitslip591, k7ddrphy_bitslip59_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip60_value0 <= (k7ddrphy_bitslip60_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip60_value0 <= 3'd7;
    end
    k7ddrphy_bitslip60_r0 <= {{k7ddrphy_dfi_p3_wrdata[124], k7ddrphy_dfi_p3_wrdata[60], k7ddrphy_dfi_p2_wrdata[124], k7ddrphy_dfi_p2_wrdata[60], k7ddrphy_dfi_p1_wrdata[124], k7ddrphy_dfi_p1_wrdata[60], k7ddrphy_dfi_p0_wrdata[124], k7ddrphy_dfi_p0_wrdata[60]}, k7ddrphy_bitslip60_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip60_value1 <= (k7ddrphy_bitslip60_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip60_value1 <= 3'd7;
    end
    k7ddrphy_bitslip60_r1 <= {k7ddrphy_bitslip601, k7ddrphy_bitslip60_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip61_value0 <= (k7ddrphy_bitslip61_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip61_value0 <= 3'd7;
    end
    k7ddrphy_bitslip61_r0 <= {{k7ddrphy_dfi_p3_wrdata[125], k7ddrphy_dfi_p3_wrdata[61], k7ddrphy_dfi_p2_wrdata[125], k7ddrphy_dfi_p2_wrdata[61], k7ddrphy_dfi_p1_wrdata[125], k7ddrphy_dfi_p1_wrdata[61], k7ddrphy_dfi_p0_wrdata[125], k7ddrphy_dfi_p0_wrdata[61]}, k7ddrphy_bitslip61_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip61_value1 <= (k7ddrphy_bitslip61_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip61_value1 <= 3'd7;
    end
    k7ddrphy_bitslip61_r1 <= {k7ddrphy_bitslip611, k7ddrphy_bitslip61_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip62_value0 <= (k7ddrphy_bitslip62_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip62_value0 <= 3'd7;
    end
    k7ddrphy_bitslip62_r0 <= {{k7ddrphy_dfi_p3_wrdata[126], k7ddrphy_dfi_p3_wrdata[62], k7ddrphy_dfi_p2_wrdata[126], k7ddrphy_dfi_p2_wrdata[62], k7ddrphy_dfi_p1_wrdata[126], k7ddrphy_dfi_p1_wrdata[62], k7ddrphy_dfi_p0_wrdata[126], k7ddrphy_dfi_p0_wrdata[62]}, k7ddrphy_bitslip62_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip62_value1 <= (k7ddrphy_bitslip62_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip62_value1 <= 3'd7;
    end
    k7ddrphy_bitslip62_r1 <= {k7ddrphy_bitslip621, k7ddrphy_bitslip62_r1[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip63_value0 <= (k7ddrphy_bitslip63_value0 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip63_value0 <= 3'd7;
    end
    k7ddrphy_bitslip63_r0 <= {{k7ddrphy_dfi_p3_wrdata[127], k7ddrphy_dfi_p3_wrdata[63], k7ddrphy_dfi_p2_wrdata[127], k7ddrphy_dfi_p2_wrdata[63], k7ddrphy_dfi_p1_wrdata[127], k7ddrphy_dfi_p1_wrdata[63], k7ddrphy_dfi_p0_wrdata[127], k7ddrphy_dfi_p0_wrdata[63]}, k7ddrphy_bitslip63_r0[15:8]};
    if ((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_re)) begin
        k7ddrphy_bitslip63_value1 <= (k7ddrphy_bitslip63_value1 + 1'd1);
    end
    if (((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_bitslip_rst_re) | k7ddrphy_rst_storage)) begin
        k7ddrphy_bitslip63_value1 <= 3'd7;
    end
    k7ddrphy_bitslip63_r1 <= {k7ddrphy_bitslip631, k7ddrphy_bitslip63_r1[15:8]};
    k7ddrphy_rddata_en_tappeddelayline0 <= (((k7ddrphy_dfi_p0_rddata_en | k7ddrphy_dfi_p1_rddata_en) | k7ddrphy_dfi_p2_rddata_en) | k7ddrphy_dfi_p3_rddata_en);
    k7ddrphy_rddata_en_tappeddelayline1 <= k7ddrphy_rddata_en_tappeddelayline0;
    k7ddrphy_rddata_en_tappeddelayline2 <= k7ddrphy_rddata_en_tappeddelayline1;
    k7ddrphy_rddata_en_tappeddelayline3 <= k7ddrphy_rddata_en_tappeddelayline2;
    k7ddrphy_rddata_en_tappeddelayline4 <= k7ddrphy_rddata_en_tappeddelayline3;
    k7ddrphy_rddata_en_tappeddelayline5 <= k7ddrphy_rddata_en_tappeddelayline4;
    k7ddrphy_rddata_en_tappeddelayline6 <= k7ddrphy_rddata_en_tappeddelayline5;
    k7ddrphy_rddata_en_tappeddelayline7 <= k7ddrphy_rddata_en_tappeddelayline6;
    k7ddrphy_wrdata_en_tappeddelayline0 <= (((k7ddrphy_dfi_p0_wrdata_en | k7ddrphy_dfi_p1_wrdata_en) | k7ddrphy_dfi_p2_wrdata_en) | k7ddrphy_dfi_p3_wrdata_en);
    k7ddrphy_wrdata_en_tappeddelayline1 <= k7ddrphy_wrdata_en_tappeddelayline0;
    k7ddrphy_wrdata_en_tappeddelayline2 <= k7ddrphy_wrdata_en_tappeddelayline1;
    if (soclinux_sdram_csr_dfi_p0_rddata_valid) begin
        soclinux_sdram_phaseinjector0_rddata_status <= soclinux_sdram_csr_dfi_p0_rddata;
    end
    if (soclinux_sdram_csr_dfi_p1_rddata_valid) begin
        soclinux_sdram_phaseinjector1_rddata_status <= soclinux_sdram_csr_dfi_p1_rddata;
    end
    if (soclinux_sdram_csr_dfi_p2_rddata_valid) begin
        soclinux_sdram_phaseinjector2_rddata_status <= soclinux_sdram_csr_dfi_p2_rddata;
    end
    if (soclinux_sdram_csr_dfi_p3_rddata_valid) begin
        soclinux_sdram_phaseinjector3_rddata_status <= soclinux_sdram_csr_dfi_p3_rddata;
    end
    if ((soclinux_sdram_timer_wait & (~soclinux_sdram_timer_done0))) begin
        soclinux_sdram_timer_count1 <= (soclinux_sdram_timer_count1 - 1'd1);
    end else begin
        soclinux_sdram_timer_count1 <= 10'd976;
    end
    soclinux_sdram_postponer_req_o <= 1'd0;
    if (soclinux_sdram_postponer_req_i) begin
        soclinux_sdram_postponer_count <= (soclinux_sdram_postponer_count - 1'd1);
        if ((soclinux_sdram_postponer_count == 1'd0)) begin
            soclinux_sdram_postponer_count <= 1'd0;
            soclinux_sdram_postponer_req_o <= 1'd1;
        end
    end
    if (soclinux_sdram_sequencer_start0) begin
        soclinux_sdram_sequencer_count <= 1'd0;
    end else begin
        if (soclinux_sdram_sequencer_done1) begin
            if ((soclinux_sdram_sequencer_count != 1'd0)) begin
                soclinux_sdram_sequencer_count <= (soclinux_sdram_sequencer_count - 1'd1);
            end
        end
    end
    soclinux_sdram_cmd_payload_a <= 1'd0;
    soclinux_sdram_cmd_payload_ba <= 1'd0;
    soclinux_sdram_cmd_payload_cas <= 1'd0;
    soclinux_sdram_cmd_payload_ras <= 1'd0;
    soclinux_sdram_cmd_payload_we <= 1'd0;
    soclinux_sdram_sequencer_done1 <= 1'd0;
    if ((soclinux_sdram_sequencer_start1 & (soclinux_sdram_sequencer_counter == 1'd0))) begin
        soclinux_sdram_cmd_payload_a <= 11'd1024;
        soclinux_sdram_cmd_payload_ba <= 1'd0;
        soclinux_sdram_cmd_payload_cas <= 1'd0;
        soclinux_sdram_cmd_payload_ras <= 1'd1;
        soclinux_sdram_cmd_payload_we <= 1'd1;
    end
    if ((soclinux_sdram_sequencer_counter == 2'd3)) begin
        soclinux_sdram_cmd_payload_a <= 11'd1024;
        soclinux_sdram_cmd_payload_ba <= 1'd0;
        soclinux_sdram_cmd_payload_cas <= 1'd1;
        soclinux_sdram_cmd_payload_ras <= 1'd1;
        soclinux_sdram_cmd_payload_we <= 1'd0;
    end
    if ((soclinux_sdram_sequencer_counter == 5'd18)) begin
        soclinux_sdram_cmd_payload_a <= 1'd0;
        soclinux_sdram_cmd_payload_ba <= 1'd0;
        soclinux_sdram_cmd_payload_cas <= 1'd0;
        soclinux_sdram_cmd_payload_ras <= 1'd0;
        soclinux_sdram_cmd_payload_we <= 1'd0;
        soclinux_sdram_sequencer_done1 <= 1'd1;
    end
    if ((soclinux_sdram_sequencer_counter == 5'd18)) begin
        soclinux_sdram_sequencer_counter <= 1'd0;
    end else begin
        if ((soclinux_sdram_sequencer_counter != 1'd0)) begin
            soclinux_sdram_sequencer_counter <= (soclinux_sdram_sequencer_counter + 1'd1);
        end else begin
            if (soclinux_sdram_sequencer_start1) begin
                soclinux_sdram_sequencer_counter <= 1'd1;
            end
        end
    end
    if ((soclinux_sdram_zqcs_timer_wait & (~soclinux_sdram_zqcs_timer_done0))) begin
        soclinux_sdram_zqcs_timer_count1 <= (soclinux_sdram_zqcs_timer_count1 - 1'd1);
    end else begin
        soclinux_sdram_zqcs_timer_count1 <= 27'd124999999;
    end
    soclinux_sdram_zqcs_executer_done <= 1'd0;
    if ((soclinux_sdram_zqcs_executer_start & (soclinux_sdram_zqcs_executer_counter == 1'd0))) begin
        soclinux_sdram_cmd_payload_a <= 11'd1024;
        soclinux_sdram_cmd_payload_ba <= 1'd0;
        soclinux_sdram_cmd_payload_cas <= 1'd0;
        soclinux_sdram_cmd_payload_ras <= 1'd1;
        soclinux_sdram_cmd_payload_we <= 1'd1;
    end
    if ((soclinux_sdram_zqcs_executer_counter == 2'd3)) begin
        soclinux_sdram_cmd_payload_a <= 1'd0;
        soclinux_sdram_cmd_payload_ba <= 1'd0;
        soclinux_sdram_cmd_payload_cas <= 1'd0;
        soclinux_sdram_cmd_payload_ras <= 1'd0;
        soclinux_sdram_cmd_payload_we <= 1'd1;
    end
    if ((soclinux_sdram_zqcs_executer_counter == 5'd19)) begin
        soclinux_sdram_cmd_payload_a <= 1'd0;
        soclinux_sdram_cmd_payload_ba <= 1'd0;
        soclinux_sdram_cmd_payload_cas <= 1'd0;
        soclinux_sdram_cmd_payload_ras <= 1'd0;
        soclinux_sdram_cmd_payload_we <= 1'd0;
        soclinux_sdram_zqcs_executer_done <= 1'd1;
    end
    if ((soclinux_sdram_zqcs_executer_counter == 5'd19)) begin
        soclinux_sdram_zqcs_executer_counter <= 1'd0;
    end else begin
        if ((soclinux_sdram_zqcs_executer_counter != 1'd0)) begin
            soclinux_sdram_zqcs_executer_counter <= (soclinux_sdram_zqcs_executer_counter + 1'd1);
        end else begin
            if (soclinux_sdram_zqcs_executer_start) begin
                soclinux_sdram_zqcs_executer_counter <= 1'd1;
            end
        end
    end
    soclinux_refresher_state <= soclinux_refresher_next_state;
    if (soclinux_sdram_bankmachine0_row_close) begin
        soclinux_sdram_bankmachine0_row_opened <= 1'd0;
    end else begin
        if (soclinux_sdram_bankmachine0_row_open) begin
            soclinux_sdram_bankmachine0_row_opened <= 1'd1;
            soclinux_sdram_bankmachine0_row <= soclinux_sdram_bankmachine0_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_sdram_bankmachine0_syncfifo0_we & soclinux_sdram_bankmachine0_syncfifo0_writable) & (~soclinux_sdram_bankmachine0_replace))) begin
        soclinux_sdram_bankmachine0_produce <= (soclinux_sdram_bankmachine0_produce + 1'd1);
    end
    if (soclinux_sdram_bankmachine0_do_read) begin
        soclinux_sdram_bankmachine0_consume <= (soclinux_sdram_bankmachine0_consume + 1'd1);
    end
    if (((soclinux_sdram_bankmachine0_syncfifo0_we & soclinux_sdram_bankmachine0_syncfifo0_writable) & (~soclinux_sdram_bankmachine0_replace))) begin
        if ((~soclinux_sdram_bankmachine0_do_read)) begin
            soclinux_sdram_bankmachine0_level <= (soclinux_sdram_bankmachine0_level + 1'd1);
        end
    end else begin
        if (soclinux_sdram_bankmachine0_do_read) begin
            soclinux_sdram_bankmachine0_level <= (soclinux_sdram_bankmachine0_level - 1'd1);
        end
    end
    if (((~soclinux_sdram_bankmachine0_pipe_valid_source_valid) | soclinux_sdram_bankmachine0_pipe_valid_source_ready)) begin
        soclinux_sdram_bankmachine0_pipe_valid_source_valid <= soclinux_sdram_bankmachine0_pipe_valid_sink_valid;
        soclinux_sdram_bankmachine0_pipe_valid_source_first <= soclinux_sdram_bankmachine0_pipe_valid_sink_first;
        soclinux_sdram_bankmachine0_pipe_valid_source_last <= soclinux_sdram_bankmachine0_pipe_valid_sink_last;
        soclinux_sdram_bankmachine0_pipe_valid_source_payload_we <= soclinux_sdram_bankmachine0_pipe_valid_sink_payload_we;
        soclinux_sdram_bankmachine0_pipe_valid_source_payload_addr <= soclinux_sdram_bankmachine0_pipe_valid_sink_payload_addr;
    end
    if (soclinux_sdram_bankmachine0_twtpcon_valid) begin
        soclinux_sdram_bankmachine0_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine0_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine0_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine0_twtpcon_ready)) begin
            soclinux_sdram_bankmachine0_twtpcon_count <= (soclinux_sdram_bankmachine0_twtpcon_count - 1'd1);
            if ((soclinux_sdram_bankmachine0_twtpcon_count == 1'd1)) begin
                soclinux_sdram_bankmachine0_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine0_trccon_valid) begin
        soclinux_sdram_bankmachine0_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_sdram_bankmachine0_trccon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine0_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine0_trccon_ready)) begin
            soclinux_sdram_bankmachine0_trccon_count <= (soclinux_sdram_bankmachine0_trccon_count - 1'd1);
            if ((soclinux_sdram_bankmachine0_trccon_count == 1'd1)) begin
                soclinux_sdram_bankmachine0_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine0_trascon_valid) begin
        soclinux_sdram_bankmachine0_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine0_trascon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine0_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine0_trascon_ready)) begin
            soclinux_sdram_bankmachine0_trascon_count <= (soclinux_sdram_bankmachine0_trascon_count - 1'd1);
            if ((soclinux_sdram_bankmachine0_trascon_count == 1'd1)) begin
                soclinux_sdram_bankmachine0_trascon_ready <= 1'd1;
            end
        end
    end
    soclinux_bankmachine0_state <= soclinux_bankmachine0_next_state;
    if (soclinux_sdram_bankmachine1_row_close) begin
        soclinux_sdram_bankmachine1_row_opened <= 1'd0;
    end else begin
        if (soclinux_sdram_bankmachine1_row_open) begin
            soclinux_sdram_bankmachine1_row_opened <= 1'd1;
            soclinux_sdram_bankmachine1_row <= soclinux_sdram_bankmachine1_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_sdram_bankmachine1_syncfifo1_we & soclinux_sdram_bankmachine1_syncfifo1_writable) & (~soclinux_sdram_bankmachine1_replace))) begin
        soclinux_sdram_bankmachine1_produce <= (soclinux_sdram_bankmachine1_produce + 1'd1);
    end
    if (soclinux_sdram_bankmachine1_do_read) begin
        soclinux_sdram_bankmachine1_consume <= (soclinux_sdram_bankmachine1_consume + 1'd1);
    end
    if (((soclinux_sdram_bankmachine1_syncfifo1_we & soclinux_sdram_bankmachine1_syncfifo1_writable) & (~soclinux_sdram_bankmachine1_replace))) begin
        if ((~soclinux_sdram_bankmachine1_do_read)) begin
            soclinux_sdram_bankmachine1_level <= (soclinux_sdram_bankmachine1_level + 1'd1);
        end
    end else begin
        if (soclinux_sdram_bankmachine1_do_read) begin
            soclinux_sdram_bankmachine1_level <= (soclinux_sdram_bankmachine1_level - 1'd1);
        end
    end
    if (((~soclinux_sdram_bankmachine1_pipe_valid_source_valid) | soclinux_sdram_bankmachine1_pipe_valid_source_ready)) begin
        soclinux_sdram_bankmachine1_pipe_valid_source_valid <= soclinux_sdram_bankmachine1_pipe_valid_sink_valid;
        soclinux_sdram_bankmachine1_pipe_valid_source_first <= soclinux_sdram_bankmachine1_pipe_valid_sink_first;
        soclinux_sdram_bankmachine1_pipe_valid_source_last <= soclinux_sdram_bankmachine1_pipe_valid_sink_last;
        soclinux_sdram_bankmachine1_pipe_valid_source_payload_we <= soclinux_sdram_bankmachine1_pipe_valid_sink_payload_we;
        soclinux_sdram_bankmachine1_pipe_valid_source_payload_addr <= soclinux_sdram_bankmachine1_pipe_valid_sink_payload_addr;
    end
    if (soclinux_sdram_bankmachine1_twtpcon_valid) begin
        soclinux_sdram_bankmachine1_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine1_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine1_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine1_twtpcon_ready)) begin
            soclinux_sdram_bankmachine1_twtpcon_count <= (soclinux_sdram_bankmachine1_twtpcon_count - 1'd1);
            if ((soclinux_sdram_bankmachine1_twtpcon_count == 1'd1)) begin
                soclinux_sdram_bankmachine1_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine1_trccon_valid) begin
        soclinux_sdram_bankmachine1_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_sdram_bankmachine1_trccon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine1_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine1_trccon_ready)) begin
            soclinux_sdram_bankmachine1_trccon_count <= (soclinux_sdram_bankmachine1_trccon_count - 1'd1);
            if ((soclinux_sdram_bankmachine1_trccon_count == 1'd1)) begin
                soclinux_sdram_bankmachine1_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine1_trascon_valid) begin
        soclinux_sdram_bankmachine1_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine1_trascon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine1_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine1_trascon_ready)) begin
            soclinux_sdram_bankmachine1_trascon_count <= (soclinux_sdram_bankmachine1_trascon_count - 1'd1);
            if ((soclinux_sdram_bankmachine1_trascon_count == 1'd1)) begin
                soclinux_sdram_bankmachine1_trascon_ready <= 1'd1;
            end
        end
    end
    soclinux_bankmachine1_state <= soclinux_bankmachine1_next_state;
    if (soclinux_sdram_bankmachine2_row_close) begin
        soclinux_sdram_bankmachine2_row_opened <= 1'd0;
    end else begin
        if (soclinux_sdram_bankmachine2_row_open) begin
            soclinux_sdram_bankmachine2_row_opened <= 1'd1;
            soclinux_sdram_bankmachine2_row <= soclinux_sdram_bankmachine2_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_sdram_bankmachine2_syncfifo2_we & soclinux_sdram_bankmachine2_syncfifo2_writable) & (~soclinux_sdram_bankmachine2_replace))) begin
        soclinux_sdram_bankmachine2_produce <= (soclinux_sdram_bankmachine2_produce + 1'd1);
    end
    if (soclinux_sdram_bankmachine2_do_read) begin
        soclinux_sdram_bankmachine2_consume <= (soclinux_sdram_bankmachine2_consume + 1'd1);
    end
    if (((soclinux_sdram_bankmachine2_syncfifo2_we & soclinux_sdram_bankmachine2_syncfifo2_writable) & (~soclinux_sdram_bankmachine2_replace))) begin
        if ((~soclinux_sdram_bankmachine2_do_read)) begin
            soclinux_sdram_bankmachine2_level <= (soclinux_sdram_bankmachine2_level + 1'd1);
        end
    end else begin
        if (soclinux_sdram_bankmachine2_do_read) begin
            soclinux_sdram_bankmachine2_level <= (soclinux_sdram_bankmachine2_level - 1'd1);
        end
    end
    if (((~soclinux_sdram_bankmachine2_pipe_valid_source_valid) | soclinux_sdram_bankmachine2_pipe_valid_source_ready)) begin
        soclinux_sdram_bankmachine2_pipe_valid_source_valid <= soclinux_sdram_bankmachine2_pipe_valid_sink_valid;
        soclinux_sdram_bankmachine2_pipe_valid_source_first <= soclinux_sdram_bankmachine2_pipe_valid_sink_first;
        soclinux_sdram_bankmachine2_pipe_valid_source_last <= soclinux_sdram_bankmachine2_pipe_valid_sink_last;
        soclinux_sdram_bankmachine2_pipe_valid_source_payload_we <= soclinux_sdram_bankmachine2_pipe_valid_sink_payload_we;
        soclinux_sdram_bankmachine2_pipe_valid_source_payload_addr <= soclinux_sdram_bankmachine2_pipe_valid_sink_payload_addr;
    end
    if (soclinux_sdram_bankmachine2_twtpcon_valid) begin
        soclinux_sdram_bankmachine2_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine2_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine2_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine2_twtpcon_ready)) begin
            soclinux_sdram_bankmachine2_twtpcon_count <= (soclinux_sdram_bankmachine2_twtpcon_count - 1'd1);
            if ((soclinux_sdram_bankmachine2_twtpcon_count == 1'd1)) begin
                soclinux_sdram_bankmachine2_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine2_trccon_valid) begin
        soclinux_sdram_bankmachine2_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_sdram_bankmachine2_trccon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine2_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine2_trccon_ready)) begin
            soclinux_sdram_bankmachine2_trccon_count <= (soclinux_sdram_bankmachine2_trccon_count - 1'd1);
            if ((soclinux_sdram_bankmachine2_trccon_count == 1'd1)) begin
                soclinux_sdram_bankmachine2_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine2_trascon_valid) begin
        soclinux_sdram_bankmachine2_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine2_trascon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine2_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine2_trascon_ready)) begin
            soclinux_sdram_bankmachine2_trascon_count <= (soclinux_sdram_bankmachine2_trascon_count - 1'd1);
            if ((soclinux_sdram_bankmachine2_trascon_count == 1'd1)) begin
                soclinux_sdram_bankmachine2_trascon_ready <= 1'd1;
            end
        end
    end
    soclinux_bankmachine2_state <= soclinux_bankmachine2_next_state;
    if (soclinux_sdram_bankmachine3_row_close) begin
        soclinux_sdram_bankmachine3_row_opened <= 1'd0;
    end else begin
        if (soclinux_sdram_bankmachine3_row_open) begin
            soclinux_sdram_bankmachine3_row_opened <= 1'd1;
            soclinux_sdram_bankmachine3_row <= soclinux_sdram_bankmachine3_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_sdram_bankmachine3_syncfifo3_we & soclinux_sdram_bankmachine3_syncfifo3_writable) & (~soclinux_sdram_bankmachine3_replace))) begin
        soclinux_sdram_bankmachine3_produce <= (soclinux_sdram_bankmachine3_produce + 1'd1);
    end
    if (soclinux_sdram_bankmachine3_do_read) begin
        soclinux_sdram_bankmachine3_consume <= (soclinux_sdram_bankmachine3_consume + 1'd1);
    end
    if (((soclinux_sdram_bankmachine3_syncfifo3_we & soclinux_sdram_bankmachine3_syncfifo3_writable) & (~soclinux_sdram_bankmachine3_replace))) begin
        if ((~soclinux_sdram_bankmachine3_do_read)) begin
            soclinux_sdram_bankmachine3_level <= (soclinux_sdram_bankmachine3_level + 1'd1);
        end
    end else begin
        if (soclinux_sdram_bankmachine3_do_read) begin
            soclinux_sdram_bankmachine3_level <= (soclinux_sdram_bankmachine3_level - 1'd1);
        end
    end
    if (((~soclinux_sdram_bankmachine3_pipe_valid_source_valid) | soclinux_sdram_bankmachine3_pipe_valid_source_ready)) begin
        soclinux_sdram_bankmachine3_pipe_valid_source_valid <= soclinux_sdram_bankmachine3_pipe_valid_sink_valid;
        soclinux_sdram_bankmachine3_pipe_valid_source_first <= soclinux_sdram_bankmachine3_pipe_valid_sink_first;
        soclinux_sdram_bankmachine3_pipe_valid_source_last <= soclinux_sdram_bankmachine3_pipe_valid_sink_last;
        soclinux_sdram_bankmachine3_pipe_valid_source_payload_we <= soclinux_sdram_bankmachine3_pipe_valid_sink_payload_we;
        soclinux_sdram_bankmachine3_pipe_valid_source_payload_addr <= soclinux_sdram_bankmachine3_pipe_valid_sink_payload_addr;
    end
    if (soclinux_sdram_bankmachine3_twtpcon_valid) begin
        soclinux_sdram_bankmachine3_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine3_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine3_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine3_twtpcon_ready)) begin
            soclinux_sdram_bankmachine3_twtpcon_count <= (soclinux_sdram_bankmachine3_twtpcon_count - 1'd1);
            if ((soclinux_sdram_bankmachine3_twtpcon_count == 1'd1)) begin
                soclinux_sdram_bankmachine3_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine3_trccon_valid) begin
        soclinux_sdram_bankmachine3_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_sdram_bankmachine3_trccon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine3_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine3_trccon_ready)) begin
            soclinux_sdram_bankmachine3_trccon_count <= (soclinux_sdram_bankmachine3_trccon_count - 1'd1);
            if ((soclinux_sdram_bankmachine3_trccon_count == 1'd1)) begin
                soclinux_sdram_bankmachine3_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine3_trascon_valid) begin
        soclinux_sdram_bankmachine3_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine3_trascon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine3_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine3_trascon_ready)) begin
            soclinux_sdram_bankmachine3_trascon_count <= (soclinux_sdram_bankmachine3_trascon_count - 1'd1);
            if ((soclinux_sdram_bankmachine3_trascon_count == 1'd1)) begin
                soclinux_sdram_bankmachine3_trascon_ready <= 1'd1;
            end
        end
    end
    soclinux_bankmachine3_state <= soclinux_bankmachine3_next_state;
    if (soclinux_sdram_bankmachine4_row_close) begin
        soclinux_sdram_bankmachine4_row_opened <= 1'd0;
    end else begin
        if (soclinux_sdram_bankmachine4_row_open) begin
            soclinux_sdram_bankmachine4_row_opened <= 1'd1;
            soclinux_sdram_bankmachine4_row <= soclinux_sdram_bankmachine4_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_sdram_bankmachine4_syncfifo4_we & soclinux_sdram_bankmachine4_syncfifo4_writable) & (~soclinux_sdram_bankmachine4_replace))) begin
        soclinux_sdram_bankmachine4_produce <= (soclinux_sdram_bankmachine4_produce + 1'd1);
    end
    if (soclinux_sdram_bankmachine4_do_read) begin
        soclinux_sdram_bankmachine4_consume <= (soclinux_sdram_bankmachine4_consume + 1'd1);
    end
    if (((soclinux_sdram_bankmachine4_syncfifo4_we & soclinux_sdram_bankmachine4_syncfifo4_writable) & (~soclinux_sdram_bankmachine4_replace))) begin
        if ((~soclinux_sdram_bankmachine4_do_read)) begin
            soclinux_sdram_bankmachine4_level <= (soclinux_sdram_bankmachine4_level + 1'd1);
        end
    end else begin
        if (soclinux_sdram_bankmachine4_do_read) begin
            soclinux_sdram_bankmachine4_level <= (soclinux_sdram_bankmachine4_level - 1'd1);
        end
    end
    if (((~soclinux_sdram_bankmachine4_pipe_valid_source_valid) | soclinux_sdram_bankmachine4_pipe_valid_source_ready)) begin
        soclinux_sdram_bankmachine4_pipe_valid_source_valid <= soclinux_sdram_bankmachine4_pipe_valid_sink_valid;
        soclinux_sdram_bankmachine4_pipe_valid_source_first <= soclinux_sdram_bankmachine4_pipe_valid_sink_first;
        soclinux_sdram_bankmachine4_pipe_valid_source_last <= soclinux_sdram_bankmachine4_pipe_valid_sink_last;
        soclinux_sdram_bankmachine4_pipe_valid_source_payload_we <= soclinux_sdram_bankmachine4_pipe_valid_sink_payload_we;
        soclinux_sdram_bankmachine4_pipe_valid_source_payload_addr <= soclinux_sdram_bankmachine4_pipe_valid_sink_payload_addr;
    end
    if (soclinux_sdram_bankmachine4_twtpcon_valid) begin
        soclinux_sdram_bankmachine4_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine4_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine4_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine4_twtpcon_ready)) begin
            soclinux_sdram_bankmachine4_twtpcon_count <= (soclinux_sdram_bankmachine4_twtpcon_count - 1'd1);
            if ((soclinux_sdram_bankmachine4_twtpcon_count == 1'd1)) begin
                soclinux_sdram_bankmachine4_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine4_trccon_valid) begin
        soclinux_sdram_bankmachine4_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_sdram_bankmachine4_trccon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine4_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine4_trccon_ready)) begin
            soclinux_sdram_bankmachine4_trccon_count <= (soclinux_sdram_bankmachine4_trccon_count - 1'd1);
            if ((soclinux_sdram_bankmachine4_trccon_count == 1'd1)) begin
                soclinux_sdram_bankmachine4_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine4_trascon_valid) begin
        soclinux_sdram_bankmachine4_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine4_trascon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine4_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine4_trascon_ready)) begin
            soclinux_sdram_bankmachine4_trascon_count <= (soclinux_sdram_bankmachine4_trascon_count - 1'd1);
            if ((soclinux_sdram_bankmachine4_trascon_count == 1'd1)) begin
                soclinux_sdram_bankmachine4_trascon_ready <= 1'd1;
            end
        end
    end
    soclinux_bankmachine4_state <= soclinux_bankmachine4_next_state;
    if (soclinux_sdram_bankmachine5_row_close) begin
        soclinux_sdram_bankmachine5_row_opened <= 1'd0;
    end else begin
        if (soclinux_sdram_bankmachine5_row_open) begin
            soclinux_sdram_bankmachine5_row_opened <= 1'd1;
            soclinux_sdram_bankmachine5_row <= soclinux_sdram_bankmachine5_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_sdram_bankmachine5_syncfifo5_we & soclinux_sdram_bankmachine5_syncfifo5_writable) & (~soclinux_sdram_bankmachine5_replace))) begin
        soclinux_sdram_bankmachine5_produce <= (soclinux_sdram_bankmachine5_produce + 1'd1);
    end
    if (soclinux_sdram_bankmachine5_do_read) begin
        soclinux_sdram_bankmachine5_consume <= (soclinux_sdram_bankmachine5_consume + 1'd1);
    end
    if (((soclinux_sdram_bankmachine5_syncfifo5_we & soclinux_sdram_bankmachine5_syncfifo5_writable) & (~soclinux_sdram_bankmachine5_replace))) begin
        if ((~soclinux_sdram_bankmachine5_do_read)) begin
            soclinux_sdram_bankmachine5_level <= (soclinux_sdram_bankmachine5_level + 1'd1);
        end
    end else begin
        if (soclinux_sdram_bankmachine5_do_read) begin
            soclinux_sdram_bankmachine5_level <= (soclinux_sdram_bankmachine5_level - 1'd1);
        end
    end
    if (((~soclinux_sdram_bankmachine5_pipe_valid_source_valid) | soclinux_sdram_bankmachine5_pipe_valid_source_ready)) begin
        soclinux_sdram_bankmachine5_pipe_valid_source_valid <= soclinux_sdram_bankmachine5_pipe_valid_sink_valid;
        soclinux_sdram_bankmachine5_pipe_valid_source_first <= soclinux_sdram_bankmachine5_pipe_valid_sink_first;
        soclinux_sdram_bankmachine5_pipe_valid_source_last <= soclinux_sdram_bankmachine5_pipe_valid_sink_last;
        soclinux_sdram_bankmachine5_pipe_valid_source_payload_we <= soclinux_sdram_bankmachine5_pipe_valid_sink_payload_we;
        soclinux_sdram_bankmachine5_pipe_valid_source_payload_addr <= soclinux_sdram_bankmachine5_pipe_valid_sink_payload_addr;
    end
    if (soclinux_sdram_bankmachine5_twtpcon_valid) begin
        soclinux_sdram_bankmachine5_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine5_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine5_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine5_twtpcon_ready)) begin
            soclinux_sdram_bankmachine5_twtpcon_count <= (soclinux_sdram_bankmachine5_twtpcon_count - 1'd1);
            if ((soclinux_sdram_bankmachine5_twtpcon_count == 1'd1)) begin
                soclinux_sdram_bankmachine5_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine5_trccon_valid) begin
        soclinux_sdram_bankmachine5_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_sdram_bankmachine5_trccon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine5_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine5_trccon_ready)) begin
            soclinux_sdram_bankmachine5_trccon_count <= (soclinux_sdram_bankmachine5_trccon_count - 1'd1);
            if ((soclinux_sdram_bankmachine5_trccon_count == 1'd1)) begin
                soclinux_sdram_bankmachine5_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine5_trascon_valid) begin
        soclinux_sdram_bankmachine5_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine5_trascon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine5_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine5_trascon_ready)) begin
            soclinux_sdram_bankmachine5_trascon_count <= (soclinux_sdram_bankmachine5_trascon_count - 1'd1);
            if ((soclinux_sdram_bankmachine5_trascon_count == 1'd1)) begin
                soclinux_sdram_bankmachine5_trascon_ready <= 1'd1;
            end
        end
    end
    soclinux_bankmachine5_state <= soclinux_bankmachine5_next_state;
    if (soclinux_sdram_bankmachine6_row_close) begin
        soclinux_sdram_bankmachine6_row_opened <= 1'd0;
    end else begin
        if (soclinux_sdram_bankmachine6_row_open) begin
            soclinux_sdram_bankmachine6_row_opened <= 1'd1;
            soclinux_sdram_bankmachine6_row <= soclinux_sdram_bankmachine6_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_sdram_bankmachine6_syncfifo6_we & soclinux_sdram_bankmachine6_syncfifo6_writable) & (~soclinux_sdram_bankmachine6_replace))) begin
        soclinux_sdram_bankmachine6_produce <= (soclinux_sdram_bankmachine6_produce + 1'd1);
    end
    if (soclinux_sdram_bankmachine6_do_read) begin
        soclinux_sdram_bankmachine6_consume <= (soclinux_sdram_bankmachine6_consume + 1'd1);
    end
    if (((soclinux_sdram_bankmachine6_syncfifo6_we & soclinux_sdram_bankmachine6_syncfifo6_writable) & (~soclinux_sdram_bankmachine6_replace))) begin
        if ((~soclinux_sdram_bankmachine6_do_read)) begin
            soclinux_sdram_bankmachine6_level <= (soclinux_sdram_bankmachine6_level + 1'd1);
        end
    end else begin
        if (soclinux_sdram_bankmachine6_do_read) begin
            soclinux_sdram_bankmachine6_level <= (soclinux_sdram_bankmachine6_level - 1'd1);
        end
    end
    if (((~soclinux_sdram_bankmachine6_pipe_valid_source_valid) | soclinux_sdram_bankmachine6_pipe_valid_source_ready)) begin
        soclinux_sdram_bankmachine6_pipe_valid_source_valid <= soclinux_sdram_bankmachine6_pipe_valid_sink_valid;
        soclinux_sdram_bankmachine6_pipe_valid_source_first <= soclinux_sdram_bankmachine6_pipe_valid_sink_first;
        soclinux_sdram_bankmachine6_pipe_valid_source_last <= soclinux_sdram_bankmachine6_pipe_valid_sink_last;
        soclinux_sdram_bankmachine6_pipe_valid_source_payload_we <= soclinux_sdram_bankmachine6_pipe_valid_sink_payload_we;
        soclinux_sdram_bankmachine6_pipe_valid_source_payload_addr <= soclinux_sdram_bankmachine6_pipe_valid_sink_payload_addr;
    end
    if (soclinux_sdram_bankmachine6_twtpcon_valid) begin
        soclinux_sdram_bankmachine6_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine6_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine6_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine6_twtpcon_ready)) begin
            soclinux_sdram_bankmachine6_twtpcon_count <= (soclinux_sdram_bankmachine6_twtpcon_count - 1'd1);
            if ((soclinux_sdram_bankmachine6_twtpcon_count == 1'd1)) begin
                soclinux_sdram_bankmachine6_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine6_trccon_valid) begin
        soclinux_sdram_bankmachine6_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_sdram_bankmachine6_trccon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine6_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine6_trccon_ready)) begin
            soclinux_sdram_bankmachine6_trccon_count <= (soclinux_sdram_bankmachine6_trccon_count - 1'd1);
            if ((soclinux_sdram_bankmachine6_trccon_count == 1'd1)) begin
                soclinux_sdram_bankmachine6_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine6_trascon_valid) begin
        soclinux_sdram_bankmachine6_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine6_trascon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine6_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine6_trascon_ready)) begin
            soclinux_sdram_bankmachine6_trascon_count <= (soclinux_sdram_bankmachine6_trascon_count - 1'd1);
            if ((soclinux_sdram_bankmachine6_trascon_count == 1'd1)) begin
                soclinux_sdram_bankmachine6_trascon_ready <= 1'd1;
            end
        end
    end
    soclinux_bankmachine6_state <= soclinux_bankmachine6_next_state;
    if (soclinux_sdram_bankmachine7_row_close) begin
        soclinux_sdram_bankmachine7_row_opened <= 1'd0;
    end else begin
        if (soclinux_sdram_bankmachine7_row_open) begin
            soclinux_sdram_bankmachine7_row_opened <= 1'd1;
            soclinux_sdram_bankmachine7_row <= soclinux_sdram_bankmachine7_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_sdram_bankmachine7_syncfifo7_we & soclinux_sdram_bankmachine7_syncfifo7_writable) & (~soclinux_sdram_bankmachine7_replace))) begin
        soclinux_sdram_bankmachine7_produce <= (soclinux_sdram_bankmachine7_produce + 1'd1);
    end
    if (soclinux_sdram_bankmachine7_do_read) begin
        soclinux_sdram_bankmachine7_consume <= (soclinux_sdram_bankmachine7_consume + 1'd1);
    end
    if (((soclinux_sdram_bankmachine7_syncfifo7_we & soclinux_sdram_bankmachine7_syncfifo7_writable) & (~soclinux_sdram_bankmachine7_replace))) begin
        if ((~soclinux_sdram_bankmachine7_do_read)) begin
            soclinux_sdram_bankmachine7_level <= (soclinux_sdram_bankmachine7_level + 1'd1);
        end
    end else begin
        if (soclinux_sdram_bankmachine7_do_read) begin
            soclinux_sdram_bankmachine7_level <= (soclinux_sdram_bankmachine7_level - 1'd1);
        end
    end
    if (((~soclinux_sdram_bankmachine7_pipe_valid_source_valid) | soclinux_sdram_bankmachine7_pipe_valid_source_ready)) begin
        soclinux_sdram_bankmachine7_pipe_valid_source_valid <= soclinux_sdram_bankmachine7_pipe_valid_sink_valid;
        soclinux_sdram_bankmachine7_pipe_valid_source_first <= soclinux_sdram_bankmachine7_pipe_valid_sink_first;
        soclinux_sdram_bankmachine7_pipe_valid_source_last <= soclinux_sdram_bankmachine7_pipe_valid_sink_last;
        soclinux_sdram_bankmachine7_pipe_valid_source_payload_we <= soclinux_sdram_bankmachine7_pipe_valid_sink_payload_we;
        soclinux_sdram_bankmachine7_pipe_valid_source_payload_addr <= soclinux_sdram_bankmachine7_pipe_valid_sink_payload_addr;
    end
    if (soclinux_sdram_bankmachine7_twtpcon_valid) begin
        soclinux_sdram_bankmachine7_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine7_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine7_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine7_twtpcon_ready)) begin
            soclinux_sdram_bankmachine7_twtpcon_count <= (soclinux_sdram_bankmachine7_twtpcon_count - 1'd1);
            if ((soclinux_sdram_bankmachine7_twtpcon_count == 1'd1)) begin
                soclinux_sdram_bankmachine7_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine7_trccon_valid) begin
        soclinux_sdram_bankmachine7_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_sdram_bankmachine7_trccon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine7_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine7_trccon_ready)) begin
            soclinux_sdram_bankmachine7_trccon_count <= (soclinux_sdram_bankmachine7_trccon_count - 1'd1);
            if ((soclinux_sdram_bankmachine7_trccon_count == 1'd1)) begin
                soclinux_sdram_bankmachine7_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_bankmachine7_trascon_valid) begin
        soclinux_sdram_bankmachine7_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_sdram_bankmachine7_trascon_ready <= 1'd1;
        end else begin
            soclinux_sdram_bankmachine7_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_bankmachine7_trascon_ready)) begin
            soclinux_sdram_bankmachine7_trascon_count <= (soclinux_sdram_bankmachine7_trascon_count - 1'd1);
            if ((soclinux_sdram_bankmachine7_trascon_count == 1'd1)) begin
                soclinux_sdram_bankmachine7_trascon_ready <= 1'd1;
            end
        end
    end
    soclinux_bankmachine7_state <= soclinux_bankmachine7_next_state;
    if ((~soclinux_sdram_en0)) begin
        soclinux_sdram_time0 <= 5'd31;
    end else begin
        if ((~soclinux_sdram_max_time0)) begin
            soclinux_sdram_time0 <= (soclinux_sdram_time0 - 1'd1);
        end
    end
    if ((~soclinux_sdram_en1)) begin
        soclinux_sdram_time1 <= 4'd15;
    end else begin
        if ((~soclinux_sdram_max_time1)) begin
            soclinux_sdram_time1 <= (soclinux_sdram_time1 - 1'd1);
        end
    end
    if (soclinux_sdram_choose_cmd_ce) begin
        case (soclinux_sdram_choose_cmd_grant)
            1'd0: begin
                if (soclinux_sdram_choose_cmd_request[1]) begin
                    soclinux_sdram_choose_cmd_grant <= 1'd1;
                end else begin
                    if (soclinux_sdram_choose_cmd_request[2]) begin
                        soclinux_sdram_choose_cmd_grant <= 2'd2;
                    end else begin
                        if (soclinux_sdram_choose_cmd_request[3]) begin
                            soclinux_sdram_choose_cmd_grant <= 2'd3;
                        end else begin
                            if (soclinux_sdram_choose_cmd_request[4]) begin
                                soclinux_sdram_choose_cmd_grant <= 3'd4;
                            end else begin
                                if (soclinux_sdram_choose_cmd_request[5]) begin
                                    soclinux_sdram_choose_cmd_grant <= 3'd5;
                                end else begin
                                    if (soclinux_sdram_choose_cmd_request[6]) begin
                                        soclinux_sdram_choose_cmd_grant <= 3'd6;
                                    end else begin
                                        if (soclinux_sdram_choose_cmd_request[7]) begin
                                            soclinux_sdram_choose_cmd_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (soclinux_sdram_choose_cmd_request[2]) begin
                    soclinux_sdram_choose_cmd_grant <= 2'd2;
                end else begin
                    if (soclinux_sdram_choose_cmd_request[3]) begin
                        soclinux_sdram_choose_cmd_grant <= 2'd3;
                    end else begin
                        if (soclinux_sdram_choose_cmd_request[4]) begin
                            soclinux_sdram_choose_cmd_grant <= 3'd4;
                        end else begin
                            if (soclinux_sdram_choose_cmd_request[5]) begin
                                soclinux_sdram_choose_cmd_grant <= 3'd5;
                            end else begin
                                if (soclinux_sdram_choose_cmd_request[6]) begin
                                    soclinux_sdram_choose_cmd_grant <= 3'd6;
                                end else begin
                                    if (soclinux_sdram_choose_cmd_request[7]) begin
                                        soclinux_sdram_choose_cmd_grant <= 3'd7;
                                    end else begin
                                        if (soclinux_sdram_choose_cmd_request[0]) begin
                                            soclinux_sdram_choose_cmd_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (soclinux_sdram_choose_cmd_request[3]) begin
                    soclinux_sdram_choose_cmd_grant <= 2'd3;
                end else begin
                    if (soclinux_sdram_choose_cmd_request[4]) begin
                        soclinux_sdram_choose_cmd_grant <= 3'd4;
                    end else begin
                        if (soclinux_sdram_choose_cmd_request[5]) begin
                            soclinux_sdram_choose_cmd_grant <= 3'd5;
                        end else begin
                            if (soclinux_sdram_choose_cmd_request[6]) begin
                                soclinux_sdram_choose_cmd_grant <= 3'd6;
                            end else begin
                                if (soclinux_sdram_choose_cmd_request[7]) begin
                                    soclinux_sdram_choose_cmd_grant <= 3'd7;
                                end else begin
                                    if (soclinux_sdram_choose_cmd_request[0]) begin
                                        soclinux_sdram_choose_cmd_grant <= 1'd0;
                                    end else begin
                                        if (soclinux_sdram_choose_cmd_request[1]) begin
                                            soclinux_sdram_choose_cmd_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (soclinux_sdram_choose_cmd_request[4]) begin
                    soclinux_sdram_choose_cmd_grant <= 3'd4;
                end else begin
                    if (soclinux_sdram_choose_cmd_request[5]) begin
                        soclinux_sdram_choose_cmd_grant <= 3'd5;
                    end else begin
                        if (soclinux_sdram_choose_cmd_request[6]) begin
                            soclinux_sdram_choose_cmd_grant <= 3'd6;
                        end else begin
                            if (soclinux_sdram_choose_cmd_request[7]) begin
                                soclinux_sdram_choose_cmd_grant <= 3'd7;
                            end else begin
                                if (soclinux_sdram_choose_cmd_request[0]) begin
                                    soclinux_sdram_choose_cmd_grant <= 1'd0;
                                end else begin
                                    if (soclinux_sdram_choose_cmd_request[1]) begin
                                        soclinux_sdram_choose_cmd_grant <= 1'd1;
                                    end else begin
                                        if (soclinux_sdram_choose_cmd_request[2]) begin
                                            soclinux_sdram_choose_cmd_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (soclinux_sdram_choose_cmd_request[5]) begin
                    soclinux_sdram_choose_cmd_grant <= 3'd5;
                end else begin
                    if (soclinux_sdram_choose_cmd_request[6]) begin
                        soclinux_sdram_choose_cmd_grant <= 3'd6;
                    end else begin
                        if (soclinux_sdram_choose_cmd_request[7]) begin
                            soclinux_sdram_choose_cmd_grant <= 3'd7;
                        end else begin
                            if (soclinux_sdram_choose_cmd_request[0]) begin
                                soclinux_sdram_choose_cmd_grant <= 1'd0;
                            end else begin
                                if (soclinux_sdram_choose_cmd_request[1]) begin
                                    soclinux_sdram_choose_cmd_grant <= 1'd1;
                                end else begin
                                    if (soclinux_sdram_choose_cmd_request[2]) begin
                                        soclinux_sdram_choose_cmd_grant <= 2'd2;
                                    end else begin
                                        if (soclinux_sdram_choose_cmd_request[3]) begin
                                            soclinux_sdram_choose_cmd_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (soclinux_sdram_choose_cmd_request[6]) begin
                    soclinux_sdram_choose_cmd_grant <= 3'd6;
                end else begin
                    if (soclinux_sdram_choose_cmd_request[7]) begin
                        soclinux_sdram_choose_cmd_grant <= 3'd7;
                    end else begin
                        if (soclinux_sdram_choose_cmd_request[0]) begin
                            soclinux_sdram_choose_cmd_grant <= 1'd0;
                        end else begin
                            if (soclinux_sdram_choose_cmd_request[1]) begin
                                soclinux_sdram_choose_cmd_grant <= 1'd1;
                            end else begin
                                if (soclinux_sdram_choose_cmd_request[2]) begin
                                    soclinux_sdram_choose_cmd_grant <= 2'd2;
                                end else begin
                                    if (soclinux_sdram_choose_cmd_request[3]) begin
                                        soclinux_sdram_choose_cmd_grant <= 2'd3;
                                    end else begin
                                        if (soclinux_sdram_choose_cmd_request[4]) begin
                                            soclinux_sdram_choose_cmd_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (soclinux_sdram_choose_cmd_request[7]) begin
                    soclinux_sdram_choose_cmd_grant <= 3'd7;
                end else begin
                    if (soclinux_sdram_choose_cmd_request[0]) begin
                        soclinux_sdram_choose_cmd_grant <= 1'd0;
                    end else begin
                        if (soclinux_sdram_choose_cmd_request[1]) begin
                            soclinux_sdram_choose_cmd_grant <= 1'd1;
                        end else begin
                            if (soclinux_sdram_choose_cmd_request[2]) begin
                                soclinux_sdram_choose_cmd_grant <= 2'd2;
                            end else begin
                                if (soclinux_sdram_choose_cmd_request[3]) begin
                                    soclinux_sdram_choose_cmd_grant <= 2'd3;
                                end else begin
                                    if (soclinux_sdram_choose_cmd_request[4]) begin
                                        soclinux_sdram_choose_cmd_grant <= 3'd4;
                                    end else begin
                                        if (soclinux_sdram_choose_cmd_request[5]) begin
                                            soclinux_sdram_choose_cmd_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (soclinux_sdram_choose_cmd_request[0]) begin
                    soclinux_sdram_choose_cmd_grant <= 1'd0;
                end else begin
                    if (soclinux_sdram_choose_cmd_request[1]) begin
                        soclinux_sdram_choose_cmd_grant <= 1'd1;
                    end else begin
                        if (soclinux_sdram_choose_cmd_request[2]) begin
                            soclinux_sdram_choose_cmd_grant <= 2'd2;
                        end else begin
                            if (soclinux_sdram_choose_cmd_request[3]) begin
                                soclinux_sdram_choose_cmd_grant <= 2'd3;
                            end else begin
                                if (soclinux_sdram_choose_cmd_request[4]) begin
                                    soclinux_sdram_choose_cmd_grant <= 3'd4;
                                end else begin
                                    if (soclinux_sdram_choose_cmd_request[5]) begin
                                        soclinux_sdram_choose_cmd_grant <= 3'd5;
                                    end else begin
                                        if (soclinux_sdram_choose_cmd_request[6]) begin
                                            soclinux_sdram_choose_cmd_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    if (soclinux_sdram_choose_req_ce) begin
        case (soclinux_sdram_choose_req_grant)
            1'd0: begin
                if (soclinux_sdram_choose_req_request[1]) begin
                    soclinux_sdram_choose_req_grant <= 1'd1;
                end else begin
                    if (soclinux_sdram_choose_req_request[2]) begin
                        soclinux_sdram_choose_req_grant <= 2'd2;
                    end else begin
                        if (soclinux_sdram_choose_req_request[3]) begin
                            soclinux_sdram_choose_req_grant <= 2'd3;
                        end else begin
                            if (soclinux_sdram_choose_req_request[4]) begin
                                soclinux_sdram_choose_req_grant <= 3'd4;
                            end else begin
                                if (soclinux_sdram_choose_req_request[5]) begin
                                    soclinux_sdram_choose_req_grant <= 3'd5;
                                end else begin
                                    if (soclinux_sdram_choose_req_request[6]) begin
                                        soclinux_sdram_choose_req_grant <= 3'd6;
                                    end else begin
                                        if (soclinux_sdram_choose_req_request[7]) begin
                                            soclinux_sdram_choose_req_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (soclinux_sdram_choose_req_request[2]) begin
                    soclinux_sdram_choose_req_grant <= 2'd2;
                end else begin
                    if (soclinux_sdram_choose_req_request[3]) begin
                        soclinux_sdram_choose_req_grant <= 2'd3;
                    end else begin
                        if (soclinux_sdram_choose_req_request[4]) begin
                            soclinux_sdram_choose_req_grant <= 3'd4;
                        end else begin
                            if (soclinux_sdram_choose_req_request[5]) begin
                                soclinux_sdram_choose_req_grant <= 3'd5;
                            end else begin
                                if (soclinux_sdram_choose_req_request[6]) begin
                                    soclinux_sdram_choose_req_grant <= 3'd6;
                                end else begin
                                    if (soclinux_sdram_choose_req_request[7]) begin
                                        soclinux_sdram_choose_req_grant <= 3'd7;
                                    end else begin
                                        if (soclinux_sdram_choose_req_request[0]) begin
                                            soclinux_sdram_choose_req_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (soclinux_sdram_choose_req_request[3]) begin
                    soclinux_sdram_choose_req_grant <= 2'd3;
                end else begin
                    if (soclinux_sdram_choose_req_request[4]) begin
                        soclinux_sdram_choose_req_grant <= 3'd4;
                    end else begin
                        if (soclinux_sdram_choose_req_request[5]) begin
                            soclinux_sdram_choose_req_grant <= 3'd5;
                        end else begin
                            if (soclinux_sdram_choose_req_request[6]) begin
                                soclinux_sdram_choose_req_grant <= 3'd6;
                            end else begin
                                if (soclinux_sdram_choose_req_request[7]) begin
                                    soclinux_sdram_choose_req_grant <= 3'd7;
                                end else begin
                                    if (soclinux_sdram_choose_req_request[0]) begin
                                        soclinux_sdram_choose_req_grant <= 1'd0;
                                    end else begin
                                        if (soclinux_sdram_choose_req_request[1]) begin
                                            soclinux_sdram_choose_req_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (soclinux_sdram_choose_req_request[4]) begin
                    soclinux_sdram_choose_req_grant <= 3'd4;
                end else begin
                    if (soclinux_sdram_choose_req_request[5]) begin
                        soclinux_sdram_choose_req_grant <= 3'd5;
                    end else begin
                        if (soclinux_sdram_choose_req_request[6]) begin
                            soclinux_sdram_choose_req_grant <= 3'd6;
                        end else begin
                            if (soclinux_sdram_choose_req_request[7]) begin
                                soclinux_sdram_choose_req_grant <= 3'd7;
                            end else begin
                                if (soclinux_sdram_choose_req_request[0]) begin
                                    soclinux_sdram_choose_req_grant <= 1'd0;
                                end else begin
                                    if (soclinux_sdram_choose_req_request[1]) begin
                                        soclinux_sdram_choose_req_grant <= 1'd1;
                                    end else begin
                                        if (soclinux_sdram_choose_req_request[2]) begin
                                            soclinux_sdram_choose_req_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (soclinux_sdram_choose_req_request[5]) begin
                    soclinux_sdram_choose_req_grant <= 3'd5;
                end else begin
                    if (soclinux_sdram_choose_req_request[6]) begin
                        soclinux_sdram_choose_req_grant <= 3'd6;
                    end else begin
                        if (soclinux_sdram_choose_req_request[7]) begin
                            soclinux_sdram_choose_req_grant <= 3'd7;
                        end else begin
                            if (soclinux_sdram_choose_req_request[0]) begin
                                soclinux_sdram_choose_req_grant <= 1'd0;
                            end else begin
                                if (soclinux_sdram_choose_req_request[1]) begin
                                    soclinux_sdram_choose_req_grant <= 1'd1;
                                end else begin
                                    if (soclinux_sdram_choose_req_request[2]) begin
                                        soclinux_sdram_choose_req_grant <= 2'd2;
                                    end else begin
                                        if (soclinux_sdram_choose_req_request[3]) begin
                                            soclinux_sdram_choose_req_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (soclinux_sdram_choose_req_request[6]) begin
                    soclinux_sdram_choose_req_grant <= 3'd6;
                end else begin
                    if (soclinux_sdram_choose_req_request[7]) begin
                        soclinux_sdram_choose_req_grant <= 3'd7;
                    end else begin
                        if (soclinux_sdram_choose_req_request[0]) begin
                            soclinux_sdram_choose_req_grant <= 1'd0;
                        end else begin
                            if (soclinux_sdram_choose_req_request[1]) begin
                                soclinux_sdram_choose_req_grant <= 1'd1;
                            end else begin
                                if (soclinux_sdram_choose_req_request[2]) begin
                                    soclinux_sdram_choose_req_grant <= 2'd2;
                                end else begin
                                    if (soclinux_sdram_choose_req_request[3]) begin
                                        soclinux_sdram_choose_req_grant <= 2'd3;
                                    end else begin
                                        if (soclinux_sdram_choose_req_request[4]) begin
                                            soclinux_sdram_choose_req_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (soclinux_sdram_choose_req_request[7]) begin
                    soclinux_sdram_choose_req_grant <= 3'd7;
                end else begin
                    if (soclinux_sdram_choose_req_request[0]) begin
                        soclinux_sdram_choose_req_grant <= 1'd0;
                    end else begin
                        if (soclinux_sdram_choose_req_request[1]) begin
                            soclinux_sdram_choose_req_grant <= 1'd1;
                        end else begin
                            if (soclinux_sdram_choose_req_request[2]) begin
                                soclinux_sdram_choose_req_grant <= 2'd2;
                            end else begin
                                if (soclinux_sdram_choose_req_request[3]) begin
                                    soclinux_sdram_choose_req_grant <= 2'd3;
                                end else begin
                                    if (soclinux_sdram_choose_req_request[4]) begin
                                        soclinux_sdram_choose_req_grant <= 3'd4;
                                    end else begin
                                        if (soclinux_sdram_choose_req_request[5]) begin
                                            soclinux_sdram_choose_req_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (soclinux_sdram_choose_req_request[0]) begin
                    soclinux_sdram_choose_req_grant <= 1'd0;
                end else begin
                    if (soclinux_sdram_choose_req_request[1]) begin
                        soclinux_sdram_choose_req_grant <= 1'd1;
                    end else begin
                        if (soclinux_sdram_choose_req_request[2]) begin
                            soclinux_sdram_choose_req_grant <= 2'd2;
                        end else begin
                            if (soclinux_sdram_choose_req_request[3]) begin
                                soclinux_sdram_choose_req_grant <= 2'd3;
                            end else begin
                                if (soclinux_sdram_choose_req_request[4]) begin
                                    soclinux_sdram_choose_req_grant <= 3'd4;
                                end else begin
                                    if (soclinux_sdram_choose_req_request[5]) begin
                                        soclinux_sdram_choose_req_grant <= 3'd5;
                                    end else begin
                                        if (soclinux_sdram_choose_req_request[6]) begin
                                            soclinux_sdram_choose_req_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    soclinux_sdram_dfi_p0_cs_n <= 1'd0;
    soclinux_sdram_dfi_p0_bank <= array_muxed0;
    soclinux_sdram_dfi_p0_address <= array_muxed1;
    soclinux_sdram_dfi_p0_cas_n <= (~array_muxed2);
    soclinux_sdram_dfi_p0_ras_n <= (~array_muxed3);
    soclinux_sdram_dfi_p0_we_n <= (~array_muxed4);
    soclinux_sdram_dfi_p0_rddata_en <= array_muxed5;
    soclinux_sdram_dfi_p0_wrdata_en <= array_muxed6;
    soclinux_sdram_dfi_p1_cs_n <= 1'd0;
    soclinux_sdram_dfi_p1_bank <= array_muxed7;
    soclinux_sdram_dfi_p1_address <= array_muxed8;
    soclinux_sdram_dfi_p1_cas_n <= (~array_muxed9);
    soclinux_sdram_dfi_p1_ras_n <= (~array_muxed10);
    soclinux_sdram_dfi_p1_we_n <= (~array_muxed11);
    soclinux_sdram_dfi_p1_rddata_en <= array_muxed12;
    soclinux_sdram_dfi_p1_wrdata_en <= array_muxed13;
    soclinux_sdram_dfi_p2_cs_n <= 1'd0;
    soclinux_sdram_dfi_p2_bank <= array_muxed14;
    soclinux_sdram_dfi_p2_address <= array_muxed15;
    soclinux_sdram_dfi_p2_cas_n <= (~array_muxed16);
    soclinux_sdram_dfi_p2_ras_n <= (~array_muxed17);
    soclinux_sdram_dfi_p2_we_n <= (~array_muxed18);
    soclinux_sdram_dfi_p2_rddata_en <= array_muxed19;
    soclinux_sdram_dfi_p2_wrdata_en <= array_muxed20;
    soclinux_sdram_dfi_p3_cs_n <= 1'd0;
    soclinux_sdram_dfi_p3_bank <= array_muxed21;
    soclinux_sdram_dfi_p3_address <= array_muxed22;
    soclinux_sdram_dfi_p3_cas_n <= (~array_muxed23);
    soclinux_sdram_dfi_p3_ras_n <= (~array_muxed24);
    soclinux_sdram_dfi_p3_we_n <= (~array_muxed25);
    soclinux_sdram_dfi_p3_rddata_en <= array_muxed26;
    soclinux_sdram_dfi_p3_wrdata_en <= array_muxed27;
    if (soclinux_sdram_trrdcon_valid) begin
        soclinux_sdram_trrdcon_count <= 1'd1;
        if (1'd0) begin
            soclinux_sdram_trrdcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_trrdcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_trrdcon_ready)) begin
            soclinux_sdram_trrdcon_count <= (soclinux_sdram_trrdcon_count - 1'd1);
            if ((soclinux_sdram_trrdcon_count == 1'd1)) begin
                soclinux_sdram_trrdcon_ready <= 1'd1;
            end
        end
    end
    soclinux_sdram_tfawcon_window <= {soclinux_sdram_tfawcon_window, soclinux_sdram_tfawcon_valid};
    if ((soclinux_sdram_tfawcon_count < 3'd4)) begin
        if ((soclinux_sdram_tfawcon_count == 2'd3)) begin
            soclinux_sdram_tfawcon_ready <= (~soclinux_sdram_tfawcon_valid);
        end else begin
            soclinux_sdram_tfawcon_ready <= 1'd1;
        end
    end
    if (soclinux_sdram_tccdcon_valid) begin
        soclinux_sdram_tccdcon_count <= 1'd0;
        if (1'd1) begin
            soclinux_sdram_tccdcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_tccdcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_tccdcon_ready)) begin
            soclinux_sdram_tccdcon_count <= (soclinux_sdram_tccdcon_count - 1'd1);
            if ((soclinux_sdram_tccdcon_count == 1'd1)) begin
                soclinux_sdram_tccdcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_sdram_twtrcon_valid) begin
        soclinux_sdram_twtrcon_count <= 3'd4;
        if (1'd0) begin
            soclinux_sdram_twtrcon_ready <= 1'd1;
        end else begin
            soclinux_sdram_twtrcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_sdram_twtrcon_ready)) begin
            soclinux_sdram_twtrcon_count <= (soclinux_sdram_twtrcon_count - 1'd1);
            if ((soclinux_sdram_twtrcon_count == 1'd1)) begin
                soclinux_sdram_twtrcon_ready <= 1'd1;
            end
        end
    end
    soclinux_multiplexer_state <= soclinux_multiplexer_next_state;
    soclinux_new_master_wdata_ready0 <= ((((((((1'd0 | ((soclinux_roundrobin0_grant == 1'd0) & soclinux_sdram_interface_bank0_wdata_ready)) | ((soclinux_roundrobin1_grant == 1'd0) & soclinux_sdram_interface_bank1_wdata_ready)) | ((soclinux_roundrobin2_grant == 1'd0) & soclinux_sdram_interface_bank2_wdata_ready)) | ((soclinux_roundrobin3_grant == 1'd0) & soclinux_sdram_interface_bank3_wdata_ready)) | ((soclinux_roundrobin4_grant == 1'd0) & soclinux_sdram_interface_bank4_wdata_ready)) | ((soclinux_roundrobin5_grant == 1'd0) & soclinux_sdram_interface_bank5_wdata_ready)) | ((soclinux_roundrobin6_grant == 1'd0) & soclinux_sdram_interface_bank6_wdata_ready)) | ((soclinux_roundrobin7_grant == 1'd0) & soclinux_sdram_interface_bank7_wdata_ready));
    soclinux_new_master_wdata_ready1 <= soclinux_new_master_wdata_ready0;
    soclinux_new_master_rdata_valid0 <= ((((((((1'd0 | ((soclinux_roundrobin0_grant == 1'd0) & soclinux_sdram_interface_bank0_rdata_valid)) | ((soclinux_roundrobin1_grant == 1'd0) & soclinux_sdram_interface_bank1_rdata_valid)) | ((soclinux_roundrobin2_grant == 1'd0) & soclinux_sdram_interface_bank2_rdata_valid)) | ((soclinux_roundrobin3_grant == 1'd0) & soclinux_sdram_interface_bank3_rdata_valid)) | ((soclinux_roundrobin4_grant == 1'd0) & soclinux_sdram_interface_bank4_rdata_valid)) | ((soclinux_roundrobin5_grant == 1'd0) & soclinux_sdram_interface_bank5_rdata_valid)) | ((soclinux_roundrobin6_grant == 1'd0) & soclinux_sdram_interface_bank6_rdata_valid)) | ((soclinux_roundrobin7_grant == 1'd0) & soclinux_sdram_interface_bank7_rdata_valid));
    soclinux_new_master_rdata_valid1 <= soclinux_new_master_rdata_valid0;
    soclinux_new_master_rdata_valid2 <= soclinux_new_master_rdata_valid1;
    soclinux_new_master_rdata_valid3 <= soclinux_new_master_rdata_valid2;
    soclinux_new_master_rdata_valid4 <= soclinux_new_master_rdata_valid3;
    soclinux_new_master_rdata_valid5 <= soclinux_new_master_rdata_valid4;
    soclinux_new_master_rdata_valid6 <= soclinux_new_master_rdata_valid5;
    soclinux_new_master_rdata_valid7 <= soclinux_new_master_rdata_valid6;
    soclinux_new_master_rdata_valid8 <= soclinux_new_master_rdata_valid7;
    soclinux_adr_offset_r <= soclinux_wb_sdram_adr[3:0];
    soclinux_fullmemorywe_state <= soclinux_fullmemorywe_next_state;
    soclinux_litedramwishbone2native_state <= soclinux_litedramwishbone2native_next_state;
    if (soclinux_aborted_litedramwishbone2native_next_value_ce) begin
        soclinux_aborted <= soclinux_aborted_litedramwishbone2native_next_value;
    end
    if (ethphy_update_mode) begin
        ethphy_mode0 <= ethphy_mode1;
    end
    if (ethphy_sys_counter_reset) begin
        ethphy_sys_counter <= 1'd0;
    end else begin
        if (ethphy_sys_counter_ce) begin
            ethphy_sys_counter <= (ethphy_sys_counter + 1'd1);
        end
    end
    ethphy_toggle_o_r <= ethphy_toggle_o;
    soclinux_liteethphygmiimii_state <= soclinux_liteethphygmiimii_next_state;
    if (ethphy_counter_ce) begin
        ethphy_counter <= (ethphy_counter + 1'd1);
    end
    soclinux_ethmac_tx_cdc_cdc_graycounter0_q_binary <= soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next_binary;
    soclinux_ethmac_tx_cdc_cdc_graycounter0_q <= soclinux_ethmac_tx_cdc_cdc_graycounter0_q_next;
    if (soclinux_ethmac_pulsesynchronizer0_o) begin
        soclinux_ethmac_preamble_errors_status <= (soclinux_ethmac_preamble_errors_status + 1'd1);
    end
    if (soclinux_ethmac_pulsesynchronizer1_o) begin
        soclinux_ethmac_crc_errors_status <= (soclinux_ethmac_crc_errors_status + 1'd1);
    end
    soclinux_ethmac_pulsesynchronizer0_toggle_o_r <= soclinux_ethmac_pulsesynchronizer0_toggle_o;
    soclinux_ethmac_pulsesynchronizer1_toggle_o_r <= soclinux_ethmac_pulsesynchronizer1_toggle_o;
    soclinux_ethmac_rx_cdc_cdc_graycounter1_q_binary <= soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next_binary;
    soclinux_ethmac_rx_cdc_cdc_graycounter1_q <= soclinux_ethmac_rx_cdc_cdc_graycounter1_q_next;
    if (((soclinux_ethmac_sram49_we & soclinux_ethmac_sram50_writable) & (~soclinux_ethmac_sram56_replace))) begin
        soclinux_ethmac_sram57_produce <= (soclinux_ethmac_sram57_produce + 1'd1);
    end
    if (soclinux_ethmac_sram63_do_read) begin
        soclinux_ethmac_sram58_consume <= (soclinux_ethmac_sram58_consume + 1'd1);
    end
    if (((soclinux_ethmac_sram49_we & soclinux_ethmac_sram50_writable) & (~soclinux_ethmac_sram56_replace))) begin
        if ((~soclinux_ethmac_sram63_do_read)) begin
            soclinux_ethmac_sram55_level <= (soclinux_ethmac_sram55_level + 1'd1);
        end
    end else begin
        if (soclinux_ethmac_sram63_do_read) begin
            soclinux_ethmac_sram55_level <= (soclinux_ethmac_sram55_level - 1'd1);
        end
    end
    soclinux_liteethmacsramwriter_state <= soclinux_liteethmacsramwriter_next_state;
    if (soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce) begin
        soclinux_ethmac_sram35_length <= soclinux_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value;
    end
    if (soclinux_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce) begin
        soclinux_ethmac_sram13_status <= soclinux_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value;
    end
    if (soclinux_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce) begin
        soclinux_ethmac_slot <= soclinux_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value;
    end
    if (soclinux_ethmac_sram108_clear) begin
        soclinux_ethmac_sram106_pending <= 1'd0;
    end
    if (soclinux_ethmac_sram107_trigger) begin
        soclinux_ethmac_sram106_pending <= 1'd1;
    end
    if (((soclinux_ethmac_sram135_we & soclinux_ethmac_sram136_writable) & (~soclinux_ethmac_sram142_replace))) begin
        soclinux_ethmac_sram143_produce <= (soclinux_ethmac_sram143_produce + 1'd1);
    end
    if (soclinux_ethmac_sram149_do_read) begin
        soclinux_ethmac_sram144_consume <= (soclinux_ethmac_sram144_consume + 1'd1);
    end
    if (((soclinux_ethmac_sram135_we & soclinux_ethmac_sram136_writable) & (~soclinux_ethmac_sram142_replace))) begin
        if ((~soclinux_ethmac_sram149_do_read)) begin
            soclinux_ethmac_sram141_level <= (soclinux_ethmac_sram141_level + 1'd1);
        end
    end else begin
        if (soclinux_ethmac_sram149_do_read) begin
            soclinux_ethmac_sram141_level <= (soclinux_ethmac_sram141_level - 1'd1);
        end
    end
    soclinux_liteethmacsramreader_state <= soclinux_liteethmacsramreader_next_state;
    if (soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce) begin
        soclinux_ethmac_sram122_length <= soclinux_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value;
    end
    soclinux_ethmac_interface0_ack <= 1'd0;
    if (((soclinux_ethmac_interface0_cyc & soclinux_ethmac_interface0_stb) & ((~soclinux_ethmac_interface0_ack) | soclinux_ethmac_sram2_adr_burst))) begin
        soclinux_ethmac_interface0_ack <= 1'd1;
    end
    soclinux_ethmac_interface1_ack <= 1'd0;
    if (((soclinux_ethmac_interface1_cyc & soclinux_ethmac_interface1_stb) & ((~soclinux_ethmac_interface1_ack) | soclinux_ethmac_sram3_adr_burst))) begin
        soclinux_ethmac_interface1_ack <= 1'd1;
    end
    soclinux_ethmac_interface2_ack <= 1'd0;
    if (((soclinux_ethmac_interface2_cyc & soclinux_ethmac_interface2_stb) & ((~soclinux_ethmac_interface2_ack) | soclinux_ethmac_sram4_adr_burst))) begin
        soclinux_ethmac_interface2_ack <= 1'd1;
    end
    soclinux_ethmac_interface3_ack <= 1'd0;
    if (((soclinux_ethmac_interface3_cyc & soclinux_ethmac_interface3_stb) & ((~soclinux_ethmac_interface3_ack) | soclinux_ethmac_sram5_adr_burst))) begin
        soclinux_ethmac_interface3_ack <= 1'd1;
    end
    soclinux_ethmac_slave_sel_r <= soclinux_ethmac_slave_sel;
    if (leds_done) begin
        leds_chaser <= {leds_chaser, (~leds_chaser[7])};
    end
    if (leds_re) begin
        leds_mode <= 1'd1;
    end
    if (leds_wait) begin
        if ((~leds_done)) begin
            leds_count <= (leds_count - 1'd1);
        end
    end else begin
        leds_count <= 23'd7812500;
    end
    card_detect_d <= card_detect_status0;
    card_detect_irq <= (card_detect_status0 ^ card_detect_d);
    if ((~clocker_stop)) begin
        clocker_clks <= (clocker_clks + 1'd1);
    end
    clocker_clk_d <= clocker_clk1;
    if (clocker_clk_d) begin
        clocker_ce_delayed <= clocker_clk_en;
    end
    soclinux_sdphyinit_state <= soclinux_sdphyinit_next_state;
    if (init_count_sdphyinit_next_value_ce) begin
        init_count <= init_count_sdphyinit_next_value;
    end
    soclinux_sdphycmdw_state <= soclinux_sdphycmdw_next_state;
    if (cmdw_count_sdphycmdw_next_value_ce) begin
        cmdw_count <= cmdw_count_sdphycmdw_next_value;
    end
    if (cmdr_cmdr_pads_in_valid) begin
        cmdr_cmdr_run <= (cmdr_cmdr_start | cmdr_cmdr_run);
    end
    if (cmdr_cmdr_converter_converter_source_ready) begin
        cmdr_cmdr_converter_converter_strobe_all <= 1'd0;
    end
    if (cmdr_cmdr_converter_converter_load_part) begin
        if (((cmdr_cmdr_converter_converter_demux == 3'd7) | cmdr_cmdr_converter_converter_sink_last)) begin
            cmdr_cmdr_converter_converter_demux <= 1'd0;
            cmdr_cmdr_converter_converter_strobe_all <= 1'd1;
        end else begin
            cmdr_cmdr_converter_converter_demux <= (cmdr_cmdr_converter_converter_demux + 1'd1);
        end
    end
    if ((cmdr_cmdr_converter_converter_source_valid & cmdr_cmdr_converter_converter_source_ready)) begin
        if ((cmdr_cmdr_converter_converter_sink_valid & cmdr_cmdr_converter_converter_sink_ready)) begin
            cmdr_cmdr_converter_converter_source_first <= cmdr_cmdr_converter_converter_sink_first;
            cmdr_cmdr_converter_converter_source_last <= cmdr_cmdr_converter_converter_sink_last;
        end else begin
            cmdr_cmdr_converter_converter_source_first <= 1'd0;
            cmdr_cmdr_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((cmdr_cmdr_converter_converter_sink_valid & cmdr_cmdr_converter_converter_sink_ready)) begin
            cmdr_cmdr_converter_converter_source_first <= (cmdr_cmdr_converter_converter_sink_first | cmdr_cmdr_converter_converter_source_first);
            cmdr_cmdr_converter_converter_source_last <= (cmdr_cmdr_converter_converter_sink_last | cmdr_cmdr_converter_converter_source_last);
        end
    end
    if (cmdr_cmdr_converter_converter_load_part) begin
        case (cmdr_cmdr_converter_converter_demux)
            1'd0: begin
                cmdr_cmdr_converter_converter_source_payload_data[7] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            1'd1: begin
                cmdr_cmdr_converter_converter_source_payload_data[6] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            2'd2: begin
                cmdr_cmdr_converter_converter_source_payload_data[5] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            2'd3: begin
                cmdr_cmdr_converter_converter_source_payload_data[4] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            3'd4: begin
                cmdr_cmdr_converter_converter_source_payload_data[3] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            3'd5: begin
                cmdr_cmdr_converter_converter_source_payload_data[2] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            3'd6: begin
                cmdr_cmdr_converter_converter_source_payload_data[1] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            3'd7: begin
                cmdr_cmdr_converter_converter_source_payload_data[0] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (cmdr_cmdr_converter_converter_load_part) begin
        cmdr_cmdr_converter_converter_source_payload_valid_token_count <= (cmdr_cmdr_converter_converter_demux + 1'd1);
    end
    if (((~cmdr_cmdr_buf_pipe_valid_source_valid) | cmdr_cmdr_buf_pipe_valid_source_ready)) begin
        cmdr_cmdr_buf_pipe_valid_source_valid <= cmdr_cmdr_buf_pipe_valid_sink_valid;
        cmdr_cmdr_buf_pipe_valid_source_first <= cmdr_cmdr_buf_pipe_valid_sink_first;
        cmdr_cmdr_buf_pipe_valid_source_last <= cmdr_cmdr_buf_pipe_valid_sink_last;
        cmdr_cmdr_buf_pipe_valid_source_payload_data <= cmdr_cmdr_buf_pipe_valid_sink_payload_data;
    end
    if (cmdr_cmdr_reset) begin
        cmdr_cmdr_run <= 1'd0;
        cmdr_cmdr_converter_converter_source_payload_data <= 8'd0;
        cmdr_cmdr_converter_converter_source_payload_valid_token_count <= 4'd0;
        cmdr_cmdr_converter_converter_demux <= 3'd0;
        cmdr_cmdr_converter_converter_strobe_all <= 1'd0;
        cmdr_cmdr_buf_pipe_valid_source_valid <= 1'd0;
        cmdr_cmdr_buf_pipe_valid_source_payload_data <= 8'd0;
    end
    soclinux_sdphycmdr_state <= soclinux_sdphycmdr_next_state;
    if (cmdr_timeout_sdphycmdr_next_value_ce0) begin
        cmdr_timeout <= cmdr_timeout_sdphycmdr_next_value0;
    end
    if (cmdr_count_sdphycmdr_next_value_ce1) begin
        cmdr_count <= cmdr_count_sdphycmdr_next_value1;
    end
    if (cmdr_busy_sdphycmdr_next_value_ce2) begin
        cmdr_busy <= cmdr_busy_sdphycmdr_next_value2;
    end
    if (cmdr_cmdr_reset_sdphycmdr_next_value_ce3) begin
        cmdr_cmdr_reset <= cmdr_cmdr_reset_sdphycmdr_next_value3;
    end
    if (dataw_crc_pads_in_valid) begin
        dataw_crc_run <= (dataw_crc_start | dataw_crc_run);
    end
    if (dataw_crc_converter_converter_source_ready) begin
        dataw_crc_converter_converter_strobe_all <= 1'd0;
    end
    if (dataw_crc_converter_converter_load_part) begin
        if (((dataw_crc_converter_converter_demux == 3'd7) | dataw_crc_converter_converter_sink_last)) begin
            dataw_crc_converter_converter_demux <= 1'd0;
            dataw_crc_converter_converter_strobe_all <= 1'd1;
        end else begin
            dataw_crc_converter_converter_demux <= (dataw_crc_converter_converter_demux + 1'd1);
        end
    end
    if ((dataw_crc_converter_converter_source_valid & dataw_crc_converter_converter_source_ready)) begin
        if ((dataw_crc_converter_converter_sink_valid & dataw_crc_converter_converter_sink_ready)) begin
            dataw_crc_converter_converter_source_first <= dataw_crc_converter_converter_sink_first;
            dataw_crc_converter_converter_source_last <= dataw_crc_converter_converter_sink_last;
        end else begin
            dataw_crc_converter_converter_source_first <= 1'd0;
            dataw_crc_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((dataw_crc_converter_converter_sink_valid & dataw_crc_converter_converter_sink_ready)) begin
            dataw_crc_converter_converter_source_first <= (dataw_crc_converter_converter_sink_first | dataw_crc_converter_converter_source_first);
            dataw_crc_converter_converter_source_last <= (dataw_crc_converter_converter_sink_last | dataw_crc_converter_converter_source_last);
        end
    end
    if (dataw_crc_converter_converter_load_part) begin
        case (dataw_crc_converter_converter_demux)
            1'd0: begin
                dataw_crc_converter_converter_source_payload_data[7] <= dataw_crc_converter_converter_sink_payload_data;
            end
            1'd1: begin
                dataw_crc_converter_converter_source_payload_data[6] <= dataw_crc_converter_converter_sink_payload_data;
            end
            2'd2: begin
                dataw_crc_converter_converter_source_payload_data[5] <= dataw_crc_converter_converter_sink_payload_data;
            end
            2'd3: begin
                dataw_crc_converter_converter_source_payload_data[4] <= dataw_crc_converter_converter_sink_payload_data;
            end
            3'd4: begin
                dataw_crc_converter_converter_source_payload_data[3] <= dataw_crc_converter_converter_sink_payload_data;
            end
            3'd5: begin
                dataw_crc_converter_converter_source_payload_data[2] <= dataw_crc_converter_converter_sink_payload_data;
            end
            3'd6: begin
                dataw_crc_converter_converter_source_payload_data[1] <= dataw_crc_converter_converter_sink_payload_data;
            end
            3'd7: begin
                dataw_crc_converter_converter_source_payload_data[0] <= dataw_crc_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (dataw_crc_converter_converter_load_part) begin
        dataw_crc_converter_converter_source_payload_valid_token_count <= (dataw_crc_converter_converter_demux + 1'd1);
    end
    if (((~dataw_crc_buf_pipe_valid_source_valid) | dataw_crc_buf_pipe_valid_source_ready)) begin
        dataw_crc_buf_pipe_valid_source_valid <= dataw_crc_buf_pipe_valid_sink_valid;
        dataw_crc_buf_pipe_valid_source_first <= dataw_crc_buf_pipe_valid_sink_first;
        dataw_crc_buf_pipe_valid_source_last <= dataw_crc_buf_pipe_valid_sink_last;
        dataw_crc_buf_pipe_valid_source_payload_data <= dataw_crc_buf_pipe_valid_sink_payload_data;
    end
    if (dataw_crc_reset) begin
        dataw_crc_run <= 1'd0;
        dataw_crc_converter_converter_source_payload_data <= 8'd0;
        dataw_crc_converter_converter_source_payload_valid_token_count <= 4'd0;
        dataw_crc_converter_converter_demux <= 3'd0;
        dataw_crc_converter_converter_strobe_all <= 1'd0;
        dataw_crc_buf_pipe_valid_source_valid <= 1'd0;
        dataw_crc_buf_pipe_valid_source_payload_data <= 8'd0;
    end
    soclinux_sdphydataw_state <= soclinux_sdphydataw_next_state;
    if (dataw_accepted1_sdphydataw_next_value_ce0) begin
        dataw_accepted1 <= dataw_accepted1_sdphydataw_next_value0;
    end
    if (dataw_crc_error1_sdphydataw_next_value_ce1) begin
        dataw_crc_error1 <= dataw_crc_error1_sdphydataw_next_value1;
    end
    if (dataw_write_error1_sdphydataw_next_value_ce2) begin
        dataw_write_error1 <= dataw_write_error1_sdphydataw_next_value2;
    end
    if (dataw_count_sdphydataw_next_value_ce3) begin
        dataw_count <= dataw_count_sdphydataw_next_value3;
    end
    if (datar_datar_pads_in_valid) begin
        datar_datar_run <= (datar_datar_start | datar_datar_run);
    end
    if (datar_datar_converter_converter_source_ready) begin
        datar_datar_converter_converter_strobe_all <= 1'd0;
    end
    if (datar_datar_converter_converter_load_part) begin
        if (((datar_datar_converter_converter_demux == 1'd1) | datar_datar_converter_converter_sink_last)) begin
            datar_datar_converter_converter_demux <= 1'd0;
            datar_datar_converter_converter_strobe_all <= 1'd1;
        end else begin
            datar_datar_converter_converter_demux <= (datar_datar_converter_converter_demux + 1'd1);
        end
    end
    if ((datar_datar_converter_converter_source_valid & datar_datar_converter_converter_source_ready)) begin
        if ((datar_datar_converter_converter_sink_valid & datar_datar_converter_converter_sink_ready)) begin
            datar_datar_converter_converter_source_first <= datar_datar_converter_converter_sink_first;
            datar_datar_converter_converter_source_last <= datar_datar_converter_converter_sink_last;
        end else begin
            datar_datar_converter_converter_source_first <= 1'd0;
            datar_datar_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((datar_datar_converter_converter_sink_valid & datar_datar_converter_converter_sink_ready)) begin
            datar_datar_converter_converter_source_first <= (datar_datar_converter_converter_sink_first | datar_datar_converter_converter_source_first);
            datar_datar_converter_converter_source_last <= (datar_datar_converter_converter_sink_last | datar_datar_converter_converter_source_last);
        end
    end
    if (datar_datar_converter_converter_load_part) begin
        case (datar_datar_converter_converter_demux)
            1'd0: begin
                datar_datar_converter_converter_source_payload_data[7:4] <= datar_datar_converter_converter_sink_payload_data;
            end
            1'd1: begin
                datar_datar_converter_converter_source_payload_data[3:0] <= datar_datar_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (datar_datar_converter_converter_load_part) begin
        datar_datar_converter_converter_source_payload_valid_token_count <= (datar_datar_converter_converter_demux + 1'd1);
    end
    if (((~datar_datar_buf_pipe_valid_source_valid) | datar_datar_buf_pipe_valid_source_ready)) begin
        datar_datar_buf_pipe_valid_source_valid <= datar_datar_buf_pipe_valid_sink_valid;
        datar_datar_buf_pipe_valid_source_first <= datar_datar_buf_pipe_valid_sink_first;
        datar_datar_buf_pipe_valid_source_last <= datar_datar_buf_pipe_valid_sink_last;
        datar_datar_buf_pipe_valid_source_payload_data <= datar_datar_buf_pipe_valid_sink_payload_data;
    end
    if (datar_datar_reset) begin
        datar_datar_run <= 1'd0;
        datar_datar_converter_converter_source_payload_data <= 8'd0;
        datar_datar_converter_converter_source_payload_valid_token_count <= 2'd0;
        datar_datar_converter_converter_demux <= 1'd0;
        datar_datar_converter_converter_strobe_all <= 1'd0;
        datar_datar_buf_pipe_valid_source_valid <= 1'd0;
        datar_datar_buf_pipe_valid_source_payload_data <= 8'd0;
    end
    soclinux_sdphydatar_state <= soclinux_sdphydatar_next_state;
    if (datar_count_sdphydatar_next_value_ce0) begin
        datar_count <= datar_count_sdphydatar_next_value0;
    end
    if (datar_timeout_sdphydatar_next_value_ce1) begin
        datar_timeout <= datar_timeout_sdphydatar_next_value1;
    end
    if (datar_datar_reset_sdphydatar_next_value_ce2) begin
        datar_datar_reset <= datar_datar_reset_sdphydatar_next_value2;
    end
    clocker_clk_delay <= {clocker_clk_delay, clocker_clk0};
    sdpads_data_i_ce <= (clocker_clk_delay[1] & (~clocker_clk_delay[0]));
    if (sdcore_crc7_inserter_reset) begin
        sdcore_crc7_inserter_reg0 <= 1'd0;
    end else begin
        if (sdcore_crc7_inserter_enable) begin
            sdcore_crc7_inserter_reg0 <= sdcore_crc7_inserter_reg40;
        end
    end
    if (sdcore_crc16_inserter_crc0_reset) begin
        sdcore_crc16_inserter_crc0_reg0 <= 1'd0;
    end else begin
        if (sdcore_crc16_inserter_crc0_enable) begin
            sdcore_crc16_inserter_crc0_reg0 <= sdcore_crc16_inserter_crc0_reg2;
        end
    end
    if (sdcore_crc16_inserter_crc1_reset) begin
        sdcore_crc16_inserter_crc1_reg0 <= 1'd0;
    end else begin
        if (sdcore_crc16_inserter_crc1_enable) begin
            sdcore_crc16_inserter_crc1_reg0 <= sdcore_crc16_inserter_crc1_reg2;
        end
    end
    if (sdcore_crc16_inserter_crc2_reset) begin
        sdcore_crc16_inserter_crc2_reg0 <= 1'd0;
    end else begin
        if (sdcore_crc16_inserter_crc2_enable) begin
            sdcore_crc16_inserter_crc2_reg0 <= sdcore_crc16_inserter_crc2_reg2;
        end
    end
    if (sdcore_crc16_inserter_crc3_reset) begin
        sdcore_crc16_inserter_crc3_reg0 <= 1'd0;
    end else begin
        if (sdcore_crc16_inserter_crc3_enable) begin
            sdcore_crc16_inserter_crc3_reg0 <= sdcore_crc16_inserter_crc3_reg2;
        end
    end
    soclinux_sdcore_crc16inserter_state <= soclinux_sdcore_crc16inserter_next_state;
    if (sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value_ce) begin
        sdcore_crc16_inserter_count <= sdcore_crc16_inserter_count_sdcore_crc16inserter_next_value;
    end
    if (((sdcore_fifo_syncfifo_we & sdcore_fifo_syncfifo_writable) & (~sdcore_fifo_replace))) begin
        sdcore_fifo_produce <= (sdcore_fifo_produce + 1'd1);
    end
    if (sdcore_fifo_do_read) begin
        sdcore_fifo_consume <= (sdcore_fifo_consume + 1'd1);
    end
    if (((sdcore_fifo_syncfifo_we & sdcore_fifo_syncfifo_writable) & (~sdcore_fifo_replace))) begin
        if ((~sdcore_fifo_do_read)) begin
            sdcore_fifo_level <= (sdcore_fifo_level + 1'd1);
        end
    end else begin
        if (sdcore_fifo_do_read) begin
            sdcore_fifo_level <= (sdcore_fifo_level - 1'd1);
        end
    end
    if (sdcore_fifo_reset) begin
        sdcore_fifo_level <= 4'd0;
        sdcore_fifo_produce <= 3'd0;
        sdcore_fifo_consume <= 3'd0;
    end
    soclinux_sdcore_fsm_state <= soclinux_sdcore_fsm_next_state;
    if (sdcore_cmd_done_sdcore_fsm_next_value_ce0) begin
        sdcore_cmd_done <= sdcore_cmd_done_sdcore_fsm_next_value0;
    end
    if (sdcore_data_done_sdcore_fsm_next_value_ce1) begin
        sdcore_data_done <= sdcore_data_done_sdcore_fsm_next_value1;
    end
    if (sdcore_cmd_count_sdcore_fsm_next_value_ce2) begin
        sdcore_cmd_count <= sdcore_cmd_count_sdcore_fsm_next_value2;
    end
    if (sdcore_data_count_sdcore_fsm_next_value_ce3) begin
        sdcore_data_count <= sdcore_data_count_sdcore_fsm_next_value3;
    end
    if (sdcore_cmd_error_sdcore_fsm_next_value_ce4) begin
        sdcore_cmd_error <= sdcore_cmd_error_sdcore_fsm_next_value4;
    end
    if (sdcore_cmd_timeout_sdcore_fsm_next_value_ce5) begin
        sdcore_cmd_timeout <= sdcore_cmd_timeout_sdcore_fsm_next_value5;
    end
    if (sdcore_data_error_sdcore_fsm_next_value_ce6) begin
        sdcore_data_error <= sdcore_data_error_sdcore_fsm_next_value6;
    end
    if (sdcore_data_timeout_sdcore_fsm_next_value_ce7) begin
        sdcore_data_timeout <= sdcore_data_timeout_sdcore_fsm_next_value7;
    end
    if (sdcore_cmd_response_status_sdcore_fsm_next_value_ce8) begin
        sdcore_cmd_response_status <= sdcore_cmd_response_status_sdcore_fsm_next_value8;
    end
    if ((~sdblock2mem_wishbonedmawriter_enable_storage)) begin
        sdblock2mem_connect <= 1'd0;
    end else begin
        if (sdblock2mem_start) begin
            sdblock2mem_connect <= 1'd1;
        end
    end
    sdblock2mem_done_d <= sdblock2mem_wishbonedmawriter_done_status;
    sdblock2mem_irq <= (sdblock2mem_wishbonedmawriter_done_status & (~sdblock2mem_done_d));
    if (sdblock2mem_fifo_syncfifo_re) begin
        sdblock2mem_fifo_readable <= 1'd1;
    end else begin
        if (sdblock2mem_fifo_re) begin
            sdblock2mem_fifo_readable <= 1'd0;
        end
    end
    if (((sdblock2mem_fifo_syncfifo_we & sdblock2mem_fifo_syncfifo_writable) & (~sdblock2mem_fifo_replace))) begin
        sdblock2mem_fifo_produce <= (sdblock2mem_fifo_produce + 1'd1);
    end
    if (sdblock2mem_fifo_do_read) begin
        sdblock2mem_fifo_consume <= (sdblock2mem_fifo_consume + 1'd1);
    end
    if (((sdblock2mem_fifo_syncfifo_we & sdblock2mem_fifo_syncfifo_writable) & (~sdblock2mem_fifo_replace))) begin
        if ((~sdblock2mem_fifo_do_read)) begin
            sdblock2mem_fifo_level0 <= (sdblock2mem_fifo_level0 + 1'd1);
        end
    end else begin
        if (sdblock2mem_fifo_do_read) begin
            sdblock2mem_fifo_level0 <= (sdblock2mem_fifo_level0 - 1'd1);
        end
    end
    if (sdblock2mem_converter_source_ready) begin
        sdblock2mem_converter_strobe_all <= 1'd0;
    end
    if (sdblock2mem_converter_load_part) begin
        if (((sdblock2mem_converter_demux == 2'd3) | sdblock2mem_converter_sink_last)) begin
            sdblock2mem_converter_demux <= 1'd0;
            sdblock2mem_converter_strobe_all <= 1'd1;
        end else begin
            sdblock2mem_converter_demux <= (sdblock2mem_converter_demux + 1'd1);
        end
    end
    if ((sdblock2mem_converter_source_valid & sdblock2mem_converter_source_ready)) begin
        if ((sdblock2mem_converter_sink_valid & sdblock2mem_converter_sink_ready)) begin
            sdblock2mem_converter_source_first <= sdblock2mem_converter_sink_first;
            sdblock2mem_converter_source_last <= sdblock2mem_converter_sink_last;
        end else begin
            sdblock2mem_converter_source_first <= 1'd0;
            sdblock2mem_converter_source_last <= 1'd0;
        end
    end else begin
        if ((sdblock2mem_converter_sink_valid & sdblock2mem_converter_sink_ready)) begin
            sdblock2mem_converter_source_first <= (sdblock2mem_converter_sink_first | sdblock2mem_converter_source_first);
            sdblock2mem_converter_source_last <= (sdblock2mem_converter_sink_last | sdblock2mem_converter_source_last);
        end
    end
    if (sdblock2mem_converter_load_part) begin
        case (sdblock2mem_converter_demux)
            1'd0: begin
                sdblock2mem_converter_source_payload_data[31:24] <= sdblock2mem_converter_sink_payload_data;
            end
            1'd1: begin
                sdblock2mem_converter_source_payload_data[23:16] <= sdblock2mem_converter_sink_payload_data;
            end
            2'd2: begin
                sdblock2mem_converter_source_payload_data[15:8] <= sdblock2mem_converter_sink_payload_data;
            end
            2'd3: begin
                sdblock2mem_converter_source_payload_data[7:0] <= sdblock2mem_converter_sink_payload_data;
            end
        endcase
    end
    if (sdblock2mem_converter_load_part) begin
        sdblock2mem_converter_source_payload_valid_token_count <= (sdblock2mem_converter_demux + 1'd1);
    end
    soclinux_sdblock2memdma_state <= soclinux_sdblock2memdma_next_state;
    if (sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value_ce) begin
        sdblock2mem_wishbonedmawriter_offset <= sdblock2mem_wishbonedmawriter_offset_sdblock2memdma_next_value;
    end
    if (sdblock2mem_wishbonedmawriter_reset) begin
        sdblock2mem_wishbonedmawriter_offset <= 32'd0;
        soclinux_sdblock2memdma_state <= 2'd0;
    end
    if ((sdmem2block_source_source_valid0 & sdmem2block_source_source_ready0)) begin
        sdmem2block_count <= (sdmem2block_count + 1'd1);
        if (sdmem2block_source_source_last0) begin
            sdmem2block_count <= 1'd0;
        end
    end
    sdmem2block_done_d <= sdmem2block_dma_done_status;
    sdmem2block_irq <= (sdmem2block_dma_done_status & (~sdmem2block_done_d));
    soclinux_sdmem2blockdma_fsm_state <= soclinux_sdmem2blockdma_fsm_next_state;
    if (sdmem2block_dma_data_sdmem2blockdma_fsm_next_value_ce) begin
        sdmem2block_dma_data <= sdmem2block_dma_data_sdmem2blockdma_fsm_next_value;
    end
    soclinux_sdmem2blockdma_resetinserter_state <= soclinux_sdmem2blockdma_resetinserter_next_state;
    if (sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value_ce) begin
        sdmem2block_dma_offset <= sdmem2block_dma_offset_sdmem2blockdma_resetinserter_next_value;
    end
    if (sdmem2block_dma_reset) begin
        sdmem2block_dma_offset <= 32'd0;
        soclinux_sdmem2blockdma_resetinserter_state <= 2'd0;
    end
    if ((sdmem2block_converter_source_valid & sdmem2block_converter_source_ready)) begin
        if (sdmem2block_converter_last) begin
            sdmem2block_converter_mux <= 1'd0;
        end else begin
            sdmem2block_converter_mux <= (sdmem2block_converter_mux + 1'd1);
        end
    end
    if (sdmem2block_fifo_syncfifo_re) begin
        sdmem2block_fifo_readable <= 1'd1;
    end else begin
        if (sdmem2block_fifo_re) begin
            sdmem2block_fifo_readable <= 1'd0;
        end
    end
    if (((sdmem2block_fifo_syncfifo_we & sdmem2block_fifo_syncfifo_writable) & (~sdmem2block_fifo_replace))) begin
        sdmem2block_fifo_produce <= (sdmem2block_fifo_produce + 1'd1);
    end
    if (sdmem2block_fifo_do_read) begin
        sdmem2block_fifo_consume <= (sdmem2block_fifo_consume + 1'd1);
    end
    if (((sdmem2block_fifo_syncfifo_we & sdmem2block_fifo_syncfifo_writable) & (~sdmem2block_fifo_replace))) begin
        if ((~sdmem2block_fifo_do_read)) begin
            sdmem2block_fifo_level0 <= (sdmem2block_fifo_level0 + 1'd1);
        end
    end else begin
        if (sdmem2block_fifo_do_read) begin
            sdmem2block_fifo_level0 <= (sdmem2block_fifo_level0 - 1'd1);
        end
    end
    if (card_detect_clear) begin
        card_detect_pending <= 1'd0;
    end
    if (card_detect_trigger) begin
        card_detect_pending <= 1'd1;
    end
    if (block2mem_dma_clear) begin
        block2mem_dma_pending <= 1'd0;
    end
    if (block2mem_dma_trigger) begin
        block2mem_dma_pending <= 1'd1;
    end
    if (mem2block_dma_clear) begin
        mem2block_dma_pending <= 1'd0;
    end
    if (mem2block_dma_trigger) begin
        mem2block_dma_pending <= 1'd1;
    end
    if (drdy) begin
        case (channel)
            1'd0: begin
                temperature_status <= (do_1 >>> 3'd4);
            end
            1'd1: begin
                vccint_status <= (do_1 >>> 3'd4);
            end
            2'd2: begin
                vccaux_status <= (do_1 >>> 3'd4);
            end
            3'd6: begin
                vccbram_status <= (do_1 >>> 3'd4);
            end
        endcase
    end
    eoc_status <= ((eoc_status & (~eoc_we)) | eoc);
    eos_status <= ((eos_status & (~eos_we)) | eos);
    soclinux_wishbone2csr_state <= soclinux_wishbone2csr_next_state;
    if (soclinux_dat_w_wishbone2csr_next_value_ce0) begin
        soclinux_dat_w <= soclinux_dat_w_wishbone2csr_next_value0;
    end
    if (soclinux_adr_wishbone2csr_next_value_ce1) begin
        soclinux_adr <= soclinux_adr_wishbone2csr_next_value1;
    end
    if (soclinux_we_wishbone2csr_next_value_ce2) begin
        soclinux_we <= soclinux_we_wishbone2csr_next_value2;
    end
    csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank0_sel) begin
        case (csr_bankarray_interface0_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_reset0_w;
            end
            1'd1: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_scratch0_w;
            end
            2'd2: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_bus_errors_w;
            end
        endcase
    end
    csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank1_sel) begin
        case (csr_bankarray_interface1_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_rst0_w;
            end
            1'd1: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_dly_sel0_w;
            end
            2'd2: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_half_sys8x_taps0_w;
            end
            2'd3: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_wlevel_en0_w;
            end
            3'd4: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_wlevel_strobe_w;
            end
            3'd5: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_cdly_rst_w;
            end
            3'd6: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_cdly_inc_w;
            end
            3'd7: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_rdly_dq_rst_w;
            end
            4'd8: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_rdly_dq_inc_w;
            end
            4'd9: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_rdly_dq_bitslip_rst_w;
            end
            4'd10: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_rdly_dq_bitslip_w;
            end
            4'd11: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_wdly_dq_rst_w;
            end
            4'd12: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_wdly_dq_inc_w;
            end
            4'd13: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_wdly_dqs_rst_w;
            end
            4'd14: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_wdly_dqs_inc_w;
            end
            4'd15: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_wdly_dq_bitslip_rst_w;
            end
            5'd16: begin
                csr_bankarray_interface1_bank_bus_dat_r <= k7ddrphy_wdly_dq_bitslip_w;
            end
            5'd17: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_rdphase0_w;
            end
            5'd18: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_wrphase0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank1_rst0_re) begin
        k7ddrphy_rst_storage <= csr_bankarray_csrbank1_rst0_r;
    end
    k7ddrphy_rst_re <= csr_bankarray_csrbank1_rst0_re;
    if (csr_bankarray_csrbank1_dly_sel0_re) begin
        k7ddrphy_dly_sel_storage[7:0] <= csr_bankarray_csrbank1_dly_sel0_r;
    end
    k7ddrphy_dly_sel_re <= csr_bankarray_csrbank1_dly_sel0_re;
    if (csr_bankarray_csrbank1_half_sys8x_taps0_re) begin
        k7ddrphy_half_sys8x_taps_storage[4:0] <= csr_bankarray_csrbank1_half_sys8x_taps0_r;
    end
    k7ddrphy_half_sys8x_taps_re <= csr_bankarray_csrbank1_half_sys8x_taps0_re;
    if (csr_bankarray_csrbank1_wlevel_en0_re) begin
        k7ddrphy_wlevel_en_storage <= csr_bankarray_csrbank1_wlevel_en0_r;
    end
    k7ddrphy_wlevel_en_re <= csr_bankarray_csrbank1_wlevel_en0_re;
    if (csr_bankarray_csrbank1_rdphase0_re) begin
        k7ddrphy_rdphase_storage[1:0] <= csr_bankarray_csrbank1_rdphase0_r;
    end
    k7ddrphy_rdphase_re <= csr_bankarray_csrbank1_rdphase0_re;
    if (csr_bankarray_csrbank1_wrphase0_re) begin
        k7ddrphy_wrphase_storage[1:0] <= csr_bankarray_csrbank1_wrphase0_r;
    end
    k7ddrphy_wrphase_re <= csr_bankarray_csrbank1_wrphase0_re;
    csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank2_sel) begin
        case (csr_bankarray_interface2_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_slot_w;
            end
            1'd1: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_length_w;
            end
            2'd2: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_errors_w;
            end
            2'd3: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_ev_status_w;
            end
            3'd4: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_ev_pending_w;
            end
            3'd5: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_ev_enable0_w;
            end
            3'd6: begin
                csr_bankarray_interface2_bank_bus_dat_r <= soclinux_ethmac_start_w;
            end
            3'd7: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_ready_w;
            end
            4'd8: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_level_w;
            end
            4'd9: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_slot0_w;
            end
            4'd10: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_length0_w;
            end
            4'd11: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_ev_status_w;
            end
            4'd12: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_ev_pending_w;
            end
            4'd13: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_ev_enable0_w;
            end
            4'd14: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_preamble_crc_w;
            end
            4'd15: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_rx_datapath_preamble_errors_w;
            end
            5'd16: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_rx_datapath_crc_errors_w;
            end
        endcase
    end
    soclinux_ethmac_sram9_re <= csr_bankarray_csrbank2_sram_writer_slot_re;
    soclinux_ethmac_sram12_re <= csr_bankarray_csrbank2_sram_writer_length_re;
    soclinux_ethmac_sram15_re <= csr_bankarray_csrbank2_sram_writer_errors_re;
    soclinux_ethmac_sram24_re <= csr_bankarray_csrbank2_sram_writer_ev_status_re;
    if (csr_bankarray_csrbank2_sram_writer_ev_pending_re) begin
        soclinux_ethmac_sram29_r <= csr_bankarray_csrbank2_sram_writer_ev_pending_r;
    end
    soclinux_ethmac_sram28_re <= csr_bankarray_csrbank2_sram_writer_ev_pending_re;
    if (csr_bankarray_csrbank2_sram_writer_ev_enable0_re) begin
        soclinux_ethmac_sram31_storage <= csr_bankarray_csrbank2_sram_writer_ev_enable0_r;
    end
    soclinux_ethmac_sram32_re <= csr_bankarray_csrbank2_sram_writer_ev_enable0_re;
    soclinux_ethmac_sram96_re <= csr_bankarray_csrbank2_sram_reader_ready_re;
    soclinux_ethmac_sram99_re <= csr_bankarray_csrbank2_sram_reader_level_re;
    if (csr_bankarray_csrbank2_sram_reader_slot0_re) begin
        soclinux_ethmac_sram100_storage <= csr_bankarray_csrbank2_sram_reader_slot0_r;
    end
    soclinux_ethmac_sram101_re <= csr_bankarray_csrbank2_sram_reader_slot0_re;
    if (csr_bankarray_csrbank2_sram_reader_length0_re) begin
        soclinux_ethmac_sram102_storage[10:0] <= csr_bankarray_csrbank2_sram_reader_length0_r;
    end
    soclinux_ethmac_sram103_re <= csr_bankarray_csrbank2_sram_reader_length0_re;
    soclinux_ethmac_sram112_re <= csr_bankarray_csrbank2_sram_reader_ev_status_re;
    if (csr_bankarray_csrbank2_sram_reader_ev_pending_re) begin
        soclinux_ethmac_sram117_r <= csr_bankarray_csrbank2_sram_reader_ev_pending_r;
    end
    soclinux_ethmac_sram116_re <= csr_bankarray_csrbank2_sram_reader_ev_pending_re;
    if (csr_bankarray_csrbank2_sram_reader_ev_enable0_re) begin
        soclinux_ethmac_sram119_storage <= csr_bankarray_csrbank2_sram_reader_ev_enable0_r;
    end
    soclinux_ethmac_sram120_re <= csr_bankarray_csrbank2_sram_reader_ev_enable0_re;
    soclinux_ethmac_re <= csr_bankarray_csrbank2_preamble_crc_re;
    soclinux_ethmac_preamble_errors_re <= csr_bankarray_csrbank2_rx_datapath_preamble_errors_re;
    soclinux_ethmac_crc_errors_re <= csr_bankarray_csrbank2_rx_datapath_crc_errors_re;
    csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank3_sel) begin
        case (csr_bankarray_interface3_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_mode_detection_mode_w;
            end
            1'd1: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_crg_reset0_w;
            end
            2'd2: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_mdio_w0_w;
            end
            2'd3: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_mdio_r_w;
            end
        endcase
    end
    ethphy_mode_re <= csr_bankarray_csrbank3_mode_detection_mode_re;
    if (csr_bankarray_csrbank3_crg_reset0_re) begin
        ethphy_reset_storage <= csr_bankarray_csrbank3_crg_reset0_r;
    end
    ethphy_reset_re <= csr_bankarray_csrbank3_crg_reset0_re;
    if (csr_bankarray_csrbank3_mdio_w0_re) begin
        ethphy__w_storage[2:0] <= csr_bankarray_csrbank3_mdio_w0_r;
    end
    ethphy__w_re <= csr_bankarray_csrbank3_mdio_w0_re;
    ethphy__r_re <= csr_bankarray_csrbank3_mdio_r_re;
    csr_bankarray_sel_r <= csr_bankarray_sel;
    csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank4_sel) begin
        case (csr_bankarray_interface4_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank4_out0_re) begin
        leds_storage[7:0] <= csr_bankarray_csrbank4_out0_r;
    end
    leds_re <= csr_bankarray_csrbank4_out0_re;
    csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank5_sel) begin
        case (csr_bankarray_interface5_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dma_base1_w;
            end
            1'd1: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dma_base0_w;
            end
            2'd2: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dma_length0_w;
            end
            2'd3: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dma_enable0_w;
            end
            3'd4: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dma_done_w;
            end
            3'd5: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dma_loop0_w;
            end
            3'd6: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dma_offset_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank5_dma_base1_re) begin
        sdblock2mem_wishbonedmawriter_base_storage[63:32] <= csr_bankarray_csrbank5_dma_base1_r;
    end
    if (csr_bankarray_csrbank5_dma_base0_re) begin
        sdblock2mem_wishbonedmawriter_base_storage[31:0] <= csr_bankarray_csrbank5_dma_base0_r;
    end
    sdblock2mem_wishbonedmawriter_base_re <= csr_bankarray_csrbank5_dma_base0_re;
    if (csr_bankarray_csrbank5_dma_length0_re) begin
        sdblock2mem_wishbonedmawriter_length_storage[31:0] <= csr_bankarray_csrbank5_dma_length0_r;
    end
    sdblock2mem_wishbonedmawriter_length_re <= csr_bankarray_csrbank5_dma_length0_re;
    if (csr_bankarray_csrbank5_dma_enable0_re) begin
        sdblock2mem_wishbonedmawriter_enable_storage <= csr_bankarray_csrbank5_dma_enable0_r;
    end
    sdblock2mem_wishbonedmawriter_enable_re <= csr_bankarray_csrbank5_dma_enable0_re;
    sdblock2mem_wishbonedmawriter_done_re <= csr_bankarray_csrbank5_dma_done_re;
    if (csr_bankarray_csrbank5_dma_loop0_re) begin
        sdblock2mem_wishbonedmawriter_loop_storage <= csr_bankarray_csrbank5_dma_loop0_r;
    end
    sdblock2mem_wishbonedmawriter_loop_re <= csr_bankarray_csrbank5_dma_loop0_re;
    sdblock2mem_wishbonedmawriter_offset_re <= csr_bankarray_csrbank5_dma_offset_re;
    csr_bankarray_interface6_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank6_sel) begin
        case (csr_bankarray_interface6_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_cmd_argument0_w;
            end
            1'd1: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_cmd_command0_w;
            end
            2'd2: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_cmd_send0_w;
            end
            2'd3: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_cmd_response3_w;
            end
            3'd4: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_cmd_response2_w;
            end
            3'd5: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_cmd_response1_w;
            end
            3'd6: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_cmd_response0_w;
            end
            3'd7: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_cmd_event_w;
            end
            4'd8: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_data_event_w;
            end
            4'd9: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_block_length0_w;
            end
            4'd10: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_block_count0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank6_cmd_argument0_re) begin
        sdcore_cmd_argument_storage[31:0] <= csr_bankarray_csrbank6_cmd_argument0_r;
    end
    sdcore_cmd_argument_re <= csr_bankarray_csrbank6_cmd_argument0_re;
    if (csr_bankarray_csrbank6_cmd_command0_re) begin
        sdcore_cmd_command_storage[13:0] <= csr_bankarray_csrbank6_cmd_command0_r;
    end
    sdcore_cmd_command_re <= csr_bankarray_csrbank6_cmd_command0_re;
    if (csr_bankarray_csrbank6_cmd_send0_re) begin
        sdcore_cmd_send_storage <= csr_bankarray_csrbank6_cmd_send0_r;
    end
    sdcore_cmd_send_re <= csr_bankarray_csrbank6_cmd_send0_re;
    sdcore_cmd_response_re <= csr_bankarray_csrbank6_cmd_response0_re;
    sdcore_cmd_event_re <= csr_bankarray_csrbank6_cmd_event_re;
    sdcore_data_event_re <= csr_bankarray_csrbank6_data_event_re;
    if (csr_bankarray_csrbank6_block_length0_re) begin
        sdcore_block_length_storage[9:0] <= csr_bankarray_csrbank6_block_length0_r;
    end
    sdcore_block_length_re <= csr_bankarray_csrbank6_block_length0_re;
    if (csr_bankarray_csrbank6_block_count0_re) begin
        sdcore_block_count_storage[31:0] <= csr_bankarray_csrbank6_block_count0_r;
    end
    sdcore_block_count_re <= csr_bankarray_csrbank6_block_count0_re;
    csr_bankarray_interface7_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank7_sel) begin
        case (csr_bankarray_interface7_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_status_w;
            end
            1'd1: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_pending_w;
            end
            2'd2: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_enable0_w;
            end
        endcase
    end
    eventmanager_status_re <= csr_bankarray_csrbank7_status_re;
    if (csr_bankarray_csrbank7_pending_re) begin
        eventmanager_pending_r[3:0] <= csr_bankarray_csrbank7_pending_r;
    end
    eventmanager_pending_re <= csr_bankarray_csrbank7_pending_re;
    if (csr_bankarray_csrbank7_enable0_re) begin
        eventmanager_enable_storage[3:0] <= csr_bankarray_csrbank7_enable0_r;
    end
    eventmanager_enable_re <= csr_bankarray_csrbank7_enable0_re;
    csr_bankarray_interface8_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank8_sel) begin
        case (csr_bankarray_interface8_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_dma_base1_w;
            end
            1'd1: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_dma_base0_w;
            end
            2'd2: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_dma_length0_w;
            end
            2'd3: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_dma_enable0_w;
            end
            3'd4: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_dma_done_w;
            end
            3'd5: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_dma_loop0_w;
            end
            3'd6: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_dma_offset_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank8_dma_base1_re) begin
        sdmem2block_dma_base_storage[63:32] <= csr_bankarray_csrbank8_dma_base1_r;
    end
    if (csr_bankarray_csrbank8_dma_base0_re) begin
        sdmem2block_dma_base_storage[31:0] <= csr_bankarray_csrbank8_dma_base0_r;
    end
    sdmem2block_dma_base_re <= csr_bankarray_csrbank8_dma_base0_re;
    if (csr_bankarray_csrbank8_dma_length0_re) begin
        sdmem2block_dma_length_storage[31:0] <= csr_bankarray_csrbank8_dma_length0_r;
    end
    sdmem2block_dma_length_re <= csr_bankarray_csrbank8_dma_length0_re;
    if (csr_bankarray_csrbank8_dma_enable0_re) begin
        sdmem2block_dma_enable_storage <= csr_bankarray_csrbank8_dma_enable0_r;
    end
    sdmem2block_dma_enable_re <= csr_bankarray_csrbank8_dma_enable0_re;
    sdmem2block_dma_done_re <= csr_bankarray_csrbank8_dma_done_re;
    if (csr_bankarray_csrbank8_dma_loop0_re) begin
        sdmem2block_dma_loop_storage <= csr_bankarray_csrbank8_dma_loop0_r;
    end
    sdmem2block_dma_loop_re <= csr_bankarray_csrbank8_dma_loop0_re;
    sdmem2block_dma_offset_re <= csr_bankarray_csrbank8_dma_offset_re;
    csr_bankarray_interface9_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank9_sel) begin
        case (csr_bankarray_interface9_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_card_detect_w;
            end
            1'd1: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_clocker_divider0_w;
            end
            2'd2: begin
                csr_bankarray_interface9_bank_bus_dat_r <= init_initialize_w;
            end
            2'd3: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dataw_status_w;
            end
        endcase
    end
    card_detect_re <= csr_bankarray_csrbank9_card_detect_re;
    if (csr_bankarray_csrbank9_clocker_divider0_re) begin
        clocker_storage[8:0] <= csr_bankarray_csrbank9_clocker_divider0_r;
    end
    clocker_re <= csr_bankarray_csrbank9_clocker_divider0_re;
    dataw_re <= csr_bankarray_csrbank9_dataw_status_re;
    csr_bankarray_interface10_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank10_sel) begin
        case (csr_bankarray_interface10_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_control0_w;
            end
            1'd1: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_command0_w;
            end
            2'd2: begin
                csr_bankarray_interface10_bank_bus_dat_r <= soclinux_sdram_phaseinjector0_command_issue_w;
            end
            2'd3: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_address0_w;
            end
            3'd4: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_baddress0_w;
            end
            3'd5: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_wrdata3_w;
            end
            3'd6: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_wrdata2_w;
            end
            3'd7: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_wrdata1_w;
            end
            4'd8: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_wrdata0_w;
            end
            4'd9: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_rddata3_w;
            end
            4'd10: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_rddata2_w;
            end
            4'd11: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_rddata1_w;
            end
            4'd12: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi0_rddata0_w;
            end
            4'd13: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_command0_w;
            end
            4'd14: begin
                csr_bankarray_interface10_bank_bus_dat_r <= soclinux_sdram_phaseinjector1_command_issue_w;
            end
            4'd15: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_address0_w;
            end
            5'd16: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_baddress0_w;
            end
            5'd17: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_wrdata3_w;
            end
            5'd18: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_wrdata2_w;
            end
            5'd19: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_wrdata1_w;
            end
            5'd20: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_wrdata0_w;
            end
            5'd21: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_rddata3_w;
            end
            5'd22: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_rddata2_w;
            end
            5'd23: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_rddata1_w;
            end
            5'd24: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi1_rddata0_w;
            end
            5'd25: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_command0_w;
            end
            5'd26: begin
                csr_bankarray_interface10_bank_bus_dat_r <= soclinux_sdram_phaseinjector2_command_issue_w;
            end
            5'd27: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_address0_w;
            end
            5'd28: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_baddress0_w;
            end
            5'd29: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_wrdata3_w;
            end
            5'd30: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_wrdata2_w;
            end
            5'd31: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_wrdata1_w;
            end
            6'd32: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_wrdata0_w;
            end
            6'd33: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_rddata3_w;
            end
            6'd34: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_rddata2_w;
            end
            6'd35: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_rddata1_w;
            end
            6'd36: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi2_rddata0_w;
            end
            6'd37: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_command0_w;
            end
            6'd38: begin
                csr_bankarray_interface10_bank_bus_dat_r <= soclinux_sdram_phaseinjector3_command_issue_w;
            end
            6'd39: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_address0_w;
            end
            6'd40: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_baddress0_w;
            end
            6'd41: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_wrdata3_w;
            end
            6'd42: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_wrdata2_w;
            end
            6'd43: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_wrdata1_w;
            end
            6'd44: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_wrdata0_w;
            end
            6'd45: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_rddata3_w;
            end
            6'd46: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_rddata2_w;
            end
            6'd47: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_rddata1_w;
            end
            6'd48: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_dfii_pi3_rddata0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank10_dfii_control0_re) begin
        soclinux_sdram_storage[3:0] <= csr_bankarray_csrbank10_dfii_control0_r;
    end
    soclinux_sdram_re <= csr_bankarray_csrbank10_dfii_control0_re;
    if (csr_bankarray_csrbank10_dfii_pi0_command0_re) begin
        soclinux_sdram_phaseinjector0_command_storage[5:0] <= csr_bankarray_csrbank10_dfii_pi0_command0_r;
    end
    soclinux_sdram_phaseinjector0_command_re <= csr_bankarray_csrbank10_dfii_pi0_command0_re;
    if (csr_bankarray_csrbank10_dfii_pi0_address0_re) begin
        soclinux_sdram_phaseinjector0_address_storage[13:0] <= csr_bankarray_csrbank10_dfii_pi0_address0_r;
    end
    soclinux_sdram_phaseinjector0_address_re <= csr_bankarray_csrbank10_dfii_pi0_address0_re;
    if (csr_bankarray_csrbank10_dfii_pi0_baddress0_re) begin
        soclinux_sdram_phaseinjector0_baddress_storage[2:0] <= csr_bankarray_csrbank10_dfii_pi0_baddress0_r;
    end
    soclinux_sdram_phaseinjector0_baddress_re <= csr_bankarray_csrbank10_dfii_pi0_baddress0_re;
    if (csr_bankarray_csrbank10_dfii_pi0_wrdata3_re) begin
        soclinux_sdram_phaseinjector0_wrdata_storage[127:96] <= csr_bankarray_csrbank10_dfii_pi0_wrdata3_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi0_wrdata2_re) begin
        soclinux_sdram_phaseinjector0_wrdata_storage[95:64] <= csr_bankarray_csrbank10_dfii_pi0_wrdata2_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi0_wrdata1_re) begin
        soclinux_sdram_phaseinjector0_wrdata_storage[63:32] <= csr_bankarray_csrbank10_dfii_pi0_wrdata1_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi0_wrdata0_re) begin
        soclinux_sdram_phaseinjector0_wrdata_storage[31:0] <= csr_bankarray_csrbank10_dfii_pi0_wrdata0_r;
    end
    soclinux_sdram_phaseinjector0_wrdata_re <= csr_bankarray_csrbank10_dfii_pi0_wrdata0_re;
    soclinux_sdram_phaseinjector0_rddata_re <= csr_bankarray_csrbank10_dfii_pi0_rddata0_re;
    if (csr_bankarray_csrbank10_dfii_pi1_command0_re) begin
        soclinux_sdram_phaseinjector1_command_storage[5:0] <= csr_bankarray_csrbank10_dfii_pi1_command0_r;
    end
    soclinux_sdram_phaseinjector1_command_re <= csr_bankarray_csrbank10_dfii_pi1_command0_re;
    if (csr_bankarray_csrbank10_dfii_pi1_address0_re) begin
        soclinux_sdram_phaseinjector1_address_storage[13:0] <= csr_bankarray_csrbank10_dfii_pi1_address0_r;
    end
    soclinux_sdram_phaseinjector1_address_re <= csr_bankarray_csrbank10_dfii_pi1_address0_re;
    if (csr_bankarray_csrbank10_dfii_pi1_baddress0_re) begin
        soclinux_sdram_phaseinjector1_baddress_storage[2:0] <= csr_bankarray_csrbank10_dfii_pi1_baddress0_r;
    end
    soclinux_sdram_phaseinjector1_baddress_re <= csr_bankarray_csrbank10_dfii_pi1_baddress0_re;
    if (csr_bankarray_csrbank10_dfii_pi1_wrdata3_re) begin
        soclinux_sdram_phaseinjector1_wrdata_storage[127:96] <= csr_bankarray_csrbank10_dfii_pi1_wrdata3_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi1_wrdata2_re) begin
        soclinux_sdram_phaseinjector1_wrdata_storage[95:64] <= csr_bankarray_csrbank10_dfii_pi1_wrdata2_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi1_wrdata1_re) begin
        soclinux_sdram_phaseinjector1_wrdata_storage[63:32] <= csr_bankarray_csrbank10_dfii_pi1_wrdata1_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi1_wrdata0_re) begin
        soclinux_sdram_phaseinjector1_wrdata_storage[31:0] <= csr_bankarray_csrbank10_dfii_pi1_wrdata0_r;
    end
    soclinux_sdram_phaseinjector1_wrdata_re <= csr_bankarray_csrbank10_dfii_pi1_wrdata0_re;
    soclinux_sdram_phaseinjector1_rddata_re <= csr_bankarray_csrbank10_dfii_pi1_rddata0_re;
    if (csr_bankarray_csrbank10_dfii_pi2_command0_re) begin
        soclinux_sdram_phaseinjector2_command_storage[5:0] <= csr_bankarray_csrbank10_dfii_pi2_command0_r;
    end
    soclinux_sdram_phaseinjector2_command_re <= csr_bankarray_csrbank10_dfii_pi2_command0_re;
    if (csr_bankarray_csrbank10_dfii_pi2_address0_re) begin
        soclinux_sdram_phaseinjector2_address_storage[13:0] <= csr_bankarray_csrbank10_dfii_pi2_address0_r;
    end
    soclinux_sdram_phaseinjector2_address_re <= csr_bankarray_csrbank10_dfii_pi2_address0_re;
    if (csr_bankarray_csrbank10_dfii_pi2_baddress0_re) begin
        soclinux_sdram_phaseinjector2_baddress_storage[2:0] <= csr_bankarray_csrbank10_dfii_pi2_baddress0_r;
    end
    soclinux_sdram_phaseinjector2_baddress_re <= csr_bankarray_csrbank10_dfii_pi2_baddress0_re;
    if (csr_bankarray_csrbank10_dfii_pi2_wrdata3_re) begin
        soclinux_sdram_phaseinjector2_wrdata_storage[127:96] <= csr_bankarray_csrbank10_dfii_pi2_wrdata3_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi2_wrdata2_re) begin
        soclinux_sdram_phaseinjector2_wrdata_storage[95:64] <= csr_bankarray_csrbank10_dfii_pi2_wrdata2_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi2_wrdata1_re) begin
        soclinux_sdram_phaseinjector2_wrdata_storage[63:32] <= csr_bankarray_csrbank10_dfii_pi2_wrdata1_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi2_wrdata0_re) begin
        soclinux_sdram_phaseinjector2_wrdata_storage[31:0] <= csr_bankarray_csrbank10_dfii_pi2_wrdata0_r;
    end
    soclinux_sdram_phaseinjector2_wrdata_re <= csr_bankarray_csrbank10_dfii_pi2_wrdata0_re;
    soclinux_sdram_phaseinjector2_rddata_re <= csr_bankarray_csrbank10_dfii_pi2_rddata0_re;
    if (csr_bankarray_csrbank10_dfii_pi3_command0_re) begin
        soclinux_sdram_phaseinjector3_command_storage[5:0] <= csr_bankarray_csrbank10_dfii_pi3_command0_r;
    end
    soclinux_sdram_phaseinjector3_command_re <= csr_bankarray_csrbank10_dfii_pi3_command0_re;
    if (csr_bankarray_csrbank10_dfii_pi3_address0_re) begin
        soclinux_sdram_phaseinjector3_address_storage[13:0] <= csr_bankarray_csrbank10_dfii_pi3_address0_r;
    end
    soclinux_sdram_phaseinjector3_address_re <= csr_bankarray_csrbank10_dfii_pi3_address0_re;
    if (csr_bankarray_csrbank10_dfii_pi3_baddress0_re) begin
        soclinux_sdram_phaseinjector3_baddress_storage[2:0] <= csr_bankarray_csrbank10_dfii_pi3_baddress0_r;
    end
    soclinux_sdram_phaseinjector3_baddress_re <= csr_bankarray_csrbank10_dfii_pi3_baddress0_re;
    if (csr_bankarray_csrbank10_dfii_pi3_wrdata3_re) begin
        soclinux_sdram_phaseinjector3_wrdata_storage[127:96] <= csr_bankarray_csrbank10_dfii_pi3_wrdata3_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi3_wrdata2_re) begin
        soclinux_sdram_phaseinjector3_wrdata_storage[95:64] <= csr_bankarray_csrbank10_dfii_pi3_wrdata2_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi3_wrdata1_re) begin
        soclinux_sdram_phaseinjector3_wrdata_storage[63:32] <= csr_bankarray_csrbank10_dfii_pi3_wrdata1_r;
    end
    if (csr_bankarray_csrbank10_dfii_pi3_wrdata0_re) begin
        soclinux_sdram_phaseinjector3_wrdata_storage[31:0] <= csr_bankarray_csrbank10_dfii_pi3_wrdata0_r;
    end
    soclinux_sdram_phaseinjector3_wrdata_re <= csr_bankarray_csrbank10_dfii_pi3_wrdata0_re;
    soclinux_sdram_phaseinjector3_rddata_re <= csr_bankarray_csrbank10_dfii_pi3_rddata0_re;
    csr_bankarray_interface11_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank11_sel) begin
        case (csr_bankarray_interface11_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_next_core0_w;
            end
            1'd1: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata00_w;
            end
            2'd2: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata10_w;
            end
            2'd3: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata20_w;
            end
            3'd4: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata30_w;
            end
            3'd5: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata40_w;
            end
            3'd6: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata50_w;
            end
            3'd7: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata60_w;
            end
            4'd8: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata70_w;
            end
            4'd9: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata80_w;
            end
            4'd10: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata90_w;
            end
            4'd11: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata100_w;
            end
            4'd12: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_param_wdata110_w;
            end
            4'd13: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_neuron_inst_wdata0_w;
            end
            4'd14: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_packet_wdata0_w;
            end
            4'd15: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_en0_w;
            end
            5'd16: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_load_end0_w;
            end
            5'd17: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_tick_ready0_w;
            end
            5'd18: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_complete0_w;
            end
            5'd19: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_next_core_en0_w;
            end
            5'd20: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_grid_state0_w;
            end
            5'd21: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_msb_param_snn0_w;
            end
            5'd22: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_out00_w;
            end
            5'd23: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_out10_w;
            end
            5'd24: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_out20_w;
            end
            5'd25: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_out30_w;
            end
            5'd26: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_out40_w;
            end
            5'd27: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_out50_w;
            end
            5'd28: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_out60_w;
            end
            5'd29: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_out70_w;
            end
            5'd30: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_spike_out_rinc0_w;
            end
            5'd31: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_packet_out0_w;
            end
            6'd32: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_packet_out_rinc0_w;
            end
            6'd33: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_snn_status_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank11_next_core0_re) begin
        snn_3x2_next_core_storage[2:0] <= csr_bankarray_csrbank11_next_core0_r;
    end
    snn_3x2_next_core_re <= csr_bankarray_csrbank11_next_core0_re;
    if (csr_bankarray_csrbank11_param_wdata00_re) begin
        snn_3x2_param0_storage[31:0] <= csr_bankarray_csrbank11_param_wdata00_r;
    end
    snn_3x2_param0_re <= csr_bankarray_csrbank11_param_wdata00_re;
    if (csr_bankarray_csrbank11_param_wdata10_re) begin
        snn_3x2_param1_storage[31:0] <= csr_bankarray_csrbank11_param_wdata10_r;
    end
    snn_3x2_param1_re <= csr_bankarray_csrbank11_param_wdata10_re;
    if (csr_bankarray_csrbank11_param_wdata20_re) begin
        snn_3x2_param2_storage[31:0] <= csr_bankarray_csrbank11_param_wdata20_r;
    end
    snn_3x2_param2_re <= csr_bankarray_csrbank11_param_wdata20_re;
    if (csr_bankarray_csrbank11_param_wdata30_re) begin
        snn_3x2_param3_storage[31:0] <= csr_bankarray_csrbank11_param_wdata30_r;
    end
    snn_3x2_param3_re <= csr_bankarray_csrbank11_param_wdata30_re;
    if (csr_bankarray_csrbank11_param_wdata40_re) begin
        snn_3x2_param4_storage[31:0] <= csr_bankarray_csrbank11_param_wdata40_r;
    end
    snn_3x2_param4_re <= csr_bankarray_csrbank11_param_wdata40_re;
    if (csr_bankarray_csrbank11_param_wdata50_re) begin
        snn_3x2_param5_storage[31:0] <= csr_bankarray_csrbank11_param_wdata50_r;
    end
    snn_3x2_param5_re <= csr_bankarray_csrbank11_param_wdata50_re;
    if (csr_bankarray_csrbank11_param_wdata60_re) begin
        snn_3x2_param6_storage[31:0] <= csr_bankarray_csrbank11_param_wdata60_r;
    end
    snn_3x2_param6_re <= csr_bankarray_csrbank11_param_wdata60_re;
    if (csr_bankarray_csrbank11_param_wdata70_re) begin
        snn_3x2_param7_storage[31:0] <= csr_bankarray_csrbank11_param_wdata70_r;
    end
    snn_3x2_param7_re <= csr_bankarray_csrbank11_param_wdata70_re;
    if (csr_bankarray_csrbank11_param_wdata80_re) begin
        snn_3x2_param8_storage[31:0] <= csr_bankarray_csrbank11_param_wdata80_r;
    end
    snn_3x2_param8_re <= csr_bankarray_csrbank11_param_wdata80_re;
    if (csr_bankarray_csrbank11_param_wdata90_re) begin
        snn_3x2_param9_storage[31:0] <= csr_bankarray_csrbank11_param_wdata90_r;
    end
    snn_3x2_param9_re <= csr_bankarray_csrbank11_param_wdata90_re;
    if (csr_bankarray_csrbank11_param_wdata100_re) begin
        snn_3x2_param10_storage[31:0] <= csr_bankarray_csrbank11_param_wdata100_r;
    end
    snn_3x2_param10_re <= csr_bankarray_csrbank11_param_wdata100_re;
    if (csr_bankarray_csrbank11_param_wdata110_re) begin
        snn_3x2_param11_storage[15:0] <= csr_bankarray_csrbank11_param_wdata110_r;
    end
    snn_3x2_param11_re <= csr_bankarray_csrbank11_param_wdata110_re;
    if (csr_bankarray_csrbank11_neuron_inst_wdata0_re) begin
        snn_3x2_neuron_inst_storage[1:0] <= csr_bankarray_csrbank11_neuron_inst_wdata0_r;
    end
    snn_3x2_neuron_inst_re <= csr_bankarray_csrbank11_neuron_inst_wdata0_re;
    if (csr_bankarray_csrbank11_packet_wdata0_re) begin
        snn_3x2_packet_wdata_storage[29:0] <= csr_bankarray_csrbank11_packet_wdata0_r;
    end
    snn_3x2_packet_wdata_re <= csr_bankarray_csrbank11_packet_wdata0_re;
    if (csr_bankarray_csrbank11_spike_en0_re) begin
        snn_3x2_spike_en_storage <= csr_bankarray_csrbank11_spike_en0_r;
    end
    snn_3x2_spike_en_re <= csr_bankarray_csrbank11_spike_en0_re;
    if (csr_bankarray_csrbank11_load_end0_re) begin
        snn_3x2_load_end_storage <= csr_bankarray_csrbank11_load_end0_r;
    end
    snn_3x2_load_end_re <= csr_bankarray_csrbank11_load_end0_re;
    if (snn_3x2_tick_ready_we) begin
        snn_3x2_tick_ready_storage <= snn_3x2_tick_ready_dat_w;
    end
    if (csr_bankarray_csrbank11_tick_ready0_re) begin
        snn_3x2_tick_ready_storage <= csr_bankarray_csrbank11_tick_ready0_r;
    end
    snn_3x2_tick_ready_re <= csr_bankarray_csrbank11_tick_ready0_re;
    if (snn_3x2_complete_we) begin
        snn_3x2_complete_storage <= snn_3x2_complete_dat_w;
    end
    if (csr_bankarray_csrbank11_complete0_re) begin
        snn_3x2_complete_storage <= csr_bankarray_csrbank11_complete0_r;
    end
    snn_3x2_complete_re <= csr_bankarray_csrbank11_complete0_re;
    if (snn_3x2_next_core_en_we) begin
        snn_3x2_next_core_en_storage <= snn_3x2_next_core_en_dat_w;
    end
    if (csr_bankarray_csrbank11_next_core_en0_re) begin
        snn_3x2_next_core_en_storage <= csr_bankarray_csrbank11_next_core_en0_r;
    end
    snn_3x2_next_core_en_re <= csr_bankarray_csrbank11_next_core_en0_re;
    if (snn_3x2_grid_state_we) begin
        snn_3x2_grid_state_storage <= snn_3x2_grid_state_dat_w;
    end
    if (csr_bankarray_csrbank11_grid_state0_re) begin
        snn_3x2_grid_state_storage[2:0] <= csr_bankarray_csrbank11_grid_state0_r;
    end
    snn_3x2_grid_state_re <= csr_bankarray_csrbank11_grid_state0_re;
    if (snn_3x2_msb_param_snn_we) begin
        snn_3x2_msb_param_snn_storage <= snn_3x2_msb_param_snn_dat_w;
    end
    if (csr_bankarray_csrbank11_msb_param_snn0_re) begin
        snn_3x2_msb_param_snn_storage[15:0] <= csr_bankarray_csrbank11_msb_param_snn0_r;
    end
    snn_3x2_msb_param_snn_re <= csr_bankarray_csrbank11_msb_param_snn0_re;
    if (snn_3x2_spike_out0_we) begin
        snn_3x2_spike_out0_storage <= snn_3x2_spike_out0_dat_w;
    end
    if (csr_bankarray_csrbank11_spike_out00_re) begin
        snn_3x2_spike_out0_storage[31:0] <= csr_bankarray_csrbank11_spike_out00_r;
    end
    snn_3x2_spike_out0_re <= csr_bankarray_csrbank11_spike_out00_re;
    if (snn_3x2_spike_out1_we) begin
        snn_3x2_spike_out1_storage <= snn_3x2_spike_out1_dat_w;
    end
    if (csr_bankarray_csrbank11_spike_out10_re) begin
        snn_3x2_spike_out1_storage[31:0] <= csr_bankarray_csrbank11_spike_out10_r;
    end
    snn_3x2_spike_out1_re <= csr_bankarray_csrbank11_spike_out10_re;
    if (snn_3x2_spike_out2_we) begin
        snn_3x2_spike_out2_storage <= snn_3x2_spike_out2_dat_w;
    end
    if (csr_bankarray_csrbank11_spike_out20_re) begin
        snn_3x2_spike_out2_storage[31:0] <= csr_bankarray_csrbank11_spike_out20_r;
    end
    snn_3x2_spike_out2_re <= csr_bankarray_csrbank11_spike_out20_re;
    if (snn_3x2_spike_out3_we) begin
        snn_3x2_spike_out3_storage <= snn_3x2_spike_out3_dat_w;
    end
    if (csr_bankarray_csrbank11_spike_out30_re) begin
        snn_3x2_spike_out3_storage[31:0] <= csr_bankarray_csrbank11_spike_out30_r;
    end
    snn_3x2_spike_out3_re <= csr_bankarray_csrbank11_spike_out30_re;
    if (snn_3x2_spike_out4_we) begin
        snn_3x2_spike_out4_storage <= snn_3x2_spike_out4_dat_w;
    end
    if (csr_bankarray_csrbank11_spike_out40_re) begin
        snn_3x2_spike_out4_storage[31:0] <= csr_bankarray_csrbank11_spike_out40_r;
    end
    snn_3x2_spike_out4_re <= csr_bankarray_csrbank11_spike_out40_re;
    if (snn_3x2_spike_out5_we) begin
        snn_3x2_spike_out5_storage <= snn_3x2_spike_out5_dat_w;
    end
    if (csr_bankarray_csrbank11_spike_out50_re) begin
        snn_3x2_spike_out5_storage[31:0] <= csr_bankarray_csrbank11_spike_out50_r;
    end
    snn_3x2_spike_out5_re <= csr_bankarray_csrbank11_spike_out50_re;
    if (snn_3x2_spike_out6_we) begin
        snn_3x2_spike_out6_storage <= snn_3x2_spike_out6_dat_w;
    end
    if (csr_bankarray_csrbank11_spike_out60_re) begin
        snn_3x2_spike_out6_storage[31:0] <= csr_bankarray_csrbank11_spike_out60_r;
    end
    snn_3x2_spike_out6_re <= csr_bankarray_csrbank11_spike_out60_re;
    if (snn_3x2_spike_out7_we) begin
        snn_3x2_spike_out7_storage <= snn_3x2_spike_out7_dat_w;
    end
    if (csr_bankarray_csrbank11_spike_out70_re) begin
        snn_3x2_spike_out7_storage[25:0] <= csr_bankarray_csrbank11_spike_out70_r;
    end
    snn_3x2_spike_out7_re <= csr_bankarray_csrbank11_spike_out70_re;
    if (csr_bankarray_csrbank11_spike_out_rinc0_re) begin
        snn_3x2_spike_out_rinc_storage <= csr_bankarray_csrbank11_spike_out_rinc0_r;
    end
    snn_3x2_spike_out_rinc_re <= csr_bankarray_csrbank11_spike_out_rinc0_re;
    if (snn_3x2_packet_out_we) begin
        snn_3x2_packet_out_storage <= snn_3x2_packet_out_dat_w;
    end
    if (csr_bankarray_csrbank11_packet_out0_re) begin
        snn_3x2_packet_out_storage[7:0] <= csr_bankarray_csrbank11_packet_out0_r;
    end
    snn_3x2_packet_out_re <= csr_bankarray_csrbank11_packet_out0_re;
    if (csr_bankarray_csrbank11_packet_out_rinc0_re) begin
        snn_3x2_packet_out_rinc_storage <= csr_bankarray_csrbank11_packet_out_rinc0_r;
    end
    snn_3x2_packet_out_rinc_re <= csr_bankarray_csrbank11_packet_out_rinc0_re;
    snn_3x2_snn_status_re <= csr_bankarray_csrbank11_snn_status_re;
    csr_bankarray_interface12_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank12_sel) begin
        case (csr_bankarray_interface12_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_load0_w;
            end
            1'd1: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_reload0_w;
            end
            2'd2: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_en0_w;
            end
            2'd3: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_update_value0_w;
            end
            3'd4: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_value_w;
            end
            3'd5: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_ev_status_w;
            end
            3'd6: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_ev_pending_w;
            end
            3'd7: begin
                csr_bankarray_interface12_bank_bus_dat_r <= csr_bankarray_csrbank12_ev_enable0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank12_load0_re) begin
        soclinux_timer_load_storage[31:0] <= csr_bankarray_csrbank12_load0_r;
    end
    soclinux_timer_load_re <= csr_bankarray_csrbank12_load0_re;
    if (csr_bankarray_csrbank12_reload0_re) begin
        soclinux_timer_reload_storage[31:0] <= csr_bankarray_csrbank12_reload0_r;
    end
    soclinux_timer_reload_re <= csr_bankarray_csrbank12_reload0_re;
    if (csr_bankarray_csrbank12_en0_re) begin
        soclinux_timer_en_storage <= csr_bankarray_csrbank12_en0_r;
    end
    soclinux_timer_en_re <= csr_bankarray_csrbank12_en0_re;
    if (csr_bankarray_csrbank12_update_value0_re) begin
        soclinux_timer_update_value_storage <= csr_bankarray_csrbank12_update_value0_r;
    end
    soclinux_timer_update_value_re <= csr_bankarray_csrbank12_update_value0_re;
    soclinux_timer_value_re <= csr_bankarray_csrbank12_value_re;
    soclinux_timer_status_re <= csr_bankarray_csrbank12_ev_status_re;
    if (csr_bankarray_csrbank12_ev_pending_re) begin
        soclinux_timer_pending_r <= csr_bankarray_csrbank12_ev_pending_r;
    end
    soclinux_timer_pending_re <= csr_bankarray_csrbank12_ev_pending_re;
    if (csr_bankarray_csrbank12_ev_enable0_re) begin
        soclinux_timer_enable_storage <= csr_bankarray_csrbank12_ev_enable0_r;
    end
    soclinux_timer_enable_re <= csr_bankarray_csrbank12_ev_enable0_re;
    csr_bankarray_interface13_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank13_sel) begin
        case (csr_bankarray_interface13_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface13_bank_bus_dat_r <= soclinux_uart_rxtx_w;
            end
            1'd1: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_txfull_w;
            end
            2'd2: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_rxempty_w;
            end
            2'd3: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_ev_status_w;
            end
            3'd4: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_ev_pending_w;
            end
            3'd5: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_ev_enable0_w;
            end
            3'd6: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_txempty_w;
            end
            3'd7: begin
                csr_bankarray_interface13_bank_bus_dat_r <= csr_bankarray_csrbank13_rxfull_w;
            end
        endcase
    end
    soclinux_uart_txfull_re <= csr_bankarray_csrbank13_txfull_re;
    soclinux_uart_rxempty_re <= csr_bankarray_csrbank13_rxempty_re;
    soclinux_uart_status_re <= csr_bankarray_csrbank13_ev_status_re;
    if (csr_bankarray_csrbank13_ev_pending_re) begin
        soclinux_uart_pending_r[1:0] <= csr_bankarray_csrbank13_ev_pending_r;
    end
    soclinux_uart_pending_re <= csr_bankarray_csrbank13_ev_pending_re;
    if (csr_bankarray_csrbank13_ev_enable0_re) begin
        soclinux_uart_enable_storage[1:0] <= csr_bankarray_csrbank13_ev_enable0_r;
    end
    soclinux_uart_enable_re <= csr_bankarray_csrbank13_ev_enable0_re;
    soclinux_uart_txempty_re <= csr_bankarray_csrbank13_txempty_re;
    soclinux_uart_rxfull_re <= csr_bankarray_csrbank13_rxfull_re;
    csr_bankarray_interface14_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank14_sel) begin
        case (csr_bankarray_interface14_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface14_bank_bus_dat_r <= csr_bankarray_csrbank14_temperature_w;
            end
            1'd1: begin
                csr_bankarray_interface14_bank_bus_dat_r <= csr_bankarray_csrbank14_vccint_w;
            end
            2'd2: begin
                csr_bankarray_interface14_bank_bus_dat_r <= csr_bankarray_csrbank14_vccaux_w;
            end
            2'd3: begin
                csr_bankarray_interface14_bank_bus_dat_r <= csr_bankarray_csrbank14_vccbram_w;
            end
            3'd4: begin
                csr_bankarray_interface14_bank_bus_dat_r <= csr_bankarray_csrbank14_eoc_w;
            end
            3'd5: begin
                csr_bankarray_interface14_bank_bus_dat_r <= csr_bankarray_csrbank14_eos_w;
            end
        endcase
    end
    temperature_re <= csr_bankarray_csrbank14_temperature_re;
    vccint_re <= csr_bankarray_csrbank14_vccint_re;
    vccaux_re <= csr_bankarray_csrbank14_vccaux_re;
    vccbram_re <= csr_bankarray_csrbank14_vccbram_re;
    eoc_re <= csr_bankarray_csrbank14_eoc_re;
    eos_re <= csr_bankarray_csrbank14_eos_re;
    if (sys_rst) begin
        soclinux_reset_storage <= 2'd0;
        soclinux_reset_re <= 1'd0;
        soclinux_scratch_storage <= 32'd305419896;
        soclinux_scratch_re <= 1'd0;
        soclinux_bus_errors_re <= 1'd0;
        soclinux_bus_errors <= 32'd0;
        soclinux_cpu_dma_bus_inhibit <= 1'd0;
        soclinux_socbushandler_count <= 1'd0;
        soclinux_soclinux_ram_bus_ack <= 1'd0;
        soclinux_ram_bus_ram_bus_ack <= 1'd0;
        serial_tx <= 1'd1;
        soclinux_tx_tick <= 1'd0;
        soclinux_rx_tick <= 1'd0;
        soclinux_rx_rx_d <= 1'd0;
        soclinux_uart_txfull_re <= 1'd0;
        soclinux_uart_rxempty_re <= 1'd0;
        soclinux_uart_tx_pending <= 1'd0;
        soclinux_uart_tx_trigger_d <= 1'd0;
        soclinux_uart_rx_pending <= 1'd0;
        soclinux_uart_rx_trigger_d <= 1'd0;
        soclinux_uart_status_re <= 1'd0;
        soclinux_uart_pending_re <= 1'd0;
        soclinux_uart_pending_r <= 2'd0;
        soclinux_uart_enable_storage <= 2'd0;
        soclinux_uart_enable_re <= 1'd0;
        soclinux_uart_txempty_re <= 1'd0;
        soclinux_uart_rxfull_re <= 1'd0;
        soclinux_uart_tx_fifo_readable <= 1'd0;
        soclinux_uart_tx_fifo_level0 <= 5'd0;
        soclinux_uart_tx_fifo_produce <= 4'd0;
        soclinux_uart_tx_fifo_consume <= 4'd0;
        soclinux_uart_rx_fifo_readable <= 1'd0;
        soclinux_uart_rx_fifo_level0 <= 5'd0;
        soclinux_uart_rx_fifo_produce <= 4'd0;
        soclinux_uart_rx_fifo_consume <= 4'd0;
        soclinux_timer_load_storage <= 32'd0;
        soclinux_timer_load_re <= 1'd0;
        soclinux_timer_reload_storage <= 32'd0;
        soclinux_timer_reload_re <= 1'd0;
        soclinux_timer_en_storage <= 1'd0;
        soclinux_timer_en_re <= 1'd0;
        soclinux_timer_update_value_storage <= 1'd0;
        soclinux_timer_update_value_re <= 1'd0;
        soclinux_timer_value_status <= 32'd0;
        soclinux_timer_value_re <= 1'd0;
        soclinux_timer_zero_pending <= 1'd0;
        soclinux_timer_zero_trigger_d <= 1'd0;
        soclinux_timer_status_re <= 1'd0;
        soclinux_timer_pending_re <= 1'd0;
        soclinux_timer_pending_r <= 1'd0;
        soclinux_timer_enable_storage <= 1'd0;
        soclinux_timer_enable_re <= 1'd0;
        soclinux_timer_value <= 32'd0;
        k7ddrphy_rst_storage <= 1'd0;
        k7ddrphy_rst_re <= 1'd0;
        k7ddrphy_dly_sel_storage <= 8'd0;
        k7ddrphy_dly_sel_re <= 1'd0;
        k7ddrphy_half_sys8x_taps_storage <= 5'd6;
        k7ddrphy_half_sys8x_taps_re <= 1'd0;
        k7ddrphy_wlevel_en_storage <= 1'd0;
        k7ddrphy_wlevel_en_re <= 1'd0;
        k7ddrphy_rdphase_storage <= 2'd1;
        k7ddrphy_rdphase_re <= 1'd0;
        k7ddrphy_wrphase_storage <= 2'd2;
        k7ddrphy_wrphase_re <= 1'd0;
        k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
        k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
        k7ddrphy_bitslip0_value0 <= 3'd7;
        k7ddrphy_bitslip1_value0 <= 3'd7;
        k7ddrphy_bitslip2_value0 <= 3'd7;
        k7ddrphy_bitslip3_value0 <= 3'd7;
        k7ddrphy_bitslip4_value0 <= 3'd7;
        k7ddrphy_bitslip5_value0 <= 3'd7;
        k7ddrphy_bitslip6_value0 <= 3'd7;
        k7ddrphy_bitslip7_value0 <= 3'd7;
        k7ddrphy_bitslip0_value1 <= 3'd7;
        k7ddrphy_bitslip1_value1 <= 3'd7;
        k7ddrphy_bitslip2_value1 <= 3'd7;
        k7ddrphy_bitslip3_value1 <= 3'd7;
        k7ddrphy_bitslip4_value1 <= 3'd7;
        k7ddrphy_bitslip5_value1 <= 3'd7;
        k7ddrphy_bitslip6_value1 <= 3'd7;
        k7ddrphy_bitslip7_value1 <= 3'd7;
        k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
        k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
        k7ddrphy_bitslip0_value2 <= 3'd7;
        k7ddrphy_bitslip0_value3 <= 3'd7;
        k7ddrphy_bitslip1_value2 <= 3'd7;
        k7ddrphy_bitslip1_value3 <= 3'd7;
        k7ddrphy_bitslip2_value2 <= 3'd7;
        k7ddrphy_bitslip2_value3 <= 3'd7;
        k7ddrphy_bitslip3_value2 <= 3'd7;
        k7ddrphy_bitslip3_value3 <= 3'd7;
        k7ddrphy_bitslip4_value2 <= 3'd7;
        k7ddrphy_bitslip4_value3 <= 3'd7;
        k7ddrphy_bitslip5_value2 <= 3'd7;
        k7ddrphy_bitslip5_value3 <= 3'd7;
        k7ddrphy_bitslip6_value2 <= 3'd7;
        k7ddrphy_bitslip6_value3 <= 3'd7;
        k7ddrphy_bitslip7_value2 <= 3'd7;
        k7ddrphy_bitslip7_value3 <= 3'd7;
        k7ddrphy_bitslip8_value0 <= 3'd7;
        k7ddrphy_bitslip8_value1 <= 3'd7;
        k7ddrphy_bitslip9_value0 <= 3'd7;
        k7ddrphy_bitslip9_value1 <= 3'd7;
        k7ddrphy_bitslip10_value0 <= 3'd7;
        k7ddrphy_bitslip10_value1 <= 3'd7;
        k7ddrphy_bitslip11_value0 <= 3'd7;
        k7ddrphy_bitslip11_value1 <= 3'd7;
        k7ddrphy_bitslip12_value0 <= 3'd7;
        k7ddrphy_bitslip12_value1 <= 3'd7;
        k7ddrphy_bitslip13_value0 <= 3'd7;
        k7ddrphy_bitslip13_value1 <= 3'd7;
        k7ddrphy_bitslip14_value0 <= 3'd7;
        k7ddrphy_bitslip14_value1 <= 3'd7;
        k7ddrphy_bitslip15_value0 <= 3'd7;
        k7ddrphy_bitslip15_value1 <= 3'd7;
        k7ddrphy_bitslip16_value0 <= 3'd7;
        k7ddrphy_bitslip16_value1 <= 3'd7;
        k7ddrphy_bitslip17_value0 <= 3'd7;
        k7ddrphy_bitslip17_value1 <= 3'd7;
        k7ddrphy_bitslip18_value0 <= 3'd7;
        k7ddrphy_bitslip18_value1 <= 3'd7;
        k7ddrphy_bitslip19_value0 <= 3'd7;
        k7ddrphy_bitslip19_value1 <= 3'd7;
        k7ddrphy_bitslip20_value0 <= 3'd7;
        k7ddrphy_bitslip20_value1 <= 3'd7;
        k7ddrphy_bitslip21_value0 <= 3'd7;
        k7ddrphy_bitslip21_value1 <= 3'd7;
        k7ddrphy_bitslip22_value0 <= 3'd7;
        k7ddrphy_bitslip22_value1 <= 3'd7;
        k7ddrphy_bitslip23_value0 <= 3'd7;
        k7ddrphy_bitslip23_value1 <= 3'd7;
        k7ddrphy_bitslip24_value0 <= 3'd7;
        k7ddrphy_bitslip24_value1 <= 3'd7;
        k7ddrphy_bitslip25_value0 <= 3'd7;
        k7ddrphy_bitslip25_value1 <= 3'd7;
        k7ddrphy_bitslip26_value0 <= 3'd7;
        k7ddrphy_bitslip26_value1 <= 3'd7;
        k7ddrphy_bitslip27_value0 <= 3'd7;
        k7ddrphy_bitslip27_value1 <= 3'd7;
        k7ddrphy_bitslip28_value0 <= 3'd7;
        k7ddrphy_bitslip28_value1 <= 3'd7;
        k7ddrphy_bitslip29_value0 <= 3'd7;
        k7ddrphy_bitslip29_value1 <= 3'd7;
        k7ddrphy_bitslip30_value0 <= 3'd7;
        k7ddrphy_bitslip30_value1 <= 3'd7;
        k7ddrphy_bitslip31_value0 <= 3'd7;
        k7ddrphy_bitslip31_value1 <= 3'd7;
        k7ddrphy_bitslip32_value0 <= 3'd7;
        k7ddrphy_bitslip32_value1 <= 3'd7;
        k7ddrphy_bitslip33_value0 <= 3'd7;
        k7ddrphy_bitslip33_value1 <= 3'd7;
        k7ddrphy_bitslip34_value0 <= 3'd7;
        k7ddrphy_bitslip34_value1 <= 3'd7;
        k7ddrphy_bitslip35_value0 <= 3'd7;
        k7ddrphy_bitslip35_value1 <= 3'd7;
        k7ddrphy_bitslip36_value0 <= 3'd7;
        k7ddrphy_bitslip36_value1 <= 3'd7;
        k7ddrphy_bitslip37_value0 <= 3'd7;
        k7ddrphy_bitslip37_value1 <= 3'd7;
        k7ddrphy_bitslip38_value0 <= 3'd7;
        k7ddrphy_bitslip38_value1 <= 3'd7;
        k7ddrphy_bitslip39_value0 <= 3'd7;
        k7ddrphy_bitslip39_value1 <= 3'd7;
        k7ddrphy_bitslip40_value0 <= 3'd7;
        k7ddrphy_bitslip40_value1 <= 3'd7;
        k7ddrphy_bitslip41_value0 <= 3'd7;
        k7ddrphy_bitslip41_value1 <= 3'd7;
        k7ddrphy_bitslip42_value0 <= 3'd7;
        k7ddrphy_bitslip42_value1 <= 3'd7;
        k7ddrphy_bitslip43_value0 <= 3'd7;
        k7ddrphy_bitslip43_value1 <= 3'd7;
        k7ddrphy_bitslip44_value0 <= 3'd7;
        k7ddrphy_bitslip44_value1 <= 3'd7;
        k7ddrphy_bitslip45_value0 <= 3'd7;
        k7ddrphy_bitslip45_value1 <= 3'd7;
        k7ddrphy_bitslip46_value0 <= 3'd7;
        k7ddrphy_bitslip46_value1 <= 3'd7;
        k7ddrphy_bitslip47_value0 <= 3'd7;
        k7ddrphy_bitslip47_value1 <= 3'd7;
        k7ddrphy_bitslip48_value0 <= 3'd7;
        k7ddrphy_bitslip48_value1 <= 3'd7;
        k7ddrphy_bitslip49_value0 <= 3'd7;
        k7ddrphy_bitslip49_value1 <= 3'd7;
        k7ddrphy_bitslip50_value0 <= 3'd7;
        k7ddrphy_bitslip50_value1 <= 3'd7;
        k7ddrphy_bitslip51_value0 <= 3'd7;
        k7ddrphy_bitslip51_value1 <= 3'd7;
        k7ddrphy_bitslip52_value0 <= 3'd7;
        k7ddrphy_bitslip52_value1 <= 3'd7;
        k7ddrphy_bitslip53_value0 <= 3'd7;
        k7ddrphy_bitslip53_value1 <= 3'd7;
        k7ddrphy_bitslip54_value0 <= 3'd7;
        k7ddrphy_bitslip54_value1 <= 3'd7;
        k7ddrphy_bitslip55_value0 <= 3'd7;
        k7ddrphy_bitslip55_value1 <= 3'd7;
        k7ddrphy_bitslip56_value0 <= 3'd7;
        k7ddrphy_bitslip56_value1 <= 3'd7;
        k7ddrphy_bitslip57_value0 <= 3'd7;
        k7ddrphy_bitslip57_value1 <= 3'd7;
        k7ddrphy_bitslip58_value0 <= 3'd7;
        k7ddrphy_bitslip58_value1 <= 3'd7;
        k7ddrphy_bitslip59_value0 <= 3'd7;
        k7ddrphy_bitslip59_value1 <= 3'd7;
        k7ddrphy_bitslip60_value0 <= 3'd7;
        k7ddrphy_bitslip60_value1 <= 3'd7;
        k7ddrphy_bitslip61_value0 <= 3'd7;
        k7ddrphy_bitslip61_value1 <= 3'd7;
        k7ddrphy_bitslip62_value0 <= 3'd7;
        k7ddrphy_bitslip62_value1 <= 3'd7;
        k7ddrphy_bitslip63_value0 <= 3'd7;
        k7ddrphy_bitslip63_value1 <= 3'd7;
        k7ddrphy_rddata_en_tappeddelayline0 <= 1'd0;
        k7ddrphy_rddata_en_tappeddelayline1 <= 1'd0;
        k7ddrphy_rddata_en_tappeddelayline2 <= 1'd0;
        k7ddrphy_rddata_en_tappeddelayline3 <= 1'd0;
        k7ddrphy_rddata_en_tappeddelayline4 <= 1'd0;
        k7ddrphy_rddata_en_tappeddelayline5 <= 1'd0;
        k7ddrphy_rddata_en_tappeddelayline6 <= 1'd0;
        k7ddrphy_rddata_en_tappeddelayline7 <= 1'd0;
        k7ddrphy_wrdata_en_tappeddelayline0 <= 1'd0;
        k7ddrphy_wrdata_en_tappeddelayline1 <= 1'd0;
        k7ddrphy_wrdata_en_tappeddelayline2 <= 1'd0;
        soclinux_sdram_storage <= 4'd1;
        soclinux_sdram_re <= 1'd0;
        soclinux_sdram_phaseinjector0_command_storage <= 6'd0;
        soclinux_sdram_phaseinjector0_command_re <= 1'd0;
        soclinux_sdram_phaseinjector0_address_re <= 1'd0;
        soclinux_sdram_phaseinjector0_baddress_re <= 1'd0;
        soclinux_sdram_phaseinjector0_wrdata_re <= 1'd0;
        soclinux_sdram_phaseinjector0_rddata_status <= 128'd0;
        soclinux_sdram_phaseinjector0_rddata_re <= 1'd0;
        soclinux_sdram_phaseinjector1_command_storage <= 6'd0;
        soclinux_sdram_phaseinjector1_command_re <= 1'd0;
        soclinux_sdram_phaseinjector1_address_re <= 1'd0;
        soclinux_sdram_phaseinjector1_baddress_re <= 1'd0;
        soclinux_sdram_phaseinjector1_wrdata_re <= 1'd0;
        soclinux_sdram_phaseinjector1_rddata_status <= 128'd0;
        soclinux_sdram_phaseinjector1_rddata_re <= 1'd0;
        soclinux_sdram_phaseinjector2_command_storage <= 6'd0;
        soclinux_sdram_phaseinjector2_command_re <= 1'd0;
        soclinux_sdram_phaseinjector2_address_re <= 1'd0;
        soclinux_sdram_phaseinjector2_baddress_re <= 1'd0;
        soclinux_sdram_phaseinjector2_wrdata_re <= 1'd0;
        soclinux_sdram_phaseinjector2_rddata_status <= 128'd0;
        soclinux_sdram_phaseinjector2_rddata_re <= 1'd0;
        soclinux_sdram_phaseinjector3_command_storage <= 6'd0;
        soclinux_sdram_phaseinjector3_command_re <= 1'd0;
        soclinux_sdram_phaseinjector3_address_re <= 1'd0;
        soclinux_sdram_phaseinjector3_baddress_re <= 1'd0;
        soclinux_sdram_phaseinjector3_wrdata_re <= 1'd0;
        soclinux_sdram_phaseinjector3_rddata_status <= 128'd0;
        soclinux_sdram_phaseinjector3_rddata_re <= 1'd0;
        soclinux_sdram_dfi_p0_address <= 14'd0;
        soclinux_sdram_dfi_p0_bank <= 3'd0;
        soclinux_sdram_dfi_p0_cas_n <= 1'd1;
        soclinux_sdram_dfi_p0_cs_n <= 1'd1;
        soclinux_sdram_dfi_p0_ras_n <= 1'd1;
        soclinux_sdram_dfi_p0_we_n <= 1'd1;
        soclinux_sdram_dfi_p0_wrdata_en <= 1'd0;
        soclinux_sdram_dfi_p0_rddata_en <= 1'd0;
        soclinux_sdram_dfi_p1_address <= 14'd0;
        soclinux_sdram_dfi_p1_bank <= 3'd0;
        soclinux_sdram_dfi_p1_cas_n <= 1'd1;
        soclinux_sdram_dfi_p1_cs_n <= 1'd1;
        soclinux_sdram_dfi_p1_ras_n <= 1'd1;
        soclinux_sdram_dfi_p1_we_n <= 1'd1;
        soclinux_sdram_dfi_p1_wrdata_en <= 1'd0;
        soclinux_sdram_dfi_p1_rddata_en <= 1'd0;
        soclinux_sdram_dfi_p2_address <= 14'd0;
        soclinux_sdram_dfi_p2_bank <= 3'd0;
        soclinux_sdram_dfi_p2_cas_n <= 1'd1;
        soclinux_sdram_dfi_p2_cs_n <= 1'd1;
        soclinux_sdram_dfi_p2_ras_n <= 1'd1;
        soclinux_sdram_dfi_p2_we_n <= 1'd1;
        soclinux_sdram_dfi_p2_wrdata_en <= 1'd0;
        soclinux_sdram_dfi_p2_rddata_en <= 1'd0;
        soclinux_sdram_dfi_p3_address <= 14'd0;
        soclinux_sdram_dfi_p3_bank <= 3'd0;
        soclinux_sdram_dfi_p3_cas_n <= 1'd1;
        soclinux_sdram_dfi_p3_cs_n <= 1'd1;
        soclinux_sdram_dfi_p3_ras_n <= 1'd1;
        soclinux_sdram_dfi_p3_we_n <= 1'd1;
        soclinux_sdram_dfi_p3_wrdata_en <= 1'd0;
        soclinux_sdram_dfi_p3_rddata_en <= 1'd0;
        soclinux_sdram_cmd_payload_a <= 14'd0;
        soclinux_sdram_cmd_payload_ba <= 3'd0;
        soclinux_sdram_cmd_payload_cas <= 1'd0;
        soclinux_sdram_cmd_payload_ras <= 1'd0;
        soclinux_sdram_cmd_payload_we <= 1'd0;
        soclinux_sdram_timer_count1 <= 10'd976;
        soclinux_sdram_postponer_req_o <= 1'd0;
        soclinux_sdram_postponer_count <= 1'd0;
        soclinux_sdram_sequencer_done1 <= 1'd0;
        soclinux_sdram_sequencer_counter <= 5'd0;
        soclinux_sdram_sequencer_count <= 1'd0;
        soclinux_sdram_zqcs_timer_count1 <= 27'd124999999;
        soclinux_sdram_zqcs_executer_done <= 1'd0;
        soclinux_sdram_zqcs_executer_counter <= 5'd0;
        soclinux_sdram_bankmachine0_level <= 4'd0;
        soclinux_sdram_bankmachine0_produce <= 3'd0;
        soclinux_sdram_bankmachine0_consume <= 3'd0;
        soclinux_sdram_bankmachine0_pipe_valid_source_valid <= 1'd0;
        soclinux_sdram_bankmachine0_pipe_valid_source_payload_we <= 1'd0;
        soclinux_sdram_bankmachine0_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_sdram_bankmachine0_row <= 14'd0;
        soclinux_sdram_bankmachine0_row_opened <= 1'd0;
        soclinux_sdram_bankmachine0_twtpcon_ready <= 1'd0;
        soclinux_sdram_bankmachine0_twtpcon_count <= 3'd0;
        soclinux_sdram_bankmachine0_trccon_ready <= 1'd0;
        soclinux_sdram_bankmachine0_trccon_count <= 3'd0;
        soclinux_sdram_bankmachine0_trascon_ready <= 1'd0;
        soclinux_sdram_bankmachine0_trascon_count <= 3'd0;
        soclinux_sdram_bankmachine1_level <= 4'd0;
        soclinux_sdram_bankmachine1_produce <= 3'd0;
        soclinux_sdram_bankmachine1_consume <= 3'd0;
        soclinux_sdram_bankmachine1_pipe_valid_source_valid <= 1'd0;
        soclinux_sdram_bankmachine1_pipe_valid_source_payload_we <= 1'd0;
        soclinux_sdram_bankmachine1_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_sdram_bankmachine1_row <= 14'd0;
        soclinux_sdram_bankmachine1_row_opened <= 1'd0;
        soclinux_sdram_bankmachine1_twtpcon_ready <= 1'd0;
        soclinux_sdram_bankmachine1_twtpcon_count <= 3'd0;
        soclinux_sdram_bankmachine1_trccon_ready <= 1'd0;
        soclinux_sdram_bankmachine1_trccon_count <= 3'd0;
        soclinux_sdram_bankmachine1_trascon_ready <= 1'd0;
        soclinux_sdram_bankmachine1_trascon_count <= 3'd0;
        soclinux_sdram_bankmachine2_level <= 4'd0;
        soclinux_sdram_bankmachine2_produce <= 3'd0;
        soclinux_sdram_bankmachine2_consume <= 3'd0;
        soclinux_sdram_bankmachine2_pipe_valid_source_valid <= 1'd0;
        soclinux_sdram_bankmachine2_pipe_valid_source_payload_we <= 1'd0;
        soclinux_sdram_bankmachine2_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_sdram_bankmachine2_row <= 14'd0;
        soclinux_sdram_bankmachine2_row_opened <= 1'd0;
        soclinux_sdram_bankmachine2_twtpcon_ready <= 1'd0;
        soclinux_sdram_bankmachine2_twtpcon_count <= 3'd0;
        soclinux_sdram_bankmachine2_trccon_ready <= 1'd0;
        soclinux_sdram_bankmachine2_trccon_count <= 3'd0;
        soclinux_sdram_bankmachine2_trascon_ready <= 1'd0;
        soclinux_sdram_bankmachine2_trascon_count <= 3'd0;
        soclinux_sdram_bankmachine3_level <= 4'd0;
        soclinux_sdram_bankmachine3_produce <= 3'd0;
        soclinux_sdram_bankmachine3_consume <= 3'd0;
        soclinux_sdram_bankmachine3_pipe_valid_source_valid <= 1'd0;
        soclinux_sdram_bankmachine3_pipe_valid_source_payload_we <= 1'd0;
        soclinux_sdram_bankmachine3_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_sdram_bankmachine3_row <= 14'd0;
        soclinux_sdram_bankmachine3_row_opened <= 1'd0;
        soclinux_sdram_bankmachine3_twtpcon_ready <= 1'd0;
        soclinux_sdram_bankmachine3_twtpcon_count <= 3'd0;
        soclinux_sdram_bankmachine3_trccon_ready <= 1'd0;
        soclinux_sdram_bankmachine3_trccon_count <= 3'd0;
        soclinux_sdram_bankmachine3_trascon_ready <= 1'd0;
        soclinux_sdram_bankmachine3_trascon_count <= 3'd0;
        soclinux_sdram_bankmachine4_level <= 4'd0;
        soclinux_sdram_bankmachine4_produce <= 3'd0;
        soclinux_sdram_bankmachine4_consume <= 3'd0;
        soclinux_sdram_bankmachine4_pipe_valid_source_valid <= 1'd0;
        soclinux_sdram_bankmachine4_pipe_valid_source_payload_we <= 1'd0;
        soclinux_sdram_bankmachine4_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_sdram_bankmachine4_row <= 14'd0;
        soclinux_sdram_bankmachine4_row_opened <= 1'd0;
        soclinux_sdram_bankmachine4_twtpcon_ready <= 1'd0;
        soclinux_sdram_bankmachine4_twtpcon_count <= 3'd0;
        soclinux_sdram_bankmachine4_trccon_ready <= 1'd0;
        soclinux_sdram_bankmachine4_trccon_count <= 3'd0;
        soclinux_sdram_bankmachine4_trascon_ready <= 1'd0;
        soclinux_sdram_bankmachine4_trascon_count <= 3'd0;
        soclinux_sdram_bankmachine5_level <= 4'd0;
        soclinux_sdram_bankmachine5_produce <= 3'd0;
        soclinux_sdram_bankmachine5_consume <= 3'd0;
        soclinux_sdram_bankmachine5_pipe_valid_source_valid <= 1'd0;
        soclinux_sdram_bankmachine5_pipe_valid_source_payload_we <= 1'd0;
        soclinux_sdram_bankmachine5_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_sdram_bankmachine5_row <= 14'd0;
        soclinux_sdram_bankmachine5_row_opened <= 1'd0;
        soclinux_sdram_bankmachine5_twtpcon_ready <= 1'd0;
        soclinux_sdram_bankmachine5_twtpcon_count <= 3'd0;
        soclinux_sdram_bankmachine5_trccon_ready <= 1'd0;
        soclinux_sdram_bankmachine5_trccon_count <= 3'd0;
        soclinux_sdram_bankmachine5_trascon_ready <= 1'd0;
        soclinux_sdram_bankmachine5_trascon_count <= 3'd0;
        soclinux_sdram_bankmachine6_level <= 4'd0;
        soclinux_sdram_bankmachine6_produce <= 3'd0;
        soclinux_sdram_bankmachine6_consume <= 3'd0;
        soclinux_sdram_bankmachine6_pipe_valid_source_valid <= 1'd0;
        soclinux_sdram_bankmachine6_pipe_valid_source_payload_we <= 1'd0;
        soclinux_sdram_bankmachine6_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_sdram_bankmachine6_row <= 14'd0;
        soclinux_sdram_bankmachine6_row_opened <= 1'd0;
        soclinux_sdram_bankmachine6_twtpcon_ready <= 1'd0;
        soclinux_sdram_bankmachine6_twtpcon_count <= 3'd0;
        soclinux_sdram_bankmachine6_trccon_ready <= 1'd0;
        soclinux_sdram_bankmachine6_trccon_count <= 3'd0;
        soclinux_sdram_bankmachine6_trascon_ready <= 1'd0;
        soclinux_sdram_bankmachine6_trascon_count <= 3'd0;
        soclinux_sdram_bankmachine7_level <= 4'd0;
        soclinux_sdram_bankmachine7_produce <= 3'd0;
        soclinux_sdram_bankmachine7_consume <= 3'd0;
        soclinux_sdram_bankmachine7_pipe_valid_source_valid <= 1'd0;
        soclinux_sdram_bankmachine7_pipe_valid_source_payload_we <= 1'd0;
        soclinux_sdram_bankmachine7_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_sdram_bankmachine7_row <= 14'd0;
        soclinux_sdram_bankmachine7_row_opened <= 1'd0;
        soclinux_sdram_bankmachine7_twtpcon_ready <= 1'd0;
        soclinux_sdram_bankmachine7_twtpcon_count <= 3'd0;
        soclinux_sdram_bankmachine7_trccon_ready <= 1'd0;
        soclinux_sdram_bankmachine7_trccon_count <= 3'd0;
        soclinux_sdram_bankmachine7_trascon_ready <= 1'd0;
        soclinux_sdram_bankmachine7_trascon_count <= 3'd0;
        soclinux_sdram_choose_cmd_grant <= 3'd0;
        soclinux_sdram_choose_req_grant <= 3'd0;
        soclinux_sdram_trrdcon_ready <= 1'd0;
        soclinux_sdram_trrdcon_count <= 1'd0;
        soclinux_sdram_tfawcon_ready <= 1'd1;
        soclinux_sdram_tfawcon_window <= 5'd0;
        soclinux_sdram_tccdcon_ready <= 1'd0;
        soclinux_sdram_tccdcon_count <= 1'd0;
        soclinux_sdram_twtrcon_ready <= 1'd0;
        soclinux_sdram_twtrcon_count <= 3'd0;
        soclinux_sdram_time0 <= 5'd0;
        soclinux_sdram_time1 <= 4'd0;
        soclinux_aborted <= 1'd0;
        ethphy_mode0 <= 1'd0;
        ethphy_mode_re <= 1'd0;
        ethphy_reset_storage <= 1'd0;
        ethphy_reset_re <= 1'd0;
        ethphy_counter <= 9'd0;
        ethphy__w_storage <= 3'd0;
        ethphy__w_re <= 1'd0;
        ethphy__r_re <= 1'd0;
        soclinux_ethmac_re <= 1'd0;
        soclinux_ethmac_tx_cdc_cdc_graycounter0_q <= 6'd0;
        soclinux_ethmac_tx_cdc_cdc_graycounter0_q_binary <= 6'd0;
        soclinux_ethmac_preamble_errors_status <= 32'd0;
        soclinux_ethmac_preamble_errors_re <= 1'd0;
        soclinux_ethmac_crc_errors_status <= 32'd0;
        soclinux_ethmac_crc_errors_re <= 1'd0;
        soclinux_ethmac_rx_cdc_cdc_graycounter1_q <= 6'd0;
        soclinux_ethmac_rx_cdc_cdc_graycounter1_q_binary <= 6'd0;
        soclinux_ethmac_sram9_re <= 1'd0;
        soclinux_ethmac_sram12_re <= 1'd0;
        soclinux_ethmac_sram13_status <= 32'd0;
        soclinux_ethmac_sram15_re <= 1'd0;
        soclinux_ethmac_sram24_re <= 1'd0;
        soclinux_ethmac_sram28_re <= 1'd0;
        soclinux_ethmac_sram29_r <= 1'd0;
        soclinux_ethmac_sram31_storage <= 1'd0;
        soclinux_ethmac_sram32_re <= 1'd0;
        soclinux_ethmac_slot <= 1'd0;
        soclinux_ethmac_sram35_length <= 11'd0;
        soclinux_ethmac_sram55_level <= 2'd0;
        soclinux_ethmac_sram57_produce <= 1'd0;
        soclinux_ethmac_sram58_consume <= 1'd0;
        soclinux_ethmac_sram96_re <= 1'd0;
        soclinux_ethmac_sram99_re <= 1'd0;
        soclinux_ethmac_sram101_re <= 1'd0;
        soclinux_ethmac_sram103_re <= 1'd0;
        soclinux_ethmac_sram106_pending <= 1'd0;
        soclinux_ethmac_sram112_re <= 1'd0;
        soclinux_ethmac_sram116_re <= 1'd0;
        soclinux_ethmac_sram117_r <= 1'd0;
        soclinux_ethmac_sram119_storage <= 1'd0;
        soclinux_ethmac_sram120_re <= 1'd0;
        soclinux_ethmac_sram122_length <= 11'd0;
        soclinux_ethmac_sram141_level <= 2'd0;
        soclinux_ethmac_sram143_produce <= 1'd0;
        soclinux_ethmac_sram144_consume <= 1'd0;
        soclinux_ethmac_interface0_ack <= 1'd0;
        soclinux_ethmac_interface1_ack <= 1'd0;
        soclinux_ethmac_interface2_ack <= 1'd0;
        soclinux_ethmac_interface3_ack <= 1'd0;
        soclinux_ethmac_slave_sel_r <= 4'd0;
        leds_storage <= 8'd0;
        leds_re <= 1'd0;
        leds_chaser <= 8'd0;
        leds_mode <= 1'd0;
        leds_count <= 23'd7812500;
        card_detect_re <= 1'd0;
        clocker_storage <= 9'd256;
        clocker_re <= 1'd0;
        clocker_clks <= 9'd0;
        clocker_clk_d <= 1'd0;
        clocker_ce_delayed <= 1'd0;
        init_count <= 8'd0;
        cmdw_count <= 8'd0;
        cmdr_timeout <= 32'd125000000;
        cmdr_count <= 8'd0;
        cmdr_busy <= 1'd0;
        cmdr_cmdr_run <= 1'd0;
        cmdr_cmdr_converter_converter_source_payload_data <= 8'd0;
        cmdr_cmdr_converter_converter_source_payload_valid_token_count <= 4'd0;
        cmdr_cmdr_converter_converter_demux <= 3'd0;
        cmdr_cmdr_converter_converter_strobe_all <= 1'd0;
        cmdr_cmdr_buf_pipe_valid_source_valid <= 1'd0;
        cmdr_cmdr_buf_pipe_valid_source_payload_data <= 8'd0;
        cmdr_cmdr_reset <= 1'd0;
        dataw_re <= 1'd0;
        dataw_count <= 8'd0;
        dataw_accepted1 <= 1'd0;
        dataw_crc_error1 <= 1'd0;
        dataw_write_error1 <= 1'd0;
        dataw_crc_run <= 1'd0;
        dataw_crc_converter_converter_source_payload_data <= 8'd0;
        dataw_crc_converter_converter_source_payload_valid_token_count <= 4'd0;
        dataw_crc_converter_converter_demux <= 3'd0;
        dataw_crc_converter_converter_strobe_all <= 1'd0;
        dataw_crc_buf_pipe_valid_source_valid <= 1'd0;
        dataw_crc_buf_pipe_valid_source_payload_data <= 8'd0;
        datar_timeout <= 32'd125000000;
        datar_count <= 10'd0;
        datar_datar_run <= 1'd0;
        datar_datar_converter_converter_source_payload_data <= 8'd0;
        datar_datar_converter_converter_source_payload_valid_token_count <= 2'd0;
        datar_datar_converter_converter_demux <= 1'd0;
        datar_datar_converter_converter_strobe_all <= 1'd0;
        datar_datar_buf_pipe_valid_source_valid <= 1'd0;
        datar_datar_buf_pipe_valid_source_payload_data <= 8'd0;
        datar_datar_reset <= 1'd0;
        sdpads_data_i_ce <= 1'd0;
        clocker_clk_delay <= 2'd0;
        card_detect_irq <= 1'd0;
        card_detect_d <= 1'd0;
        sdcore_cmd_argument_storage <= 32'd0;
        sdcore_cmd_argument_re <= 1'd0;
        sdcore_cmd_command_storage <= 14'd0;
        sdcore_cmd_command_re <= 1'd0;
        sdcore_cmd_send_storage <= 1'd0;
        sdcore_cmd_send_re <= 1'd0;
        sdcore_cmd_response_status <= 128'd0;
        sdcore_cmd_response_re <= 1'd0;
        sdcore_cmd_event_re <= 1'd0;
        sdcore_data_event_re <= 1'd0;
        sdcore_block_length_storage <= 10'd0;
        sdcore_block_length_re <= 1'd0;
        sdcore_block_count_storage <= 32'd0;
        sdcore_block_count_re <= 1'd0;
        sdcore_crc7_inserter_reg0 <= 7'd0;
        sdcore_crc16_inserter_count <= 3'd0;
        sdcore_crc16_inserter_crc0_reg0 <= 16'd0;
        sdcore_crc16_inserter_crc1_reg0 <= 16'd0;
        sdcore_crc16_inserter_crc2_reg0 <= 16'd0;
        sdcore_crc16_inserter_crc3_reg0 <= 16'd0;
        sdcore_fifo_level <= 4'd0;
        sdcore_fifo_produce <= 3'd0;
        sdcore_fifo_consume <= 3'd0;
        sdcore_cmd_count <= 3'd0;
        sdcore_cmd_done <= 1'd0;
        sdcore_cmd_error <= 1'd0;
        sdcore_cmd_timeout <= 1'd0;
        sdcore_data_count <= 32'd0;
        sdcore_data_done <= 1'd0;
        sdcore_data_error <= 1'd0;
        sdcore_data_timeout <= 1'd0;
        sdblock2mem_irq <= 1'd0;
        sdblock2mem_fifo_readable <= 1'd0;
        sdblock2mem_fifo_level0 <= 10'd0;
        sdblock2mem_fifo_produce <= 9'd0;
        sdblock2mem_fifo_consume <= 9'd0;
        sdblock2mem_converter_source_payload_data <= 32'd0;
        sdblock2mem_converter_source_payload_valid_token_count <= 3'd0;
        sdblock2mem_converter_demux <= 2'd0;
        sdblock2mem_converter_strobe_all <= 1'd0;
        sdblock2mem_wishbonedmawriter_base_storage <= 64'd0;
        sdblock2mem_wishbonedmawriter_base_re <= 1'd0;
        sdblock2mem_wishbonedmawriter_length_storage <= 32'd0;
        sdblock2mem_wishbonedmawriter_length_re <= 1'd0;
        sdblock2mem_wishbonedmawriter_enable_storage <= 1'd0;
        sdblock2mem_wishbonedmawriter_enable_re <= 1'd0;
        sdblock2mem_wishbonedmawriter_done_re <= 1'd0;
        sdblock2mem_wishbonedmawriter_loop_storage <= 1'd0;
        sdblock2mem_wishbonedmawriter_loop_re <= 1'd0;
        sdblock2mem_wishbonedmawriter_offset_re <= 1'd0;
        sdblock2mem_wishbonedmawriter_offset <= 32'd0;
        sdblock2mem_connect <= 1'd0;
        sdblock2mem_done_d <= 1'd0;
        sdmem2block_irq <= 1'd0;
        sdmem2block_dma_data <= 32'd0;
        sdmem2block_dma_base_storage <= 64'd0;
        sdmem2block_dma_base_re <= 1'd0;
        sdmem2block_dma_length_storage <= 32'd0;
        sdmem2block_dma_length_re <= 1'd0;
        sdmem2block_dma_enable_storage <= 1'd0;
        sdmem2block_dma_enable_re <= 1'd0;
        sdmem2block_dma_done_re <= 1'd0;
        sdmem2block_dma_loop_storage <= 1'd0;
        sdmem2block_dma_loop_re <= 1'd0;
        sdmem2block_dma_offset_re <= 1'd0;
        sdmem2block_dma_offset <= 32'd0;
        sdmem2block_converter_mux <= 2'd0;
        sdmem2block_fifo_readable <= 1'd0;
        sdmem2block_fifo_level0 <= 10'd0;
        sdmem2block_fifo_produce <= 9'd0;
        sdmem2block_fifo_consume <= 9'd0;
        sdmem2block_count <= 9'd0;
        sdmem2block_done_d <= 1'd0;
        card_detect_pending <= 1'd0;
        block2mem_dma_pending <= 1'd0;
        mem2block_dma_pending <= 1'd0;
        eventmanager_status_re <= 1'd0;
        eventmanager_pending_re <= 1'd0;
        eventmanager_pending_r <= 4'd0;
        eventmanager_enable_storage <= 4'd0;
        eventmanager_enable_re <= 1'd0;
        temperature_status <= 12'd0;
        temperature_re <= 1'd0;
        vccint_status <= 12'd0;
        vccint_re <= 1'd0;
        vccaux_status <= 12'd0;
        vccaux_re <= 1'd0;
        vccbram_status <= 12'd0;
        vccbram_re <= 1'd0;
        eoc_status <= 1'd0;
        eoc_re <= 1'd0;
        eos_status <= 1'd0;
        eos_re <= 1'd0;
        snn_3x2_next_core_storage <= 3'd0;
        snn_3x2_next_core_re <= 1'd0;
        snn_3x2_param0_storage <= 32'd0;
        snn_3x2_param0_re <= 1'd0;
        snn_3x2_param1_storage <= 32'd0;
        snn_3x2_param1_re <= 1'd0;
        snn_3x2_param2_storage <= 32'd0;
        snn_3x2_param2_re <= 1'd0;
        snn_3x2_param3_storage <= 32'd0;
        snn_3x2_param3_re <= 1'd0;
        snn_3x2_param4_storage <= 32'd0;
        snn_3x2_param4_re <= 1'd0;
        snn_3x2_param5_storage <= 32'd0;
        snn_3x2_param5_re <= 1'd0;
        snn_3x2_param6_storage <= 32'd0;
        snn_3x2_param6_re <= 1'd0;
        snn_3x2_param7_storage <= 32'd0;
        snn_3x2_param7_re <= 1'd0;
        snn_3x2_param8_storage <= 32'd0;
        snn_3x2_param8_re <= 1'd0;
        snn_3x2_param9_storage <= 32'd0;
        snn_3x2_param9_re <= 1'd0;
        snn_3x2_param10_storage <= 32'd0;
        snn_3x2_param10_re <= 1'd0;
        snn_3x2_param11_storage <= 16'd0;
        snn_3x2_param11_re <= 1'd0;
        snn_3x2_neuron_inst_storage <= 2'd0;
        snn_3x2_neuron_inst_re <= 1'd0;
        snn_3x2_packet_wdata_storage <= 30'd0;
        snn_3x2_packet_wdata_re <= 1'd0;
        snn_3x2_spike_en_storage <= 1'd0;
        snn_3x2_spike_en_re <= 1'd0;
        snn_3x2_load_end_storage <= 1'd0;
        snn_3x2_load_end_re <= 1'd0;
        snn_3x2_tick_ready_storage <= 1'd0;
        snn_3x2_tick_ready_re <= 1'd0;
        snn_3x2_complete_storage <= 1'd0;
        snn_3x2_complete_re <= 1'd0;
        snn_3x2_next_core_en_storage <= 1'd0;
        snn_3x2_next_core_en_re <= 1'd0;
        snn_3x2_grid_state_storage <= 3'd0;
        snn_3x2_grid_state_re <= 1'd0;
        snn_3x2_msb_param_snn_storage <= 16'd0;
        snn_3x2_msb_param_snn_re <= 1'd0;
        snn_3x2_spike_out0_storage <= 32'd0;
        snn_3x2_spike_out0_re <= 1'd0;
        snn_3x2_spike_out1_storage <= 32'd0;
        snn_3x2_spike_out1_re <= 1'd0;
        snn_3x2_spike_out2_storage <= 32'd0;
        snn_3x2_spike_out2_re <= 1'd0;
        snn_3x2_spike_out3_storage <= 32'd0;
        snn_3x2_spike_out3_re <= 1'd0;
        snn_3x2_spike_out4_storage <= 32'd0;
        snn_3x2_spike_out4_re <= 1'd0;
        snn_3x2_spike_out5_storage <= 32'd0;
        snn_3x2_spike_out5_re <= 1'd0;
        snn_3x2_spike_out6_storage <= 32'd0;
        snn_3x2_spike_out6_re <= 1'd0;
        snn_3x2_spike_out7_storage <= 26'd0;
        snn_3x2_spike_out7_re <= 1'd0;
        snn_3x2_spike_out_rinc_storage <= 1'd0;
        snn_3x2_spike_out_rinc_re <= 1'd0;
        snn_3x2_packet_out_storage <= 8'd0;
        snn_3x2_packet_out_re <= 1'd0;
        snn_3x2_packet_out_rinc_storage <= 1'd0;
        snn_3x2_packet_out_rinc_re <= 1'd0;
        snn_3x2_snn_status_re <= 1'd0;
        soclinux_we <= 1'd0;
        socbushandler0_slave_sel_r <= 7'd0;
        socbushandler0_count <= 20'd1000000;
        socbushandler1_grant <= 1'd0;
        socbushandler1_slave_sel_r <= 1'd0;
        socbushandler1_count <= 20'd1000000;
        csr_bankarray_sel_r <= 1'd0;
        soclinux_rs232phytx_state <= 1'd0;
        soclinux_rs232phyrx_state <= 1'd0;
        soclinux_refresher_state <= 2'd0;
        soclinux_bankmachine0_state <= 4'd0;
        soclinux_bankmachine1_state <= 4'd0;
        soclinux_bankmachine2_state <= 4'd0;
        soclinux_bankmachine3_state <= 4'd0;
        soclinux_bankmachine4_state <= 4'd0;
        soclinux_bankmachine5_state <= 4'd0;
        soclinux_bankmachine6_state <= 4'd0;
        soclinux_bankmachine7_state <= 4'd0;
        soclinux_multiplexer_state <= 4'd0;
        soclinux_new_master_wdata_ready0 <= 1'd0;
        soclinux_new_master_wdata_ready1 <= 1'd0;
        soclinux_new_master_rdata_valid0 <= 1'd0;
        soclinux_new_master_rdata_valid1 <= 1'd0;
        soclinux_new_master_rdata_valid2 <= 1'd0;
        soclinux_new_master_rdata_valid3 <= 1'd0;
        soclinux_new_master_rdata_valid4 <= 1'd0;
        soclinux_new_master_rdata_valid5 <= 1'd0;
        soclinux_new_master_rdata_valid6 <= 1'd0;
        soclinux_new_master_rdata_valid7 <= 1'd0;
        soclinux_new_master_rdata_valid8 <= 1'd0;
        soclinux_fullmemorywe_state <= 2'd0;
        soclinux_litedramwishbone2native_state <= 2'd0;
        soclinux_liteethphygmiimii_state <= 2'd0;
        soclinux_liteethmacsramwriter_state <= 2'd0;
        soclinux_liteethmacsramreader_state <= 2'd0;
        soclinux_sdphyinit_state <= 1'd0;
        soclinux_sdphycmdw_state <= 2'd0;
        soclinux_sdphycmdr_state <= 3'd0;
        soclinux_sdphydataw_state <= 3'd0;
        soclinux_sdphydatar_state <= 3'd0;
        soclinux_sdcore_crc16inserter_state <= 1'd0;
        soclinux_sdcore_fsm_state <= 3'd0;
        soclinux_sdblock2memdma_state <= 2'd0;
        soclinux_sdmem2blockdma_fsm_state <= 1'd0;
        soclinux_sdmem2blockdma_resetinserter_state <= 2'd0;
        soclinux_wishbone2csr_state <= 2'd0;
    end
    impl_xilinxmultiregimpl0_regs0 <= serial_rx;
    impl_xilinxmultiregimpl0_regs1 <= impl_xilinxmultiregimpl0_regs0;
    impl_xilinxmultiregimpl1_regs0 <= ethphy_toggle_i;
    impl_xilinxmultiregimpl1_regs1 <= impl_xilinxmultiregimpl1_regs0;
    impl_xilinxmultiregimpl2_regs0 <= ethphy_data_r;
    impl_xilinxmultiregimpl2_regs1 <= impl_xilinxmultiregimpl2_regs0;
    impl_xilinxmultiregimpl4_regs0 <= soclinux_ethmac_tx_cdc_cdc_graycounter1_q;
    impl_xilinxmultiregimpl4_regs1 <= impl_xilinxmultiregimpl4_regs0;
    impl_xilinxmultiregimpl5_regs0 <= soclinux_ethmac_pulsesynchronizer0_toggle_i;
    impl_xilinxmultiregimpl5_regs1 <= impl_xilinxmultiregimpl5_regs0;
    impl_xilinxmultiregimpl6_regs0 <= soclinux_ethmac_pulsesynchronizer1_toggle_i;
    impl_xilinxmultiregimpl6_regs1 <= impl_xilinxmultiregimpl6_regs0;
    impl_xilinxmultiregimpl7_regs0 <= soclinux_ethmac_rx_cdc_cdc_graycounter0_q;
    impl_xilinxmultiregimpl7_regs1 <= impl_xilinxmultiregimpl7_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

BUFG BUFG(
	.I(crg_clkout0),
	.O(crg_clkout_buf0)
);

BUFG BUFG_1(
	.I(crg_clkout1),
	.O(crg_clkout_buf1)
);

BUFG BUFG_2(
	.I(crg_clkout2),
	.O(crg_clkout_buf2)
);

IDELAYCTRL IDELAYCTRL(
	.REFCLK(idelay_clk),
	.RST(crg_ic_reset)
);

//------------------------------------------------------------------------------
// Memory rom: 13012-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] rom[0:13011];
initial begin
	$readmemh("kc705_rom.init", rom);
end
reg [31:0] rom_dat0;
always @(posedge sys_clk) begin
	rom_dat0 <= rom[soclinux_soclinux_adr];
end
assign soclinux_soclinux_dat_r = rom_dat0;


//------------------------------------------------------------------------------
// Memory sram: 393216-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] sram[0:393215];
initial begin
	$readmemh("kc705_sram.init", sram);
end
reg [18:0] sram_adr0;
always @(posedge sys_clk) begin
	if (soclinux_ram_we[0])
		sram[soclinux_ram_adr][7:0] <= soclinux_ram_dat_w[7:0];
	if (soclinux_ram_we[1])
		sram[soclinux_ram_adr][15:8] <= soclinux_ram_dat_w[15:8];
	if (soclinux_ram_we[2])
		sram[soclinux_ram_adr][23:16] <= soclinux_ram_dat_w[23:16];
	if (soclinux_ram_we[3])
		sram[soclinux_ram_adr][31:24] <= soclinux_ram_dat_w[31:24];
	sram_adr0 <= soclinux_ram_adr;
end
assign soclinux_ram_dat_r = sram[sram_adr0];


//------------------------------------------------------------------------------
// Memory mem: 19-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:18];
initial begin
	$readmemh("kc705_mem.init", mem);
end
reg [4:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= csr_bankarray_adr;
end
assign csr_bankarray_dat_r = mem[mem_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (soclinux_uart_tx_fifo_wrport_we)
		storage[soclinux_uart_tx_fifo_wrport_adr] <= soclinux_uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[soclinux_uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (soclinux_uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[soclinux_uart_tx_fifo_rdport_adr];
end
assign soclinux_uart_tx_fifo_wrport_dat_r = storage_dat0;
assign soclinux_uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (soclinux_uart_rx_fifo_wrport_we)
		storage_1[soclinux_uart_rx_fifo_wrport_adr] <= soclinux_uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[soclinux_uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (soclinux_uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[soclinux_uart_rx_fifo_rdport_adr];
end
assign soclinux_uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign soclinux_uart_rx_fifo_rdport_dat_r = storage_1_dat1;


OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(1'd0),
	.D2(1'd1),
	.D3(1'd0),
	.D4(1'd1),
	.D5(1'd0),
	.D6(1'd1),
	.D7(1'd0),
	.D8(1'd1),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_sd_clk_se_nodelay)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_sd_clk_se_delayed),
	.ODATAIN(k7ddrphy_sd_clk_se_nodelay)
);

OBUFDS OBUFDS(
	.I(k7ddrphy_sd_clk_se_delayed),
	.O(ddram_clk_p),
	.OB(ddram_clk_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_1 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_reset_n),
	.D2(k7ddrphy_dfi_p0_reset_n),
	.D3(k7ddrphy_dfi_p1_reset_n),
	.D4(k7ddrphy_dfi_p1_reset_n),
	.D5(k7ddrphy_dfi_p2_reset_n),
	.D6(k7ddrphy_dfi_p2_reset_n),
	.D7(k7ddrphy_dfi_p3_reset_n),
	.D8(k7ddrphy_dfi_p3_reset_n),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq0)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_1 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_reset_n),
	.ODATAIN(k7ddrphy_oq0)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_2 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_cs_n),
	.D2(k7ddrphy_dfi_p0_cs_n),
	.D3(k7ddrphy_dfi_p1_cs_n),
	.D4(k7ddrphy_dfi_p1_cs_n),
	.D5(k7ddrphy_dfi_p2_cs_n),
	.D6(k7ddrphy_dfi_p2_cs_n),
	.D7(k7ddrphy_dfi_p3_cs_n),
	.D8(k7ddrphy_dfi_p3_cs_n),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq1)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_2 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_cs_n),
	.ODATAIN(k7ddrphy_oq1)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_3 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[0]),
	.D2(k7ddrphy_dfi_p0_address[0]),
	.D3(k7ddrphy_dfi_p1_address[0]),
	.D4(k7ddrphy_dfi_p1_address[0]),
	.D5(k7ddrphy_dfi_p2_address[0]),
	.D6(k7ddrphy_dfi_p2_address[0]),
	.D7(k7ddrphy_dfi_p3_address[0]),
	.D8(k7ddrphy_dfi_p3_address[0]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq2)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_3 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[0]),
	.ODATAIN(k7ddrphy_oq2)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_4 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[1]),
	.D2(k7ddrphy_dfi_p0_address[1]),
	.D3(k7ddrphy_dfi_p1_address[1]),
	.D4(k7ddrphy_dfi_p1_address[1]),
	.D5(k7ddrphy_dfi_p2_address[1]),
	.D6(k7ddrphy_dfi_p2_address[1]),
	.D7(k7ddrphy_dfi_p3_address[1]),
	.D8(k7ddrphy_dfi_p3_address[1]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq3)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_4 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[1]),
	.ODATAIN(k7ddrphy_oq3)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_5 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[2]),
	.D2(k7ddrphy_dfi_p0_address[2]),
	.D3(k7ddrphy_dfi_p1_address[2]),
	.D4(k7ddrphy_dfi_p1_address[2]),
	.D5(k7ddrphy_dfi_p2_address[2]),
	.D6(k7ddrphy_dfi_p2_address[2]),
	.D7(k7ddrphy_dfi_p3_address[2]),
	.D8(k7ddrphy_dfi_p3_address[2]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq4)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_5 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[2]),
	.ODATAIN(k7ddrphy_oq4)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_6 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[3]),
	.D2(k7ddrphy_dfi_p0_address[3]),
	.D3(k7ddrphy_dfi_p1_address[3]),
	.D4(k7ddrphy_dfi_p1_address[3]),
	.D5(k7ddrphy_dfi_p2_address[3]),
	.D6(k7ddrphy_dfi_p2_address[3]),
	.D7(k7ddrphy_dfi_p3_address[3]),
	.D8(k7ddrphy_dfi_p3_address[3]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq5)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_6 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[3]),
	.ODATAIN(k7ddrphy_oq5)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_7 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[4]),
	.D2(k7ddrphy_dfi_p0_address[4]),
	.D3(k7ddrphy_dfi_p1_address[4]),
	.D4(k7ddrphy_dfi_p1_address[4]),
	.D5(k7ddrphy_dfi_p2_address[4]),
	.D6(k7ddrphy_dfi_p2_address[4]),
	.D7(k7ddrphy_dfi_p3_address[4]),
	.D8(k7ddrphy_dfi_p3_address[4]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq6)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_7 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[4]),
	.ODATAIN(k7ddrphy_oq6)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_8 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[5]),
	.D2(k7ddrphy_dfi_p0_address[5]),
	.D3(k7ddrphy_dfi_p1_address[5]),
	.D4(k7ddrphy_dfi_p1_address[5]),
	.D5(k7ddrphy_dfi_p2_address[5]),
	.D6(k7ddrphy_dfi_p2_address[5]),
	.D7(k7ddrphy_dfi_p3_address[5]),
	.D8(k7ddrphy_dfi_p3_address[5]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq7)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_8 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[5]),
	.ODATAIN(k7ddrphy_oq7)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_9 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[6]),
	.D2(k7ddrphy_dfi_p0_address[6]),
	.D3(k7ddrphy_dfi_p1_address[6]),
	.D4(k7ddrphy_dfi_p1_address[6]),
	.D5(k7ddrphy_dfi_p2_address[6]),
	.D6(k7ddrphy_dfi_p2_address[6]),
	.D7(k7ddrphy_dfi_p3_address[6]),
	.D8(k7ddrphy_dfi_p3_address[6]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq8)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_9 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[6]),
	.ODATAIN(k7ddrphy_oq8)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_10 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[7]),
	.D2(k7ddrphy_dfi_p0_address[7]),
	.D3(k7ddrphy_dfi_p1_address[7]),
	.D4(k7ddrphy_dfi_p1_address[7]),
	.D5(k7ddrphy_dfi_p2_address[7]),
	.D6(k7ddrphy_dfi_p2_address[7]),
	.D7(k7ddrphy_dfi_p3_address[7]),
	.D8(k7ddrphy_dfi_p3_address[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq9)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_10 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[7]),
	.ODATAIN(k7ddrphy_oq9)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_11 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[8]),
	.D2(k7ddrphy_dfi_p0_address[8]),
	.D3(k7ddrphy_dfi_p1_address[8]),
	.D4(k7ddrphy_dfi_p1_address[8]),
	.D5(k7ddrphy_dfi_p2_address[8]),
	.D6(k7ddrphy_dfi_p2_address[8]),
	.D7(k7ddrphy_dfi_p3_address[8]),
	.D8(k7ddrphy_dfi_p3_address[8]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq10)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_11 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[8]),
	.ODATAIN(k7ddrphy_oq10)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_12 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[9]),
	.D2(k7ddrphy_dfi_p0_address[9]),
	.D3(k7ddrphy_dfi_p1_address[9]),
	.D4(k7ddrphy_dfi_p1_address[9]),
	.D5(k7ddrphy_dfi_p2_address[9]),
	.D6(k7ddrphy_dfi_p2_address[9]),
	.D7(k7ddrphy_dfi_p3_address[9]),
	.D8(k7ddrphy_dfi_p3_address[9]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq11)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_12 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[9]),
	.ODATAIN(k7ddrphy_oq11)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_13 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[10]),
	.D2(k7ddrphy_dfi_p0_address[10]),
	.D3(k7ddrphy_dfi_p1_address[10]),
	.D4(k7ddrphy_dfi_p1_address[10]),
	.D5(k7ddrphy_dfi_p2_address[10]),
	.D6(k7ddrphy_dfi_p2_address[10]),
	.D7(k7ddrphy_dfi_p3_address[10]),
	.D8(k7ddrphy_dfi_p3_address[10]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq12)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_13 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[10]),
	.ODATAIN(k7ddrphy_oq12)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_14 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[11]),
	.D2(k7ddrphy_dfi_p0_address[11]),
	.D3(k7ddrphy_dfi_p1_address[11]),
	.D4(k7ddrphy_dfi_p1_address[11]),
	.D5(k7ddrphy_dfi_p2_address[11]),
	.D6(k7ddrphy_dfi_p2_address[11]),
	.D7(k7ddrphy_dfi_p3_address[11]),
	.D8(k7ddrphy_dfi_p3_address[11]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq13)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_14 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[11]),
	.ODATAIN(k7ddrphy_oq13)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_15 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[12]),
	.D2(k7ddrphy_dfi_p0_address[12]),
	.D3(k7ddrphy_dfi_p1_address[12]),
	.D4(k7ddrphy_dfi_p1_address[12]),
	.D5(k7ddrphy_dfi_p2_address[12]),
	.D6(k7ddrphy_dfi_p2_address[12]),
	.D7(k7ddrphy_dfi_p3_address[12]),
	.D8(k7ddrphy_dfi_p3_address[12]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq14)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_15 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[12]),
	.ODATAIN(k7ddrphy_oq14)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_16 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[13]),
	.D2(k7ddrphy_dfi_p0_address[13]),
	.D3(k7ddrphy_dfi_p1_address[13]),
	.D4(k7ddrphy_dfi_p1_address[13]),
	.D5(k7ddrphy_dfi_p2_address[13]),
	.D6(k7ddrphy_dfi_p2_address[13]),
	.D7(k7ddrphy_dfi_p3_address[13]),
	.D8(k7ddrphy_dfi_p3_address[13]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq15)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_16 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[13]),
	.ODATAIN(k7ddrphy_oq15)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_17 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[14]),
	.D2(k7ddrphy_dfi_p0_address[14]),
	.D3(k7ddrphy_dfi_p1_address[14]),
	.D4(k7ddrphy_dfi_p1_address[14]),
	.D5(k7ddrphy_dfi_p2_address[14]),
	.D6(k7ddrphy_dfi_p2_address[14]),
	.D7(k7ddrphy_dfi_p3_address[14]),
	.D8(k7ddrphy_dfi_p3_address[14]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq16)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_17 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[14]),
	.ODATAIN(k7ddrphy_oq16)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_18 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_address[15]),
	.D2(k7ddrphy_dfi_p0_address[15]),
	.D3(k7ddrphy_dfi_p1_address[15]),
	.D4(k7ddrphy_dfi_p1_address[15]),
	.D5(k7ddrphy_dfi_p2_address[15]),
	.D6(k7ddrphy_dfi_p2_address[15]),
	.D7(k7ddrphy_dfi_p3_address[15]),
	.D8(k7ddrphy_dfi_p3_address[15]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq17)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_18 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_a[15]),
	.ODATAIN(k7ddrphy_oq17)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_19 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_bank[0]),
	.D2(k7ddrphy_dfi_p0_bank[0]),
	.D3(k7ddrphy_dfi_p1_bank[0]),
	.D4(k7ddrphy_dfi_p1_bank[0]),
	.D5(k7ddrphy_dfi_p2_bank[0]),
	.D6(k7ddrphy_dfi_p2_bank[0]),
	.D7(k7ddrphy_dfi_p3_bank[0]),
	.D8(k7ddrphy_dfi_p3_bank[0]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq18)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_19 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_pads_ba[0]),
	.ODATAIN(k7ddrphy_oq18)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_20 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_bank[1]),
	.D2(k7ddrphy_dfi_p0_bank[1]),
	.D3(k7ddrphy_dfi_p1_bank[1]),
	.D4(k7ddrphy_dfi_p1_bank[1]),
	.D5(k7ddrphy_dfi_p2_bank[1]),
	.D6(k7ddrphy_dfi_p2_bank[1]),
	.D7(k7ddrphy_dfi_p3_bank[1]),
	.D8(k7ddrphy_dfi_p3_bank[1]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq19)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_20 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_pads_ba[1]),
	.ODATAIN(k7ddrphy_oq19)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_21 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_bank[2]),
	.D2(k7ddrphy_dfi_p0_bank[2]),
	.D3(k7ddrphy_dfi_p1_bank[2]),
	.D4(k7ddrphy_dfi_p1_bank[2]),
	.D5(k7ddrphy_dfi_p2_bank[2]),
	.D6(k7ddrphy_dfi_p2_bank[2]),
	.D7(k7ddrphy_dfi_p3_bank[2]),
	.D8(k7ddrphy_dfi_p3_bank[2]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq20)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_21 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_pads_ba[2]),
	.ODATAIN(k7ddrphy_oq20)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_22 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_ras_n),
	.D2(k7ddrphy_dfi_p0_ras_n),
	.D3(k7ddrphy_dfi_p1_ras_n),
	.D4(k7ddrphy_dfi_p1_ras_n),
	.D5(k7ddrphy_dfi_p2_ras_n),
	.D6(k7ddrphy_dfi_p2_ras_n),
	.D7(k7ddrphy_dfi_p3_ras_n),
	.D8(k7ddrphy_dfi_p3_ras_n),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq21)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_22 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_ras_n),
	.ODATAIN(k7ddrphy_oq21)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_23 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_cas_n),
	.D2(k7ddrphy_dfi_p0_cas_n),
	.D3(k7ddrphy_dfi_p1_cas_n),
	.D4(k7ddrphy_dfi_p1_cas_n),
	.D5(k7ddrphy_dfi_p2_cas_n),
	.D6(k7ddrphy_dfi_p2_cas_n),
	.D7(k7ddrphy_dfi_p3_cas_n),
	.D8(k7ddrphy_dfi_p3_cas_n),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq22)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_23 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_cas_n),
	.ODATAIN(k7ddrphy_oq22)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_24 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_we_n),
	.D2(k7ddrphy_dfi_p0_we_n),
	.D3(k7ddrphy_dfi_p1_we_n),
	.D4(k7ddrphy_dfi_p1_we_n),
	.D5(k7ddrphy_dfi_p2_we_n),
	.D6(k7ddrphy_dfi_p2_we_n),
	.D7(k7ddrphy_dfi_p3_we_n),
	.D8(k7ddrphy_dfi_p3_we_n),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq23)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_24 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_we_n),
	.ODATAIN(k7ddrphy_oq23)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_25 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_cke),
	.D2(k7ddrphy_dfi_p0_cke),
	.D3(k7ddrphy_dfi_p1_cke),
	.D4(k7ddrphy_dfi_p1_cke),
	.D5(k7ddrphy_dfi_p2_cke),
	.D6(k7ddrphy_dfi_p2_cke),
	.D7(k7ddrphy_dfi_p3_cke),
	.D8(k7ddrphy_dfi_p3_cke),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq24)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_25 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_cke),
	.ODATAIN(k7ddrphy_oq24)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_26 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_dfi_p0_odt),
	.D2(k7ddrphy_dfi_p0_odt),
	.D3(k7ddrphy_dfi_p1_odt),
	.D4(k7ddrphy_dfi_p1_odt),
	.D5(k7ddrphy_dfi_p2_odt),
	.D6(k7ddrphy_dfi_p2_odt),
	.D7(k7ddrphy_dfi_p3_odt),
	.D8(k7ddrphy_dfi_p3_odt),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_oq25)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_26 (
	.C(sys_clk),
	.CE(k7ddrphy_cdly_inc_re),
	.INC(1'd1),
	.LD(((k7ddrphy_cdly_rst_re | k7ddrphy_rst_storage) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_odt),
	.ODATAIN(k7ddrphy_oq25)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_27 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip00[0]),
	.D2(k7ddrphy_bitslip00[1]),
	.D3(k7ddrphy_bitslip00[2]),
	.D4(k7ddrphy_bitslip00[3]),
	.D5(k7ddrphy_bitslip00[4]),
	.D6(k7ddrphy_bitslip00[5]),
	.D7(k7ddrphy_bitslip00[6]),
	.D8(k7ddrphy_bitslip00[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(k7ddrphy_dqs_o_no_delay0),
	.OQ(k7ddrphy0),
	.TQ(k7ddrphy_dqs_t0)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(3'd6),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_27 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dqs_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dqs_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dqs_o_delayed0),
	.ODATAIN(k7ddrphy_dqs_o_no_delay0)
);

IOBUFDS IOBUFDS(
	.I(k7ddrphy_dqs_o_delayed0),
	.T(k7ddrphy_dqs_t0),
	.IO(ddram_dqs_p[0]),
	.IOB(ddram_dqs_n[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_28 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip10[0]),
	.D2(k7ddrphy_bitslip10[1]),
	.D3(k7ddrphy_bitslip10[2]),
	.D4(k7ddrphy_bitslip10[3]),
	.D5(k7ddrphy_bitslip10[4]),
	.D6(k7ddrphy_bitslip10[5]),
	.D7(k7ddrphy_bitslip10[6]),
	.D8(k7ddrphy_bitslip10[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(k7ddrphy_dqs_o_no_delay1),
	.OQ(k7ddrphy1),
	.TQ(k7ddrphy_dqs_t1)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(3'd6),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_28 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dqs_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dqs_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dqs_o_delayed1),
	.ODATAIN(k7ddrphy_dqs_o_no_delay1)
);

IOBUFDS IOBUFDS_1(
	.I(k7ddrphy_dqs_o_delayed1),
	.T(k7ddrphy_dqs_t1),
	.IO(ddram_dqs_p[1]),
	.IOB(ddram_dqs_n[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_29 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip20[0]),
	.D2(k7ddrphy_bitslip20[1]),
	.D3(k7ddrphy_bitslip20[2]),
	.D4(k7ddrphy_bitslip20[3]),
	.D5(k7ddrphy_bitslip20[4]),
	.D6(k7ddrphy_bitslip20[5]),
	.D7(k7ddrphy_bitslip20[6]),
	.D8(k7ddrphy_bitslip20[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(k7ddrphy_dqs_o_no_delay2),
	.OQ(k7ddrphy2),
	.TQ(k7ddrphy_dqs_t2)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(3'd6),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_29 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dqs_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dqs_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dqs_o_delayed2),
	.ODATAIN(k7ddrphy_dqs_o_no_delay2)
);

IOBUFDS IOBUFDS_2(
	.I(k7ddrphy_dqs_o_delayed2),
	.T(k7ddrphy_dqs_t2),
	.IO(ddram_dqs_p[2]),
	.IOB(ddram_dqs_n[2])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_30 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip30[0]),
	.D2(k7ddrphy_bitslip30[1]),
	.D3(k7ddrphy_bitslip30[2]),
	.D4(k7ddrphy_bitslip30[3]),
	.D5(k7ddrphy_bitslip30[4]),
	.D6(k7ddrphy_bitslip30[5]),
	.D7(k7ddrphy_bitslip30[6]),
	.D8(k7ddrphy_bitslip30[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(k7ddrphy_dqs_o_no_delay3),
	.OQ(k7ddrphy3),
	.TQ(k7ddrphy_dqs_t3)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(3'd6),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_30 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dqs_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dqs_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dqs_o_delayed3),
	.ODATAIN(k7ddrphy_dqs_o_no_delay3)
);

IOBUFDS IOBUFDS_3(
	.I(k7ddrphy_dqs_o_delayed3),
	.T(k7ddrphy_dqs_t3),
	.IO(ddram_dqs_p[3]),
	.IOB(ddram_dqs_n[3])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_31 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip40[0]),
	.D2(k7ddrphy_bitslip40[1]),
	.D3(k7ddrphy_bitslip40[2]),
	.D4(k7ddrphy_bitslip40[3]),
	.D5(k7ddrphy_bitslip40[4]),
	.D6(k7ddrphy_bitslip40[5]),
	.D7(k7ddrphy_bitslip40[6]),
	.D8(k7ddrphy_bitslip40[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(k7ddrphy_dqs_o_no_delay4),
	.OQ(k7ddrphy4),
	.TQ(k7ddrphy_dqs_t4)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(3'd6),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_31 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dqs_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dqs_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dqs_o_delayed4),
	.ODATAIN(k7ddrphy_dqs_o_no_delay4)
);

IOBUFDS IOBUFDS_4(
	.I(k7ddrphy_dqs_o_delayed4),
	.T(k7ddrphy_dqs_t4),
	.IO(ddram_dqs_p[4]),
	.IOB(ddram_dqs_n[4])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_32 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip50[0]),
	.D2(k7ddrphy_bitslip50[1]),
	.D3(k7ddrphy_bitslip50[2]),
	.D4(k7ddrphy_bitslip50[3]),
	.D5(k7ddrphy_bitslip50[4]),
	.D6(k7ddrphy_bitslip50[5]),
	.D7(k7ddrphy_bitslip50[6]),
	.D8(k7ddrphy_bitslip50[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(k7ddrphy_dqs_o_no_delay5),
	.OQ(k7ddrphy5),
	.TQ(k7ddrphy_dqs_t5)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(3'd6),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_32 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dqs_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dqs_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dqs_o_delayed5),
	.ODATAIN(k7ddrphy_dqs_o_no_delay5)
);

IOBUFDS IOBUFDS_5(
	.I(k7ddrphy_dqs_o_delayed5),
	.T(k7ddrphy_dqs_t5),
	.IO(ddram_dqs_p[5]),
	.IOB(ddram_dqs_n[5])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_33 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip60[0]),
	.D2(k7ddrphy_bitslip60[1]),
	.D3(k7ddrphy_bitslip60[2]),
	.D4(k7ddrphy_bitslip60[3]),
	.D5(k7ddrphy_bitslip60[4]),
	.D6(k7ddrphy_bitslip60[5]),
	.D7(k7ddrphy_bitslip60[6]),
	.D8(k7ddrphy_bitslip60[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(k7ddrphy_dqs_o_no_delay6),
	.OQ(k7ddrphy6),
	.TQ(k7ddrphy_dqs_t6)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(3'd6),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_33 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dqs_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dqs_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dqs_o_delayed6),
	.ODATAIN(k7ddrphy_dqs_o_no_delay6)
);

IOBUFDS IOBUFDS_6(
	.I(k7ddrphy_dqs_o_delayed6),
	.T(k7ddrphy_dqs_t6),
	.IO(ddram_dqs_p[6]),
	.IOB(ddram_dqs_n[6])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_34 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip70[0]),
	.D2(k7ddrphy_bitslip70[1]),
	.D3(k7ddrphy_bitslip70[2]),
	.D4(k7ddrphy_bitslip70[3]),
	.D5(k7ddrphy_bitslip70[4]),
	.D6(k7ddrphy_bitslip70[5]),
	.D7(k7ddrphy_bitslip70[6]),
	.D8(k7ddrphy_bitslip70[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(k7ddrphy_dqs_o_no_delay7),
	.OQ(k7ddrphy7),
	.TQ(k7ddrphy_dqs_t7)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(3'd6),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_34 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dqs_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dqs_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dqs_o_delayed7),
	.ODATAIN(k7ddrphy_dqs_o_no_delay7)
);

IOBUFDS IOBUFDS_7(
	.I(k7ddrphy_dqs_o_delayed7),
	.T(k7ddrphy_dqs_t7),
	.IO(ddram_dqs_p[7]),
	.IOB(ddram_dqs_n[7])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_35 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip01[0]),
	.D2(k7ddrphy_bitslip01[1]),
	.D3(k7ddrphy_bitslip01[2]),
	.D4(k7ddrphy_bitslip01[3]),
	.D5(k7ddrphy_bitslip01[4]),
	.D6(k7ddrphy_bitslip01[5]),
	.D7(k7ddrphy_bitslip01[6]),
	.D8(k7ddrphy_bitslip01[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_dm_o_nodelay0)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_35 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_dm[0]),
	.ODATAIN(k7ddrphy_dm_o_nodelay0)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_36 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip11[0]),
	.D2(k7ddrphy_bitslip11[1]),
	.D3(k7ddrphy_bitslip11[2]),
	.D4(k7ddrphy_bitslip11[3]),
	.D5(k7ddrphy_bitslip11[4]),
	.D6(k7ddrphy_bitslip11[5]),
	.D7(k7ddrphy_bitslip11[6]),
	.D8(k7ddrphy_bitslip11[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_dm_o_nodelay1)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_36 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_dm[1]),
	.ODATAIN(k7ddrphy_dm_o_nodelay1)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_37 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip21[0]),
	.D2(k7ddrphy_bitslip21[1]),
	.D3(k7ddrphy_bitslip21[2]),
	.D4(k7ddrphy_bitslip21[3]),
	.D5(k7ddrphy_bitslip21[4]),
	.D6(k7ddrphy_bitslip21[5]),
	.D7(k7ddrphy_bitslip21[6]),
	.D8(k7ddrphy_bitslip21[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_dm_o_nodelay2)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_37 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_dm[2]),
	.ODATAIN(k7ddrphy_dm_o_nodelay2)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_38 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip31[0]),
	.D2(k7ddrphy_bitslip31[1]),
	.D3(k7ddrphy_bitslip31[2]),
	.D4(k7ddrphy_bitslip31[3]),
	.D5(k7ddrphy_bitslip31[4]),
	.D6(k7ddrphy_bitslip31[5]),
	.D7(k7ddrphy_bitslip31[6]),
	.D8(k7ddrphy_bitslip31[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_dm_o_nodelay3)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_38 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_dm[3]),
	.ODATAIN(k7ddrphy_dm_o_nodelay3)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_39 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip41[0]),
	.D2(k7ddrphy_bitslip41[1]),
	.D3(k7ddrphy_bitslip41[2]),
	.D4(k7ddrphy_bitslip41[3]),
	.D5(k7ddrphy_bitslip41[4]),
	.D6(k7ddrphy_bitslip41[5]),
	.D7(k7ddrphy_bitslip41[6]),
	.D8(k7ddrphy_bitslip41[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_dm_o_nodelay4)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_39 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_dm[4]),
	.ODATAIN(k7ddrphy_dm_o_nodelay4)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_40 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip51[0]),
	.D2(k7ddrphy_bitslip51[1]),
	.D3(k7ddrphy_bitslip51[2]),
	.D4(k7ddrphy_bitslip51[3]),
	.D5(k7ddrphy_bitslip51[4]),
	.D6(k7ddrphy_bitslip51[5]),
	.D7(k7ddrphy_bitslip51[6]),
	.D8(k7ddrphy_bitslip51[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_dm_o_nodelay5)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_40 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_dm[5]),
	.ODATAIN(k7ddrphy_dm_o_nodelay5)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_41 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip61[0]),
	.D2(k7ddrphy_bitslip61[1]),
	.D3(k7ddrphy_bitslip61[2]),
	.D4(k7ddrphy_bitslip61[3]),
	.D5(k7ddrphy_bitslip61[4]),
	.D6(k7ddrphy_bitslip61[5]),
	.D7(k7ddrphy_bitslip61[6]),
	.D8(k7ddrphy_bitslip61[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_dm_o_nodelay6)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_41 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_dm[6]),
	.ODATAIN(k7ddrphy_dm_o_nodelay6)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_42 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip71[0]),
	.D2(k7ddrphy_bitslip71[1]),
	.D3(k7ddrphy_bitslip71[2]),
	.D4(k7ddrphy_bitslip71[3]),
	.D5(k7ddrphy_bitslip71[4]),
	.D6(k7ddrphy_bitslip71[5]),
	.D7(k7ddrphy_bitslip71[6]),
	.D8(k7ddrphy_bitslip71[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.OQ(k7ddrphy_dm_o_nodelay7)
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_42 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(ddram_dm[7]),
	.ODATAIN(k7ddrphy_dm_o_nodelay7)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_43 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip02[0]),
	.D2(k7ddrphy_bitslip02[1]),
	.D3(k7ddrphy_bitslip02[2]),
	.D4(k7ddrphy_bitslip02[3]),
	.D5(k7ddrphy_bitslip02[4]),
	.D6(k7ddrphy_bitslip02[5]),
	.D7(k7ddrphy_bitslip02[6]),
	.D8(k7ddrphy_bitslip02[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay0),
	.TQ(k7ddrphy_dq_t0)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed0),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip03[7]),
	.Q2(k7ddrphy_bitslip03[6]),
	.Q3(k7ddrphy_bitslip03[5]),
	.Q4(k7ddrphy_bitslip03[4]),
	.Q5(k7ddrphy_bitslip03[3]),
	.Q6(k7ddrphy_bitslip03[2]),
	.Q7(k7ddrphy_bitslip03[1]),
	.Q8(k7ddrphy_bitslip03[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_43 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed0),
	.ODATAIN(k7ddrphy_dq_o_nodelay0)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay0),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed0)
);

IOBUF IOBUF(
	.I(k7ddrphy_dq_o_delayed0),
	.T(k7ddrphy_dq_t0),
	.IO(ddram_dq[0]),
	.O(k7ddrphy_dq_i_nodelay0)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_44 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip12[0]),
	.D2(k7ddrphy_bitslip12[1]),
	.D3(k7ddrphy_bitslip12[2]),
	.D4(k7ddrphy_bitslip12[3]),
	.D5(k7ddrphy_bitslip12[4]),
	.D6(k7ddrphy_bitslip12[5]),
	.D7(k7ddrphy_bitslip12[6]),
	.D8(k7ddrphy_bitslip12[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay1),
	.TQ(k7ddrphy_dq_t1)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_1 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip13[7]),
	.Q2(k7ddrphy_bitslip13[6]),
	.Q3(k7ddrphy_bitslip13[5]),
	.Q4(k7ddrphy_bitslip13[4]),
	.Q5(k7ddrphy_bitslip13[3]),
	.Q6(k7ddrphy_bitslip13[2]),
	.Q7(k7ddrphy_bitslip13[1]),
	.Q8(k7ddrphy_bitslip13[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_44 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed1),
	.ODATAIN(k7ddrphy_dq_o_nodelay1)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_1 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay1),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed1)
);

IOBUF IOBUF_1(
	.I(k7ddrphy_dq_o_delayed1),
	.T(k7ddrphy_dq_t1),
	.IO(ddram_dq[1]),
	.O(k7ddrphy_dq_i_nodelay1)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_45 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip22[0]),
	.D2(k7ddrphy_bitslip22[1]),
	.D3(k7ddrphy_bitslip22[2]),
	.D4(k7ddrphy_bitslip22[3]),
	.D5(k7ddrphy_bitslip22[4]),
	.D6(k7ddrphy_bitslip22[5]),
	.D7(k7ddrphy_bitslip22[6]),
	.D8(k7ddrphy_bitslip22[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay2),
	.TQ(k7ddrphy_dq_t2)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_2 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed2),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip23[7]),
	.Q2(k7ddrphy_bitslip23[6]),
	.Q3(k7ddrphy_bitslip23[5]),
	.Q4(k7ddrphy_bitslip23[4]),
	.Q5(k7ddrphy_bitslip23[3]),
	.Q6(k7ddrphy_bitslip23[2]),
	.Q7(k7ddrphy_bitslip23[1]),
	.Q8(k7ddrphy_bitslip23[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_45 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed2),
	.ODATAIN(k7ddrphy_dq_o_nodelay2)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_2 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay2),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed2)
);

IOBUF IOBUF_2(
	.I(k7ddrphy_dq_o_delayed2),
	.T(k7ddrphy_dq_t2),
	.IO(ddram_dq[2]),
	.O(k7ddrphy_dq_i_nodelay2)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_46 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip32[0]),
	.D2(k7ddrphy_bitslip32[1]),
	.D3(k7ddrphy_bitslip32[2]),
	.D4(k7ddrphy_bitslip32[3]),
	.D5(k7ddrphy_bitslip32[4]),
	.D6(k7ddrphy_bitslip32[5]),
	.D7(k7ddrphy_bitslip32[6]),
	.D8(k7ddrphy_bitslip32[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay3),
	.TQ(k7ddrphy_dq_t3)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_3 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed3),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip33[7]),
	.Q2(k7ddrphy_bitslip33[6]),
	.Q3(k7ddrphy_bitslip33[5]),
	.Q4(k7ddrphy_bitslip33[4]),
	.Q5(k7ddrphy_bitslip33[3]),
	.Q6(k7ddrphy_bitslip33[2]),
	.Q7(k7ddrphy_bitslip33[1]),
	.Q8(k7ddrphy_bitslip33[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_46 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed3),
	.ODATAIN(k7ddrphy_dq_o_nodelay3)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_3 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay3),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed3)
);

IOBUF IOBUF_3(
	.I(k7ddrphy_dq_o_delayed3),
	.T(k7ddrphy_dq_t3),
	.IO(ddram_dq[3]),
	.O(k7ddrphy_dq_i_nodelay3)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_47 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip42[0]),
	.D2(k7ddrphy_bitslip42[1]),
	.D3(k7ddrphy_bitslip42[2]),
	.D4(k7ddrphy_bitslip42[3]),
	.D5(k7ddrphy_bitslip42[4]),
	.D6(k7ddrphy_bitslip42[5]),
	.D7(k7ddrphy_bitslip42[6]),
	.D8(k7ddrphy_bitslip42[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay4),
	.TQ(k7ddrphy_dq_t4)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_4 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed4),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip43[7]),
	.Q2(k7ddrphy_bitslip43[6]),
	.Q3(k7ddrphy_bitslip43[5]),
	.Q4(k7ddrphy_bitslip43[4]),
	.Q5(k7ddrphy_bitslip43[3]),
	.Q6(k7ddrphy_bitslip43[2]),
	.Q7(k7ddrphy_bitslip43[1]),
	.Q8(k7ddrphy_bitslip43[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_47 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed4),
	.ODATAIN(k7ddrphy_dq_o_nodelay4)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_4 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay4),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed4)
);

IOBUF IOBUF_4(
	.I(k7ddrphy_dq_o_delayed4),
	.T(k7ddrphy_dq_t4),
	.IO(ddram_dq[4]),
	.O(k7ddrphy_dq_i_nodelay4)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_48 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip52[0]),
	.D2(k7ddrphy_bitslip52[1]),
	.D3(k7ddrphy_bitslip52[2]),
	.D4(k7ddrphy_bitslip52[3]),
	.D5(k7ddrphy_bitslip52[4]),
	.D6(k7ddrphy_bitslip52[5]),
	.D7(k7ddrphy_bitslip52[6]),
	.D8(k7ddrphy_bitslip52[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay5),
	.TQ(k7ddrphy_dq_t5)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_5 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed5),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip53[7]),
	.Q2(k7ddrphy_bitslip53[6]),
	.Q3(k7ddrphy_bitslip53[5]),
	.Q4(k7ddrphy_bitslip53[4]),
	.Q5(k7ddrphy_bitslip53[3]),
	.Q6(k7ddrphy_bitslip53[2]),
	.Q7(k7ddrphy_bitslip53[1]),
	.Q8(k7ddrphy_bitslip53[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_48 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed5),
	.ODATAIN(k7ddrphy_dq_o_nodelay5)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_5 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay5),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed5)
);

IOBUF IOBUF_5(
	.I(k7ddrphy_dq_o_delayed5),
	.T(k7ddrphy_dq_t5),
	.IO(ddram_dq[5]),
	.O(k7ddrphy_dq_i_nodelay5)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_49 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip62[0]),
	.D2(k7ddrphy_bitslip62[1]),
	.D3(k7ddrphy_bitslip62[2]),
	.D4(k7ddrphy_bitslip62[3]),
	.D5(k7ddrphy_bitslip62[4]),
	.D6(k7ddrphy_bitslip62[5]),
	.D7(k7ddrphy_bitslip62[6]),
	.D8(k7ddrphy_bitslip62[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay6),
	.TQ(k7ddrphy_dq_t6)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_6 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed6),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip63[7]),
	.Q2(k7ddrphy_bitslip63[6]),
	.Q3(k7ddrphy_bitslip63[5]),
	.Q4(k7ddrphy_bitslip63[4]),
	.Q5(k7ddrphy_bitslip63[3]),
	.Q6(k7ddrphy_bitslip63[2]),
	.Q7(k7ddrphy_bitslip63[1]),
	.Q8(k7ddrphy_bitslip63[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_49 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed6),
	.ODATAIN(k7ddrphy_dq_o_nodelay6)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_6 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay6),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed6)
);

IOBUF IOBUF_6(
	.I(k7ddrphy_dq_o_delayed6),
	.T(k7ddrphy_dq_t6),
	.IO(ddram_dq[6]),
	.O(k7ddrphy_dq_i_nodelay6)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_50 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip72[0]),
	.D2(k7ddrphy_bitslip72[1]),
	.D3(k7ddrphy_bitslip72[2]),
	.D4(k7ddrphy_bitslip72[3]),
	.D5(k7ddrphy_bitslip72[4]),
	.D6(k7ddrphy_bitslip72[5]),
	.D7(k7ddrphy_bitslip72[6]),
	.D8(k7ddrphy_bitslip72[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay7),
	.TQ(k7ddrphy_dq_t7)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_7 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed7),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip73[7]),
	.Q2(k7ddrphy_bitslip73[6]),
	.Q3(k7ddrphy_bitslip73[5]),
	.Q4(k7ddrphy_bitslip73[4]),
	.Q5(k7ddrphy_bitslip73[3]),
	.Q6(k7ddrphy_bitslip73[2]),
	.Q7(k7ddrphy_bitslip73[1]),
	.Q8(k7ddrphy_bitslip73[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_50 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed7),
	.ODATAIN(k7ddrphy_dq_o_nodelay7)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_7 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay7),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[0] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed7)
);

IOBUF IOBUF_7(
	.I(k7ddrphy_dq_o_delayed7),
	.T(k7ddrphy_dq_t7),
	.IO(ddram_dq[7]),
	.O(k7ddrphy_dq_i_nodelay7)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_51 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip80[0]),
	.D2(k7ddrphy_bitslip80[1]),
	.D3(k7ddrphy_bitslip80[2]),
	.D4(k7ddrphy_bitslip80[3]),
	.D5(k7ddrphy_bitslip80[4]),
	.D6(k7ddrphy_bitslip80[5]),
	.D7(k7ddrphy_bitslip80[6]),
	.D8(k7ddrphy_bitslip80[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay8),
	.TQ(k7ddrphy_dq_t8)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_8 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed8),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip81[7]),
	.Q2(k7ddrphy_bitslip81[6]),
	.Q3(k7ddrphy_bitslip81[5]),
	.Q4(k7ddrphy_bitslip81[4]),
	.Q5(k7ddrphy_bitslip81[3]),
	.Q6(k7ddrphy_bitslip81[2]),
	.Q7(k7ddrphy_bitslip81[1]),
	.Q8(k7ddrphy_bitslip81[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_51 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed8),
	.ODATAIN(k7ddrphy_dq_o_nodelay8)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_8 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay8),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed8)
);

IOBUF IOBUF_8(
	.I(k7ddrphy_dq_o_delayed8),
	.T(k7ddrphy_dq_t8),
	.IO(ddram_dq[8]),
	.O(k7ddrphy_dq_i_nodelay8)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_52 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip90[0]),
	.D2(k7ddrphy_bitslip90[1]),
	.D3(k7ddrphy_bitslip90[2]),
	.D4(k7ddrphy_bitslip90[3]),
	.D5(k7ddrphy_bitslip90[4]),
	.D6(k7ddrphy_bitslip90[5]),
	.D7(k7ddrphy_bitslip90[6]),
	.D8(k7ddrphy_bitslip90[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay9),
	.TQ(k7ddrphy_dq_t9)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_9 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed9),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip91[7]),
	.Q2(k7ddrphy_bitslip91[6]),
	.Q3(k7ddrphy_bitslip91[5]),
	.Q4(k7ddrphy_bitslip91[4]),
	.Q5(k7ddrphy_bitslip91[3]),
	.Q6(k7ddrphy_bitslip91[2]),
	.Q7(k7ddrphy_bitslip91[1]),
	.Q8(k7ddrphy_bitslip91[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_52 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed9),
	.ODATAIN(k7ddrphy_dq_o_nodelay9)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_9 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay9),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed9)
);

IOBUF IOBUF_9(
	.I(k7ddrphy_dq_o_delayed9),
	.T(k7ddrphy_dq_t9),
	.IO(ddram_dq[9]),
	.O(k7ddrphy_dq_i_nodelay9)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_53 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip100[0]),
	.D2(k7ddrphy_bitslip100[1]),
	.D3(k7ddrphy_bitslip100[2]),
	.D4(k7ddrphy_bitslip100[3]),
	.D5(k7ddrphy_bitslip100[4]),
	.D6(k7ddrphy_bitslip100[5]),
	.D7(k7ddrphy_bitslip100[6]),
	.D8(k7ddrphy_bitslip100[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay10),
	.TQ(k7ddrphy_dq_t10)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_10 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed10),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip101[7]),
	.Q2(k7ddrphy_bitslip101[6]),
	.Q3(k7ddrphy_bitslip101[5]),
	.Q4(k7ddrphy_bitslip101[4]),
	.Q5(k7ddrphy_bitslip101[3]),
	.Q6(k7ddrphy_bitslip101[2]),
	.Q7(k7ddrphy_bitslip101[1]),
	.Q8(k7ddrphy_bitslip101[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_53 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed10),
	.ODATAIN(k7ddrphy_dq_o_nodelay10)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_10 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay10),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed10)
);

IOBUF IOBUF_10(
	.I(k7ddrphy_dq_o_delayed10),
	.T(k7ddrphy_dq_t10),
	.IO(ddram_dq[10]),
	.O(k7ddrphy_dq_i_nodelay10)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_54 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip110[0]),
	.D2(k7ddrphy_bitslip110[1]),
	.D3(k7ddrphy_bitslip110[2]),
	.D4(k7ddrphy_bitslip110[3]),
	.D5(k7ddrphy_bitslip110[4]),
	.D6(k7ddrphy_bitslip110[5]),
	.D7(k7ddrphy_bitslip110[6]),
	.D8(k7ddrphy_bitslip110[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay11),
	.TQ(k7ddrphy_dq_t11)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_11 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed11),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip111[7]),
	.Q2(k7ddrphy_bitslip111[6]),
	.Q3(k7ddrphy_bitslip111[5]),
	.Q4(k7ddrphy_bitslip111[4]),
	.Q5(k7ddrphy_bitslip111[3]),
	.Q6(k7ddrphy_bitslip111[2]),
	.Q7(k7ddrphy_bitslip111[1]),
	.Q8(k7ddrphy_bitslip111[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_54 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed11),
	.ODATAIN(k7ddrphy_dq_o_nodelay11)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_11 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay11),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed11)
);

IOBUF IOBUF_11(
	.I(k7ddrphy_dq_o_delayed11),
	.T(k7ddrphy_dq_t11),
	.IO(ddram_dq[11]),
	.O(k7ddrphy_dq_i_nodelay11)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_55 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip120[0]),
	.D2(k7ddrphy_bitslip120[1]),
	.D3(k7ddrphy_bitslip120[2]),
	.D4(k7ddrphy_bitslip120[3]),
	.D5(k7ddrphy_bitslip120[4]),
	.D6(k7ddrphy_bitslip120[5]),
	.D7(k7ddrphy_bitslip120[6]),
	.D8(k7ddrphy_bitslip120[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay12),
	.TQ(k7ddrphy_dq_t12)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_12 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed12),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip121[7]),
	.Q2(k7ddrphy_bitslip121[6]),
	.Q3(k7ddrphy_bitslip121[5]),
	.Q4(k7ddrphy_bitslip121[4]),
	.Q5(k7ddrphy_bitslip121[3]),
	.Q6(k7ddrphy_bitslip121[2]),
	.Q7(k7ddrphy_bitslip121[1]),
	.Q8(k7ddrphy_bitslip121[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_55 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed12),
	.ODATAIN(k7ddrphy_dq_o_nodelay12)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_12 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay12),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed12)
);

IOBUF IOBUF_12(
	.I(k7ddrphy_dq_o_delayed12),
	.T(k7ddrphy_dq_t12),
	.IO(ddram_dq[12]),
	.O(k7ddrphy_dq_i_nodelay12)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_56 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip130[0]),
	.D2(k7ddrphy_bitslip130[1]),
	.D3(k7ddrphy_bitslip130[2]),
	.D4(k7ddrphy_bitslip130[3]),
	.D5(k7ddrphy_bitslip130[4]),
	.D6(k7ddrphy_bitslip130[5]),
	.D7(k7ddrphy_bitslip130[6]),
	.D8(k7ddrphy_bitslip130[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay13),
	.TQ(k7ddrphy_dq_t13)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_13 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed13),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip131[7]),
	.Q2(k7ddrphy_bitslip131[6]),
	.Q3(k7ddrphy_bitslip131[5]),
	.Q4(k7ddrphy_bitslip131[4]),
	.Q5(k7ddrphy_bitslip131[3]),
	.Q6(k7ddrphy_bitslip131[2]),
	.Q7(k7ddrphy_bitslip131[1]),
	.Q8(k7ddrphy_bitslip131[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_56 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed13),
	.ODATAIN(k7ddrphy_dq_o_nodelay13)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_13 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay13),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed13)
);

IOBUF IOBUF_13(
	.I(k7ddrphy_dq_o_delayed13),
	.T(k7ddrphy_dq_t13),
	.IO(ddram_dq[13]),
	.O(k7ddrphy_dq_i_nodelay13)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_57 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip140[0]),
	.D2(k7ddrphy_bitslip140[1]),
	.D3(k7ddrphy_bitslip140[2]),
	.D4(k7ddrphy_bitslip140[3]),
	.D5(k7ddrphy_bitslip140[4]),
	.D6(k7ddrphy_bitslip140[5]),
	.D7(k7ddrphy_bitslip140[6]),
	.D8(k7ddrphy_bitslip140[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay14),
	.TQ(k7ddrphy_dq_t14)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_14 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed14),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip141[7]),
	.Q2(k7ddrphy_bitslip141[6]),
	.Q3(k7ddrphy_bitslip141[5]),
	.Q4(k7ddrphy_bitslip141[4]),
	.Q5(k7ddrphy_bitslip141[3]),
	.Q6(k7ddrphy_bitslip141[2]),
	.Q7(k7ddrphy_bitslip141[1]),
	.Q8(k7ddrphy_bitslip141[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_57 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed14),
	.ODATAIN(k7ddrphy_dq_o_nodelay14)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_14 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay14),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed14)
);

IOBUF IOBUF_14(
	.I(k7ddrphy_dq_o_delayed14),
	.T(k7ddrphy_dq_t14),
	.IO(ddram_dq[14]),
	.O(k7ddrphy_dq_i_nodelay14)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_58 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip150[0]),
	.D2(k7ddrphy_bitslip150[1]),
	.D3(k7ddrphy_bitslip150[2]),
	.D4(k7ddrphy_bitslip150[3]),
	.D5(k7ddrphy_bitslip150[4]),
	.D6(k7ddrphy_bitslip150[5]),
	.D7(k7ddrphy_bitslip150[6]),
	.D8(k7ddrphy_bitslip150[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay15),
	.TQ(k7ddrphy_dq_t15)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_15 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed15),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip151[7]),
	.Q2(k7ddrphy_bitslip151[6]),
	.Q3(k7ddrphy_bitslip151[5]),
	.Q4(k7ddrphy_bitslip151[4]),
	.Q5(k7ddrphy_bitslip151[3]),
	.Q6(k7ddrphy_bitslip151[2]),
	.Q7(k7ddrphy_bitslip151[1]),
	.Q8(k7ddrphy_bitslip151[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_58 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed15),
	.ODATAIN(k7ddrphy_dq_o_nodelay15)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_15 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay15),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[1] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed15)
);

IOBUF IOBUF_15(
	.I(k7ddrphy_dq_o_delayed15),
	.T(k7ddrphy_dq_t15),
	.IO(ddram_dq[15]),
	.O(k7ddrphy_dq_i_nodelay15)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_59 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip160[0]),
	.D2(k7ddrphy_bitslip160[1]),
	.D3(k7ddrphy_bitslip160[2]),
	.D4(k7ddrphy_bitslip160[3]),
	.D5(k7ddrphy_bitslip160[4]),
	.D6(k7ddrphy_bitslip160[5]),
	.D7(k7ddrphy_bitslip160[6]),
	.D8(k7ddrphy_bitslip160[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay16),
	.TQ(k7ddrphy_dq_t16)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_16 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed16),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip161[7]),
	.Q2(k7ddrphy_bitslip161[6]),
	.Q3(k7ddrphy_bitslip161[5]),
	.Q4(k7ddrphy_bitslip161[4]),
	.Q5(k7ddrphy_bitslip161[3]),
	.Q6(k7ddrphy_bitslip161[2]),
	.Q7(k7ddrphy_bitslip161[1]),
	.Q8(k7ddrphy_bitslip161[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_59 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed16),
	.ODATAIN(k7ddrphy_dq_o_nodelay16)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_16 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay16),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed16)
);

IOBUF IOBUF_16(
	.I(k7ddrphy_dq_o_delayed16),
	.T(k7ddrphy_dq_t16),
	.IO(ddram_dq[16]),
	.O(k7ddrphy_dq_i_nodelay16)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_60 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip170[0]),
	.D2(k7ddrphy_bitslip170[1]),
	.D3(k7ddrphy_bitslip170[2]),
	.D4(k7ddrphy_bitslip170[3]),
	.D5(k7ddrphy_bitslip170[4]),
	.D6(k7ddrphy_bitslip170[5]),
	.D7(k7ddrphy_bitslip170[6]),
	.D8(k7ddrphy_bitslip170[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay17),
	.TQ(k7ddrphy_dq_t17)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_17 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed17),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip171[7]),
	.Q2(k7ddrphy_bitslip171[6]),
	.Q3(k7ddrphy_bitslip171[5]),
	.Q4(k7ddrphy_bitslip171[4]),
	.Q5(k7ddrphy_bitslip171[3]),
	.Q6(k7ddrphy_bitslip171[2]),
	.Q7(k7ddrphy_bitslip171[1]),
	.Q8(k7ddrphy_bitslip171[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_60 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed17),
	.ODATAIN(k7ddrphy_dq_o_nodelay17)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_17 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay17),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed17)
);

IOBUF IOBUF_17(
	.I(k7ddrphy_dq_o_delayed17),
	.T(k7ddrphy_dq_t17),
	.IO(ddram_dq[17]),
	.O(k7ddrphy_dq_i_nodelay17)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_61 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip180[0]),
	.D2(k7ddrphy_bitslip180[1]),
	.D3(k7ddrphy_bitslip180[2]),
	.D4(k7ddrphy_bitslip180[3]),
	.D5(k7ddrphy_bitslip180[4]),
	.D6(k7ddrphy_bitslip180[5]),
	.D7(k7ddrphy_bitslip180[6]),
	.D8(k7ddrphy_bitslip180[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay18),
	.TQ(k7ddrphy_dq_t18)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_18 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed18),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip181[7]),
	.Q2(k7ddrphy_bitslip181[6]),
	.Q3(k7ddrphy_bitslip181[5]),
	.Q4(k7ddrphy_bitslip181[4]),
	.Q5(k7ddrphy_bitslip181[3]),
	.Q6(k7ddrphy_bitslip181[2]),
	.Q7(k7ddrphy_bitslip181[1]),
	.Q8(k7ddrphy_bitslip181[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_61 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed18),
	.ODATAIN(k7ddrphy_dq_o_nodelay18)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_18 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay18),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed18)
);

IOBUF IOBUF_18(
	.I(k7ddrphy_dq_o_delayed18),
	.T(k7ddrphy_dq_t18),
	.IO(ddram_dq[18]),
	.O(k7ddrphy_dq_i_nodelay18)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_62 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip190[0]),
	.D2(k7ddrphy_bitslip190[1]),
	.D3(k7ddrphy_bitslip190[2]),
	.D4(k7ddrphy_bitslip190[3]),
	.D5(k7ddrphy_bitslip190[4]),
	.D6(k7ddrphy_bitslip190[5]),
	.D7(k7ddrphy_bitslip190[6]),
	.D8(k7ddrphy_bitslip190[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay19),
	.TQ(k7ddrphy_dq_t19)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_19 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed19),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip191[7]),
	.Q2(k7ddrphy_bitslip191[6]),
	.Q3(k7ddrphy_bitslip191[5]),
	.Q4(k7ddrphy_bitslip191[4]),
	.Q5(k7ddrphy_bitslip191[3]),
	.Q6(k7ddrphy_bitslip191[2]),
	.Q7(k7ddrphy_bitslip191[1]),
	.Q8(k7ddrphy_bitslip191[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_62 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed19),
	.ODATAIN(k7ddrphy_dq_o_nodelay19)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_19 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay19),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed19)
);

IOBUF IOBUF_19(
	.I(k7ddrphy_dq_o_delayed19),
	.T(k7ddrphy_dq_t19),
	.IO(ddram_dq[19]),
	.O(k7ddrphy_dq_i_nodelay19)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_63 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip200[0]),
	.D2(k7ddrphy_bitslip200[1]),
	.D3(k7ddrphy_bitslip200[2]),
	.D4(k7ddrphy_bitslip200[3]),
	.D5(k7ddrphy_bitslip200[4]),
	.D6(k7ddrphy_bitslip200[5]),
	.D7(k7ddrphy_bitslip200[6]),
	.D8(k7ddrphy_bitslip200[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay20),
	.TQ(k7ddrphy_dq_t20)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_20 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed20),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip201[7]),
	.Q2(k7ddrphy_bitslip201[6]),
	.Q3(k7ddrphy_bitslip201[5]),
	.Q4(k7ddrphy_bitslip201[4]),
	.Q5(k7ddrphy_bitslip201[3]),
	.Q6(k7ddrphy_bitslip201[2]),
	.Q7(k7ddrphy_bitslip201[1]),
	.Q8(k7ddrphy_bitslip201[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_63 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed20),
	.ODATAIN(k7ddrphy_dq_o_nodelay20)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_20 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay20),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed20)
);

IOBUF IOBUF_20(
	.I(k7ddrphy_dq_o_delayed20),
	.T(k7ddrphy_dq_t20),
	.IO(ddram_dq[20]),
	.O(k7ddrphy_dq_i_nodelay20)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_64 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip210[0]),
	.D2(k7ddrphy_bitslip210[1]),
	.D3(k7ddrphy_bitslip210[2]),
	.D4(k7ddrphy_bitslip210[3]),
	.D5(k7ddrphy_bitslip210[4]),
	.D6(k7ddrphy_bitslip210[5]),
	.D7(k7ddrphy_bitslip210[6]),
	.D8(k7ddrphy_bitslip210[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay21),
	.TQ(k7ddrphy_dq_t21)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_21 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed21),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip211[7]),
	.Q2(k7ddrphy_bitslip211[6]),
	.Q3(k7ddrphy_bitslip211[5]),
	.Q4(k7ddrphy_bitslip211[4]),
	.Q5(k7ddrphy_bitslip211[3]),
	.Q6(k7ddrphy_bitslip211[2]),
	.Q7(k7ddrphy_bitslip211[1]),
	.Q8(k7ddrphy_bitslip211[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_64 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed21),
	.ODATAIN(k7ddrphy_dq_o_nodelay21)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_21 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay21),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed21)
);

IOBUF IOBUF_21(
	.I(k7ddrphy_dq_o_delayed21),
	.T(k7ddrphy_dq_t21),
	.IO(ddram_dq[21]),
	.O(k7ddrphy_dq_i_nodelay21)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_65 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip220[0]),
	.D2(k7ddrphy_bitslip220[1]),
	.D3(k7ddrphy_bitslip220[2]),
	.D4(k7ddrphy_bitslip220[3]),
	.D5(k7ddrphy_bitslip220[4]),
	.D6(k7ddrphy_bitslip220[5]),
	.D7(k7ddrphy_bitslip220[6]),
	.D8(k7ddrphy_bitslip220[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay22),
	.TQ(k7ddrphy_dq_t22)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_22 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed22),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip221[7]),
	.Q2(k7ddrphy_bitslip221[6]),
	.Q3(k7ddrphy_bitslip221[5]),
	.Q4(k7ddrphy_bitslip221[4]),
	.Q5(k7ddrphy_bitslip221[3]),
	.Q6(k7ddrphy_bitslip221[2]),
	.Q7(k7ddrphy_bitslip221[1]),
	.Q8(k7ddrphy_bitslip221[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_65 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed22),
	.ODATAIN(k7ddrphy_dq_o_nodelay22)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_22 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay22),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed22)
);

IOBUF IOBUF_22(
	.I(k7ddrphy_dq_o_delayed22),
	.T(k7ddrphy_dq_t22),
	.IO(ddram_dq[22]),
	.O(k7ddrphy_dq_i_nodelay22)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_66 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip230[0]),
	.D2(k7ddrphy_bitslip230[1]),
	.D3(k7ddrphy_bitslip230[2]),
	.D4(k7ddrphy_bitslip230[3]),
	.D5(k7ddrphy_bitslip230[4]),
	.D6(k7ddrphy_bitslip230[5]),
	.D7(k7ddrphy_bitslip230[6]),
	.D8(k7ddrphy_bitslip230[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay23),
	.TQ(k7ddrphy_dq_t23)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_23 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed23),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip231[7]),
	.Q2(k7ddrphy_bitslip231[6]),
	.Q3(k7ddrphy_bitslip231[5]),
	.Q4(k7ddrphy_bitslip231[4]),
	.Q5(k7ddrphy_bitslip231[3]),
	.Q6(k7ddrphy_bitslip231[2]),
	.Q7(k7ddrphy_bitslip231[1]),
	.Q8(k7ddrphy_bitslip231[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_66 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed23),
	.ODATAIN(k7ddrphy_dq_o_nodelay23)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_23 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay23),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[2] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed23)
);

IOBUF IOBUF_23(
	.I(k7ddrphy_dq_o_delayed23),
	.T(k7ddrphy_dq_t23),
	.IO(ddram_dq[23]),
	.O(k7ddrphy_dq_i_nodelay23)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_67 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip240[0]),
	.D2(k7ddrphy_bitslip240[1]),
	.D3(k7ddrphy_bitslip240[2]),
	.D4(k7ddrphy_bitslip240[3]),
	.D5(k7ddrphy_bitslip240[4]),
	.D6(k7ddrphy_bitslip240[5]),
	.D7(k7ddrphy_bitslip240[6]),
	.D8(k7ddrphy_bitslip240[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay24),
	.TQ(k7ddrphy_dq_t24)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_24 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed24),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip241[7]),
	.Q2(k7ddrphy_bitslip241[6]),
	.Q3(k7ddrphy_bitslip241[5]),
	.Q4(k7ddrphy_bitslip241[4]),
	.Q5(k7ddrphy_bitslip241[3]),
	.Q6(k7ddrphy_bitslip241[2]),
	.Q7(k7ddrphy_bitslip241[1]),
	.Q8(k7ddrphy_bitslip241[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_67 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed24),
	.ODATAIN(k7ddrphy_dq_o_nodelay24)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_24 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay24),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed24)
);

IOBUF IOBUF_24(
	.I(k7ddrphy_dq_o_delayed24),
	.T(k7ddrphy_dq_t24),
	.IO(ddram_dq[24]),
	.O(k7ddrphy_dq_i_nodelay24)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_68 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip250[0]),
	.D2(k7ddrphy_bitslip250[1]),
	.D3(k7ddrphy_bitslip250[2]),
	.D4(k7ddrphy_bitslip250[3]),
	.D5(k7ddrphy_bitslip250[4]),
	.D6(k7ddrphy_bitslip250[5]),
	.D7(k7ddrphy_bitslip250[6]),
	.D8(k7ddrphy_bitslip250[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay25),
	.TQ(k7ddrphy_dq_t25)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_25 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed25),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip251[7]),
	.Q2(k7ddrphy_bitslip251[6]),
	.Q3(k7ddrphy_bitslip251[5]),
	.Q4(k7ddrphy_bitslip251[4]),
	.Q5(k7ddrphy_bitslip251[3]),
	.Q6(k7ddrphy_bitslip251[2]),
	.Q7(k7ddrphy_bitslip251[1]),
	.Q8(k7ddrphy_bitslip251[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_68 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed25),
	.ODATAIN(k7ddrphy_dq_o_nodelay25)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_25 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay25),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed25)
);

IOBUF IOBUF_25(
	.I(k7ddrphy_dq_o_delayed25),
	.T(k7ddrphy_dq_t25),
	.IO(ddram_dq[25]),
	.O(k7ddrphy_dq_i_nodelay25)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_69 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip260[0]),
	.D2(k7ddrphy_bitslip260[1]),
	.D3(k7ddrphy_bitslip260[2]),
	.D4(k7ddrphy_bitslip260[3]),
	.D5(k7ddrphy_bitslip260[4]),
	.D6(k7ddrphy_bitslip260[5]),
	.D7(k7ddrphy_bitslip260[6]),
	.D8(k7ddrphy_bitslip260[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay26),
	.TQ(k7ddrphy_dq_t26)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_26 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed26),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip261[7]),
	.Q2(k7ddrphy_bitslip261[6]),
	.Q3(k7ddrphy_bitslip261[5]),
	.Q4(k7ddrphy_bitslip261[4]),
	.Q5(k7ddrphy_bitslip261[3]),
	.Q6(k7ddrphy_bitslip261[2]),
	.Q7(k7ddrphy_bitslip261[1]),
	.Q8(k7ddrphy_bitslip261[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_69 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed26),
	.ODATAIN(k7ddrphy_dq_o_nodelay26)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_26 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay26),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed26)
);

IOBUF IOBUF_26(
	.I(k7ddrphy_dq_o_delayed26),
	.T(k7ddrphy_dq_t26),
	.IO(ddram_dq[26]),
	.O(k7ddrphy_dq_i_nodelay26)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_70 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip270[0]),
	.D2(k7ddrphy_bitslip270[1]),
	.D3(k7ddrphy_bitslip270[2]),
	.D4(k7ddrphy_bitslip270[3]),
	.D5(k7ddrphy_bitslip270[4]),
	.D6(k7ddrphy_bitslip270[5]),
	.D7(k7ddrphy_bitslip270[6]),
	.D8(k7ddrphy_bitslip270[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay27),
	.TQ(k7ddrphy_dq_t27)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_27 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed27),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip271[7]),
	.Q2(k7ddrphy_bitslip271[6]),
	.Q3(k7ddrphy_bitslip271[5]),
	.Q4(k7ddrphy_bitslip271[4]),
	.Q5(k7ddrphy_bitslip271[3]),
	.Q6(k7ddrphy_bitslip271[2]),
	.Q7(k7ddrphy_bitslip271[1]),
	.Q8(k7ddrphy_bitslip271[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_70 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed27),
	.ODATAIN(k7ddrphy_dq_o_nodelay27)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_27 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay27),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed27)
);

IOBUF IOBUF_27(
	.I(k7ddrphy_dq_o_delayed27),
	.T(k7ddrphy_dq_t27),
	.IO(ddram_dq[27]),
	.O(k7ddrphy_dq_i_nodelay27)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_71 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip280[0]),
	.D2(k7ddrphy_bitslip280[1]),
	.D3(k7ddrphy_bitslip280[2]),
	.D4(k7ddrphy_bitslip280[3]),
	.D5(k7ddrphy_bitslip280[4]),
	.D6(k7ddrphy_bitslip280[5]),
	.D7(k7ddrphy_bitslip280[6]),
	.D8(k7ddrphy_bitslip280[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay28),
	.TQ(k7ddrphy_dq_t28)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_28 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed28),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip281[7]),
	.Q2(k7ddrphy_bitslip281[6]),
	.Q3(k7ddrphy_bitslip281[5]),
	.Q4(k7ddrphy_bitslip281[4]),
	.Q5(k7ddrphy_bitslip281[3]),
	.Q6(k7ddrphy_bitslip281[2]),
	.Q7(k7ddrphy_bitslip281[1]),
	.Q8(k7ddrphy_bitslip281[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_71 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed28),
	.ODATAIN(k7ddrphy_dq_o_nodelay28)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_28 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay28),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed28)
);

IOBUF IOBUF_28(
	.I(k7ddrphy_dq_o_delayed28),
	.T(k7ddrphy_dq_t28),
	.IO(ddram_dq[28]),
	.O(k7ddrphy_dq_i_nodelay28)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_72 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip290[0]),
	.D2(k7ddrphy_bitslip290[1]),
	.D3(k7ddrphy_bitslip290[2]),
	.D4(k7ddrphy_bitslip290[3]),
	.D5(k7ddrphy_bitslip290[4]),
	.D6(k7ddrphy_bitslip290[5]),
	.D7(k7ddrphy_bitslip290[6]),
	.D8(k7ddrphy_bitslip290[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay29),
	.TQ(k7ddrphy_dq_t29)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_29 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed29),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip291[7]),
	.Q2(k7ddrphy_bitslip291[6]),
	.Q3(k7ddrphy_bitslip291[5]),
	.Q4(k7ddrphy_bitslip291[4]),
	.Q5(k7ddrphy_bitslip291[3]),
	.Q6(k7ddrphy_bitslip291[2]),
	.Q7(k7ddrphy_bitslip291[1]),
	.Q8(k7ddrphy_bitslip291[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_72 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed29),
	.ODATAIN(k7ddrphy_dq_o_nodelay29)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_29 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay29),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed29)
);

IOBUF IOBUF_29(
	.I(k7ddrphy_dq_o_delayed29),
	.T(k7ddrphy_dq_t29),
	.IO(ddram_dq[29]),
	.O(k7ddrphy_dq_i_nodelay29)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_73 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip300[0]),
	.D2(k7ddrphy_bitslip300[1]),
	.D3(k7ddrphy_bitslip300[2]),
	.D4(k7ddrphy_bitslip300[3]),
	.D5(k7ddrphy_bitslip300[4]),
	.D6(k7ddrphy_bitslip300[5]),
	.D7(k7ddrphy_bitslip300[6]),
	.D8(k7ddrphy_bitslip300[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay30),
	.TQ(k7ddrphy_dq_t30)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_30 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed30),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip301[7]),
	.Q2(k7ddrphy_bitslip301[6]),
	.Q3(k7ddrphy_bitslip301[5]),
	.Q4(k7ddrphy_bitslip301[4]),
	.Q5(k7ddrphy_bitslip301[3]),
	.Q6(k7ddrphy_bitslip301[2]),
	.Q7(k7ddrphy_bitslip301[1]),
	.Q8(k7ddrphy_bitslip301[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_73 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed30),
	.ODATAIN(k7ddrphy_dq_o_nodelay30)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_30 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay30),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed30)
);

IOBUF IOBUF_30(
	.I(k7ddrphy_dq_o_delayed30),
	.T(k7ddrphy_dq_t30),
	.IO(ddram_dq[30]),
	.O(k7ddrphy_dq_i_nodelay30)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_74 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip310[0]),
	.D2(k7ddrphy_bitslip310[1]),
	.D3(k7ddrphy_bitslip310[2]),
	.D4(k7ddrphy_bitslip310[3]),
	.D5(k7ddrphy_bitslip310[4]),
	.D6(k7ddrphy_bitslip310[5]),
	.D7(k7ddrphy_bitslip310[6]),
	.D8(k7ddrphy_bitslip310[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay31),
	.TQ(k7ddrphy_dq_t31)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_31 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed31),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip311[7]),
	.Q2(k7ddrphy_bitslip311[6]),
	.Q3(k7ddrphy_bitslip311[5]),
	.Q4(k7ddrphy_bitslip311[4]),
	.Q5(k7ddrphy_bitslip311[3]),
	.Q6(k7ddrphy_bitslip311[2]),
	.Q7(k7ddrphy_bitslip311[1]),
	.Q8(k7ddrphy_bitslip311[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_74 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed31),
	.ODATAIN(k7ddrphy_dq_o_nodelay31)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_31 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay31),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[3] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed31)
);

IOBUF IOBUF_31(
	.I(k7ddrphy_dq_o_delayed31),
	.T(k7ddrphy_dq_t31),
	.IO(ddram_dq[31]),
	.O(k7ddrphy_dq_i_nodelay31)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_75 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip320[0]),
	.D2(k7ddrphy_bitslip320[1]),
	.D3(k7ddrphy_bitslip320[2]),
	.D4(k7ddrphy_bitslip320[3]),
	.D5(k7ddrphy_bitslip320[4]),
	.D6(k7ddrphy_bitslip320[5]),
	.D7(k7ddrphy_bitslip320[6]),
	.D8(k7ddrphy_bitslip320[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay32),
	.TQ(k7ddrphy_dq_t32)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_32 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed32),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip321[7]),
	.Q2(k7ddrphy_bitslip321[6]),
	.Q3(k7ddrphy_bitslip321[5]),
	.Q4(k7ddrphy_bitslip321[4]),
	.Q5(k7ddrphy_bitslip321[3]),
	.Q6(k7ddrphy_bitslip321[2]),
	.Q7(k7ddrphy_bitslip321[1]),
	.Q8(k7ddrphy_bitslip321[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_75 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed32),
	.ODATAIN(k7ddrphy_dq_o_nodelay32)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_32 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay32),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed32)
);

IOBUF IOBUF_32(
	.I(k7ddrphy_dq_o_delayed32),
	.T(k7ddrphy_dq_t32),
	.IO(ddram_dq[32]),
	.O(k7ddrphy_dq_i_nodelay32)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_76 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip330[0]),
	.D2(k7ddrphy_bitslip330[1]),
	.D3(k7ddrphy_bitslip330[2]),
	.D4(k7ddrphy_bitslip330[3]),
	.D5(k7ddrphy_bitslip330[4]),
	.D6(k7ddrphy_bitslip330[5]),
	.D7(k7ddrphy_bitslip330[6]),
	.D8(k7ddrphy_bitslip330[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay33),
	.TQ(k7ddrphy_dq_t33)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_33 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed33),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip331[7]),
	.Q2(k7ddrphy_bitslip331[6]),
	.Q3(k7ddrphy_bitslip331[5]),
	.Q4(k7ddrphy_bitslip331[4]),
	.Q5(k7ddrphy_bitslip331[3]),
	.Q6(k7ddrphy_bitslip331[2]),
	.Q7(k7ddrphy_bitslip331[1]),
	.Q8(k7ddrphy_bitslip331[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_76 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed33),
	.ODATAIN(k7ddrphy_dq_o_nodelay33)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_33 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay33),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed33)
);

IOBUF IOBUF_33(
	.I(k7ddrphy_dq_o_delayed33),
	.T(k7ddrphy_dq_t33),
	.IO(ddram_dq[33]),
	.O(k7ddrphy_dq_i_nodelay33)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_77 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip340[0]),
	.D2(k7ddrphy_bitslip340[1]),
	.D3(k7ddrphy_bitslip340[2]),
	.D4(k7ddrphy_bitslip340[3]),
	.D5(k7ddrphy_bitslip340[4]),
	.D6(k7ddrphy_bitslip340[5]),
	.D7(k7ddrphy_bitslip340[6]),
	.D8(k7ddrphy_bitslip340[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay34),
	.TQ(k7ddrphy_dq_t34)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_34 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed34),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip341[7]),
	.Q2(k7ddrphy_bitslip341[6]),
	.Q3(k7ddrphy_bitslip341[5]),
	.Q4(k7ddrphy_bitslip341[4]),
	.Q5(k7ddrphy_bitslip341[3]),
	.Q6(k7ddrphy_bitslip341[2]),
	.Q7(k7ddrphy_bitslip341[1]),
	.Q8(k7ddrphy_bitslip341[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_77 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed34),
	.ODATAIN(k7ddrphy_dq_o_nodelay34)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_34 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay34),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed34)
);

IOBUF IOBUF_34(
	.I(k7ddrphy_dq_o_delayed34),
	.T(k7ddrphy_dq_t34),
	.IO(ddram_dq[34]),
	.O(k7ddrphy_dq_i_nodelay34)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_78 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip350[0]),
	.D2(k7ddrphy_bitslip350[1]),
	.D3(k7ddrphy_bitslip350[2]),
	.D4(k7ddrphy_bitslip350[3]),
	.D5(k7ddrphy_bitslip350[4]),
	.D6(k7ddrphy_bitslip350[5]),
	.D7(k7ddrphy_bitslip350[6]),
	.D8(k7ddrphy_bitslip350[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay35),
	.TQ(k7ddrphy_dq_t35)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_35 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed35),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip351[7]),
	.Q2(k7ddrphy_bitslip351[6]),
	.Q3(k7ddrphy_bitslip351[5]),
	.Q4(k7ddrphy_bitslip351[4]),
	.Q5(k7ddrphy_bitslip351[3]),
	.Q6(k7ddrphy_bitslip351[2]),
	.Q7(k7ddrphy_bitslip351[1]),
	.Q8(k7ddrphy_bitslip351[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_78 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed35),
	.ODATAIN(k7ddrphy_dq_o_nodelay35)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_35 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay35),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed35)
);

IOBUF IOBUF_35(
	.I(k7ddrphy_dq_o_delayed35),
	.T(k7ddrphy_dq_t35),
	.IO(ddram_dq[35]),
	.O(k7ddrphy_dq_i_nodelay35)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_79 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip360[0]),
	.D2(k7ddrphy_bitslip360[1]),
	.D3(k7ddrphy_bitslip360[2]),
	.D4(k7ddrphy_bitslip360[3]),
	.D5(k7ddrphy_bitslip360[4]),
	.D6(k7ddrphy_bitslip360[5]),
	.D7(k7ddrphy_bitslip360[6]),
	.D8(k7ddrphy_bitslip360[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay36),
	.TQ(k7ddrphy_dq_t36)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_36 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed36),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip361[7]),
	.Q2(k7ddrphy_bitslip361[6]),
	.Q3(k7ddrphy_bitslip361[5]),
	.Q4(k7ddrphy_bitslip361[4]),
	.Q5(k7ddrphy_bitslip361[3]),
	.Q6(k7ddrphy_bitslip361[2]),
	.Q7(k7ddrphy_bitslip361[1]),
	.Q8(k7ddrphy_bitslip361[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_79 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed36),
	.ODATAIN(k7ddrphy_dq_o_nodelay36)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_36 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay36),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed36)
);

IOBUF IOBUF_36(
	.I(k7ddrphy_dq_o_delayed36),
	.T(k7ddrphy_dq_t36),
	.IO(ddram_dq[36]),
	.O(k7ddrphy_dq_i_nodelay36)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_80 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip370[0]),
	.D2(k7ddrphy_bitslip370[1]),
	.D3(k7ddrphy_bitslip370[2]),
	.D4(k7ddrphy_bitslip370[3]),
	.D5(k7ddrphy_bitslip370[4]),
	.D6(k7ddrphy_bitslip370[5]),
	.D7(k7ddrphy_bitslip370[6]),
	.D8(k7ddrphy_bitslip370[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay37),
	.TQ(k7ddrphy_dq_t37)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_37 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed37),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip371[7]),
	.Q2(k7ddrphy_bitslip371[6]),
	.Q3(k7ddrphy_bitslip371[5]),
	.Q4(k7ddrphy_bitslip371[4]),
	.Q5(k7ddrphy_bitslip371[3]),
	.Q6(k7ddrphy_bitslip371[2]),
	.Q7(k7ddrphy_bitslip371[1]),
	.Q8(k7ddrphy_bitslip371[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_80 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed37),
	.ODATAIN(k7ddrphy_dq_o_nodelay37)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_37 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay37),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed37)
);

IOBUF IOBUF_37(
	.I(k7ddrphy_dq_o_delayed37),
	.T(k7ddrphy_dq_t37),
	.IO(ddram_dq[37]),
	.O(k7ddrphy_dq_i_nodelay37)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_81 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip380[0]),
	.D2(k7ddrphy_bitslip380[1]),
	.D3(k7ddrphy_bitslip380[2]),
	.D4(k7ddrphy_bitslip380[3]),
	.D5(k7ddrphy_bitslip380[4]),
	.D6(k7ddrphy_bitslip380[5]),
	.D7(k7ddrphy_bitslip380[6]),
	.D8(k7ddrphy_bitslip380[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay38),
	.TQ(k7ddrphy_dq_t38)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_38 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed38),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip381[7]),
	.Q2(k7ddrphy_bitslip381[6]),
	.Q3(k7ddrphy_bitslip381[5]),
	.Q4(k7ddrphy_bitslip381[4]),
	.Q5(k7ddrphy_bitslip381[3]),
	.Q6(k7ddrphy_bitslip381[2]),
	.Q7(k7ddrphy_bitslip381[1]),
	.Q8(k7ddrphy_bitslip381[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_81 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed38),
	.ODATAIN(k7ddrphy_dq_o_nodelay38)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_38 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay38),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed38)
);

IOBUF IOBUF_38(
	.I(k7ddrphy_dq_o_delayed38),
	.T(k7ddrphy_dq_t38),
	.IO(ddram_dq[38]),
	.O(k7ddrphy_dq_i_nodelay38)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_82 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip390[0]),
	.D2(k7ddrphy_bitslip390[1]),
	.D3(k7ddrphy_bitslip390[2]),
	.D4(k7ddrphy_bitslip390[3]),
	.D5(k7ddrphy_bitslip390[4]),
	.D6(k7ddrphy_bitslip390[5]),
	.D7(k7ddrphy_bitslip390[6]),
	.D8(k7ddrphy_bitslip390[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay39),
	.TQ(k7ddrphy_dq_t39)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_39 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed39),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip391[7]),
	.Q2(k7ddrphy_bitslip391[6]),
	.Q3(k7ddrphy_bitslip391[5]),
	.Q4(k7ddrphy_bitslip391[4]),
	.Q5(k7ddrphy_bitslip391[3]),
	.Q6(k7ddrphy_bitslip391[2]),
	.Q7(k7ddrphy_bitslip391[1]),
	.Q8(k7ddrphy_bitslip391[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_82 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed39),
	.ODATAIN(k7ddrphy_dq_o_nodelay39)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_39 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay39),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[4] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed39)
);

IOBUF IOBUF_39(
	.I(k7ddrphy_dq_o_delayed39),
	.T(k7ddrphy_dq_t39),
	.IO(ddram_dq[39]),
	.O(k7ddrphy_dq_i_nodelay39)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_83 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip400[0]),
	.D2(k7ddrphy_bitslip400[1]),
	.D3(k7ddrphy_bitslip400[2]),
	.D4(k7ddrphy_bitslip400[3]),
	.D5(k7ddrphy_bitslip400[4]),
	.D6(k7ddrphy_bitslip400[5]),
	.D7(k7ddrphy_bitslip400[6]),
	.D8(k7ddrphy_bitslip400[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay40),
	.TQ(k7ddrphy_dq_t40)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_40 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed40),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip401[7]),
	.Q2(k7ddrphy_bitslip401[6]),
	.Q3(k7ddrphy_bitslip401[5]),
	.Q4(k7ddrphy_bitslip401[4]),
	.Q5(k7ddrphy_bitslip401[3]),
	.Q6(k7ddrphy_bitslip401[2]),
	.Q7(k7ddrphy_bitslip401[1]),
	.Q8(k7ddrphy_bitslip401[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_83 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed40),
	.ODATAIN(k7ddrphy_dq_o_nodelay40)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_40 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay40),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed40)
);

IOBUF IOBUF_40(
	.I(k7ddrphy_dq_o_delayed40),
	.T(k7ddrphy_dq_t40),
	.IO(ddram_dq[40]),
	.O(k7ddrphy_dq_i_nodelay40)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_84 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip410[0]),
	.D2(k7ddrphy_bitslip410[1]),
	.D3(k7ddrphy_bitslip410[2]),
	.D4(k7ddrphy_bitslip410[3]),
	.D5(k7ddrphy_bitslip410[4]),
	.D6(k7ddrphy_bitslip410[5]),
	.D7(k7ddrphy_bitslip410[6]),
	.D8(k7ddrphy_bitslip410[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay41),
	.TQ(k7ddrphy_dq_t41)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_41 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed41),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip411[7]),
	.Q2(k7ddrphy_bitslip411[6]),
	.Q3(k7ddrphy_bitslip411[5]),
	.Q4(k7ddrphy_bitslip411[4]),
	.Q5(k7ddrphy_bitslip411[3]),
	.Q6(k7ddrphy_bitslip411[2]),
	.Q7(k7ddrphy_bitslip411[1]),
	.Q8(k7ddrphy_bitslip411[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_84 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed41),
	.ODATAIN(k7ddrphy_dq_o_nodelay41)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_41 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay41),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed41)
);

IOBUF IOBUF_41(
	.I(k7ddrphy_dq_o_delayed41),
	.T(k7ddrphy_dq_t41),
	.IO(ddram_dq[41]),
	.O(k7ddrphy_dq_i_nodelay41)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_85 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip420[0]),
	.D2(k7ddrphy_bitslip420[1]),
	.D3(k7ddrphy_bitslip420[2]),
	.D4(k7ddrphy_bitslip420[3]),
	.D5(k7ddrphy_bitslip420[4]),
	.D6(k7ddrphy_bitslip420[5]),
	.D7(k7ddrphy_bitslip420[6]),
	.D8(k7ddrphy_bitslip420[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay42),
	.TQ(k7ddrphy_dq_t42)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_42 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed42),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip421[7]),
	.Q2(k7ddrphy_bitslip421[6]),
	.Q3(k7ddrphy_bitslip421[5]),
	.Q4(k7ddrphy_bitslip421[4]),
	.Q5(k7ddrphy_bitslip421[3]),
	.Q6(k7ddrphy_bitslip421[2]),
	.Q7(k7ddrphy_bitslip421[1]),
	.Q8(k7ddrphy_bitslip421[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_85 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed42),
	.ODATAIN(k7ddrphy_dq_o_nodelay42)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_42 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay42),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed42)
);

IOBUF IOBUF_42(
	.I(k7ddrphy_dq_o_delayed42),
	.T(k7ddrphy_dq_t42),
	.IO(ddram_dq[42]),
	.O(k7ddrphy_dq_i_nodelay42)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_86 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip430[0]),
	.D2(k7ddrphy_bitslip430[1]),
	.D3(k7ddrphy_bitslip430[2]),
	.D4(k7ddrphy_bitslip430[3]),
	.D5(k7ddrphy_bitslip430[4]),
	.D6(k7ddrphy_bitslip430[5]),
	.D7(k7ddrphy_bitslip430[6]),
	.D8(k7ddrphy_bitslip430[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay43),
	.TQ(k7ddrphy_dq_t43)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_43 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed43),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip431[7]),
	.Q2(k7ddrphy_bitslip431[6]),
	.Q3(k7ddrphy_bitslip431[5]),
	.Q4(k7ddrphy_bitslip431[4]),
	.Q5(k7ddrphy_bitslip431[3]),
	.Q6(k7ddrphy_bitslip431[2]),
	.Q7(k7ddrphy_bitslip431[1]),
	.Q8(k7ddrphy_bitslip431[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_86 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed43),
	.ODATAIN(k7ddrphy_dq_o_nodelay43)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_43 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay43),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed43)
);

IOBUF IOBUF_43(
	.I(k7ddrphy_dq_o_delayed43),
	.T(k7ddrphy_dq_t43),
	.IO(ddram_dq[43]),
	.O(k7ddrphy_dq_i_nodelay43)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_87 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip440[0]),
	.D2(k7ddrphy_bitslip440[1]),
	.D3(k7ddrphy_bitslip440[2]),
	.D4(k7ddrphy_bitslip440[3]),
	.D5(k7ddrphy_bitslip440[4]),
	.D6(k7ddrphy_bitslip440[5]),
	.D7(k7ddrphy_bitslip440[6]),
	.D8(k7ddrphy_bitslip440[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay44),
	.TQ(k7ddrphy_dq_t44)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_44 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed44),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip441[7]),
	.Q2(k7ddrphy_bitslip441[6]),
	.Q3(k7ddrphy_bitslip441[5]),
	.Q4(k7ddrphy_bitslip441[4]),
	.Q5(k7ddrphy_bitslip441[3]),
	.Q6(k7ddrphy_bitslip441[2]),
	.Q7(k7ddrphy_bitslip441[1]),
	.Q8(k7ddrphy_bitslip441[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_87 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed44),
	.ODATAIN(k7ddrphy_dq_o_nodelay44)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_44 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay44),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed44)
);

IOBUF IOBUF_44(
	.I(k7ddrphy_dq_o_delayed44),
	.T(k7ddrphy_dq_t44),
	.IO(ddram_dq[44]),
	.O(k7ddrphy_dq_i_nodelay44)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_88 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip450[0]),
	.D2(k7ddrphy_bitslip450[1]),
	.D3(k7ddrphy_bitslip450[2]),
	.D4(k7ddrphy_bitslip450[3]),
	.D5(k7ddrphy_bitslip450[4]),
	.D6(k7ddrphy_bitslip450[5]),
	.D7(k7ddrphy_bitslip450[6]),
	.D8(k7ddrphy_bitslip450[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay45),
	.TQ(k7ddrphy_dq_t45)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_45 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed45),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip451[7]),
	.Q2(k7ddrphy_bitslip451[6]),
	.Q3(k7ddrphy_bitslip451[5]),
	.Q4(k7ddrphy_bitslip451[4]),
	.Q5(k7ddrphy_bitslip451[3]),
	.Q6(k7ddrphy_bitslip451[2]),
	.Q7(k7ddrphy_bitslip451[1]),
	.Q8(k7ddrphy_bitslip451[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_88 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed45),
	.ODATAIN(k7ddrphy_dq_o_nodelay45)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_45 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay45),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed45)
);

IOBUF IOBUF_45(
	.I(k7ddrphy_dq_o_delayed45),
	.T(k7ddrphy_dq_t45),
	.IO(ddram_dq[45]),
	.O(k7ddrphy_dq_i_nodelay45)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_89 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip460[0]),
	.D2(k7ddrphy_bitslip460[1]),
	.D3(k7ddrphy_bitslip460[2]),
	.D4(k7ddrphy_bitslip460[3]),
	.D5(k7ddrphy_bitslip460[4]),
	.D6(k7ddrphy_bitslip460[5]),
	.D7(k7ddrphy_bitslip460[6]),
	.D8(k7ddrphy_bitslip460[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay46),
	.TQ(k7ddrphy_dq_t46)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_46 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed46),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip461[7]),
	.Q2(k7ddrphy_bitslip461[6]),
	.Q3(k7ddrphy_bitslip461[5]),
	.Q4(k7ddrphy_bitslip461[4]),
	.Q5(k7ddrphy_bitslip461[3]),
	.Q6(k7ddrphy_bitslip461[2]),
	.Q7(k7ddrphy_bitslip461[1]),
	.Q8(k7ddrphy_bitslip461[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_89 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed46),
	.ODATAIN(k7ddrphy_dq_o_nodelay46)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_46 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay46),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed46)
);

IOBUF IOBUF_46(
	.I(k7ddrphy_dq_o_delayed46),
	.T(k7ddrphy_dq_t46),
	.IO(ddram_dq[46]),
	.O(k7ddrphy_dq_i_nodelay46)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_90 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip470[0]),
	.D2(k7ddrphy_bitslip470[1]),
	.D3(k7ddrphy_bitslip470[2]),
	.D4(k7ddrphy_bitslip470[3]),
	.D5(k7ddrphy_bitslip470[4]),
	.D6(k7ddrphy_bitslip470[5]),
	.D7(k7ddrphy_bitslip470[6]),
	.D8(k7ddrphy_bitslip470[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay47),
	.TQ(k7ddrphy_dq_t47)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_47 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed47),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip471[7]),
	.Q2(k7ddrphy_bitslip471[6]),
	.Q3(k7ddrphy_bitslip471[5]),
	.Q4(k7ddrphy_bitslip471[4]),
	.Q5(k7ddrphy_bitslip471[3]),
	.Q6(k7ddrphy_bitslip471[2]),
	.Q7(k7ddrphy_bitslip471[1]),
	.Q8(k7ddrphy_bitslip471[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_90 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed47),
	.ODATAIN(k7ddrphy_dq_o_nodelay47)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_47 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay47),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[5] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed47)
);

IOBUF IOBUF_47(
	.I(k7ddrphy_dq_o_delayed47),
	.T(k7ddrphy_dq_t47),
	.IO(ddram_dq[47]),
	.O(k7ddrphy_dq_i_nodelay47)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_91 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip480[0]),
	.D2(k7ddrphy_bitslip480[1]),
	.D3(k7ddrphy_bitslip480[2]),
	.D4(k7ddrphy_bitslip480[3]),
	.D5(k7ddrphy_bitslip480[4]),
	.D6(k7ddrphy_bitslip480[5]),
	.D7(k7ddrphy_bitslip480[6]),
	.D8(k7ddrphy_bitslip480[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay48),
	.TQ(k7ddrphy_dq_t48)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_48 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed48),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip481[7]),
	.Q2(k7ddrphy_bitslip481[6]),
	.Q3(k7ddrphy_bitslip481[5]),
	.Q4(k7ddrphy_bitslip481[4]),
	.Q5(k7ddrphy_bitslip481[3]),
	.Q6(k7ddrphy_bitslip481[2]),
	.Q7(k7ddrphy_bitslip481[1]),
	.Q8(k7ddrphy_bitslip481[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_91 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed48),
	.ODATAIN(k7ddrphy_dq_o_nodelay48)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_48 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay48),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed48)
);

IOBUF IOBUF_48(
	.I(k7ddrphy_dq_o_delayed48),
	.T(k7ddrphy_dq_t48),
	.IO(ddram_dq[48]),
	.O(k7ddrphy_dq_i_nodelay48)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_92 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip490[0]),
	.D2(k7ddrphy_bitslip490[1]),
	.D3(k7ddrphy_bitslip490[2]),
	.D4(k7ddrphy_bitslip490[3]),
	.D5(k7ddrphy_bitslip490[4]),
	.D6(k7ddrphy_bitslip490[5]),
	.D7(k7ddrphy_bitslip490[6]),
	.D8(k7ddrphy_bitslip490[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay49),
	.TQ(k7ddrphy_dq_t49)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_49 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed49),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip491[7]),
	.Q2(k7ddrphy_bitslip491[6]),
	.Q3(k7ddrphy_bitslip491[5]),
	.Q4(k7ddrphy_bitslip491[4]),
	.Q5(k7ddrphy_bitslip491[3]),
	.Q6(k7ddrphy_bitslip491[2]),
	.Q7(k7ddrphy_bitslip491[1]),
	.Q8(k7ddrphy_bitslip491[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_92 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed49),
	.ODATAIN(k7ddrphy_dq_o_nodelay49)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_49 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay49),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed49)
);

IOBUF IOBUF_49(
	.I(k7ddrphy_dq_o_delayed49),
	.T(k7ddrphy_dq_t49),
	.IO(ddram_dq[49]),
	.O(k7ddrphy_dq_i_nodelay49)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_93 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip500[0]),
	.D2(k7ddrphy_bitslip500[1]),
	.D3(k7ddrphy_bitslip500[2]),
	.D4(k7ddrphy_bitslip500[3]),
	.D5(k7ddrphy_bitslip500[4]),
	.D6(k7ddrphy_bitslip500[5]),
	.D7(k7ddrphy_bitslip500[6]),
	.D8(k7ddrphy_bitslip500[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay50),
	.TQ(k7ddrphy_dq_t50)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_50 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed50),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip501[7]),
	.Q2(k7ddrphy_bitslip501[6]),
	.Q3(k7ddrphy_bitslip501[5]),
	.Q4(k7ddrphy_bitslip501[4]),
	.Q5(k7ddrphy_bitslip501[3]),
	.Q6(k7ddrphy_bitslip501[2]),
	.Q7(k7ddrphy_bitslip501[1]),
	.Q8(k7ddrphy_bitslip501[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_93 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed50),
	.ODATAIN(k7ddrphy_dq_o_nodelay50)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_50 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay50),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed50)
);

IOBUF IOBUF_50(
	.I(k7ddrphy_dq_o_delayed50),
	.T(k7ddrphy_dq_t50),
	.IO(ddram_dq[50]),
	.O(k7ddrphy_dq_i_nodelay50)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_94 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip510[0]),
	.D2(k7ddrphy_bitslip510[1]),
	.D3(k7ddrphy_bitslip510[2]),
	.D4(k7ddrphy_bitslip510[3]),
	.D5(k7ddrphy_bitslip510[4]),
	.D6(k7ddrphy_bitslip510[5]),
	.D7(k7ddrphy_bitslip510[6]),
	.D8(k7ddrphy_bitslip510[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay51),
	.TQ(k7ddrphy_dq_t51)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_51 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed51),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip511[7]),
	.Q2(k7ddrphy_bitslip511[6]),
	.Q3(k7ddrphy_bitslip511[5]),
	.Q4(k7ddrphy_bitslip511[4]),
	.Q5(k7ddrphy_bitslip511[3]),
	.Q6(k7ddrphy_bitslip511[2]),
	.Q7(k7ddrphy_bitslip511[1]),
	.Q8(k7ddrphy_bitslip511[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_94 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed51),
	.ODATAIN(k7ddrphy_dq_o_nodelay51)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_51 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay51),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed51)
);

IOBUF IOBUF_51(
	.I(k7ddrphy_dq_o_delayed51),
	.T(k7ddrphy_dq_t51),
	.IO(ddram_dq[51]),
	.O(k7ddrphy_dq_i_nodelay51)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_95 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip520[0]),
	.D2(k7ddrphy_bitslip520[1]),
	.D3(k7ddrphy_bitslip520[2]),
	.D4(k7ddrphy_bitslip520[3]),
	.D5(k7ddrphy_bitslip520[4]),
	.D6(k7ddrphy_bitslip520[5]),
	.D7(k7ddrphy_bitslip520[6]),
	.D8(k7ddrphy_bitslip520[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay52),
	.TQ(k7ddrphy_dq_t52)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_52 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed52),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip521[7]),
	.Q2(k7ddrphy_bitslip521[6]),
	.Q3(k7ddrphy_bitslip521[5]),
	.Q4(k7ddrphy_bitslip521[4]),
	.Q5(k7ddrphy_bitslip521[3]),
	.Q6(k7ddrphy_bitslip521[2]),
	.Q7(k7ddrphy_bitslip521[1]),
	.Q8(k7ddrphy_bitslip521[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_95 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed52),
	.ODATAIN(k7ddrphy_dq_o_nodelay52)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_52 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay52),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed52)
);

IOBUF IOBUF_52(
	.I(k7ddrphy_dq_o_delayed52),
	.T(k7ddrphy_dq_t52),
	.IO(ddram_dq[52]),
	.O(k7ddrphy_dq_i_nodelay52)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_96 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip530[0]),
	.D2(k7ddrphy_bitslip530[1]),
	.D3(k7ddrphy_bitslip530[2]),
	.D4(k7ddrphy_bitslip530[3]),
	.D5(k7ddrphy_bitslip530[4]),
	.D6(k7ddrphy_bitslip530[5]),
	.D7(k7ddrphy_bitslip530[6]),
	.D8(k7ddrphy_bitslip530[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay53),
	.TQ(k7ddrphy_dq_t53)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_53 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed53),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip531[7]),
	.Q2(k7ddrphy_bitslip531[6]),
	.Q3(k7ddrphy_bitslip531[5]),
	.Q4(k7ddrphy_bitslip531[4]),
	.Q5(k7ddrphy_bitslip531[3]),
	.Q6(k7ddrphy_bitslip531[2]),
	.Q7(k7ddrphy_bitslip531[1]),
	.Q8(k7ddrphy_bitslip531[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_96 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed53),
	.ODATAIN(k7ddrphy_dq_o_nodelay53)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_53 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay53),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed53)
);

IOBUF IOBUF_53(
	.I(k7ddrphy_dq_o_delayed53),
	.T(k7ddrphy_dq_t53),
	.IO(ddram_dq[53]),
	.O(k7ddrphy_dq_i_nodelay53)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_97 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip540[0]),
	.D2(k7ddrphy_bitslip540[1]),
	.D3(k7ddrphy_bitslip540[2]),
	.D4(k7ddrphy_bitslip540[3]),
	.D5(k7ddrphy_bitslip540[4]),
	.D6(k7ddrphy_bitslip540[5]),
	.D7(k7ddrphy_bitslip540[6]),
	.D8(k7ddrphy_bitslip540[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay54),
	.TQ(k7ddrphy_dq_t54)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_54 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed54),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip541[7]),
	.Q2(k7ddrphy_bitslip541[6]),
	.Q3(k7ddrphy_bitslip541[5]),
	.Q4(k7ddrphy_bitslip541[4]),
	.Q5(k7ddrphy_bitslip541[3]),
	.Q6(k7ddrphy_bitslip541[2]),
	.Q7(k7ddrphy_bitslip541[1]),
	.Q8(k7ddrphy_bitslip541[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_97 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed54),
	.ODATAIN(k7ddrphy_dq_o_nodelay54)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_54 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay54),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed54)
);

IOBUF IOBUF_54(
	.I(k7ddrphy_dq_o_delayed54),
	.T(k7ddrphy_dq_t54),
	.IO(ddram_dq[54]),
	.O(k7ddrphy_dq_i_nodelay54)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_98 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip550[0]),
	.D2(k7ddrphy_bitslip550[1]),
	.D3(k7ddrphy_bitslip550[2]),
	.D4(k7ddrphy_bitslip550[3]),
	.D5(k7ddrphy_bitslip550[4]),
	.D6(k7ddrphy_bitslip550[5]),
	.D7(k7ddrphy_bitslip550[6]),
	.D8(k7ddrphy_bitslip550[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay55),
	.TQ(k7ddrphy_dq_t55)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_55 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed55),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip551[7]),
	.Q2(k7ddrphy_bitslip551[6]),
	.Q3(k7ddrphy_bitslip551[5]),
	.Q4(k7ddrphy_bitslip551[4]),
	.Q5(k7ddrphy_bitslip551[3]),
	.Q6(k7ddrphy_bitslip551[2]),
	.Q7(k7ddrphy_bitslip551[1]),
	.Q8(k7ddrphy_bitslip551[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_98 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed55),
	.ODATAIN(k7ddrphy_dq_o_nodelay55)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_55 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay55),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[6] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed55)
);

IOBUF IOBUF_55(
	.I(k7ddrphy_dq_o_delayed55),
	.T(k7ddrphy_dq_t55),
	.IO(ddram_dq[55]),
	.O(k7ddrphy_dq_i_nodelay55)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_99 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip560[0]),
	.D2(k7ddrphy_bitslip560[1]),
	.D3(k7ddrphy_bitslip560[2]),
	.D4(k7ddrphy_bitslip560[3]),
	.D5(k7ddrphy_bitslip560[4]),
	.D6(k7ddrphy_bitslip560[5]),
	.D7(k7ddrphy_bitslip560[6]),
	.D8(k7ddrphy_bitslip560[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay56),
	.TQ(k7ddrphy_dq_t56)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_56 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed56),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip561[7]),
	.Q2(k7ddrphy_bitslip561[6]),
	.Q3(k7ddrphy_bitslip561[5]),
	.Q4(k7ddrphy_bitslip561[4]),
	.Q5(k7ddrphy_bitslip561[3]),
	.Q6(k7ddrphy_bitslip561[2]),
	.Q7(k7ddrphy_bitslip561[1]),
	.Q8(k7ddrphy_bitslip561[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_99 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed56),
	.ODATAIN(k7ddrphy_dq_o_nodelay56)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_56 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay56),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed56)
);

IOBUF IOBUF_56(
	.I(k7ddrphy_dq_o_delayed56),
	.T(k7ddrphy_dq_t56),
	.IO(ddram_dq[56]),
	.O(k7ddrphy_dq_i_nodelay56)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_100 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip570[0]),
	.D2(k7ddrphy_bitslip570[1]),
	.D3(k7ddrphy_bitslip570[2]),
	.D4(k7ddrphy_bitslip570[3]),
	.D5(k7ddrphy_bitslip570[4]),
	.D6(k7ddrphy_bitslip570[5]),
	.D7(k7ddrphy_bitslip570[6]),
	.D8(k7ddrphy_bitslip570[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay57),
	.TQ(k7ddrphy_dq_t57)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_57 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed57),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip571[7]),
	.Q2(k7ddrphy_bitslip571[6]),
	.Q3(k7ddrphy_bitslip571[5]),
	.Q4(k7ddrphy_bitslip571[4]),
	.Q5(k7ddrphy_bitslip571[3]),
	.Q6(k7ddrphy_bitslip571[2]),
	.Q7(k7ddrphy_bitslip571[1]),
	.Q8(k7ddrphy_bitslip571[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_100 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed57),
	.ODATAIN(k7ddrphy_dq_o_nodelay57)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_57 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay57),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed57)
);

IOBUF IOBUF_57(
	.I(k7ddrphy_dq_o_delayed57),
	.T(k7ddrphy_dq_t57),
	.IO(ddram_dq[57]),
	.O(k7ddrphy_dq_i_nodelay57)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_101 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip580[0]),
	.D2(k7ddrphy_bitslip580[1]),
	.D3(k7ddrphy_bitslip580[2]),
	.D4(k7ddrphy_bitslip580[3]),
	.D5(k7ddrphy_bitslip580[4]),
	.D6(k7ddrphy_bitslip580[5]),
	.D7(k7ddrphy_bitslip580[6]),
	.D8(k7ddrphy_bitslip580[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay58),
	.TQ(k7ddrphy_dq_t58)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_58 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed58),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip581[7]),
	.Q2(k7ddrphy_bitslip581[6]),
	.Q3(k7ddrphy_bitslip581[5]),
	.Q4(k7ddrphy_bitslip581[4]),
	.Q5(k7ddrphy_bitslip581[3]),
	.Q6(k7ddrphy_bitslip581[2]),
	.Q7(k7ddrphy_bitslip581[1]),
	.Q8(k7ddrphy_bitslip581[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_101 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed58),
	.ODATAIN(k7ddrphy_dq_o_nodelay58)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_58 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay58),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed58)
);

IOBUF IOBUF_58(
	.I(k7ddrphy_dq_o_delayed58),
	.T(k7ddrphy_dq_t58),
	.IO(ddram_dq[58]),
	.O(k7ddrphy_dq_i_nodelay58)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_102 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip590[0]),
	.D2(k7ddrphy_bitslip590[1]),
	.D3(k7ddrphy_bitslip590[2]),
	.D4(k7ddrphy_bitslip590[3]),
	.D5(k7ddrphy_bitslip590[4]),
	.D6(k7ddrphy_bitslip590[5]),
	.D7(k7ddrphy_bitslip590[6]),
	.D8(k7ddrphy_bitslip590[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay59),
	.TQ(k7ddrphy_dq_t59)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_59 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed59),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip591[7]),
	.Q2(k7ddrphy_bitslip591[6]),
	.Q3(k7ddrphy_bitslip591[5]),
	.Q4(k7ddrphy_bitslip591[4]),
	.Q5(k7ddrphy_bitslip591[3]),
	.Q6(k7ddrphy_bitslip591[2]),
	.Q7(k7ddrphy_bitslip591[1]),
	.Q8(k7ddrphy_bitslip591[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_102 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed59),
	.ODATAIN(k7ddrphy_dq_o_nodelay59)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_59 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay59),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed59)
);

IOBUF IOBUF_59(
	.I(k7ddrphy_dq_o_delayed59),
	.T(k7ddrphy_dq_t59),
	.IO(ddram_dq[59]),
	.O(k7ddrphy_dq_i_nodelay59)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_103 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip600[0]),
	.D2(k7ddrphy_bitslip600[1]),
	.D3(k7ddrphy_bitslip600[2]),
	.D4(k7ddrphy_bitslip600[3]),
	.D5(k7ddrphy_bitslip600[4]),
	.D6(k7ddrphy_bitslip600[5]),
	.D7(k7ddrphy_bitslip600[6]),
	.D8(k7ddrphy_bitslip600[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay60),
	.TQ(k7ddrphy_dq_t60)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_60 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed60),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip601[7]),
	.Q2(k7ddrphy_bitslip601[6]),
	.Q3(k7ddrphy_bitslip601[5]),
	.Q4(k7ddrphy_bitslip601[4]),
	.Q5(k7ddrphy_bitslip601[3]),
	.Q6(k7ddrphy_bitslip601[2]),
	.Q7(k7ddrphy_bitslip601[1]),
	.Q8(k7ddrphy_bitslip601[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_103 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed60),
	.ODATAIN(k7ddrphy_dq_o_nodelay60)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_60 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay60),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed60)
);

IOBUF IOBUF_60(
	.I(k7ddrphy_dq_o_delayed60),
	.T(k7ddrphy_dq_t60),
	.IO(ddram_dq[60]),
	.O(k7ddrphy_dq_i_nodelay60)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_104 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip610[0]),
	.D2(k7ddrphy_bitslip610[1]),
	.D3(k7ddrphy_bitslip610[2]),
	.D4(k7ddrphy_bitslip610[3]),
	.D5(k7ddrphy_bitslip610[4]),
	.D6(k7ddrphy_bitslip610[5]),
	.D7(k7ddrphy_bitslip610[6]),
	.D8(k7ddrphy_bitslip610[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay61),
	.TQ(k7ddrphy_dq_t61)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_61 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed61),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip611[7]),
	.Q2(k7ddrphy_bitslip611[6]),
	.Q3(k7ddrphy_bitslip611[5]),
	.Q4(k7ddrphy_bitslip611[4]),
	.Q5(k7ddrphy_bitslip611[3]),
	.Q6(k7ddrphy_bitslip611[2]),
	.Q7(k7ddrphy_bitslip611[1]),
	.Q8(k7ddrphy_bitslip611[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_104 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed61),
	.ODATAIN(k7ddrphy_dq_o_nodelay61)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_61 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay61),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed61)
);

IOBUF IOBUF_61(
	.I(k7ddrphy_dq_o_delayed61),
	.T(k7ddrphy_dq_t61),
	.IO(ddram_dq[61]),
	.O(k7ddrphy_dq_i_nodelay61)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_105 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip620[0]),
	.D2(k7ddrphy_bitslip620[1]),
	.D3(k7ddrphy_bitslip620[2]),
	.D4(k7ddrphy_bitslip620[3]),
	.D5(k7ddrphy_bitslip620[4]),
	.D6(k7ddrphy_bitslip620[5]),
	.D7(k7ddrphy_bitslip620[6]),
	.D8(k7ddrphy_bitslip620[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay62),
	.TQ(k7ddrphy_dq_t62)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_62 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed62),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip621[7]),
	.Q2(k7ddrphy_bitslip621[6]),
	.Q3(k7ddrphy_bitslip621[5]),
	.Q4(k7ddrphy_bitslip621[4]),
	.Q5(k7ddrphy_bitslip621[3]),
	.Q6(k7ddrphy_bitslip621[2]),
	.Q7(k7ddrphy_bitslip621[1]),
	.Q8(k7ddrphy_bitslip621[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_105 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed62),
	.ODATAIN(k7ddrphy_dq_o_nodelay62)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_62 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay62),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed62)
);

IOBUF IOBUF_62(
	.I(k7ddrphy_dq_o_delayed62),
	.T(k7ddrphy_dq_t62),
	.IO(ddram_dq[62]),
	.O(k7ddrphy_dq_i_nodelay62)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_106 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(k7ddrphy_bitslip630[0]),
	.D2(k7ddrphy_bitslip630[1]),
	.D3(k7ddrphy_bitslip630[2]),
	.D4(k7ddrphy_bitslip630[3]),
	.D5(k7ddrphy_bitslip630[4]),
	.D6(k7ddrphy_bitslip630[5]),
	.D7(k7ddrphy_bitslip630[6]),
	.D8(k7ddrphy_bitslip630[7]),
	.OCE(1'd1),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.T1((~k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(k7ddrphy_dq_o_nodelay63),
	.TQ(k7ddrphy_dq_t63)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_63 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(k7ddrphy_dq_i_delayed63),
	.RST((sys_rst | k7ddrphy_rst_storage)),
	.Q1(k7ddrphy_bitslip631[7]),
	.Q2(k7ddrphy_bitslip631[6]),
	.Q3(k7ddrphy_bitslip631[5]),
	.Q4(k7ddrphy_bitslip631[4]),
	.Q5(k7ddrphy_bitslip631[3]),
	.Q6(k7ddrphy_bitslip631[2]),
	.Q7(k7ddrphy_bitslip631[1]),
	.Q8(k7ddrphy_bitslip631[0])
);

ODELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("ODATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.ODELAY_TYPE("VARIABLE"),
	.ODELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) ODELAYE2_106 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_inc_re)),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_wdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_o_delayed63),
	.ODATAIN(k7ddrphy_dq_o_nodelay63)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_63 (
	.C(sys_clk),
	.CE((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(k7ddrphy_dq_i_nodelay63),
	.INC(1'd1),
	.LD(((k7ddrphy_dly_sel_storage[7] & k7ddrphy_rdly_dq_rst_re) | k7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(k7ddrphy_dq_i_delayed63)
);

IOBUF IOBUF_63(
	.I(k7ddrphy_dq_o_delayed63),
	.T(k7ddrphy_dq_t63),
	.IO(ddram_dq[63]),
	.O(k7ddrphy_dq_i_nodelay63)
);

//------------------------------------------------------------------------------
// Memory storage_2: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_2[0:7];
reg [23:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (soclinux_sdram_bankmachine0_wrport_we)
		storage_2[soclinux_sdram_bankmachine0_wrport_adr] <= soclinux_sdram_bankmachine0_wrport_dat_w;
	storage_2_dat0 <= storage_2[soclinux_sdram_bankmachine0_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_sdram_bankmachine0_wrport_dat_r = storage_2_dat0;
assign soclinux_sdram_bankmachine0_rdport_dat_r = storage_2[soclinux_sdram_bankmachine0_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_3[0:7];
reg [23:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (soclinux_sdram_bankmachine1_wrport_we)
		storage_3[soclinux_sdram_bankmachine1_wrport_adr] <= soclinux_sdram_bankmachine1_wrport_dat_w;
	storage_3_dat0 <= storage_3[soclinux_sdram_bankmachine1_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_sdram_bankmachine1_wrport_dat_r = storage_3_dat0;
assign soclinux_sdram_bankmachine1_rdport_dat_r = storage_3[soclinux_sdram_bankmachine1_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_4[0:7];
reg [23:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (soclinux_sdram_bankmachine2_wrport_we)
		storage_4[soclinux_sdram_bankmachine2_wrport_adr] <= soclinux_sdram_bankmachine2_wrport_dat_w;
	storage_4_dat0 <= storage_4[soclinux_sdram_bankmachine2_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_sdram_bankmachine2_wrport_dat_r = storage_4_dat0;
assign soclinux_sdram_bankmachine2_rdport_dat_r = storage_4[soclinux_sdram_bankmachine2_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_5[0:7];
reg [23:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (soclinux_sdram_bankmachine3_wrport_we)
		storage_5[soclinux_sdram_bankmachine3_wrport_adr] <= soclinux_sdram_bankmachine3_wrport_dat_w;
	storage_5_dat0 <= storage_5[soclinux_sdram_bankmachine3_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_sdram_bankmachine3_wrport_dat_r = storage_5_dat0;
assign soclinux_sdram_bankmachine3_rdport_dat_r = storage_5[soclinux_sdram_bankmachine3_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_6: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_6[0:7];
reg [23:0] storage_6_dat0;
always @(posedge sys_clk) begin
	if (soclinux_sdram_bankmachine4_wrport_we)
		storage_6[soclinux_sdram_bankmachine4_wrport_adr] <= soclinux_sdram_bankmachine4_wrport_dat_w;
	storage_6_dat0 <= storage_6[soclinux_sdram_bankmachine4_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_sdram_bankmachine4_wrport_dat_r = storage_6_dat0;
assign soclinux_sdram_bankmachine4_rdport_dat_r = storage_6[soclinux_sdram_bankmachine4_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_7: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_7[0:7];
reg [23:0] storage_7_dat0;
always @(posedge sys_clk) begin
	if (soclinux_sdram_bankmachine5_wrport_we)
		storage_7[soclinux_sdram_bankmachine5_wrport_adr] <= soclinux_sdram_bankmachine5_wrport_dat_w;
	storage_7_dat0 <= storage_7[soclinux_sdram_bankmachine5_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_sdram_bankmachine5_wrport_dat_r = storage_7_dat0;
assign soclinux_sdram_bankmachine5_rdport_dat_r = storage_7[soclinux_sdram_bankmachine5_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_8: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_8[0:7];
reg [23:0] storage_8_dat0;
always @(posedge sys_clk) begin
	if (soclinux_sdram_bankmachine6_wrport_we)
		storage_8[soclinux_sdram_bankmachine6_wrport_adr] <= soclinux_sdram_bankmachine6_wrport_dat_w;
	storage_8_dat0 <= storage_8[soclinux_sdram_bankmachine6_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_sdram_bankmachine6_wrport_dat_r = storage_8_dat0;
assign soclinux_sdram_bankmachine6_rdport_dat_r = storage_8[soclinux_sdram_bankmachine6_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_9: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_9[0:7];
reg [23:0] storage_9_dat0;
always @(posedge sys_clk) begin
	if (soclinux_sdram_bankmachine7_wrport_we)
		storage_9[soclinux_sdram_bankmachine7_wrport_adr] <= soclinux_sdram_bankmachine7_wrport_dat_w;
	storage_9_dat0 <= storage_9[soclinux_sdram_bankmachine7_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_sdram_bankmachine7_wrport_dat_r = storage_9_dat0;
assign soclinux_sdram_bankmachine7_rdport_dat_r = storage_9[soclinux_sdram_bankmachine7_rdport_adr];


//------------------------------------------------------------------------------
// Memory tag_mem: 128-words x 28-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 28 
reg [27:0] tag_mem[0:127];
reg [6:0] tag_mem_adr0;
always @(posedge sys_clk) begin
	if (soclinux_tag_port_we)
		tag_mem[soclinux_tag_port_adr] <= soclinux_tag_port_dat_w;
	tag_mem_adr0 <= soclinux_tag_port_adr;
end
assign soclinux_tag_port_dat_r = tag_mem[tag_mem_adr0];


BUFG BUFG_3(
	.I(eth_clocks_rx),
	.O(eth_rx_clk)
);

BUFG BUFG_4(
	.I(ethphy_eth_tx_clk),
	.O(eth_tx_clk)
);

assign eth_mdio = ethphy_data_oe ? ethphy_data_w : 1'bz;
assign ethphy_data_r = eth_mdio;

//------------------------------------------------------------------------------
// Memory storage_10: 32-words x 42-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 42 
// Port 1 | Read: Sync  | Write: ---- | 
reg [41:0] storage_10[0:31];
reg [41:0] storage_10_dat0;
reg [41:0] storage_10_dat1;
always @(posedge sys_clk) begin
	if (soclinux_ethmac_tx_cdc_cdc_wrport_we)
		storage_10[soclinux_ethmac_tx_cdc_cdc_wrport_adr] <= soclinux_ethmac_tx_cdc_cdc_wrport_dat_w;
	storage_10_dat0 <= storage_10[soclinux_ethmac_tx_cdc_cdc_wrport_adr];
end
always @(posedge eth_tx_clk) begin
	storage_10_dat1 <= storage_10[soclinux_ethmac_tx_cdc_cdc_rdport_adr];
end
assign soclinux_ethmac_tx_cdc_cdc_wrport_dat_r = storage_10_dat0;
assign soclinux_ethmac_tx_cdc_cdc_rdport_dat_r = storage_10_dat1;


//------------------------------------------------------------------------------
// Memory storage_11: 5-words x 12-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 12 
// Port 1 | Read: Async | Write: ---- | 
reg [11:0] storage_11[0:4];
reg [11:0] storage_11_dat0;
always @(posedge eth_rx_clk) begin
	if (soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_we)
		storage_11[soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr] <= soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_w;
	storage_11_dat0 <= storage_11[soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr];
end
always @(posedge eth_rx_clk) begin
end
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_r = storage_11_dat0;
assign soclinux_ethmac_liteethmaccrc32checker_syncfifo_rdport_dat_r = storage_11[soclinux_ethmac_liteethmaccrc32checker_syncfifo_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_12: 32-words x 42-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 42 
// Port 1 | Read: Sync  | Write: ---- | 
reg [41:0] storage_12[0:31];
reg [41:0] storage_12_dat0;
reg [41:0] storage_12_dat1;
always @(posedge eth_rx_clk) begin
	if (soclinux_ethmac_rx_cdc_cdc_wrport_we)
		storage_12[soclinux_ethmac_rx_cdc_cdc_wrport_adr] <= soclinux_ethmac_rx_cdc_cdc_wrport_dat_w;
	storage_12_dat0 <= storage_12[soclinux_ethmac_rx_cdc_cdc_wrport_adr];
end
always @(posedge sys_clk) begin
	storage_12_dat1 <= storage_12[soclinux_ethmac_rx_cdc_cdc_rdport_adr];
end
assign soclinux_ethmac_rx_cdc_cdc_wrport_dat_r = storage_12_dat0;
assign soclinux_ethmac_rx_cdc_cdc_rdport_dat_r = storage_12_dat1;


//------------------------------------------------------------------------------
// Memory storage_13: 2-words x 14-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 14 
// Port 1 | Read: Async | Write: ---- | 
reg [13:0] storage_13[0:1];
reg [13:0] storage_13_dat0;
always @(posedge sys_clk) begin
	if (soclinux_ethmac_sram61_we)
		storage_13[soclinux_ethmac_sram59_adr] <= soclinux_ethmac_sram62_dat_w;
	storage_13_dat0 <= storage_13[soclinux_ethmac_sram59_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_ethmac_sram60_dat_r = storage_13_dat0;
assign soclinux_ethmac_sram65_dat_r = storage_13[soclinux_ethmac_sram64_adr];


//------------------------------------------------------------------------------
// Memory mem_1: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 32 
// Port 1 | Read: Sync  | Write: ---- | 
reg [31:0] mem_1[0:382];
reg [8:0] mem_1_adr0;
reg [31:0] mem_1_dat1;
always @(posedge sys_clk) begin
	if (soclinux_ethmac_sram77_we)
		mem_1[soclinux_ethmac_sram75_adr] <= soclinux_ethmac_sram78_dat_w;
	mem_1_adr0 <= soclinux_ethmac_sram75_adr;
end
always @(posedge sys_clk) begin
	mem_1_dat1 <= mem_1[soclinux_ethmac_sram2_adr];
end
assign soclinux_ethmac_sram76_dat_r = mem_1[mem_1_adr0];
assign soclinux_ethmac_sram2_dat_r = mem_1_dat1;


//------------------------------------------------------------------------------
// Memory mem_2: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 32 
// Port 1 | Read: Sync  | Write: ---- | 
reg [31:0] mem_2[0:382];
reg [8:0] mem_2_adr0;
reg [31:0] mem_2_dat1;
always @(posedge sys_clk) begin
	if (soclinux_ethmac_sram81_we)
		mem_2[soclinux_ethmac_sram79_adr] <= soclinux_ethmac_sram82_dat_w;
	mem_2_adr0 <= soclinux_ethmac_sram79_adr;
end
always @(posedge sys_clk) begin
	mem_2_dat1 <= mem_2[soclinux_ethmac_sram3_adr];
end
assign soclinux_ethmac_sram80_dat_r = mem_2[mem_2_adr0];
assign soclinux_ethmac_sram3_dat_r = mem_2_dat1;


//------------------------------------------------------------------------------
// Memory storage_14: 2-words x 14-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 14 
// Port 1 | Read: Async | Write: ---- | 
reg [13:0] storage_14[0:1];
reg [13:0] storage_14_dat0;
always @(posedge sys_clk) begin
	if (soclinux_ethmac_sram147_we)
		storage_14[soclinux_ethmac_sram145_adr] <= soclinux_ethmac_sram148_dat_w;
	storage_14_dat0 <= storage_14[soclinux_ethmac_sram145_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_ethmac_sram146_dat_r = storage_14_dat0;
assign soclinux_ethmac_sram151_dat_r = storage_14[soclinux_ethmac_sram150_adr];


//------------------------------------------------------------------------------
// Memory mem_3: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
// Port 1 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_3[0:382];
reg [8:0] mem_3_adr0;
reg [8:0] mem_3_adr1;
always @(posedge sys_clk) begin
	if (soclinux_ethmac_sram163_re)
		mem_3_adr0 <= soclinux_ethmac_sram161_adr;
end
always @(posedge sys_clk) begin
	if (soclinux_ethmac_sram4_we[0])
		mem_3[soclinux_ethmac_sram4_adr][7:0] <= soclinux_ethmac_sram4_dat_w[7:0];
	if (soclinux_ethmac_sram4_we[1])
		mem_3[soclinux_ethmac_sram4_adr][15:8] <= soclinux_ethmac_sram4_dat_w[15:8];
	if (soclinux_ethmac_sram4_we[2])
		mem_3[soclinux_ethmac_sram4_adr][23:16] <= soclinux_ethmac_sram4_dat_w[23:16];
	if (soclinux_ethmac_sram4_we[3])
		mem_3[soclinux_ethmac_sram4_adr][31:24] <= soclinux_ethmac_sram4_dat_w[31:24];
	mem_3_adr1 <= soclinux_ethmac_sram4_adr;
end
assign soclinux_ethmac_sram162_dat_r = mem_3[mem_3_adr0];
assign soclinux_ethmac_sram4_dat_r = mem_3[mem_3_adr1];


//------------------------------------------------------------------------------
// Memory mem_4: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
// Port 1 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_4[0:382];
reg [8:0] mem_4_adr0;
reg [8:0] mem_4_adr1;
always @(posedge sys_clk) begin
	if (soclinux_ethmac_sram166_re)
		mem_4_adr0 <= soclinux_ethmac_sram164_adr;
end
always @(posedge sys_clk) begin
	if (soclinux_ethmac_sram5_we[0])
		mem_4[soclinux_ethmac_sram5_adr][7:0] <= soclinux_ethmac_sram5_dat_w[7:0];
	if (soclinux_ethmac_sram5_we[1])
		mem_4[soclinux_ethmac_sram5_adr][15:8] <= soclinux_ethmac_sram5_dat_w[15:8];
	if (soclinux_ethmac_sram5_we[2])
		mem_4[soclinux_ethmac_sram5_adr][23:16] <= soclinux_ethmac_sram5_dat_w[23:16];
	if (soclinux_ethmac_sram5_we[3])
		mem_4[soclinux_ethmac_sram5_adr][31:24] <= soclinux_ethmac_sram5_dat_w[31:24];
	mem_4_adr1 <= soclinux_ethmac_sram5_adr;
end
assign soclinux_ethmac_sram165_dat_r = mem_4[mem_4_adr0];
assign soclinux_ethmac_sram5_dat_r = mem_4[mem_4_adr1];


//------------------------------------------------------------------------------
// Memory storage_15: 8-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Async | Write: ---- | 
reg [9:0] storage_15[0:7];
reg [9:0] storage_15_dat0;
always @(posedge sys_clk) begin
	if (sdcore_fifo_wrport_we)
		storage_15[sdcore_fifo_wrport_adr] <= sdcore_fifo_wrport_dat_w;
	storage_15_dat0 <= storage_15[sdcore_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdcore_fifo_wrport_dat_r = storage_15_dat0;
assign sdcore_fifo_rdport_dat_r = storage_15[sdcore_fifo_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_16: 512-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_16[0:511];
reg [9:0] storage_16_dat0;
reg [9:0] storage_16_dat1;
always @(posedge sys_clk) begin
	if (sdblock2mem_fifo_wrport_we)
		storage_16[sdblock2mem_fifo_wrport_adr] <= sdblock2mem_fifo_wrport_dat_w;
	storage_16_dat0 <= storage_16[sdblock2mem_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (sdblock2mem_fifo_rdport_re)
		storage_16_dat1 <= storage_16[sdblock2mem_fifo_rdport_adr];
end
assign sdblock2mem_fifo_wrport_dat_r = storage_16_dat0;
assign sdblock2mem_fifo_rdport_dat_r = storage_16_dat1;


//------------------------------------------------------------------------------
// Memory storage_17: 512-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_17[0:511];
reg [9:0] storage_17_dat0;
reg [9:0] storage_17_dat1;
always @(posedge sys_clk) begin
	if (sdmem2block_fifo_wrport_we)
		storage_17[sdmem2block_fifo_wrport_adr] <= sdmem2block_fifo_wrport_dat_w;
	storage_17_dat0 <= storage_17[sdmem2block_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (sdmem2block_fifo_rdport_re)
		storage_17_dat1 <= storage_17[sdmem2block_fifo_rdport_adr];
end
assign sdmem2block_fifo_wrport_dat_r = storage_17_dat0;
assign sdmem2block_fifo_rdport_dat_r = storage_17_dat1;


XADC #(
	.INIT_40(16'd36864),
	.INIT_41(14'd12016),
	.INIT_42(11'd1024),
	.INIT_48(15'd18177),
	.INIT_49(4'd15),
	.INIT_4A(15'd18176),
	.INIT_4B(1'd0),
	.INIT_4C(1'd0),
	.INIT_4D(1'd0),
	.INIT_4E(1'd0),
	.INIT_4F(1'd0),
	.INIT_50(16'd46573),
	.INIT_51(15'd22937),
	.INIT_52(16'd41287),
	.INIT_53(16'd56797),
	.INIT_54(16'd43322),
	.INIT_55(15'd20753),
	.INIT_56(16'd37355),
	.INIT_57(16'd44622),
	.INIT_58(15'd22937),
	.INIT_5C(15'd20753)
) XADC (
	.CONVST(1'd0),
	.CONVSTCLK(1'd0),
	.DADDR(dadr),
	.DCLK(sys_clk),
	.DEN(den),
	.DI(di),
	.DWE(dwe),
	.RESET(sys_rst),
	.VAUXN(1'd0),
	.VAUXP(1'd0),
	.VN(1'd0),
	.VP(1'd0),
	.ALM(alarm),
	.BUSY(busy),
	.CHANNEL(channel),
	.DO(do_1),
	.DRDY(drdy),
	.EOC(eoc),
	.EOS(eos),
	.OT(ot)
);

BUFG BUFG_5(
	.I(clkout),
	.O(clkout_buf)
);

SNN_3x2 SNN_3x2(
	.clk(snn_3x2_clk),
	.load_end(snn_3x2_load_end_storage),
	.neuron_inst_wdata(snn_3x2_neuron_inst_storage),
	.neuron_inst_winc(snn_3x2_neuron_inst_re),
	.next_core(snn_3x2_next_core_storage),
	.packet_out_rinc(snn_3x2_packet_out_rinc_re),
	.packet_wdata(snn_3x2_packet_wdata_storage),
	.packet_winc(snn_3x2_packet_wdata_re),
	.param_winc(snn_3x2_param11_re),
	.parameter_in(snn_3x2_param_wdata),
	.reset_n((~sys_rst)),
	.spike_en(snn_3x2_spike_en_storage),
	.spike_out_rinc(snn_3x2_spike_out_rinc_re),
	.sys_clk(sys_clk),
	.sys_reset_n((~sys_rst)),
	.complete(snn_3x2_complete_dat_w),
	.grid_state(snn_3x2_grid_state_dat_w),
	.msb_param_snn(snn_3x2_msb_param_snn_dat_w),
	.neuron_inst_wfull(snn_3x2_neuron_inst_wfull),
	.next_core_en(snn_3x2_next_core_en_dat_w),
	.packet_out(snn_3x2_packet_out_dat_w),
	.packet_out_rempty(snn_3x2_packet_out_rempty),
	.packet_wfull(snn_3x2_packet_wfull),
	.param_wfull(snn_3x2_param_wfull),
	.spike_out(snn_3x2_spike_out),
	.spike_out_rempty(snn_3x2_spike_out_rempty),
	.tick_ready(snn_3x2_tick_ready_dat_w)
);

FDCE FDCE(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(crg_reset),
	.Q(soclinux_reset0)
);

FDCE FDCE_1(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(soclinux_reset0),
	.Q(soclinux_reset1)
);

FDCE FDCE_2(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(soclinux_reset1),
	.Q(soclinux_reset2)
);

FDCE FDCE_3(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(soclinux_reset2),
	.Q(soclinux_reset3)
);

FDCE FDCE_4(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(soclinux_reset3),
	.Q(soclinux_reset4)
);

FDCE FDCE_5(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(soclinux_reset4),
	.Q(soclinux_reset5)
);

FDCE FDCE_6(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(soclinux_reset5),
	.Q(soclinux_reset6)
);

FDCE FDCE_7(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(soclinux_reset6),
	.Q(soclinux_reset7)
);

MMCME2_ADV #(
	.BANDWIDTH("OPTIMIZED"),
	.CLKFBOUT_MULT_F(3'd5),
	.CLKIN1_PERIOD(5.0),
	.CLKOUT0_DIVIDE_F(4'd8),
	.CLKOUT0_PHASE(1'd0),
	.CLKOUT1_DIVIDE(2'd2),
	.CLKOUT1_PHASE(1'd0),
	.CLKOUT2_DIVIDE(3'd5),
	.CLKOUT2_PHASE(1'd0),
	.CLKOUT3_DIVIDE(4'd10),
	.CLKOUT3_PHASE(1'd0),
	.DIVCLK_DIVIDE(1'd1),
	.REF_JITTER1(0.01)
) MMCME2_ADV (
	.CLKFBIN(soclinux_mmcm_fb),
	.CLKIN1(crg_clkin),
	.PWRDWN(crg_power_down),
	.RST(soclinux_reset7),
	.CLKFBOUT(soclinux_mmcm_fb),
	.CLKOUT0(crg_clkout0),
	.CLKOUT1(crg_clkout1),
	.CLKOUT2(crg_clkout2),
	.CLKOUT3(clkout),
	.LOCKED(crg_locked)
);

VexRiscvLitexSmpCluster_Cc2_Iw64Is8192Iy2_Dw64Ds8192Dy2_ITs4DTs4_Cdma_Ood_Wm VexRiscvLitexSmpCluster_Cc2_Iw64Is8192Iy2_Dw64Ds8192Dy2_ITs4DTs4_Cdma_Ood_Wm(
	.clintWishbone_ADR(soclinux_clintbus_adr),
	.clintWishbone_CYC(soclinux_clintbus_cyc),
	.clintWishbone_DAT_MOSI(soclinux_clintbus_dat_w),
	.clintWishbone_STB(soclinux_clintbus_stb),
	.clintWishbone_WE(soclinux_clintbus_we),
	.debugCd_external_clk(sys_clk),
	.debugCd_external_reset((sys_rst | soclinux_cpu_reset)),
	.debugPort_capture(soclinux_cpu_jtag_capture),
	.debugPort_enable(soclinux_cpu_jtag_enable),
	.debugPort_reset(soclinux_cpu_jtag_reset),
	.debugPort_shift(soclinux_cpu_jtag_shift),
	.debugPort_tdi(soclinux_cpu_jtag_tdi),
	.debugPort_update(soclinux_cpu_jtag_update),
	.dma_wishbone_ADR(soclinux_cpu_dma_bus_adr),
	.dma_wishbone_CYC(soclinux_cpu_dma_bus_cyc),
	.dma_wishbone_DAT_MOSI(soclinux_cpu_dma_bus_dat_w),
	.dma_wishbone_SEL(soclinux_cpu_dma_bus_sel),
	.dma_wishbone_STB((soclinux_cpu_dma_bus_stb & (~soclinux_cpu_dma_bus_inhibit))),
	.dma_wishbone_WE(soclinux_cpu_dma_bus_we),
	.interrupts(soclinux_cpu_interrupt),
	.jtag_clk(soclinux_cpu_jtag_clk),
	.peripheral_ACK(soclinux_cpu_pbus_ack),
	.peripheral_DAT_MISO(soclinux_cpu_pbus_dat_r),
	.peripheral_ERR(soclinux_cpu_pbus_err),
	.plicWishbone_ADR(soclinux_plicbus_adr),
	.plicWishbone_CYC(soclinux_plicbus_cyc),
	.plicWishbone_DAT_MOSI(soclinux_plicbus_dat_w),
	.plicWishbone_STB(soclinux_plicbus_stb),
	.plicWishbone_WE(soclinux_plicbus_we),
	.clintWishbone_ACK(soclinux_clintbus_ack),
	.clintWishbone_DAT_MISO(soclinux_clintbus_dat_r),
	.debugPort_tdo(soclinux_cpu_jtag_tdo),
	.dma_wishbone_ACK(soclinux_cpu_dma_bus_ack),
	.dma_wishbone_DAT_MISO(soclinux_cpu_dma_bus_dat_r),
	.dma_wishbone_STALL(soclinux_cpu_dma_bus_stall),
	.peripheral_ADR(soclinux_cpu_pbus_adr),
	.peripheral_BTE(soclinux_cpu_pbus_bte),
	.peripheral_CTI(soclinux_cpu_pbus_cti),
	.peripheral_CYC(soclinux_cpu_pbus_cyc),
	.peripheral_DAT_MOSI(soclinux_cpu_pbus_dat_w),
	.peripheral_SEL(soclinux_cpu_pbus_sel),
	.peripheral_STB(soclinux_cpu_pbus_stb),
	.peripheral_WE(soclinux_cpu_pbus_we),
	.plicWishbone_ACK(soclinux_plicbus_ack),
	.plicWishbone_DAT_MISO(soclinux_plicbus_dat_r)
);

//------------------------------------------------------------------------------
// Memory data_mem_grain0: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain0[0:127];
reg [6:0] data_mem_grain0_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[0])
		data_mem_grain0[soclinux_data_port_adr] <= soclinux_data_port_dat_w[7:0];
	data_mem_grain0_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[7:0] = data_mem_grain0[data_mem_grain0_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain1: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain1[0:127];
reg [6:0] data_mem_grain1_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[1])
		data_mem_grain1[soclinux_data_port_adr] <= soclinux_data_port_dat_w[15:8];
	data_mem_grain1_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[15:8] = data_mem_grain1[data_mem_grain1_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain2: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain2[0:127];
reg [6:0] data_mem_grain2_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[2])
		data_mem_grain2[soclinux_data_port_adr] <= soclinux_data_port_dat_w[23:16];
	data_mem_grain2_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[23:16] = data_mem_grain2[data_mem_grain2_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain3: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain3[0:127];
reg [6:0] data_mem_grain3_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[3])
		data_mem_grain3[soclinux_data_port_adr] <= soclinux_data_port_dat_w[31:24];
	data_mem_grain3_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[31:24] = data_mem_grain3[data_mem_grain3_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain4: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain4[0:127];
reg [6:0] data_mem_grain4_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[4])
		data_mem_grain4[soclinux_data_port_adr] <= soclinux_data_port_dat_w[39:32];
	data_mem_grain4_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[39:32] = data_mem_grain4[data_mem_grain4_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain5: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain5[0:127];
reg [6:0] data_mem_grain5_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[5])
		data_mem_grain5[soclinux_data_port_adr] <= soclinux_data_port_dat_w[47:40];
	data_mem_grain5_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[47:40] = data_mem_grain5[data_mem_grain5_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain6: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain6[0:127];
reg [6:0] data_mem_grain6_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[6])
		data_mem_grain6[soclinux_data_port_adr] <= soclinux_data_port_dat_w[55:48];
	data_mem_grain6_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[55:48] = data_mem_grain6[data_mem_grain6_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain7: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain7[0:127];
reg [6:0] data_mem_grain7_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[7])
		data_mem_grain7[soclinux_data_port_adr] <= soclinux_data_port_dat_w[63:56];
	data_mem_grain7_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[63:56] = data_mem_grain7[data_mem_grain7_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain8: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain8[0:127];
reg [6:0] data_mem_grain8_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[8])
		data_mem_grain8[soclinux_data_port_adr] <= soclinux_data_port_dat_w[71:64];
	data_mem_grain8_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[71:64] = data_mem_grain8[data_mem_grain8_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain9: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain9[0:127];
reg [6:0] data_mem_grain9_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[9])
		data_mem_grain9[soclinux_data_port_adr] <= soclinux_data_port_dat_w[79:72];
	data_mem_grain9_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[79:72] = data_mem_grain9[data_mem_grain9_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain10: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain10[0:127];
reg [6:0] data_mem_grain10_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[10])
		data_mem_grain10[soclinux_data_port_adr] <= soclinux_data_port_dat_w[87:80];
	data_mem_grain10_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[87:80] = data_mem_grain10[data_mem_grain10_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain11: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain11[0:127];
reg [6:0] data_mem_grain11_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[11])
		data_mem_grain11[soclinux_data_port_adr] <= soclinux_data_port_dat_w[95:88];
	data_mem_grain11_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[95:88] = data_mem_grain11[data_mem_grain11_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain12: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain12[0:127];
reg [6:0] data_mem_grain12_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[12])
		data_mem_grain12[soclinux_data_port_adr] <= soclinux_data_port_dat_w[103:96];
	data_mem_grain12_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[103:96] = data_mem_grain12[data_mem_grain12_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain13: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain13[0:127];
reg [6:0] data_mem_grain13_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[13])
		data_mem_grain13[soclinux_data_port_adr] <= soclinux_data_port_dat_w[111:104];
	data_mem_grain13_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[111:104] = data_mem_grain13[data_mem_grain13_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain14: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain14[0:127];
reg [6:0] data_mem_grain14_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[14])
		data_mem_grain14[soclinux_data_port_adr] <= soclinux_data_port_dat_w[119:112];
	data_mem_grain14_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[119:112] = data_mem_grain14[data_mem_grain14_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain15: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain15[0:127];
reg [6:0] data_mem_grain15_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[15])
		data_mem_grain15[soclinux_data_port_adr] <= soclinux_data_port_dat_w[127:120];
	data_mem_grain15_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[127:120] = data_mem_grain15[data_mem_grain15_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain16: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain16[0:127];
reg [6:0] data_mem_grain16_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[16])
		data_mem_grain16[soclinux_data_port_adr] <= soclinux_data_port_dat_w[135:128];
	data_mem_grain16_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[135:128] = data_mem_grain16[data_mem_grain16_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain17: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain17[0:127];
reg [6:0] data_mem_grain17_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[17])
		data_mem_grain17[soclinux_data_port_adr] <= soclinux_data_port_dat_w[143:136];
	data_mem_grain17_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[143:136] = data_mem_grain17[data_mem_grain17_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain18: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain18[0:127];
reg [6:0] data_mem_grain18_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[18])
		data_mem_grain18[soclinux_data_port_adr] <= soclinux_data_port_dat_w[151:144];
	data_mem_grain18_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[151:144] = data_mem_grain18[data_mem_grain18_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain19: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain19[0:127];
reg [6:0] data_mem_grain19_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[19])
		data_mem_grain19[soclinux_data_port_adr] <= soclinux_data_port_dat_w[159:152];
	data_mem_grain19_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[159:152] = data_mem_grain19[data_mem_grain19_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain20: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain20[0:127];
reg [6:0] data_mem_grain20_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[20])
		data_mem_grain20[soclinux_data_port_adr] <= soclinux_data_port_dat_w[167:160];
	data_mem_grain20_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[167:160] = data_mem_grain20[data_mem_grain20_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain21: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain21[0:127];
reg [6:0] data_mem_grain21_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[21])
		data_mem_grain21[soclinux_data_port_adr] <= soclinux_data_port_dat_w[175:168];
	data_mem_grain21_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[175:168] = data_mem_grain21[data_mem_grain21_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain22: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain22[0:127];
reg [6:0] data_mem_grain22_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[22])
		data_mem_grain22[soclinux_data_port_adr] <= soclinux_data_port_dat_w[183:176];
	data_mem_grain22_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[183:176] = data_mem_grain22[data_mem_grain22_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain23: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain23[0:127];
reg [6:0] data_mem_grain23_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[23])
		data_mem_grain23[soclinux_data_port_adr] <= soclinux_data_port_dat_w[191:184];
	data_mem_grain23_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[191:184] = data_mem_grain23[data_mem_grain23_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain24: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain24[0:127];
reg [6:0] data_mem_grain24_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[24])
		data_mem_grain24[soclinux_data_port_adr] <= soclinux_data_port_dat_w[199:192];
	data_mem_grain24_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[199:192] = data_mem_grain24[data_mem_grain24_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain25: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain25[0:127];
reg [6:0] data_mem_grain25_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[25])
		data_mem_grain25[soclinux_data_port_adr] <= soclinux_data_port_dat_w[207:200];
	data_mem_grain25_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[207:200] = data_mem_grain25[data_mem_grain25_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain26: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain26[0:127];
reg [6:0] data_mem_grain26_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[26])
		data_mem_grain26[soclinux_data_port_adr] <= soclinux_data_port_dat_w[215:208];
	data_mem_grain26_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[215:208] = data_mem_grain26[data_mem_grain26_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain27: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain27[0:127];
reg [6:0] data_mem_grain27_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[27])
		data_mem_grain27[soclinux_data_port_adr] <= soclinux_data_port_dat_w[223:216];
	data_mem_grain27_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[223:216] = data_mem_grain27[data_mem_grain27_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain28: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain28[0:127];
reg [6:0] data_mem_grain28_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[28])
		data_mem_grain28[soclinux_data_port_adr] <= soclinux_data_port_dat_w[231:224];
	data_mem_grain28_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[231:224] = data_mem_grain28[data_mem_grain28_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain29: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain29[0:127];
reg [6:0] data_mem_grain29_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[29])
		data_mem_grain29[soclinux_data_port_adr] <= soclinux_data_port_dat_w[239:232];
	data_mem_grain29_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[239:232] = data_mem_grain29[data_mem_grain29_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain30: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain30[0:127];
reg [6:0] data_mem_grain30_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[30])
		data_mem_grain30[soclinux_data_port_adr] <= soclinux_data_port_dat_w[247:240];
	data_mem_grain30_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[247:240] = data_mem_grain30[data_mem_grain30_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain31: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain31[0:127];
reg [6:0] data_mem_grain31_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[31])
		data_mem_grain31[soclinux_data_port_adr] <= soclinux_data_port_dat_w[255:248];
	data_mem_grain31_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[255:248] = data_mem_grain31[data_mem_grain31_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain32: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain32[0:127];
reg [6:0] data_mem_grain32_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[32])
		data_mem_grain32[soclinux_data_port_adr] <= soclinux_data_port_dat_w[263:256];
	data_mem_grain32_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[263:256] = data_mem_grain32[data_mem_grain32_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain33: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain33[0:127];
reg [6:0] data_mem_grain33_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[33])
		data_mem_grain33[soclinux_data_port_adr] <= soclinux_data_port_dat_w[271:264];
	data_mem_grain33_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[271:264] = data_mem_grain33[data_mem_grain33_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain34: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain34[0:127];
reg [6:0] data_mem_grain34_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[34])
		data_mem_grain34[soclinux_data_port_adr] <= soclinux_data_port_dat_w[279:272];
	data_mem_grain34_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[279:272] = data_mem_grain34[data_mem_grain34_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain35: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain35[0:127];
reg [6:0] data_mem_grain35_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[35])
		data_mem_grain35[soclinux_data_port_adr] <= soclinux_data_port_dat_w[287:280];
	data_mem_grain35_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[287:280] = data_mem_grain35[data_mem_grain35_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain36: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain36[0:127];
reg [6:0] data_mem_grain36_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[36])
		data_mem_grain36[soclinux_data_port_adr] <= soclinux_data_port_dat_w[295:288];
	data_mem_grain36_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[295:288] = data_mem_grain36[data_mem_grain36_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain37: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain37[0:127];
reg [6:0] data_mem_grain37_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[37])
		data_mem_grain37[soclinux_data_port_adr] <= soclinux_data_port_dat_w[303:296];
	data_mem_grain37_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[303:296] = data_mem_grain37[data_mem_grain37_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain38: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain38[0:127];
reg [6:0] data_mem_grain38_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[38])
		data_mem_grain38[soclinux_data_port_adr] <= soclinux_data_port_dat_w[311:304];
	data_mem_grain38_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[311:304] = data_mem_grain38[data_mem_grain38_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain39: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain39[0:127];
reg [6:0] data_mem_grain39_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[39])
		data_mem_grain39[soclinux_data_port_adr] <= soclinux_data_port_dat_w[319:312];
	data_mem_grain39_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[319:312] = data_mem_grain39[data_mem_grain39_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain40: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain40[0:127];
reg [6:0] data_mem_grain40_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[40])
		data_mem_grain40[soclinux_data_port_adr] <= soclinux_data_port_dat_w[327:320];
	data_mem_grain40_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[327:320] = data_mem_grain40[data_mem_grain40_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain41: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain41[0:127];
reg [6:0] data_mem_grain41_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[41])
		data_mem_grain41[soclinux_data_port_adr] <= soclinux_data_port_dat_w[335:328];
	data_mem_grain41_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[335:328] = data_mem_grain41[data_mem_grain41_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain42: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain42[0:127];
reg [6:0] data_mem_grain42_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[42])
		data_mem_grain42[soclinux_data_port_adr] <= soclinux_data_port_dat_w[343:336];
	data_mem_grain42_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[343:336] = data_mem_grain42[data_mem_grain42_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain43: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain43[0:127];
reg [6:0] data_mem_grain43_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[43])
		data_mem_grain43[soclinux_data_port_adr] <= soclinux_data_port_dat_w[351:344];
	data_mem_grain43_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[351:344] = data_mem_grain43[data_mem_grain43_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain44: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain44[0:127];
reg [6:0] data_mem_grain44_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[44])
		data_mem_grain44[soclinux_data_port_adr] <= soclinux_data_port_dat_w[359:352];
	data_mem_grain44_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[359:352] = data_mem_grain44[data_mem_grain44_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain45: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain45[0:127];
reg [6:0] data_mem_grain45_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[45])
		data_mem_grain45[soclinux_data_port_adr] <= soclinux_data_port_dat_w[367:360];
	data_mem_grain45_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[367:360] = data_mem_grain45[data_mem_grain45_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain46: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain46[0:127];
reg [6:0] data_mem_grain46_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[46])
		data_mem_grain46[soclinux_data_port_adr] <= soclinux_data_port_dat_w[375:368];
	data_mem_grain46_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[375:368] = data_mem_grain46[data_mem_grain46_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain47: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain47[0:127];
reg [6:0] data_mem_grain47_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[47])
		data_mem_grain47[soclinux_data_port_adr] <= soclinux_data_port_dat_w[383:376];
	data_mem_grain47_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[383:376] = data_mem_grain47[data_mem_grain47_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain48: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain48[0:127];
reg [6:0] data_mem_grain48_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[48])
		data_mem_grain48[soclinux_data_port_adr] <= soclinux_data_port_dat_w[391:384];
	data_mem_grain48_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[391:384] = data_mem_grain48[data_mem_grain48_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain49: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain49[0:127];
reg [6:0] data_mem_grain49_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[49])
		data_mem_grain49[soclinux_data_port_adr] <= soclinux_data_port_dat_w[399:392];
	data_mem_grain49_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[399:392] = data_mem_grain49[data_mem_grain49_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain50: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain50[0:127];
reg [6:0] data_mem_grain50_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[50])
		data_mem_grain50[soclinux_data_port_adr] <= soclinux_data_port_dat_w[407:400];
	data_mem_grain50_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[407:400] = data_mem_grain50[data_mem_grain50_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain51: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain51[0:127];
reg [6:0] data_mem_grain51_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[51])
		data_mem_grain51[soclinux_data_port_adr] <= soclinux_data_port_dat_w[415:408];
	data_mem_grain51_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[415:408] = data_mem_grain51[data_mem_grain51_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain52: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain52[0:127];
reg [6:0] data_mem_grain52_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[52])
		data_mem_grain52[soclinux_data_port_adr] <= soclinux_data_port_dat_w[423:416];
	data_mem_grain52_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[423:416] = data_mem_grain52[data_mem_grain52_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain53: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain53[0:127];
reg [6:0] data_mem_grain53_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[53])
		data_mem_grain53[soclinux_data_port_adr] <= soclinux_data_port_dat_w[431:424];
	data_mem_grain53_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[431:424] = data_mem_grain53[data_mem_grain53_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain54: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain54[0:127];
reg [6:0] data_mem_grain54_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[54])
		data_mem_grain54[soclinux_data_port_adr] <= soclinux_data_port_dat_w[439:432];
	data_mem_grain54_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[439:432] = data_mem_grain54[data_mem_grain54_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain55: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain55[0:127];
reg [6:0] data_mem_grain55_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[55])
		data_mem_grain55[soclinux_data_port_adr] <= soclinux_data_port_dat_w[447:440];
	data_mem_grain55_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[447:440] = data_mem_grain55[data_mem_grain55_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain56: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain56[0:127];
reg [6:0] data_mem_grain56_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[56])
		data_mem_grain56[soclinux_data_port_adr] <= soclinux_data_port_dat_w[455:448];
	data_mem_grain56_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[455:448] = data_mem_grain56[data_mem_grain56_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain57: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain57[0:127];
reg [6:0] data_mem_grain57_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[57])
		data_mem_grain57[soclinux_data_port_adr] <= soclinux_data_port_dat_w[463:456];
	data_mem_grain57_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[463:456] = data_mem_grain57[data_mem_grain57_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain58: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain58[0:127];
reg [6:0] data_mem_grain58_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[58])
		data_mem_grain58[soclinux_data_port_adr] <= soclinux_data_port_dat_w[471:464];
	data_mem_grain58_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[471:464] = data_mem_grain58[data_mem_grain58_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain59: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain59[0:127];
reg [6:0] data_mem_grain59_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[59])
		data_mem_grain59[soclinux_data_port_adr] <= soclinux_data_port_dat_w[479:472];
	data_mem_grain59_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[479:472] = data_mem_grain59[data_mem_grain59_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain60: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain60[0:127];
reg [6:0] data_mem_grain60_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[60])
		data_mem_grain60[soclinux_data_port_adr] <= soclinux_data_port_dat_w[487:480];
	data_mem_grain60_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[487:480] = data_mem_grain60[data_mem_grain60_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain61: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain61[0:127];
reg [6:0] data_mem_grain61_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[61])
		data_mem_grain61[soclinux_data_port_adr] <= soclinux_data_port_dat_w[495:488];
	data_mem_grain61_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[495:488] = data_mem_grain61[data_mem_grain61_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain62: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain62[0:127];
reg [6:0] data_mem_grain62_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[62])
		data_mem_grain62[soclinux_data_port_adr] <= soclinux_data_port_dat_w[503:496];
	data_mem_grain62_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[503:496] = data_mem_grain62[data_mem_grain62_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain63: 128-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain63[0:127];
reg [6:0] data_mem_grain63_adr0;
always @(posedge sys_clk) begin
	if (soclinux_data_port_we[63])
		data_mem_grain63[soclinux_data_port_adr] <= soclinux_data_port_dat_w[511:504];
	data_mem_grain63_adr0 <= soclinux_data_port_adr;
end
assign soclinux_data_port_dat_r[511:504] = data_mem_grain63[data_mem_grain63_adr0];


IBUFDS IBUFDS(
	.I(clk200_p),
	.IB(clk200_n),
	.O(crg_clkin)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE (
	.C(sys_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(impl_xilinxasyncresetsynchronizerimpl0),
	.Q(impl_xilinxasyncresetsynchronizerimpl0_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_1 (
	.C(sys_clk),
	.CE(1'd1),
	.D(impl_xilinxasyncresetsynchronizerimpl0_rst_meta),
	.PRE(impl_xilinxasyncresetsynchronizerimpl0),
	.Q(sys_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_2 (
	.C(sys4x_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(impl_xilinxasyncresetsynchronizerimpl1),
	.Q(impl_xilinxasyncresetsynchronizerimpl1_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_3 (
	.C(sys4x_clk),
	.CE(1'd1),
	.D(impl_xilinxasyncresetsynchronizerimpl1_rst_meta),
	.PRE(impl_xilinxasyncresetsynchronizerimpl1),
	.Q(sys4x_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_4 (
	.C(idelay_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(impl_xilinxasyncresetsynchronizerimpl2),
	.Q(impl_xilinxasyncresetsynchronizerimpl2_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_5 (
	.C(idelay_clk),
	.CE(1'd1),
	.D(impl_xilinxasyncresetsynchronizerimpl2_rst_meta),
	.PRE(impl_xilinxasyncresetsynchronizerimpl2),
	.Q(idelay_rst)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR (
	.C(eth_tx_clk),
	.CE(1'd1),
	.D1(1'd1),
	.D2((ethphy_mode0 == 1'd1)),
	.R(1'd0),
	.S(1'd0),
	.Q(eth_clocks_gtx)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_6 (
	.C(eth_tx_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(ethphy_reset0),
	.Q(impl_xilinxasyncresetsynchronizerimpl3_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_7 (
	.C(eth_tx_clk),
	.CE(1'd1),
	.D(impl_xilinxasyncresetsynchronizerimpl3_rst_meta),
	.PRE(ethphy_reset0),
	.Q(eth_tx_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_8 (
	.C(eth_rx_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(ethphy_reset0),
	.Q(impl_xilinxasyncresetsynchronizerimpl4_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_9 (
	.C(eth_rx_clk),
	.CE(1'd1),
	.D(impl_xilinxasyncresetsynchronizerimpl4_rst_meta),
	.PRE(ethphy_reset0),
	.Q(eth_rx_rst)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_1 (
	.C(sys_clk),
	.CE(1'd1),
	.D1((~clocker_clk0)),
	.D2((~clocker_clk0)),
	.R(1'd0),
	.S(1'd0),
	.Q(sdcard_clk)
);

IOBUF IOBUF_64(
	.I(impl_xilinxsdrtristateimpl0__o),
	.T(impl_xilinxsdrtristateimpl0_oe_n),
	.IO(sdcard_cmd),
	.O(impl_xilinxsdrtristateimpl0__i)
);

IOBUF IOBUF_65(
	.I(impl_xilinxsdrtristateimpl1__o),
	.T(impl_xilinxsdrtristateimpl1_oe_n),
	.IO(sdcard_data[0]),
	.O(impl_xilinxsdrtristateimpl1__i)
);

IOBUF IOBUF_66(
	.I(impl_xilinxsdrtristateimpl2__o),
	.T(impl_xilinxsdrtristateimpl2_oe_n),
	.IO(sdcard_data[1]),
	.O(impl_xilinxsdrtristateimpl2__i)
);

IOBUF IOBUF_67(
	.I(impl_xilinxsdrtristateimpl3__o),
	.T(impl_xilinxsdrtristateimpl3_oe_n),
	.IO(sdcard_data[2]),
	.O(impl_xilinxsdrtristateimpl3__i)
);

IOBUF IOBUF_68(
	.I(impl_xilinxsdrtristateimpl4__o),
	.T(impl_xilinxsdrtristateimpl4_oe_n),
	.IO(sdcard_data[3]),
	.O(impl_xilinxsdrtristateimpl4__i)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_10 (
	.C(snn_clk_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(impl_xilinxasyncresetsynchronizerimpl5),
	.Q(impl_xilinxasyncresetsynchronizerimpl5_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_11 (
	.C(snn_clk_clk),
	.CE(1'd1),
	.D(impl_xilinxasyncresetsynchronizerimpl5_rst_meta),
	.PRE(impl_xilinxasyncresetsynchronizerimpl5),
	.Q(snn_clk_rst)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_2 (
	.C(sys_clk),
	.CE(1'd1),
	.D1(sdpads_cmd_o),
	.D2(sdpads_cmd_o),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl0__o)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_3 (
	.C(sys_clk),
	.CE(1'd1),
	.D1((~sdpads_cmd_oe)),
	.D2((~sdpads_cmd_oe)),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl0_oe_n)
);

IDDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) IDDR (
	.C(sys_clk),
	.CE(1'd1),
	.D(impl_xilinxsdrtristateimpl0__i),
	.R(1'd0),
	.S(1'd0),
	.Q1(sdpads_cmd_i),
	.Q2(impl0)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_4 (
	.C(sys_clk),
	.CE(1'd1),
	.D1(sdpads_data_o[0]),
	.D2(sdpads_data_o[0]),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl1__o)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_5 (
	.C(sys_clk),
	.CE(1'd1),
	.D1((~sdpads_data_oe)),
	.D2((~sdpads_data_oe)),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl1_oe_n)
);

IDDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) IDDR_1 (
	.C(sys_clk),
	.CE(1'd1),
	.D(impl_xilinxsdrtristateimpl1__i),
	.R(1'd0),
	.S(1'd0),
	.Q1(sdpads_data_i[0]),
	.Q2(impl1)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_6 (
	.C(sys_clk),
	.CE(1'd1),
	.D1(sdpads_data_o[1]),
	.D2(sdpads_data_o[1]),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl2__o)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_7 (
	.C(sys_clk),
	.CE(1'd1),
	.D1((~sdpads_data_oe)),
	.D2((~sdpads_data_oe)),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl2_oe_n)
);

IDDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) IDDR_2 (
	.C(sys_clk),
	.CE(1'd1),
	.D(impl_xilinxsdrtristateimpl2__i),
	.R(1'd0),
	.S(1'd0),
	.Q1(sdpads_data_i[1]),
	.Q2(impl2)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_8 (
	.C(sys_clk),
	.CE(1'd1),
	.D1(sdpads_data_o[2]),
	.D2(sdpads_data_o[2]),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl3__o)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_9 (
	.C(sys_clk),
	.CE(1'd1),
	.D1((~sdpads_data_oe)),
	.D2((~sdpads_data_oe)),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl3_oe_n)
);

IDDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) IDDR_3 (
	.C(sys_clk),
	.CE(1'd1),
	.D(impl_xilinxsdrtristateimpl3__i),
	.R(1'd0),
	.S(1'd0),
	.Q1(sdpads_data_i[2]),
	.Q2(impl3)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_10 (
	.C(sys_clk),
	.CE(1'd1),
	.D1(sdpads_data_o[3]),
	.D2(sdpads_data_o[3]),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl4__o)
);

ODDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) ODDR_11 (
	.C(sys_clk),
	.CE(1'd1),
	.D1((~sdpads_data_oe)),
	.D2((~sdpads_data_oe)),
	.R(1'd0),
	.S(1'd0),
	.Q(impl_xilinxsdrtristateimpl4_oe_n)
);

IDDR #(
	.DDR_CLK_EDGE("SAME_EDGE")
) IDDR_4 (
	.C(sys_clk),
	.CE(1'd1),
	.D(impl_xilinxsdrtristateimpl4__i),
	.R(1'd0),
	.S(1'd0),
	.Q1(sdpads_data_i[3]),
	.Q2(impl4)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2023-01-09 19:34:44.
//------------------------------------------------------------------------------
